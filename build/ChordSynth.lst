ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"ChordSynth.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4hashIS
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4hashIS5_ESt8equ
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4hashIS5_ESt8equal_toIS
  27              	.LVL0:
  28              	.LFB4200:
  29              		.file 1 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\unordered_m
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // unordered_map implementation -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // Copyright (C) 2010-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** /** @file bits/unordered_map.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****  *  This is an internal header file, included by other library headers.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****  *  Do not attempt to use it directly. @headername{unordered_map}
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****  */
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 2


  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #ifndef _UNORDERED_MAP_H
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #define _UNORDERED_MAP_H
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** namespace std _GLIBCXX_VISIBILITY(default)
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** {
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****   /// Base types for unordered_map.
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****   template<bool _Cache>
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****     using __umap_traits = __detail::_Hashtable_traits<_Cache, false, true>;
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****   template<typename _Key,
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Tp,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Hash = hash<_Key>,
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Pred = std::equal_to<_Key>,
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Alloc = std::allocator<std::pair<const _Key, _Tp> >,
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Tr = __umap_traits<__cache_default<_Key, _Hash>::value>>
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****     using __umap_hashtable = _Hashtable<_Key, std::pair<const _Key, _Tp>,
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                         _Alloc, __detail::_Select1st,
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 				        _Pred, _Hash,
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 				        __detail::_Mod_range_hashing,
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 				        __detail::_Default_ranged_hash,
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 				        __detail::_Prime_rehash_policy, _Tr>;
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****   /// Base types for unordered_multimap.
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****   template<bool _Cache>
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****     using __ummap_traits = __detail::_Hashtable_traits<_Cache, false, false>;
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****   template<typename _Key,
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Tp,
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Hash = hash<_Key>,
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Pred = std::equal_to<_Key>,
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Alloc = std::allocator<std::pair<const _Key, _Tp> >,
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Tr = __ummap_traits<__cache_default<_Key, _Hash>::value>>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****     using __ummap_hashtable = _Hashtable<_Key, std::pair<const _Key, _Tp>,
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 					 _Alloc, __detail::_Select1st,
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 					 _Pred, _Hash,
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 					 __detail::_Mod_range_hashing,
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 					 __detail::_Default_ranged_hash,
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 					 __detail::_Prime_rehash_policy, _Tr>;
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****   template<class _Key, class _Tp, class _Hash, class _Pred, class _Alloc>
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****     class unordered_multimap;
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****   /**
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  @brief A standard container composed of unique keys (containing
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  at most one of each key value) that associates values of another type
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  with the keys.
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  @ingroup unordered_associative_containers
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  @tparam  _Key    Type of key objects.
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  @tparam  _Tp     Type of mapped objects.
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  @tparam  _Hash   Hashing function object type, defaults to hash<_Value>.
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  @tparam  _Pred   Predicate function object type, defaults
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *                   to equal_to<_Value>.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 3


  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  @tparam  _Alloc  Allocator type, defaults to 
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *                   std::allocator<std::pair<const _Key, _Tp>>.
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, and
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  <a href="tables.html#xx">unordered associative container</a>
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    * The resulting value type of the container is std::pair<const _Key, _Tp>.
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  Base is _Hashtable, dispatched at compile time via template
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  alias __umap_hashtable.
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    */
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****   template<typename _Key, typename _Tp,
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Hash = hash<_Key>,
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Pred = equal_to<_Key>,
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Alloc = allocator<std::pair<const _Key, _Tp>>>
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****     class unordered_map
  30              		.loc 1 102 11 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 102 11 is_stmt 0 view .LVU1
  35 0000 70B5     		push	{r4, r5, r6, lr}
  36              		.cfi_def_cfa_offset 16
  37              		.cfi_offset 4, -16
  38              		.cfi_offset 5, -12
  39              		.cfi_offset 6, -8
  40              		.cfi_offset 14, -4
  41              	.LBB1933:
  42              	.LBB1934:
  43              	.LBB1935:
  44              	.LBB1936:
  45              	.LBB1937:
  46              		.file 2 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\hashtable.h
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // hashtable.h header -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // Copyright (C) 2007-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 4


  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** /** @file bits/hashtable.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****  *  This is an internal header file, included by other library headers.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****  *  Do not attempt to use it directly. @headername{unordered_map, unordered_set}
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****  */
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** #ifndef _HASHTABLE_H
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** #define _HASHTABLE_H 1
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** #pragma GCC system_header
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** #include <bits/hashtable_policy.h>
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** #if __cplusplus > 201402L
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** # include <bits/node_handle.h>
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** #endif
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** namespace std _GLIBCXX_VISIBILITY(default)
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** {
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Tp, typename _Hash>
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     using __cache_default
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       =  __not_<__and_<// Do not cache for fast hasher.
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		       __is_fast_hash<_Hash>,
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		       // Mandatory to have erase not throwing.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		       __is_nothrow_invocable<const _Hash&, const _Tp&>>>;
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   /**
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  Primary class template _Hashtable.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  @ingroup hashtable-detail
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  @tparam _Value  CopyConstructible type.
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  @tparam _Key    CopyConstructible type.
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  @tparam _Alloc  An allocator type
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  ([lib.allocator.requirements]) whose _Alloc::value_type is
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  _Value.  As a conforming extension, we allow for
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  _Alloc::value_type != _Value.
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  @tparam _ExtractKey  Function object that takes an object of type
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  _Value and returns a value of type _Key.
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  @tparam _Equal  Function object that takes two objects of type k
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  and returns a bool-like value that is true if the two objects
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  are considered equal.
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  @tparam _H1  The hash function. A unary function object with
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  argument type _Key and result type size_t. Return values should
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  be distributed over the entire range [0, numeric_limits<size_t>:::max()].
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  @tparam _H2  The range-hashing function (in the terminology of
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  Tavori and Dreizin).  A binary function object whose argument
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  types and result type are all size_t.  Given arguments r and N,
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  the return value is in the range [0, N).
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  @tparam _Hash  The ranged hash function (Tavori and Dreizin). A
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 5


  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  binary function whose argument types are _Key and size_t and
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  whose result type is size_t.  Given arguments k and N, the
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  return value is in the range [0, N).  Default: hash(k, N) =
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  h2(h1(k), N).  If _Hash is anything other than the default, _H1
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  and _H2 are ignored.
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  @tparam _RehashPolicy  Policy class with three members, all of
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  which govern the bucket count. _M_next_bkt(n) returns a bucket
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  count no smaller than n.  _M_bkt_for_elements(n) returns a
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  bucket count appropriate for an element count of n.
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  _M_need_rehash(n_bkt, n_elt, n_ins) determines whether, if the
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  current bucket count is n_bkt and the current element count is
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  n_elt, we need to increase the bucket count.  If so, returns
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  make_pair(true, n), where n is the new bucket count.  If not,
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  returns make_pair(false, <anything>)
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  @tparam _Traits  Compile-time class with three boolean
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  std::integral_constant members:  __cache_hash_code, __constant_iterators,
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *   __unique_keys.
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  Each _Hashtable data structure has:
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  - _Bucket[]       _M_buckets
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  - _Hash_node_base _M_before_begin
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  - size_type       _M_bucket_count
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  - size_type       _M_element_count
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  with _Bucket being _Hash_node* and _Hash_node containing:
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  - _Hash_node*   _M_next
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  - Tp            _M_value
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  - size_t        _M_hash_code if cache_hash_code is true
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  In terms of Standard containers the hashtable is like the aggregation of:
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  - std::forward_list<_Node> containing the elements
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  - std::vector<std::forward_list<_Node>::iterator> representing the buckets
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  The non-empty buckets contain the node before the first node in the
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  bucket. This design makes it possible to implement something like a
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  std::forward_list::insert_after on container insertion and
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  std::forward_list::erase_after on container erase
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  calls. _M_before_begin is equivalent to
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  std::forward_list::before_begin. Empty buckets contain
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  nullptr.  Note that one of the non-empty buckets contains
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  &_M_before_begin which is not a dereferenceable node so the
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  node pointer in a bucket shall never be dereferenced, only its
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  next node can be.
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  Walking through a bucket's nodes requires a check on the hash code to
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  see if each node is still in the bucket. Such a design assumes a
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  quite efficient hash functor and is one of the reasons it is
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  highly advisable to set __cache_hash_code to true.
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  The container iterators are simply built from nodes. This way
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  incrementing the iterator is perfectly efficient independent of
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  how many empty buckets there are in the container.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 6


 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  On insert we compute the element's hash code and use it to find the
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  bucket index. If the element must be inserted in an empty bucket
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  we add it at the beginning of the singly linked list and make the
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  bucket point to _M_before_begin. The bucket that used to point to
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  _M_before_begin, if any, is updated to point to its new before
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  begin node.
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  On erase, the simple iterator design requires using the hash
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  functor to get the index of the bucket to update. For this
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  reason, when __cache_hash_code is set to false the hash functor must
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  not throw and this is enforced by a static assertion.
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  Functionality is implemented by decomposition into base classes,
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  where the derived _Hashtable class is used in _Map_base,
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  _Insert, _Rehash_base, and _Equality base classes to access the
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  "this" pointer. _Hashtable_base is used in the base classes as a
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  non-recursive, fully-completed-type so that detailed nested type
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  information, such as iterator type and node type, can be
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  used. This is similar to the "Curiously Recurring Template
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  Pattern" (CRTP) technique, but uses a reconstructed, not
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  explicitly passed, template pattern.
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  Base class templates are: 
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *    - __detail::_Hashtable_base
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *    - __detail::_Map_base
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *    - __detail::_Insert
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *    - __detail::_Rehash_base
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *    - __detail::_Equality
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    */
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value, typename _Alloc,
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _ExtractKey, typename _Equal,
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash,
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _RehashPolicy, typename _Traits>
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     class _Hashtable
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     : public __detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal,
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 				       _H1, _H2, _Hash, _Traits>,
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       public __detail::_Map_base<_Key, _Value, _Alloc, _ExtractKey, _Equal,
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 				 _H1, _H2, _Hash, _RehashPolicy, _Traits>,
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       public __detail::_Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal,
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			       _H1, _H2, _Hash, _RehashPolicy, _Traits>,
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       public __detail::_Rehash_base<_Key, _Value, _Alloc, _ExtractKey, _Equal,
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 				    _H1, _H2, _Hash, _RehashPolicy, _Traits>,
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       public __detail::_Equality<_Key, _Value, _Alloc, _ExtractKey, _Equal,
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 				 _H1, _H2, _Hash, _RehashPolicy, _Traits>,
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       private __detail::_Hashtable_alloc<
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__alloc_rebind<_Alloc,
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		       __detail::_Hash_node<_Value,
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 					    _Traits::__hash_cached::value>>>
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       static_assert(is_same<typename remove_cv<_Value>::type, _Value>::value,
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  "unordered container must have a non-const, non-volatile value_type");
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** #if __cplusplus > 201703L || defined __STRICT_ANSI__
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       static_assert(is_same<typename _Alloc::value_type, _Value>{},
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  "unordered container must have the same value_type as its allocator");
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** #endif
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 7


 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __traits_type = _Traits;
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __hash_cached = typename __traits_type::__hash_cached;
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __node_type = __detail::_Hash_node<_Value, __hash_cached::value>;
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __node_alloc_type = __alloc_rebind<_Alloc, __node_type>;
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __hashtable_alloc = __detail::_Hashtable_alloc<__node_alloc_type>;
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __value_alloc_traits =
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	typename __hashtable_alloc::__value_alloc_traits;
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __node_alloc_traits =
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	typename __hashtable_alloc::__node_alloc_traits;
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __node_base = typename __hashtable_alloc::__node_base;
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __bucket_type = typename __hashtable_alloc::__bucket_type;
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     public:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       typedef _Key						key_type;
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       typedef _Value						value_type;
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       typedef _Alloc						allocator_type;
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       typedef _Equal						key_equal;
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // mapped_type, if present, comes from _Map_base.
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // hasher, if present, comes from _Hash_code_base/_Hashtable_base.
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       typedef typename __value_alloc_traits::pointer		pointer;
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       typedef typename __value_alloc_traits::const_pointer	const_pointer;
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       typedef value_type&					reference;
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       typedef const value_type&					const_reference;
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     private:
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __rehash_type = _RehashPolicy;
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __rehash_state = typename __rehash_type::_State;
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __constant_iterators = typename __traits_type::__constant_iterators;
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __unique_keys = typename __traits_type::__unique_keys;
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __key_extract = typename std::conditional<
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 					     __constant_iterators::value,
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 				       	     __detail::_Identity,
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 					     __detail::_Select1st>::type;
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __hashtable_base = __detail::
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			       _Hashtable_base<_Key, _Value, _ExtractKey,
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 					      _Equal, _H1, _H2, _Hash, _Traits>;
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __hash_code_base =  typename __hashtable_base::__hash_code_base;
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __hash_code =  typename __hashtable_base::__hash_code;
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __ireturn_type = typename __hashtable_base::__ireturn_type;
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __map_base = __detail::_Map_base<_Key, _Value, _Alloc, _ExtractKey,
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 					     _Equal, _H1, _H2, _Hash,
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 					     _RehashPolicy, _Traits>;
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __rehash_base = __detail::_Rehash_base<_Key, _Value, _Alloc,
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 						   _ExtractKey, _Equal,
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 						   _H1, _H2, _Hash,
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 						   _RehashPolicy, _Traits>;
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __eq_base = __detail::_Equality<_Key, _Value, _Alloc, _ExtractKey,
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 8


 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 					    _Equal, _H1, _H2, _Hash,
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 					    _RehashPolicy, _Traits>;
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __reuse_or_alloc_node_gen_t =
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__detail::_ReuseOrAllocNode<__node_alloc_type>;
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __alloc_node_gen_t =
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__detail::_AllocNode<__node_alloc_type>;
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Simple RAII type for managing a node containing an element
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       struct _Scoped_node
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// Take ownership of a node with a constructed element.
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_Scoped_node(__node_type* __n, __hashtable_alloc* __h)
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	: _M_h(__h), _M_node(__n) { }
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// Allocate a node and construct an element within it.
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	template<typename... _Args>
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _Scoped_node(__hashtable_alloc* __h, _Args&&... __args)
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  : _M_h(__h),
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_node(__h->_M_allocate_node(std::forward<_Args>(__args)...))
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  { }
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// Destroy element and deallocate node.
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	~_Scoped_node() { if (_M_node) _M_h->_M_deallocate_node(_M_node); };
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_Scoped_node(const _Scoped_node&) = delete;
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_Scoped_node& operator=(const _Scoped_node&) = delete;
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__hashtable_alloc* _M_h;
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__node_type* _M_node;
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       };
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Ht>
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	static constexpr
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	typename conditional<std::is_lvalue_reference<_Ht>::value,
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			     const value_type&, value_type&&>::type
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__fwd_value_for(value_type& __val) noexcept
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{ return std::move(__val); }
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Metaprogramming for picking apart hash caching.
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Cond>
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	using __if_hash_cached = __or_<__not_<__hash_cached>, _Cond>;
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Cond>
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	using __if_hash_not_cached = __or_<__hash_cached, _Cond>;
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Compile-time diagnostics.
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // _Hash_code_base has everything protected, so use this derived type to
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // access it.
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       struct __hash_code_base_access : __hash_code_base
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { using __hash_code_base::_M_bucket_index; };
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Getting a bucket index from a node shall not throw because it is used
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // in methods (erase, swap...) that shall not throw.
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       static_assert(noexcept(declval<const __hash_code_base_access&>()
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			     ._M_bucket_index((const __node_type*)nullptr,
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 9


 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 					      (std::size_t)0)),
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		    "Cache the hash code or qualify your functors involved"
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		    " in hash code and bucket index computation with noexcept");
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // When hash codes are cached local iterator inherits from H2 functor
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // which must then be default constructible.
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       static_assert(__if_hash_cached<is_default_constructible<_H2>>::value,
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		    "Functor used to map hash code to bucket index"
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		    " must be default constructible");
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Keya, typename _Valuea, typename _Alloca,
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       typename _ExtractKeya, typename _Equala,
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       typename _H1a, typename _H2a, typename _Hasha,
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       typename _RehashPolicya, typename _Traitsa,
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       bool _Unique_keysa>
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	friend struct __detail::_Map_base;
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Keya, typename _Valuea, typename _Alloca,
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       typename _ExtractKeya, typename _Equala,
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       typename _H1a, typename _H2a, typename _Hasha,
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       typename _RehashPolicya, typename _Traitsa>
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	friend struct __detail::_Insert_base;
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Keya, typename _Valuea, typename _Alloca,
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       typename _ExtractKeya, typename _Equala,
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       typename _H1a, typename _H2a, typename _Hasha,
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       typename _RehashPolicya, typename _Traitsa,
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       bool _Constant_iteratorsa>
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	friend struct __detail::_Insert;
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Keya, typename _Valuea, typename _Alloca,
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       typename _ExtractKeya, typename _Equala,
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       typename _H1a, typename _H2a, typename _Hasha,
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       typename _RehashPolicya, typename _Traitsa,
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       bool _Unique_keysa>
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	friend struct __detail::_Equality;
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     public:
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using size_type = typename __hashtable_base::size_type;
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using difference_type = typename __hashtable_base::difference_type;
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using iterator = typename __hashtable_base::iterator;
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using const_iterator = typename __hashtable_base::const_iterator;
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using local_iterator = typename __hashtable_base::local_iterator;
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using const_local_iterator = typename __hashtable_base::
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 				   const_local_iterator;
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** #if __cplusplus > 201402L
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using node_type = _Node_handle<_Key, _Value, __node_alloc_type>;
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using insert_return_type = _Node_insert_return<iterator, node_type>;
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** #endif
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     private:
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __bucket_type*		_M_buckets		= &_M_single_bucket;
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type			_M_bucket_count		= 1;
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_base		_M_before_begin;
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 10


 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type			_M_element_count	= 0;
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _RehashPolicy		_M_rehash_policy;
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // A single bucket used when only need for 1 bucket. Especially
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // interesting in move semantic to leave hashtable with only 1 bucket
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // which is not allocated so that we can have those operations noexcept
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // qualified.
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Note that we can't leave hashtable with 0 bucket without adding
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // numerous checks in the code to avoid 0 modulus.
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __bucket_type		_M_single_bucket	= nullptr;
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       bool
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_uses_single_bucket(__bucket_type* __bkts) const
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __builtin_expect(__bkts == &_M_single_bucket, false); }
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       bool
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_uses_single_bucket() const
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return _M_uses_single_bucket(_M_buckets); }
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hashtable_alloc&
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_base_alloc() { return *this; }
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __bucket_type*
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_allocate_buckets(size_type __bkt_count)
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (__builtin_expect(__bkt_count == 1, false))
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_single_bucket = nullptr;
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    return &_M_single_bucket;
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return __hashtable_alloc::_M_allocate_buckets(__bkt_count);
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_deallocate_buckets(__bucket_type* __bkts, size_type __bkt_count)
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (_M_uses_single_bucket(__bkts))
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return;
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__hashtable_alloc::_M_deallocate_buckets(__bkts, __bkt_count);
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_deallocate_buckets()
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { _M_deallocate_buckets(_M_buckets, _M_bucket_count); }
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Gets bucket begin, deals with the fact that non-empty buckets contain
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // their before begin node.
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type*
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_bucket_begin(size_type __bkt) const;
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type*
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_begin() const
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return static_cast<__node_type*>(_M_before_begin._M_nxt); }
  47              		.loc 2 421 64 view .LVU2
  48 0002 8568     		ldr	r5, [r0, #8]
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 11


  49              	.LBE1937:
  50              	.LBE1936:
  51              	.LBE1935:
  52              	.LBE1934:
  53              	.LBE1933:
  54              		.loc 1 102 11 view .LVU3
  55 0004 0646     		mov	r6, r0
  56              	.LVL1:
  57              	.LBB2018:
  58              	.LBI1933:
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Assign *this using another _Hashtable instance. Whether elements
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // are copied or moved depends on the _Ht reference.
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Ht>
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	void
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_assign_elements(_Ht&&);
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Ht, typename _NodeGenerator>
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	void
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_assign(_Ht&&, const _NodeGenerator&);
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_move_assign(_Hashtable&&, true_type);
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_move_assign(_Hashtable&&, false_type);
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_reset() noexcept;
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(const _H1& __h1, const _H2& __h2, const _Hash& __h,
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const _Equal& __eq, const _ExtractKey& __exk,
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const allocator_type& __a)
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       : __hashtable_base(__exk, __h1, __h2, __h, __eq),
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__hashtable_alloc(__node_alloc_type(__a))
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { }
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     public:
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Constructor, destructor, assignment, swap
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable() = default;
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const _H1&, const _H2&, const _Hash&,
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const _Equal&, const _ExtractKey&,
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const allocator_type&);
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _InputIterator>
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_Hashtable(_InputIterator __first, _InputIterator __last,
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   size_type __bkt_count_hint,
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   const _H1&, const _H2&, const _Hash&,
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   const _Equal&, const _ExtractKey&,
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   const allocator_type&);
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(const _Hashtable&);
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(_Hashtable&&) noexcept;
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(const _Hashtable&, const allocator_type&);
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 12


 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(_Hashtable&&, const allocator_type&);
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Use delegating constructors.
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       explicit
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(const allocator_type& __a)
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       : __hashtable_alloc(__node_alloc_type(__a))
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { }
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       explicit
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const _H1& __hf = _H1(),
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const key_equal& __eql = key_equal(),
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const allocator_type& __a = allocator_type())
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       : _Hashtable(__bkt_count_hint, __hf, _H2(), _Hash(), __eql,
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   __key_extract(), __a)
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { }
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _InputIterator>
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_Hashtable(_InputIterator __f, _InputIterator __l,
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   size_type __bkt_count_hint = 0,
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   const _H1& __hf = _H1(),
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   const key_equal& __eql = key_equal(),
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   const allocator_type& __a = allocator_type())
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	: _Hashtable(__f, __l, __bkt_count_hint, __hf, _H2(), _Hash(), __eql,
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		     __key_extract(), __a)
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{ }
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(initializer_list<value_type> __l,
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 size_type __bkt_count_hint = 0,
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const _H1& __hf = _H1(),
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const key_equal& __eql = key_equal(),
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const allocator_type& __a = allocator_type())
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       : _Hashtable(__l.begin(), __l.end(), __bkt_count_hint,
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   __hf, _H2(), _Hash(), __eql,
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   __key_extract(), __a)
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { }
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable&
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       operator=(const _Hashtable& __ht);
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable&
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       operator=(_Hashtable&& __ht)
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       noexcept(__node_alloc_traits::_S_nothrow_move()
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       && is_nothrow_move_assignable<_H1>::value
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       && is_nothrow_move_assignable<_Equal>::value)
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****         constexpr bool __move_storage =
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __node_alloc_traits::_S_propagate_on_move_assign()
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  || __node_alloc_traits::_S_always_equal();
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_move_assign(std::move(__ht), __bool_constant<__move_storage>());
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return *this;
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable&
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       operator=(initializer_list<value_type> __l)
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 13


 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__reuse_or_alloc_node_gen_t __roan(_M_begin(), *this);
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_before_begin._M_nxt = nullptr;
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	clear();
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	this->_M_insert_range(__l.begin(), __l.end(), __roan, __unique_keys());
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return *this;
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       ~_Hashtable() noexcept;
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       swap(_Hashtable&)
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       noexcept(__and_<__is_nothrow_swappable<_H1>,
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	                  __is_nothrow_swappable<_Equal>>::value);
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Basic container operations
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       iterator
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       begin() noexcept
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return iterator(_M_begin()); }
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const_iterator
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       begin() const noexcept
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return const_iterator(_M_begin()); }
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       iterator
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       end() noexcept
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return iterator(nullptr); }
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const_iterator
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       end() const noexcept
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return const_iterator(nullptr); }
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const_iterator
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       cbegin() const noexcept
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return const_iterator(_M_begin()); }
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const_iterator
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       cend() const noexcept
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return const_iterator(nullptr); }
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size() const noexcept
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return _M_element_count; }
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _GLIBCXX_NODISCARD bool
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       empty() const noexcept
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return size() == 0; }
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       allocator_type
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       get_allocator() const noexcept
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return allocator_type(this->_M_node_allocator()); }
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       max_size() const noexcept
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __node_alloc_traits::max_size(this->_M_node_allocator()); }
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Observers
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       key_equal
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 14


 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       key_eq() const
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return this->_M_eq(); }
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // hash_function, if present, comes from _Hash_code_base.
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Bucket operations
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       bucket_count() const noexcept
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return _M_bucket_count; }
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       max_bucket_count() const noexcept
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return max_size(); }
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       bucket_size(size_type __bkt) const
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return std::distance(begin(__bkt), end(__bkt)); }
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       bucket(const key_type& __k) const
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return _M_bucket_index(__k, this->_M_hash_code(__k)); }
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       local_iterator
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       begin(size_type __bkt)
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return local_iterator(*this, _M_bucket_begin(__bkt),
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			      __bkt, _M_bucket_count);
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       local_iterator
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       end(size_type __bkt)
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return local_iterator(*this, nullptr, __bkt, _M_bucket_count); }
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const_local_iterator
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       begin(size_type __bkt) const
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return const_local_iterator(*this, _M_bucket_begin(__bkt),
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 				    __bkt, _M_bucket_count);
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const_local_iterator
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       end(size_type __bkt) const
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return const_local_iterator(*this, nullptr, __bkt, _M_bucket_count); }
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // DR 691.
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const_local_iterator
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       cbegin(size_type __bkt) const
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return const_local_iterator(*this, _M_bucket_begin(__bkt),
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 				    __bkt, _M_bucket_count);
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const_local_iterator
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       cend(size_type __bkt) const
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return const_local_iterator(*this, nullptr, __bkt, _M_bucket_count); }
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       float
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 15


 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       load_factor() const noexcept
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return static_cast<float>(size()) / static_cast<float>(bucket_count());
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // max_load_factor, if present, comes from _Rehash_base.
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Generalization of max_load_factor.  Extension, not found in
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // TR1.  Only useful if _RehashPolicy is something other than
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // the default.
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const _RehashPolicy&
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __rehash_policy() const
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return _M_rehash_policy; }
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __rehash_policy(const _RehashPolicy& __pol)
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { _M_rehash_policy = __pol; }
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Lookup.
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       iterator
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       find(const key_type& __k);
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const_iterator
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       find(const key_type& __k) const;
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       count(const key_type& __k) const;
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::pair<iterator, iterator>
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       equal_range(const key_type& __k);
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::pair<const_iterator, const_iterator>
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       equal_range(const key_type& __k) const;
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     protected:
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Bucket index computation helpers.
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_bucket_index(__node_type* __n) const noexcept
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __hash_code_base::_M_bucket_index(__n, _M_bucket_count); }
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_bucket_index(const key_type& __k, __hash_code __c) const
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __hash_code_base::_M_bucket_index(__k, __c, _M_bucket_count); }
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Find and insert helper functions and types
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Find the node before the one matching the criteria.
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_base*
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_find_before_node(size_type, const key_type&, __hash_code) const;
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type*
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_find_node(size_type __bkt, const key_type& __key,
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   __hash_code __c) const
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__node_base* __before_n = _M_find_before_node(__bkt, __key, __c);
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (__before_n)
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return static_cast<__node_type*>(__before_n->_M_nxt);
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return nullptr;
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 16


 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Insert a node at the beginning of a bucket.
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_insert_bucket_begin(size_type, __node_type*);
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Remove the bucket first node
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_remove_bucket_begin(size_type __bkt, __node_type* __next_n,
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			     size_type __next_bkt);
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Get the node before __n in the bucket __bkt
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_base*
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_get_previous_node(size_type __bkt, __node_base* __n);
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Insert node __n with key __k and hash code __code, in bucket __bkt
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // if no rehash (assumes no element with same key already present).
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Takes ownership of __n if insertion succeeds, throws otherwise.
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       iterator
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_insert_unique_node(const key_type& __k, size_type __bkt,
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			    __hash_code __code, __node_type* __n,
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			    size_type __n_elt = 1);
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Insert node __n with key __k and hash code __code.
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Takes ownership of __n if insertion succeeds, throws otherwise.
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       iterator
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_insert_multi_node(__node_type* __hint, const key_type& __k,
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			   __hash_code __code, __node_type* __n);
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename... _Args>
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	std::pair<iterator, bool>
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_emplace(true_type, _Args&&... __args);
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename... _Args>
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	iterator
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_emplace(false_type __uk, _Args&&... __args)
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{ return _M_emplace(cend(), __uk, std::forward<_Args>(__args)...); }
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Emplace with hint, useless when keys are unique.
 736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename... _Args>
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	iterator
 738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_emplace(const_iterator, true_type __uk, _Args&&... __args)
 739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{ return _M_emplace(__uk, std::forward<_Args>(__args)...).first; }
 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename... _Args>
 742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	iterator
 743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_emplace(const_iterator, false_type, _Args&&... __args);
 744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Arg, typename _NodeGenerator>
 746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	std::pair<iterator, bool>
 747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_insert(_Arg&&, const _NodeGenerator&, true_type, size_type = 1);
 748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Arg, typename _NodeGenerator>
 750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	iterator
 751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_insert(_Arg&& __arg, const _NodeGenerator& __node_gen,
 752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  false_type __uk)
 753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 17


 754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return _M_insert(cend(), std::forward<_Arg>(__arg), __node_gen,
 755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			   __uk);
 756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
 757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Insert with hint, not used when keys are unique.
 759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Arg, typename _NodeGenerator>
 760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	iterator
 761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_insert(const_iterator, _Arg&& __arg,
 762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  const _NodeGenerator& __node_gen, true_type __uk)
 763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return
 765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_insert(std::forward<_Arg>(__arg), __node_gen, __uk).first;
 766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
 767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Insert with hint when keys are not unique.
 769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Arg, typename _NodeGenerator>
 770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	iterator
 771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_insert(const_iterator, _Arg&&,
 772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  const _NodeGenerator&, false_type);
 773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type
 775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_erase(true_type, const key_type&);
 776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type
 778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_erase(false_type, const key_type&);
 779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       iterator
 781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_erase(size_type __bkt, __node_base* __prev_n, __node_type* __n);
 782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     public:
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Emplace
 785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename... _Args>
 786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__ireturn_type
 787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	emplace(_Args&&... __args)
 788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{ return _M_emplace(__unique_keys(), std::forward<_Args>(__args)...); }
 789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename... _Args>
 791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	iterator
 792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	emplace_hint(const_iterator __hint, _Args&&... __args)
 793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return _M_emplace(__hint, __unique_keys(),
 795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			    std::forward<_Args>(__args)...);
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
 797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Insert member functions via inheritance.
 799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Erase
 801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       iterator
 802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       erase(const_iterator);
 803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // LWG 2059.
 805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       iterator
 806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       erase(iterator __it)
 807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return erase(const_iterator(__it)); }
 808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type
 810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       erase(const key_type& __k)
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 18


 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return _M_erase(__unique_keys(), __k); }
 812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       iterator
 814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       erase(const_iterator, const_iterator);
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void
 817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       clear() noexcept;
 818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Set number of buckets keeping it appropriate for container's number
 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // of elements.
 821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void rehash(size_type __bkt_count);
 822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // DR 1189.
 824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // reserve, if present, comes from _Rehash_base.
 825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** #if __cplusplus > 201402L
 827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       /// Re-insert an extracted node into a container with unique keys.
 828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       insert_return_type
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_reinsert_node(node_type&& __nh)
 830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	insert_return_type __ret;
 832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (__nh.empty())
 833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __ret.position = end();
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	else
 835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
 836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __glibcxx_assert(get_allocator() == __nh.get_allocator());
 837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    const key_type& __k = __nh._M_key();
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __hash_code __code = this->_M_hash_code(__k);
 840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    size_type __bkt = _M_bucket_index(__k, __code);
 841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    if (__node_type* __n = _M_find_node(__bkt, __k, __code))
 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      {
 843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		__ret.node = std::move(__nh);
 844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		__ret.position = iterator(__n);
 845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		__ret.inserted = false;
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      }
 847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    else
 848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      {
 849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		__ret.position
 850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  = _M_insert_unique_node(__k, __bkt, __code, __nh._M_ptr);
 851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		__nh._M_ptr = nullptr;
 852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		__ret.inserted = true;
 853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      }
 854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
 855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return __ret;
 856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       /// Re-insert an extracted node into a container with equivalent keys.
 859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       iterator
 860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_reinsert_node_multi(const_iterator __hint, node_type&& __nh)
 861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (__nh.empty())
 863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return end();
 864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__glibcxx_assert(get_allocator() == __nh.get_allocator());
 866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	const key_type& __k = __nh._M_key();
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 19


 868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	auto __code = this->_M_hash_code(__k);
 869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	auto __ret
 870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  = _M_insert_multi_node(__hint._M_cur, __k, __code, __nh._M_ptr);
 871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__nh._M_ptr = nullptr;
 872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return __ret;
 873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     private:
 876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       node_type
 877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_extract_node(size_t __bkt, __node_base* __prev_n)
 878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__node_type* __n = static_cast<__node_type*>(__prev_n->_M_nxt);
 880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (__prev_n == _M_buckets[__bkt])
 881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_remove_bucket_begin(__bkt, __n->_M_next(),
 882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	     __n->_M_nxt ? _M_bucket_index(__n->_M_next()) : 0);
 883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	else if (__n->_M_nxt)
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
 885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    size_type __next_bkt = _M_bucket_index(__n->_M_next());
 886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    if (__next_bkt != __bkt)
 887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_buckets[__next_bkt] = __prev_n;
 888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
 889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__prev_n->_M_nxt = __n->_M_nxt;
 891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__n->_M_nxt = nullptr;
 892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	--_M_element_count;
 893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return { __n, this->_M_node_allocator() };
 894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     public:
 897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Extract a node.
 898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       node_type
 899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       extract(const_iterator __pos)
 900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	size_t __bkt = _M_bucket_index(__pos._M_cur);
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return _M_extract_node(__bkt,
 903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			       _M_get_previous_node(__bkt, __pos._M_cur));
 904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       /// Extract a node.
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       node_type
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       extract(const _Key& __k)
 909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	node_type __nh;
 911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__hash_code __code = this->_M_hash_code(__k);
 912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	std::size_t __bkt = _M_bucket_index(__k, __code);
 913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (__node_base* __prev_node = _M_find_before_node(__bkt, __k, __code))
 914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __nh = _M_extract_node(__bkt, __prev_node);
 915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return __nh;
 916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       /// Merge from a compatible container into one with unique keys.
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Compatible_Hashtable>
 920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	void
 921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_merge_unique(_Compatible_Hashtable& __src) noexcept
 922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  static_assert(is_same_v<typename _Compatible_Hashtable::node_type,
 924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      node_type>, "Node types are compatible");
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 20


 925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __glibcxx_assert(get_allocator() == __src.get_allocator());
 926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  auto __n_elt = __src.size();
 928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  for (auto __i = __src.begin(), __end = __src.end(); __i != __end;)
 929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    {
 930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      auto __pos = __i++;
 931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      const key_type& __k = this->_M_extract()(*__pos);
 932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __hash_code __code = this->_M_hash_code(__k);
 933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      size_type __bkt = _M_bucket_index(__k, __code);
 934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      if (_M_find_node(__bkt, __k, __code) == nullptr)
 935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		{
 936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  auto __nh = __src.extract(__pos);
 937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  _M_insert_unique_node(__k, __bkt, __code, __nh._M_ptr,
 938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 					__n_elt);
 939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  __nh._M_ptr = nullptr;
 940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  __n_elt = 1;
 941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		}
 942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      else if (__n_elt != 1)
 943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		--__n_elt;
 944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    }
 945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
 946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       /// Merge from a compatible container into one with equivalent keys.
 948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Compatible_Hashtable>
 949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	void
 950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_merge_multi(_Compatible_Hashtable& __src) noexcept
 951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  static_assert(is_same_v<typename _Compatible_Hashtable::node_type,
 953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      node_type>, "Node types are compatible");
 954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __glibcxx_assert(get_allocator() == __src.get_allocator());
 955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  this->reserve(size() + __src.size());
 957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  for (auto __i = __src.begin(), __end = __src.end(); __i != __end;)
 958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_reinsert_node_multi(cend(), __src.extract(__i++));
 959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
 960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** #endif // C++17
 961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     private:
 963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Helper rehash method used when keys are unique.
 964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void _M_rehash_aux(size_type __bkt_count, true_type);
 965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Helper rehash method used when keys can be non-unique.
 967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void _M_rehash_aux(size_type __bkt_count, false_type);
 968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Unconditionally change size of bucket array to n, restore
 970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // hash policy state to __state on exception.
 971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void _M_rehash(size_type __bkt_count, const __rehash_state& __state);
 972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     };
 973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   // Definitions of class template _Hashtable's out-of-line member functions.
 976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
 977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
 980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
 981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 21


 982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_bucket_begin(size_type __bkt) const
 984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> __node_type*
 985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
 986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_base* __n = _M_buckets[__bkt];
 987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return __n ? static_cast<__node_type*>(__n->_M_nxt) : nullptr;
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
 989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
 995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable(size_type __bkt_count_hint,
 997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       const _H1& __h1, const _H2& __h2, const _Hash& __h,
 998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       const _Equal& __eq, const _ExtractKey& __exk,
 999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       const allocator_type& __a)
1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     : _Hashtable(__h1, __h2, __h, __eq, __exk, __a)
1001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       auto __bkt_count = _M_rehash_policy._M_next_bkt(__bkt_count_hint);
1003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__bkt_count > _M_bucket_count)
1004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_buckets = _M_allocate_buckets(__bkt_count);
1006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_bucket_count = __bkt_count;
1007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     template<typename _InputIterator>
1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(_InputIterator __f, _InputIterator __l,
1018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 size_type __bkt_count_hint,
1019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const _H1& __h1, const _H2& __h2, const _Hash& __h,
1020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const _Equal& __eq, const _ExtractKey& __exk,
1021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const allocator_type& __a)
1022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       : _Hashtable(__h1, __h2, __h, __eq, __exk, __a)
1023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
1024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	auto __nb_elems = __detail::__distance_fw(__f, __l);
1025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	auto __bkt_count =
1026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_rehash_policy._M_next_bkt(
1027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    std::max(_M_rehash_policy._M_bkt_for_elements(__nb_elems),
1028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		     __bkt_count_hint));
1029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (__bkt_count > _M_bucket_count)
1031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
1032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_buckets = _M_allocate_buckets(__bkt_count);
1033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_bucket_count = __bkt_count;
1034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
1035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	for (; __f != __l; ++__f)
1037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  this->insert(*__f);
1038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 22


1039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     operator=(const _Hashtable& __ht)
1048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> _Hashtable&
1049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (&__ht == this)
1051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return *this;
1052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__node_alloc_traits::_S_propagate_on_copy_assign())
1054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  auto& __this_alloc = this->_M_node_allocator();
1056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  auto& __that_alloc = __ht._M_node_allocator();
1057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (!__node_alloc_traits::_S_always_equal()
1058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      && __this_alloc != __that_alloc)
1059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    {
1060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      // Replacement allocator cannot free existing storage.
1061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      this->_M_deallocate_nodes(_M_begin());
1062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_before_begin._M_nxt = nullptr;
1063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_deallocate_buckets();
1064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_buckets = nullptr;
1065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      std::__alloc_on_copy(__this_alloc, __that_alloc);
1066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __hashtable_base::operator=(__ht);
1067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_bucket_count = __ht._M_bucket_count;
1068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_element_count = __ht._M_element_count;
1069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_rehash_policy = __ht._M_rehash_policy;
1070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __alloc_node_gen_t __alloc_node_gen(*this);
1071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __try
1072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		{
1073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  _M_assign(__ht, __alloc_node_gen);
1074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		}
1075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __catch(...)
1076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		{
1077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  // _M_assign took care of deallocating all memory. Now we
1078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  // must make sure this instance remains in a usable state.
1079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  _M_reset();
1080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  __throw_exception_again;
1081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		}
1082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      return *this;
1083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    }
1084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  std::__alloc_on_copy(__this_alloc, __that_alloc);
1085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Reuse allocated buckets and nodes.
1088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_assign_elements(__ht);
1089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return *this;
1090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 23


1096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     template<typename _Ht>
1097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void
1098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_assign_elements(_Ht&& __ht)
1101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
1102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__bucket_type* __former_buckets = nullptr;
1103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	std::size_t __former_bucket_count = _M_bucket_count;
1104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	const __rehash_state& __former_state = _M_rehash_policy._M_state();
1105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (_M_bucket_count != __ht._M_bucket_count)
1107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
1108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __former_buckets = _M_buckets;
1109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_buckets = _M_allocate_buckets(__ht._M_bucket_count);
1110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_bucket_count = __ht._M_bucket_count;
1111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
1112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	else
1113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __builtin_memset(_M_buckets, 0,
1114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			   _M_bucket_count * sizeof(__bucket_type));
1115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__try
1117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
1118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __hashtable_base::operator=(std::forward<_Ht>(__ht));
1119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_element_count = __ht._M_element_count;
1120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_rehash_policy = __ht._M_rehash_policy;
1121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __reuse_or_alloc_node_gen_t __roan(_M_begin(), *this);
1122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_before_begin._M_nxt = nullptr;
1123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_assign(std::forward<_Ht>(__ht), __roan);
1124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    if (__former_buckets)
1125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_deallocate_buckets(__former_buckets, __former_bucket_count);
1126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
1127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__catch(...)
1128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
1129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    if (__former_buckets)
1130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      {
1131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		// Restore previous buckets.
1132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		_M_deallocate_buckets();
1133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		_M_rehash_policy._M_reset(__former_state);
1134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		_M_buckets = __former_buckets;
1135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		_M_bucket_count = __former_bucket_count;
1136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      }
1137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __builtin_memset(_M_buckets, 0,
1138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			     _M_bucket_count * sizeof(__bucket_type));
1139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __throw_exception_again;
1140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
1141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
1142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     template<typename _Ht, typename _NodeGenerator>
1148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void
1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_assign(_Ht&& __ht, const _NodeGenerator& __node_gen)
1152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 24


1153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__bucket_type* __buckets = nullptr;
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (!_M_buckets)
1155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_buckets = __buckets = _M_allocate_buckets(_M_bucket_count);
1156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__try
1158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
1159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    if (!__ht._M_before_begin._M_nxt)
1160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      return;
1161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    // First deal with the special first node pointed to by
1163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    // _M_before_begin.
1164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __node_type* __ht_n = __ht._M_begin();
1165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __node_type* __this_n
1166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      = __node_gen(__fwd_value_for<_Ht>(__ht_n->_M_v()));
1167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    this->_M_copy_code(__this_n, __ht_n);
1168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_before_begin._M_nxt = __this_n;
1169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_buckets[_M_bucket_index(__this_n)] = &_M_before_begin;
1170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    // Then deal with other nodes.
1172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __node_base* __prev_n = __this_n;
1173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    for (__ht_n = __ht_n->_M_next(); __ht_n; __ht_n = __ht_n->_M_next())
1174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      {
1175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		__this_n = __node_gen(__fwd_value_for<_Ht>(__ht_n->_M_v()));
1176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		__prev_n->_M_nxt = __this_n;
1177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		this->_M_copy_code(__this_n, __ht_n);
1178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		size_type __bkt = _M_bucket_index(__this_n);
1179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		if (!_M_buckets[__bkt])
1180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  _M_buckets[__bkt] = __prev_n;
1181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		__prev_n = __this_n;
1182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      }
1183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
1184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__catch(...)
1185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
1186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    clear();
1187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    if (__buckets)
1188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_deallocate_buckets();
1189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __throw_exception_again;
1190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
1191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
1192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     void
1198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_reset() noexcept
1201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_rehash_policy._M_reset();
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_bucket_count = 1;
1204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_single_bucket = nullptr;
1205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_buckets = &_M_single_bucket;
1206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_before_begin._M_nxt = nullptr;
1207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_element_count = 0;
1208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 25


1210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     void
1215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_move_assign(_Hashtable&& __ht, true_type)
1218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       this->_M_deallocate_nodes(_M_begin());
1220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_deallocate_buckets();
1221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hashtable_base::operator=(std::move(__ht));
1222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_rehash_policy = __ht._M_rehash_policy;
1223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (!__ht._M_uses_single_bucket())
1224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_buckets = __ht._M_buckets;
1225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       else
1226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_buckets = &_M_single_bucket;
1228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_single_bucket = __ht._M_single_bucket;
1229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_bucket_count = __ht._M_bucket_count;
1231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_before_begin._M_nxt = __ht._M_before_begin._M_nxt;
1232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_element_count = __ht._M_element_count;
1233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::__alloc_on_move(this->_M_node_allocator(), __ht._M_node_allocator());
1234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Fix buckets containing the _M_before_begin pointers that can't be
1236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // moved.
1237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (_M_begin())
1238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_buckets[_M_bucket_index(_M_begin())] = &_M_before_begin;
1239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __ht._M_reset();
1240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     void
1247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_move_assign(_Hashtable&& __ht, false_type)
1250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__ht._M_node_allocator() == this->_M_node_allocator())
1252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_move_assign(std::move(__ht), true_type());
1253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       else
1254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // Can't move memory, move elements then.
1256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_assign_elements(std::move(__ht));
1257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __ht.clear();
1258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 26


1267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable(const _Hashtable& __ht)
1268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     : __hashtable_base(__ht),
1269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __map_base(__ht),
1270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __rehash_base(__ht),
1271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hashtable_alloc(
1272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__node_alloc_traits::_S_select_on_copy(__ht._M_node_allocator())),
1273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_buckets(nullptr),
1274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_bucket_count(__ht._M_bucket_count),
1275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_element_count(__ht._M_element_count),
1276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_rehash_policy(__ht._M_rehash_policy)
1277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __alloc_node_gen_t __alloc_node_gen(*this);
1279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_assign(__ht, __alloc_node_gen);
1280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable(_Hashtable&& __ht) noexcept
1289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     : __hashtable_base(__ht),
1290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __map_base(__ht),
1291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __rehash_base(__ht),
1292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hashtable_alloc(std::move(__ht._M_base_alloc())),
1293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_buckets(__ht._M_buckets),
1294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_bucket_count(__ht._M_bucket_count),
1295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_before_begin(__ht._M_before_begin._M_nxt),
1296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_element_count(__ht._M_element_count),
1297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_rehash_policy(__ht._M_rehash_policy)
1298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Update, if necessary, buckets if __ht is using its single bucket.
1300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__ht._M_uses_single_bucket())
1301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_buckets = &_M_single_bucket;
1303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_single_bucket = __ht._M_single_bucket;
1304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Update, if necessary, bucket pointing to before begin that hasn't
1307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // moved.
1308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (_M_begin())
1309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_buckets[_M_bucket_index(_M_begin())] = &_M_before_begin;
1310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __ht._M_reset();
1312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable(const _Hashtable& __ht, const allocator_type& __a)
1321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     : __hashtable_base(__ht),
1322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __map_base(__ht),
1323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __rehash_base(__ht),
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 27


1324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hashtable_alloc(__node_alloc_type(__a)),
1325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_buckets(),
1326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_bucket_count(__ht._M_bucket_count),
1327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_element_count(__ht._M_element_count),
1328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_rehash_policy(__ht._M_rehash_policy)
1329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __alloc_node_gen_t __alloc_node_gen(*this);
1331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_assign(__ht, __alloc_node_gen);
1332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable(_Hashtable&& __ht, const allocator_type& __a)
1341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     : __hashtable_base(__ht),
1342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __map_base(__ht),
1343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __rehash_base(__ht),
1344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hashtable_alloc(__node_alloc_type(__a)),
1345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_buckets(nullptr),
1346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_bucket_count(__ht._M_bucket_count),
1347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_element_count(__ht._M_element_count),
1348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_rehash_policy(__ht._M_rehash_policy)
1349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__ht._M_node_allocator() == this->_M_node_allocator())
1351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (__ht._M_uses_single_bucket())
1353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    {
1354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_buckets = &_M_single_bucket;
1355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_single_bucket = __ht._M_single_bucket;
1356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    }
1357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  else
1358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_buckets = __ht._M_buckets;
1359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_before_begin._M_nxt = __ht._M_before_begin._M_nxt;
1361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // Update, if necessary, bucket pointing to before begin that hasn't
1362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // moved.
1363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (_M_begin())
1364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_buckets[_M_bucket_index(_M_begin())] = &_M_before_begin;
1365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __ht._M_reset();
1366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       else
1368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __alloc_node_gen_t __alloc_gen(*this);
1370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  using _Fwd_Ht = typename
1372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    conditional<__move_if_noexcept_cond<value_type>::value,
1373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			const _Hashtable&, _Hashtable&&>::type;
1374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_assign(std::forward<_Fwd_Ht>(__ht), __alloc_gen);
1375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __ht.clear();
1376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 28


1381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
  59              		.loc 2 1383 5 is_stmt 1 view .LVU4
  60              	.LBB1987:
  61              	.LBI1934:
1384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     ~_Hashtable() noexcept
1386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       clear();
1388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_deallocate_buckets();
1389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     void
1396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     swap(_Hashtable& __x)
1399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     noexcept(__and_<__is_nothrow_swappable<_H1>,
1400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	                __is_nothrow_swappable<_Equal>>::value)
1401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // The only base class with member variables is hash_code_base.
1403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // We define _Hash_code_base::_M_swap because different
1404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // specializations have different members.
1405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       this->_M_swap(__x);
1406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::__alloc_on_swap(this->_M_node_allocator(), __x._M_node_allocator());
1408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::swap(_M_rehash_policy, __x._M_rehash_policy);
1409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Deal properly with potentially moved instances.
1411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (this->_M_uses_single_bucket())
1412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (!__x._M_uses_single_bucket())
1414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    {
1415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_buckets = __x._M_buckets;
1416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __x._M_buckets = &__x._M_single_bucket;
1417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    }
1418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       else if (__x._M_uses_single_bucket())
1420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __x._M_buckets = _M_buckets;
1422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_buckets = &_M_single_bucket;
1423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}	
1424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       else
1425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	std::swap(_M_buckets, __x._M_buckets);
1426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::swap(_M_bucket_count, __x._M_bucket_count);
1428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::swap(_M_before_begin._M_nxt, __x._M_before_begin._M_nxt);
1429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::swap(_M_element_count, __x._M_element_count);
1430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::swap(_M_single_bucket, __x._M_single_bucket);
1431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Fix buckets containing the _M_before_begin pointers that can't be
1433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // swapped.
1434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (_M_begin())
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 29


1435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_buckets[_M_bucket_index(_M_begin())] = &_M_before_begin;
1436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__x._M_begin())
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__x._M_buckets[__x._M_bucket_index(__x._M_begin())]
1439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  = &__x._M_before_begin;
1440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     find(const key_type& __k)
1450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> iterator
1451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hash_code __code = this->_M_hash_code(__k);
1453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __bkt = _M_bucket_index(__k, __code);
1454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type* __p = _M_find_node(__bkt, __k, __code);
1455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return __p ? iterator(__p) : end();
1456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     find(const key_type& __k) const
1466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> const_iterator
1467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hash_code __code = this->_M_hash_code(__k);
1469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __bkt = _M_bucket_index(__k, __code);
1470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type* __p = _M_find_node(__bkt, __k, __code);
1471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return __p ? const_iterator(__p) : end();
1472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     count(const key_type& __k) const
1482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> size_type
1483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hash_code __code = this->_M_hash_code(__k);
1485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __bkt = _M_bucket_index(__k, __code);
1486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type* __p = _M_bucket_begin(__bkt);
1487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (!__p)
1488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return 0;
1489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __result = 0;
1491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       for (;; __p = __p->_M_next())
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 30


1492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (this->_M_equals(__k, __code, __p))
1494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    ++__result;
1495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  else if (__result)
1496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    // All equivalent values are next to each other, if we
1497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    // found a non-equivalent value after an equivalent one it
1498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    // means that we won't find any new equivalent value.
1499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    break;
1500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (!__p->_M_nxt || _M_bucket_index(__p->_M_next()) != __bkt)
1501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    break;
1502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return __result;
1504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     equal_range(const key_type& __k)
1514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> pair<iterator, iterator>
1515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hash_code __code = this->_M_hash_code(__k);
1517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __bkt = _M_bucket_index(__k, __code);
1518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type* __p = _M_find_node(__bkt, __k, __code);
1519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__p)
1521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __node_type* __p1 = __p->_M_next();
1523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  while (__p1 && _M_bucket_index(__p1) == __bkt
1524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 && this->_M_equals(__k, __code, __p1))
1525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __p1 = __p1->_M_next();
1526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return std::make_pair(iterator(__p), iterator(__p1));
1528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       else
1530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return std::make_pair(end(), end());
1531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     equal_range(const key_type& __k) const
1541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> pair<const_iterator, const_iterator>
1542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hash_code __code = this->_M_hash_code(__k);
1544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __bkt = _M_bucket_index(__k, __code);
1545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type* __p = _M_find_node(__bkt, __k, __code);
1546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__p)
1548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 31


1549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __node_type* __p1 = __p->_M_next();
1550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  while (__p1 && _M_bucket_index(__p1) == __bkt
1551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 && this->_M_equals(__k, __code, __p1))
1552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __p1 = __p1->_M_next();
1553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return std::make_pair(const_iterator(__p), const_iterator(__p1));
1555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       else
1557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return std::make_pair(end(), end());
1558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   // Find the node whose key compares equal to k in the bucket bkt.
1561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   // Return nullptr if no node is found.
1562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_find_before_node(size_type __bkt, const key_type& __k,
1570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			__hash_code __code) const
1571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> __node_base*
1572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_base* __prev_p = _M_buckets[__bkt];
1574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (!__prev_p)
1575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return nullptr;
1576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       for (__node_type* __p = static_cast<__node_type*>(__prev_p->_M_nxt);;
1578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   __p = __p->_M_next())
1579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (this->_M_equals(__k, __code, __p))
1581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    return __prev_p;
1582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (!__p->_M_nxt || _M_bucket_index(__p->_M_next()) != __bkt)
1584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    break;
1585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __prev_p = __p;
1586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return nullptr;
1588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     void
1595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_insert_bucket_begin(size_type __bkt, __node_type* __node)
1598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (_M_buckets[__bkt])
1600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // Bucket is not empty, we just need to insert the new node
1602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // after the bucket before begin.
1603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __node->_M_nxt = _M_buckets[__bkt]->_M_nxt;
1604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_buckets[__bkt]->_M_nxt = __node;
1605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 32


1606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       else
1607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // The bucket is empty, the new node is inserted at the
1609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // beginning of the singly-linked list and the bucket will
1610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // contain _M_before_begin pointer.
1611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __node->_M_nxt = _M_before_begin._M_nxt;
1612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_before_begin._M_nxt = __node;
1613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (__node->_M_nxt)
1614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    // We must update former begin bucket that is pointing to
1615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    // _M_before_begin.
1616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_buckets[_M_bucket_index(__node->_M_next())] = __node;
1617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_buckets[__bkt] = &_M_before_begin;
1618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     void
1626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_remove_bucket_begin(size_type __bkt, __node_type* __next,
1629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			   size_type __next_bkt)
1630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (!__next || __next_bkt != __bkt)
1632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // Bucket is now empty
1634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // First update next bucket if any
1635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (__next)
1636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_buckets[__next_bkt] = _M_buckets[__bkt];
1637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // Second update before begin node if necessary
1639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (&_M_before_begin == _M_buckets[__bkt])
1640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_before_begin._M_nxt = __next;
1641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_buckets[__bkt] = nullptr;
1642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_get_previous_node(size_type __bkt, __node_base* __n)
1653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> __node_base*
1654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_base* __prev_n = _M_buckets[__bkt];
1656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       while (__prev_n->_M_nxt != __n)
1657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__prev_n = __prev_n->_M_nxt;
1658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return __prev_n;
1659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 33


1663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     template<typename... _Args>
1666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       auto
1667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_emplace(true_type, _Args&&... __args)
1670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       -> pair<iterator, bool>
1671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
1672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// First build the node to get access to the hash code
1673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_Scoped_node __node { this, std::forward<_Args>(__args)...  };
1674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	const key_type& __k = this->_M_extract()(__node._M_node->_M_v());
1675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__hash_code __code = this->_M_hash_code(__k);
1676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	size_type __bkt = _M_bucket_index(__k, __code);
1677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (__node_type* __p = _M_find_node(__bkt, __k, __code))
1678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // There is already an equivalent node, no insertion
1679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return std::make_pair(iterator(__p), false);
1680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// Insert the node
1682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	auto __pos = _M_insert_unique_node(__k, __bkt, __code, __node._M_node);
1683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__node._M_node = nullptr;
1684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return { __pos, true };
1685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
1686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     template<typename... _Args>
1692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       auto
1693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_emplace(const_iterator __hint, false_type, _Args&&... __args)
1696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       -> iterator
1697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
1698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// First build the node to get its hash code.
1699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_Scoped_node __node { this, std::forward<_Args>(__args)...  };
1700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	const key_type& __k = this->_M_extract()(__node._M_node->_M_v());
1701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__hash_code __code = this->_M_hash_code(__k);
1703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	auto __pos
1704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  = _M_insert_multi_node(__hint._M_cur, __k, __code, __node._M_node);
1705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__node._M_node = nullptr;
1706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return __pos;
1707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
1708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_insert_unique_node(const key_type& __k, size_type __bkt,
1717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			  __hash_code __code, __node_type* __node,
1718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			  size_type __n_elt)
1719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> iterator
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 34


1720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const __rehash_state& __saved_state = _M_rehash_policy._M_state();
1722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::pair<bool, std::size_t> __do_rehash
1723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	= _M_rehash_policy._M_need_rehash(_M_bucket_count, _M_element_count,
1724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 					  __n_elt);
1725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__do_rehash.first)
1727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_rehash(__do_rehash.second, __saved_state);
1729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __bkt = _M_bucket_index(__k, __code);
1730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       this->_M_store_code(__node, __code);
1733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Always insert at the beginning of the bucket.
1735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_insert_bucket_begin(__bkt, __node);
1736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       ++_M_element_count;
1737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return iterator(__node);
1738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_insert_multi_node(__node_type* __hint, const key_type& __k,
1748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			 __hash_code __code, __node_type* __node)
1749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> iterator
1750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const __rehash_state& __saved_state = _M_rehash_policy._M_state();
1752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::pair<bool, std::size_t> __do_rehash
1753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	= _M_rehash_policy._M_need_rehash(_M_bucket_count, _M_element_count, 1);
1754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__do_rehash.first)
1756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_rehash(__do_rehash.second, __saved_state);
1757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       this->_M_store_code(__node, __code);
1759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type __bkt = _M_bucket_index(__k, __code);
1760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Find the node before an equivalent one or use hint if it exists and
1762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // if it is equivalent.
1763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_base* __prev
1764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	= __builtin_expect(__hint != nullptr, false)
1765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  && this->_M_equals(__k, __code, __hint)
1766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    ? __hint
1767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    : _M_find_before_node(__bkt, __k, __code);
1768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__prev)
1769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // Insert after the node before the equivalent one.
1771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __node->_M_nxt = __prev->_M_nxt;
1772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __prev->_M_nxt = __node;
1773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (__builtin_expect(__prev == __hint, false))
1774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    // hint might be the last bucket node, in this case we need to
1775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    // update next bucket.
1776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    if (__node->_M_nxt
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 35


1777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		&& !this->_M_equals(__k, __code, __node->_M_next()))
1778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      {
1779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		size_type __next_bkt = _M_bucket_index(__node->_M_next());
1780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		if (__next_bkt != __bkt)
1781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  _M_buckets[__next_bkt] = __node;
1782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      }
1783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       else
1785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// The inserted node has no equivalent in the hashtable. We must
1786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// insert the new node at the beginning of the bucket to preserve
1787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// equivalent elements' relative positions.
1788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_insert_bucket_begin(__bkt, __node);
1789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       ++_M_element_count;
1790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return iterator(__node);
1791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   // Insert v if no element with its key is already present.
1794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     template<typename _Arg, typename _NodeGenerator>
1799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       auto
1800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_insert(_Arg&& __v, const _NodeGenerator& __node_gen, true_type,
1803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		size_type __n_elt)
1804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       -> pair<iterator, bool>
1805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
1806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	const key_type& __k = this->_M_extract()(__v);
1807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__hash_code __code = this->_M_hash_code(__k);
1808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	size_type __bkt = _M_bucket_index(__k, __code);
1809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (__node_type* __node = _M_find_node(__bkt, __k, __code))
1811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return { iterator(__node), false };
1812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_Scoped_node __node{ __node_gen(std::forward<_Arg>(__v)), this };
1814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	auto __pos
1815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  = _M_insert_unique_node(__k, __bkt, __code, __node._M_node, __n_elt);
1816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__node._M_node = nullptr;
1817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return { __pos, true };
1818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
1819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   // Insert v unconditionally.
1821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     template<typename _Arg, typename _NodeGenerator>
1826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       auto
1827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_insert(const_iterator __hint, _Arg&& __v,
1830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		const _NodeGenerator& __node_gen, false_type)
1831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       -> iterator
1832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
1833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// First compute the hash code so that we don't do anything if it
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 36


1834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// throws.
1835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__hash_code __code = this->_M_hash_code(this->_M_extract()(__v));
1836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// Second allocate new node so that we don't rehash if it throws.
1838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_Scoped_node __node{ __node_gen(std::forward<_Arg>(__v)), this };
1839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	const key_type& __k = this->_M_extract()(__node._M_node->_M_v());
1840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	auto __pos
1841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  = _M_insert_multi_node(__hint._M_cur, __k, __code, __node._M_node);
1842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__node._M_node = nullptr;
1843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return __pos;
1844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
1845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     erase(const_iterator __it)
1854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> iterator
1855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type* __n = __it._M_cur;
1857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __bkt = _M_bucket_index(__n);
1858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Look for previous node to unlink it from the erased one, this
1860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // is why we need buckets to contain the before begin to make
1861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // this search fast.
1862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_base* __prev_n = _M_get_previous_node(__bkt, __n);
1863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return _M_erase(__bkt, __prev_n, __n);
1864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_erase(size_type __bkt, __node_base* __prev_n, __node_type* __n)
1874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> iterator
1875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__prev_n == _M_buckets[__bkt])
1877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_remove_bucket_begin(__bkt, __n->_M_next(),
1878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   __n->_M_nxt ? _M_bucket_index(__n->_M_next()) : 0);
1879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       else if (__n->_M_nxt)
1880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  size_type __next_bkt = _M_bucket_index(__n->_M_next());
1882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (__next_bkt != __bkt)
1883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_buckets[__next_bkt] = __prev_n;
1884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __prev_n->_M_nxt = __n->_M_nxt;
1887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       iterator __result(__n->_M_next());
1888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       this->_M_deallocate_node(__n);
1889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       --_M_element_count;
1890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 37


1891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return __result;
1892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_erase(true_type, const key_type& __k)
1902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> size_type
1903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hash_code __code = this->_M_hash_code(__k);
1905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __bkt = _M_bucket_index(__k, __code);
1906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Look for the node before the first matching node.
1908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_base* __prev_n = _M_find_before_node(__bkt, __k, __code);
1909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (!__prev_n)
1910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return 0;
1911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // We found a matching node, erase it.
1913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type* __n = static_cast<__node_type*>(__prev_n->_M_nxt);
1914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_erase(__bkt, __prev_n, __n);
1915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return 1;
1916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_erase(false_type, const key_type& __k)
1926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> size_type
1927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hash_code __code = this->_M_hash_code(__k);
1929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __bkt = _M_bucket_index(__k, __code);
1930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Look for the node before the first matching node.
1932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_base* __prev_n = _M_find_before_node(__bkt, __k, __code);
1933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (!__prev_n)
1934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return 0;
1935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // 526. Is it undefined if a function in the standard changes
1938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // in parameters?
1939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // We use one loop to find all matching nodes and another to deallocate
1940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // them so that the key stays valid during the first loop. It might be
1941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // invalidated indirectly when destroying nodes.
1942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type* __n = static_cast<__node_type*>(__prev_n->_M_nxt);
1943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type* __n_last = __n;
1944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __n_last_bkt = __bkt;
1945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       do
1946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __n_last = __n_last->_M_next();
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 38


1948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (!__n_last)
1949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    break;
1950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __n_last_bkt = _M_bucket_index(__n_last);
1951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       while (__n_last_bkt == __bkt && this->_M_equals(__k, __code, __n_last));
1953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Deallocate nodes.
1955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type __result = 0;
1956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       do
1957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __node_type* __p = __n->_M_next();
1959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  this->_M_deallocate_node(__n);
1960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __n = __p;
1961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  ++__result;
1962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  --_M_element_count;
1963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       while (__n != __n_last);
1965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__prev_n == _M_buckets[__bkt])
1967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_remove_bucket_begin(__bkt, __n_last, __n_last_bkt);
1968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       else if (__n_last && __n_last_bkt != __bkt)
1969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_buckets[__n_last_bkt] = __prev_n;
1970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __prev_n->_M_nxt = __n_last;
1971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return __result;
1972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     erase(const_iterator __first, const_iterator __last)
1982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> iterator
1983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type* __n = __first._M_cur;
1985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type* __last_n = __last._M_cur;
1986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__n == __last_n)
1987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return iterator(__n);
1988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __bkt = _M_bucket_index(__n);
1990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_base* __prev_n = _M_get_previous_node(__bkt, __n);
1992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       bool __is_bucket_begin = __n == _M_bucket_begin(__bkt);
1993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __n_bkt = __bkt;
1994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       for (;;)
1995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  do
1997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    {
1998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __node_type* __tmp = __n;
1999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __n = __n->_M_next();
2000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      this->_M_deallocate_node(__tmp);
2001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      --_M_element_count;
2002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      if (!__n)
2003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		break;
2004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __n_bkt = _M_bucket_index(__n);
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 39


2005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    }
2006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  while (__n != __last_n && __n_bkt == __bkt);
2007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (__is_bucket_begin)
2008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_remove_bucket_begin(__bkt, __n, __n_bkt);
2009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (__n == __last_n)
2010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    break;
2011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __is_bucket_begin = true;
2012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __bkt = __n_bkt;
2013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
2014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
2015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__n && (__n_bkt != __bkt || __is_bucket_begin))
2016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_buckets[__n_bkt] = __prev_n;
2017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __prev_n->_M_nxt = __n;
2018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return iterator(__n);
2019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
2020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
2021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
2022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
2023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
2024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
2025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     void
2026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
  62              		.loc 2 2026 5 view .LVU5
  63              	.LBB1984:
  64              	.LBB1938:
  65              	.LBI1936:
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return static_cast<__node_type*>(_M_before_begin._M_nxt); }
  66              		.loc 2 420 7 view .LVU6
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return static_cast<__node_type*>(_M_before_begin._M_nxt); }
  67              		.loc 2 420 7 is_stmt 0 view .LVU7
  68              	.LBE1938:
  69              	.LBB1939:
  70              	.LBI1939:
  71              		.file 3 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\hashtable_p
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // Internal policy header for unordered_set and unordered_map -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // Copyright (C) 2010-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // <http://www.gnu.org/licenses/>.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 40


  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** /** @file bits/hashtable_policy.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****  *  This is an internal header file, included by other library headers.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****  *  Do not attempt to use it directly.
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****  *  @headername{unordered_map,unordered_set}
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****  */
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** #ifndef _HASHTABLE_POLICY_H
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** #define _HASHTABLE_POLICY_H 1
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** #include <tuple>		// for std::tuple, std::forward_as_tuple
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** #include <limits>		// for std::numeric_limits
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** #include <bits/stl_algobase.h>	// for std::min, std::is_permutation.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** namespace std _GLIBCXX_VISIBILITY(default)
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** {
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     class _Hashtable;
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** namespace __detail
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** {
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  @defgroup hashtable-detail Base and Implementation Classes
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  @ingroup unordered_associative_containers
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  @{
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value,
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash, typename _Traits>
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hashtable_base;
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // Helper function: return distance(first, last) for forward
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // iterators, or 0/1 for input iterators.
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<class _Iterator>
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     inline typename std::iterator_traits<_Iterator>::difference_type
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     __distance_fw(_Iterator __first, _Iterator __last,
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		  std::input_iterator_tag)
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return __first != __last ? 1 : 0; }
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<class _Iterator>
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     inline typename std::iterator_traits<_Iterator>::difference_type
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     __distance_fw(_Iterator __first, _Iterator __last,
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		  std::forward_iterator_tag)
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return std::distance(__first, __last); }
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<class _Iterator>
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     inline typename std::iterator_traits<_Iterator>::difference_type
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     __distance_fw(_Iterator __first, _Iterator __last)
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return __distance_fw(__first, __last,
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			   std::__iterator_category(__first)); }
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   struct _Identity
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 41


  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   {
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     template<typename _Tp>
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Tp&&
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator()(_Tp&& __x) const
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return std::forward<_Tp>(__x); }
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   struct _Select1st
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   {
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     template<typename _Tp>
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       auto
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator()(_Tp&& __x) const
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       -> decltype(std::get<0>(std::forward<_Tp>(__x)))
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return std::get<0>(std::forward<_Tp>(__x)); }
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _NodeAlloc>
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hashtable_alloc;
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // Functor recycling a pool of nodes and using allocation once the pool is
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // empty.
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _NodeAlloc>
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _ReuseOrAllocNode
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_alloc_type = _NodeAlloc;
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hashtable_alloc = _Hashtable_alloc<__node_alloc_type>;
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_alloc_traits =
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	typename __hashtable_alloc::__node_alloc_traits;
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_type = typename __hashtable_alloc::__node_type;
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _ReuseOrAllocNode(__node_type* __nodes, __hashtable_alloc& __h)
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_nodes(__nodes), _M_h(__h) { }
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _ReuseOrAllocNode(const _ReuseOrAllocNode&) = delete;
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       ~_ReuseOrAllocNode()
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { _M_h._M_deallocate_nodes(_M_nodes); }
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _Arg>
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__node_type*
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	operator()(_Arg&& __arg) const
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  if (_M_nodes)
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    {
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      __node_type* __node = _M_nodes;
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      _M_nodes = _M_nodes->_M_next();
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      __node->_M_nxt = nullptr;
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      auto& __a = _M_h._M_node_allocator();
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      __node_alloc_traits::destroy(__a, __node->_M_valptr());
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      __try
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		{
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		  __node_alloc_traits::construct(__a, __node->_M_valptr(),
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						 std::forward<_Arg>(__arg));
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		}
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      __catch(...)
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		{
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 42


 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		  _M_h._M_deallocate_node_ptr(__node);
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		  __throw_exception_again;
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		}
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      return __node;
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    }
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  return _M_h._M_allocate_node(std::forward<_Arg>(__arg));
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	}
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       mutable __node_type* _M_nodes;
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hashtable_alloc& _M_h;
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // Functor similar to the previous one but without any pool of nodes to
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // recycle.
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _NodeAlloc>
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _AllocNode
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hashtable_alloc = _Hashtable_alloc<_NodeAlloc>;
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_type = typename __hashtable_alloc::__node_type;
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _AllocNode(__hashtable_alloc& __h)
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_h(__h) { }
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _Arg>
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__node_type*
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	operator()(_Arg&& __arg) const
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{ return _M_h._M_allocate_node(std::forward<_Arg>(__arg)); }
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hashtable_alloc& _M_h;
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // Auxiliary types used for all instantiations of _Hashtable nodes
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // and iterators.
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  struct _Hashtable_traits
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Important traits for hash tables.
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  @tparam _Cache_hash_code  Boolean value. True if the value of
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  the hash function is stored along with the value. This is a
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  time-space tradeoff.  Storing it may improve lookup speed by
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  reducing the number of times we need to call the _Hash or _Equal
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  functors.
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  @tparam _Constant_iterators  Boolean value. True if iterator and
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  const_iterator are both constant iterator types. This is true
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  for unordered_set and unordered_multiset, false for
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  unordered_map and unordered_multimap.
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  @tparam _Unique_keys  Boolean value. True if the return value
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  of _Hashtable::count(k) is always at most one, false if it may
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  be an arbitrary number. This is true for unordered_set and
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 43


 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  unordered_map, false for unordered_multiset and
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  unordered_multimap.
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<bool _Cache_hash_code, bool _Constant_iterators, bool _Unique_keys>
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hashtable_traits
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hash_cached = __bool_constant<_Cache_hash_code>;
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __constant_iterators = __bool_constant<_Constant_iterators>;
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __unique_keys = __bool_constant<_Unique_keys>;
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  struct _Hash_node_base
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Nodes, used to wrap elements stored in the hash table.  A policy
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  template parameter of class template _Hashtable controls whether
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  nodes also store a hash code. In some cases (e.g. strings) this
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  may be a performance win.
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   struct _Hash_node_base
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   {
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Hash_node_base* _M_nxt;
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Hash_node_base() noexcept : _M_nxt() { }
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Hash_node_base(_Hash_node_base* __next) noexcept : _M_nxt(__next) { }
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  struct _Hash_node_value_base
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Node type with the value to store.
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Value>
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hash_node_value_base : _Hash_node_base
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef _Value value_type;
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __gnu_cxx::__aligned_buffer<_Value> _M_storage;
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Value*
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_valptr() noexcept
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return _M_storage._M_ptr(); }
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _Value*
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_valptr() const noexcept
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return _M_storage._M_ptr(); }
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Value&
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_v() noexcept
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return *_M_valptr(); }
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _Value&
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_v() const noexcept
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return *_M_valptr(); }
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 44


 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Primary template struct _Hash_node.
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Value, bool _Cache_hash_code>
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hash_node;
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Specialization for nodes with caches, struct _Hash_node.
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Base class is __detail::_Hash_node_value_base.
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Value>
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hash_node<_Value, true> : _Hash_node_value_base<_Value>
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t  _M_hash_code;
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hash_node*
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_next() const noexcept
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return static_cast<_Hash_node*>(this->_M_nxt); }
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Specialization for nodes without caches, struct _Hash_node.
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Base class is __detail::_Hash_node_value_base.
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Value>
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hash_node<_Value, false> : _Hash_node_value_base<_Value>
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hash_node*
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_next() const noexcept
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return static_cast<_Hash_node*>(this->_M_nxt); }
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Base class for node iterators.
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Value, bool _Cache_hash_code>
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Node_iterator_base
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_type = _Hash_node<_Value, _Cache_hash_code>;
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __node_type*  _M_cur;
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Node_iterator_base(__node_type* __p) noexcept
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_cur(__p) { }
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_incr() noexcept
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { _M_cur = _M_cur->_M_next(); }
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Value, bool _Cache_hash_code>
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     inline bool
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     operator==(const _Node_iterator_base<_Value, _Cache_hash_code>& __x,
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       const _Node_iterator_base<_Value, _Cache_hash_code >& __y)
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     noexcept
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return __x._M_cur == __y._M_cur; }
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 45


 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Value, bool _Cache_hash_code>
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     inline bool
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     operator!=(const _Node_iterator_base<_Value, _Cache_hash_code>& __x,
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       const _Node_iterator_base<_Value, _Cache_hash_code>& __y)
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     noexcept
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return __x._M_cur != __y._M_cur; }
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Node iterators, used to iterate through all the hashtable.
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Value, bool __constant_iterators, bool __cache>
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Node_iterator
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : public _Node_iterator_base<_Value, __cache>
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __base_type = _Node_iterator_base<_Value, __cache>;
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_type = typename __base_type::__node_type;
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef _Value					value_type;
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef std::ptrdiff_t				difference_type;
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef std::forward_iterator_tag			iterator_category;
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using pointer = typename std::conditional<__constant_iterators,
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						const _Value*, _Value*>::type;
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using reference = typename std::conditional<__constant_iterators,
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						  const _Value&, _Value&>::type;
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Node_iterator() noexcept
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __base_type(0) { }
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       explicit
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Node_iterator(__node_type* __p) noexcept
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __base_type(__p) { }
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       reference
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator*() const noexcept
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return this->_M_cur->_M_v(); }
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       pointer
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator->() const noexcept
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return this->_M_cur->_M_valptr(); }
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Node_iterator&
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator++() noexcept
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	this->_M_incr();
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return *this;
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Node_iterator
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator++(int) noexcept
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_Node_iterator __tmp(*this);
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	this->_M_incr();
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return __tmp;
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 46


 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Node const_iterators, used to iterate through all the hashtable.
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Value, bool __constant_iterators, bool __cache>
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Node_const_iterator
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : public _Node_iterator_base<_Value, __cache>
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __base_type = _Node_iterator_base<_Value, __cache>;
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_type = typename __base_type::__node_type;
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef _Value					value_type;
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef std::ptrdiff_t				difference_type;
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef std::forward_iterator_tag			iterator_category;
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef const _Value*				pointer;
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef const _Value&				reference;
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Node_const_iterator() noexcept
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __base_type(0) { }
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       explicit
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Node_const_iterator(__node_type* __p) noexcept
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __base_type(__p) { }
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Node_const_iterator(const _Node_iterator<_Value, __constant_iterators,
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			   __cache>& __x) noexcept
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __base_type(__x._M_cur) { }
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       reference
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator*() const noexcept
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return this->_M_cur->_M_v(); }
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       pointer
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator->() const noexcept
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return this->_M_cur->_M_valptr(); }
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Node_const_iterator&
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator++() noexcept
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	this->_M_incr();
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return *this;
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Node_const_iterator
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator++(int) noexcept
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_Node_const_iterator __tmp(*this);
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	this->_M_incr();
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return __tmp;
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // Many of class template _Hashtable's template parameters are policy
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // classes.  These are defaults for the policies.
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Default range hashing function: use division to fold a large number
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 47


 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// into the range [0, N).
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   struct _Mod_range_hashing
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   {
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef std::size_t first_argument_type;
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef std::size_t second_argument_type;
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef std::size_t result_type;
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     result_type
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     operator()(first_argument_type __num,
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       second_argument_type __den) const noexcept
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return __num % __den; }
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Default ranged hash function H.  In principle it should be a
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// function object composed from objects of type H1 and H2 such that
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// h(k, N) = h2(h1(k), N), but that would mean making extra copies of
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// h1 and h2.  So instead we'll just use a tag to tell class template
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// hashtable to do that composition.
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   struct _Default_ranged_hash { };
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Default value for rehash policy.  Bucket size is (usually) the
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// smallest prime that keeps the load factor small enough.
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   struct _Prime_rehash_policy
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   {
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using __has_load_factor = true_type;
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Prime_rehash_policy(float __z = 1.0) noexcept
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : _M_max_load_factor(__z), _M_next_resize(0) { }
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     float
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     max_load_factor() const noexcept
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return _M_max_load_factor; }
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // Return a bucket size no smaller than n.
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     std::size_t
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_next_bkt(std::size_t __n) const;
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // Return a bucket count appropriate for n elements
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     std::size_t
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_bkt_for_elements(std::size_t __n) const
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return __builtin_ceill(__n / (long double)_M_max_load_factor); }
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // __n_bkt is current bucket count, __n_elt is current element count,
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // and __n_ins is number of elements to be inserted.  Do we need to
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // increase bucket count?  If so, return make_pair(true, n), where n
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // is the new bucket count.  If not, return make_pair(false, 0).
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     std::pair<bool, std::size_t>
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_need_rehash(std::size_t __n_bkt, std::size_t __n_elt,
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		   std::size_t __n_ins) const;
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef std::size_t _State;
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _State
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_state() const
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return _M_next_resize; }
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     void
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 48


 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_reset() noexcept
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { _M_next_resize = 0; }
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     void
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_reset(_State __state)
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { _M_next_resize = __state; }
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     static const std::size_t _S_growth_factor = 2;
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     float		_M_max_load_factor;
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     mutable std::size_t	_M_next_resize;
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Range hashing function assuming that second arg is a power of 2.
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   struct _Mask_range_hashing
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   {
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef std::size_t first_argument_type;
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef std::size_t second_argument_type;
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef std::size_t result_type;
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     result_type
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     operator()(first_argument_type __num,
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       second_argument_type __den) const noexcept
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return __num & (__den - 1); }
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Compute closest power of 2 not less than __n
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   inline std::size_t
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   __clp2(std::size_t __n) noexcept
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   {
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // Equivalent to return __n ? std::bit_ceil(__n) : 0;
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     if (__n < 2)
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return __n;
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     const unsigned __lz = sizeof(size_t) > sizeof(long)
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       ? __builtin_clzll(__n - 1ull)
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __builtin_clzl(__n - 1ul);
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // Doing two shifts avoids undefined behaviour when __lz == 0.
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     return (size_t(1) << (numeric_limits<size_t>::digits - __lz - 1)) << 1;
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   }
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Rehash policy providing power of 2 bucket numbers. Avoids modulo
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// operations.
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   struct _Power2_rehash_policy
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   {
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using __has_load_factor = true_type;
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Power2_rehash_policy(float __z = 1.0) noexcept
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : _M_max_load_factor(__z), _M_next_resize(0) { }
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     float
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     max_load_factor() const noexcept
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return _M_max_load_factor; }
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // Return a bucket size no smaller than n (as long as n is not above the
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // highest power of 2).
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     std::size_t
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_next_bkt(std::size_t __n) noexcept
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 49


 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       if (__n == 0)
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	// Special case on container 1st initialization with 0 bucket count
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	// hint. We keep _M_next_resize to 0 to make sure that next time we
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	// want to add an element allocation will take place.
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return 1;
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const auto __max_width = std::min<size_t>(sizeof(size_t), 8);
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const auto __max_bkt = size_t(1) << (__max_width * __CHAR_BIT__ - 1);
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t __res = __clp2(__n);
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       if (__res == 0)
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__res = __max_bkt;
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       else if (__res == 1)
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	// If __res is 1 we force it to 2 to make sure there will be an
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	// allocation so that nothing need to be stored in the initial
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	// single bucket
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__res = 2;
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       if (__res == __max_bkt)
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	// Set next resize to the max value so that we never try to rehash again
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	// as we already reach the biggest possible bucket number.
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	// Note that it might result in max_load_factor not being respected.
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_M_next_resize = numeric_limits<size_t>::max();
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       else
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_M_next_resize
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  = __builtin_floorl(__res * (long double)_M_max_load_factor);
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return __res;
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // Return a bucket count appropriate for n elements
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     std::size_t
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_bkt_for_elements(std::size_t __n) const noexcept
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return __builtin_ceill(__n / (long double)_M_max_load_factor); }
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // __n_bkt is current bucket count, __n_elt is current element count,
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // and __n_ins is number of elements to be inserted.  Do we need to
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // increase bucket count?  If so, return make_pair(true, n), where n
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // is the new bucket count.  If not, return make_pair(false, 0).
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     std::pair<bool, std::size_t>
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_need_rehash(std::size_t __n_bkt, std::size_t __n_elt,
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		   std::size_t __n_ins) noexcept
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       if (__n_elt + __n_ins > _M_next_resize)
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  // If _M_next_resize is 0 it means that we have nothing allocated so
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  // far and that we start inserting elements. In this case we start
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  // with an initial bucket size of 11.
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  long double __min_bkts
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    = std::max<std::size_t>(__n_elt + __n_ins, _M_next_resize ? 0 : 11)
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      / (long double)_M_max_load_factor;
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  if (__min_bkts >= __n_bkt)
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    return { true,
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      _M_next_bkt(std::max<std::size_t>(__builtin_floorl(__min_bkts) + 1,
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						__n_bkt * _S_growth_factor)) };
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 50


 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  _M_next_resize
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    = __builtin_floorl(__n_bkt * (long double)_M_max_load_factor);
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  return { false, 0 };
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	}
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       else
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return { false, 0 };
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef std::size_t _State;
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _State
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_state() const noexcept
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return _M_next_resize; }
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     void
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_reset() noexcept
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { _M_next_resize = 0; }
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     void
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_reset(_State __state) noexcept
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { _M_next_resize = __state; }
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     static const std::size_t _S_growth_factor = 2;
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     float	_M_max_load_factor;
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     std::size_t	_M_next_resize;
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // Base classes for std::_Hashtable.  We define these base classes
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // because in some cases we want to do different things depending on
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // the value of a policy class.  In some cases the policy class
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // affects which member functions and nested typedefs are defined;
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // we handle that by specializing base class templates.  Several of
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // the base class templates need to access other members of class
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // template _Hashtable, so we use a variant of the "Curiously
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // Recurring Template Pattern" (CRTP) technique.
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Primary class template _Map_base.
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  If the hashtable has a value type of the form pair<T1, T2> and a
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  key extraction policy (_ExtractKey) that returns the first part
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  of the pair, the hashtable gets a mapped_type typedef.  If it
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  satisfies those criteria and also has unique keys, then it also
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  gets an operator[].
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits,
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   bool _Unique_keys = _Traits::__unique_keys::value>
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Map_base { };
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Partial specialization, __unique_keys set to false.
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Pair, typename _Alloc, typename _Equal,
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 51


 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Map_base<_Key, _Pair, _Alloc, _Select1st, _Equal,
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		     _H1, _H2, _Hash, _RehashPolicy, _Traits, false>
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using mapped_type = typename std::tuple_element<1, _Pair>::type;
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Partial specialization, __unique_keys set to true.
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Pair, typename _Alloc, typename _Equal,
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Map_base<_Key, _Pair, _Alloc, _Select1st, _Equal,
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		     _H1, _H2, _Hash, _RehashPolicy, _Traits, true>
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hashtable_base = __detail::_Hashtable_base<_Key, _Pair,
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 							 _Select1st,
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 							_Equal, _H1, _H2, _Hash,
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 							  _Traits>;
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hashtable = _Hashtable<_Key, _Pair, _Alloc,
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				     _Select1st, _Equal,
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				     _H1, _H2, _Hash, _RehashPolicy, _Traits>;
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hash_code = typename __hashtable_base::__hash_code;
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_type = typename __hashtable_base::__node_type;
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using key_type = typename __hashtable_base::key_type;
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using iterator = typename __hashtable_base::iterator;
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using mapped_type = typename std::tuple_element<1, _Pair>::type;
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       mapped_type&
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator[](const key_type& __k);
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       mapped_type&
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator[](key_type&& __k);
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // DR 761. unordered_map needs an at() member function.
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       mapped_type&
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       at(const key_type& __k);
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const mapped_type&
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       at(const key_type& __k) const;
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Pair, typename _Alloc, typename _Equal,
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     auto
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Map_base<_Key, _Pair, _Alloc, _Select1st, _Equal,
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     operator[](const key_type& __k)
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     -> mapped_type&
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hashtable* __h = static_cast<__hashtable*>(this);
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hash_code __code = __h->_M_hash_code(__k);
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 52


 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t __bkt = __h->_M_bucket_index(__k, __code);
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       if (__node_type* __node = __h->_M_find_node(__bkt, __k, __code))
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return __node->_M_v().second;
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typename __hashtable::_Scoped_node __node {
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__h,
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::piecewise_construct,
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::tuple<const key_type&>(__k),
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::tuple<>()
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       };
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       auto __pos
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	= __h->_M_insert_unique_node(__k, __bkt, __code, __node._M_node);
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __node._M_node = nullptr;
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return __pos->second;
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Pair, typename _Alloc, typename _Equal,
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     auto
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Map_base<_Key, _Pair, _Alloc, _Select1st, _Equal,
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     operator[](key_type&& __k)
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     -> mapped_type&
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hashtable* __h = static_cast<__hashtable*>(this);
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hash_code __code = __h->_M_hash_code(__k);
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t __bkt = __h->_M_bucket_index(__k, __code);
 736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       if (__node_type* __node = __h->_M_find_node(__bkt, __k, __code))
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return __node->_M_v().second;
 738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typename __hashtable::_Scoped_node __node {
 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__h,
 741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::piecewise_construct,
 742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::forward_as_tuple(std::move(__k)),
 743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::tuple<>()
 744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       };
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       auto __pos
 746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	= __h->_M_insert_unique_node(__k, __bkt, __code, __node._M_node);
 747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __node._M_node = nullptr;
 748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return __pos->second;
 749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
 750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Pair, typename _Alloc, typename _Equal,
 752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
 754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     auto
 755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Map_base<_Key, _Pair, _Alloc, _Select1st, _Equal,
 756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::
 757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     at(const key_type& __k)
 758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     -> mapped_type&
 759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hashtable* __h = static_cast<__hashtable*>(this);
 761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hash_code __code = __h->_M_hash_code(__k);
 762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t __bkt = __h->_M_bucket_index(__k, __code);
 763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __node_type* __p = __h->_M_find_node(__bkt, __k, __code);
 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 53


 765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       if (!__p)
 766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__throw_out_of_range(__N("_Map_base::at"));
 767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return __p->_M_v().second;
 768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
 769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Pair, typename _Alloc, typename _Equal,
 771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
 773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     auto
 774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Map_base<_Key, _Pair, _Alloc, _Select1st, _Equal,
 775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::
 776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     at(const key_type& __k) const
 777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     -> const mapped_type&
 778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const __hashtable* __h = static_cast<const __hashtable*>(this);
 780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hash_code __code = __h->_M_hash_code(__k);
 781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t __bkt = __h->_M_bucket_index(__k, __code);
 782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __node_type* __p = __h->_M_find_node(__bkt, __k, __code);
 783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       if (!__p)
 785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__throw_out_of_range(__N("_Map_base::at"));
 786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return __p->_M_v().second;
 787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
 788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
 790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Primary class template _Insert_base.
 791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
 792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Defines @c insert member functions appropriate to all _Hashtables.
 793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
 794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
 795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
 798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Insert_base
 799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     protected:
 801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hashtable = _Hashtable<_Key, _Value, _Alloc, _ExtractKey,
 802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				     _Equal, _H1, _H2, _Hash,
 803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				     _RehashPolicy, _Traits>;
 804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hashtable_base = _Hashtable_base<_Key, _Value, _ExtractKey,
 806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					       _Equal, _H1, _H2, _Hash,
 807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					       _Traits>;
 808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using value_type = typename __hashtable_base::value_type;
 810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using iterator = typename __hashtable_base::iterator;
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using const_iterator =  typename __hashtable_base::const_iterator;
 812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using size_type = typename __hashtable_base::size_type;
 813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __unique_keys = typename __hashtable_base::__unique_keys;
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __ireturn_type = typename __hashtable_base::__ireturn_type;
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_type = _Hash_node<_Value, _Traits::__hash_cached::value>;
 817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_alloc_type = __alloc_rebind<_Alloc, __node_type>;
 818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_gen_type = _AllocNode<__node_alloc_type>;
 819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hashtable&
 821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_conjure_hashtable()
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 54


 822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return *(static_cast<__hashtable*>(this)); }
 823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _InputIterator, typename _NodeGetter>
 825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	void
 826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_M_insert_range(_InputIterator __first, _InputIterator __last,
 827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			const _NodeGetter&, true_type);
 828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _InputIterator, typename _NodeGetter>
 830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	void
 831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_M_insert_range(_InputIterator __first, _InputIterator __last,
 832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			const _NodeGetter&, false_type);
 833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
 835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __ireturn_type
 836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       insert(const value_type& __v)
 837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__hashtable& __h = _M_conjure_hashtable();
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__node_gen_type __node_gen(__h);
 840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return __h._M_insert(__v, __node_gen, __unique_keys());
 841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       iterator
 844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       insert(const_iterator __hint, const value_type& __v)
 845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__hashtable& __h = _M_conjure_hashtable();
 847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__node_gen_type __node_gen(__h);	
 848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return __h._M_insert(__hint, __v, __node_gen, __unique_keys());
 849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
 850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
 852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       insert(initializer_list<value_type> __l)
 853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { this->insert(__l.begin(), __l.end()); }
 854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _InputIterator>
 856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	void
 857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	insert(_InputIterator __first, _InputIterator __last)
 858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{
 859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  __hashtable& __h = _M_conjure_hashtable();
 860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  __node_gen_type __node_gen(__h);
 861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  return _M_insert_range(__first, __last, __node_gen, __unique_keys());
 862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	}
 863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
 866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
 867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
 869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     template<typename _InputIterator, typename _NodeGetter>
 870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
 871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash,
 872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		    _RehashPolicy, _Traits>::
 873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_insert_range(_InputIterator __first, _InputIterator __last,
 874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      const _NodeGetter& __node_gen, true_type)
 875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
 876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	size_type __n_elt = __detail::__distance_fw(__first, __last);
 877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	if (__n_elt == 0)
 878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  return;
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 55


 879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__hashtable& __h = _M_conjure_hashtable();
 881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	for (; __first != __last; ++__first)
 882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  {
 883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    if (__h._M_insert(*__first, __node_gen, __unique_keys(),
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			      __n_elt).second)
 885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      __n_elt = 1;
 886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    else if (__n_elt != 1)
 887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      --__n_elt;
 888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  }
 889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
 890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
 892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
 893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
 895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     template<typename _InputIterator, typename _NodeGetter>
 896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
 897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash,
 898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		    _RehashPolicy, _Traits>::
 899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_insert_range(_InputIterator __first, _InputIterator __last,
 900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      const _NodeGetter& __node_gen, false_type)
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	using __rehash_type = typename __hashtable::__rehash_type;
 903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	using __rehash_state = typename __hashtable::__rehash_state;
 904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	using pair_type = std::pair<bool, std::size_t>;
 905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	size_type __n_elt = __detail::__distance_fw(__first, __last);
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	if (__n_elt == 0)
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  return;
 909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__hashtable& __h = _M_conjure_hashtable();
 911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__rehash_type& __rehash = __h._M_rehash_policy;
 912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	const __rehash_state& __saved_state = __rehash._M_state();
 913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	pair_type __do_rehash = __rehash._M_need_rehash(__h._M_bucket_count,
 914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 							__h._M_element_count,
 915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 							__n_elt);
 916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	if (__do_rehash.first)
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  __h._M_rehash(__do_rehash.second, __saved_state);
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	for (; __first != __last; ++__first)
 921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  __h._M_insert(*__first, __node_gen, __unique_keys());
 922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
 923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
 925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Primary class template _Insert.
 926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
 927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Defines @c insert member functions that depend on _Hashtable policies,
 928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  via partial specializations.
 929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
 930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
 931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
 932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits,
 934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   bool _Constant_iterators = _Traits::__constant_iterators::value>
 935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Insert;
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 56


 936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Specialization.
 938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
 939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
 940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
 942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash,
 943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		   _RehashPolicy, _Traits, true>
 944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : public _Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal,
 945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			   _H1, _H2, _Hash, _RehashPolicy, _Traits>
 946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __base_type = _Insert_base<_Key, _Value, _Alloc, _ExtractKey,
 948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					_Equal, _H1, _H2, _Hash,
 949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					_RehashPolicy, _Traits>;
 950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hashtable_base = _Hashtable_base<_Key, _Value, _ExtractKey,
 952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					       _Equal, _H1, _H2, _Hash,
 953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					       _Traits>;
 954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using value_type = typename __base_type::value_type;
 956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using iterator = typename __base_type::iterator;
 957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using const_iterator =  typename __base_type::const_iterator;
 958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __unique_keys = typename __base_type::__unique_keys;
 960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __ireturn_type = typename __hashtable_base::__ireturn_type;
 961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hashtable = typename __base_type::__hashtable;
 962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_gen_type = typename __base_type::__node_gen_type;
 963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __base_type::insert;
 965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __ireturn_type
 967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       insert(value_type&& __v)
 968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
 969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__hashtable& __h = this->_M_conjure_hashtable();
 970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__node_gen_type __node_gen(__h);
 971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return __h._M_insert(std::move(__v), __node_gen, __unique_keys());
 972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
 973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       iterator
 975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       insert(const_iterator __hint, value_type&& __v)
 976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
 977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__hashtable& __h = this->_M_conjure_hashtable();
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__node_gen_type __node_gen(__h);
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return __h._M_insert(__hint, std::move(__v), __node_gen,
 980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			     __unique_keys());
 981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
 982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Specialization.
 985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
 986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
 987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
 989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash,
 990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		   _RehashPolicy, _Traits, false>
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : public _Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal,
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			   _H1, _H2, _Hash, _RehashPolicy, _Traits>
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 57


 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __base_type = _Insert_base<_Key, _Value, _Alloc, _ExtractKey,
 995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				       _Equal, _H1, _H2, _Hash,
 996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				       _RehashPolicy, _Traits>;
 997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using value_type = typename __base_type::value_type;
 998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using iterator = typename __base_type::iterator;
 999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using const_iterator =  typename __base_type::const_iterator;
1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __unique_keys = typename __base_type::__unique_keys;
1002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hashtable = typename __base_type::__hashtable;
1003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __ireturn_type = typename __base_type::__ireturn_type;
1004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __base_type::insert;
1006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _Pair>
1008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	using __is_cons = std::is_constructible<value_type, _Pair&&>;
1009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _Pair>
1011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	using _IFcons = std::enable_if<__is_cons<_Pair>::value>;
1012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _Pair>
1014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	using _IFconsp = typename _IFcons<_Pair>::type;
1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _Pair, typename = _IFconsp<_Pair>>
1017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__ireturn_type
1018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	insert(_Pair&& __v)
1019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{
1020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  __hashtable& __h = this->_M_conjure_hashtable();
1021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  return __h._M_emplace(__unique_keys(), std::forward<_Pair>(__v));
1022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	}
1023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _Pair, typename = _IFconsp<_Pair>>
1025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	iterator
1026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	insert(const_iterator __hint, _Pair&& __v)
1027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{
1028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  __hashtable& __h = this->_M_conjure_hashtable();
1029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  return __h._M_emplace(__hint, __unique_keys(),
1030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				std::forward<_Pair>(__v));
1031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	}
1032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    };
1033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Policy>
1035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using __has_load_factor = typename _Policy::__has_load_factor;
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
1038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Primary class template  _Rehash_base.
1039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
1040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Give hashtable the max_load_factor functions and reserve iff the
1041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  rehash policy supports it.
1042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   */
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
1044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
1045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits,
1047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename =
1048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	     __detected_or_t<false_type, __has_load_factor, _RehashPolicy>>
1049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Rehash_base;
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 58


1050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Specialization when rehash policy doesn't provide load factor management.
1052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
1053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
1054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
1055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
1056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Rehash_base<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      _H1, _H2, _Hash, _RehashPolicy, _Traits,
1058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      false_type>
1059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Specialization when rehash policy provide load factor management.
1063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
1064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
1065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
1066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
1067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Rehash_base<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			_H1, _H2, _Hash, _RehashPolicy, _Traits,
1069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			true_type>
1070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hashtable = _Hashtable<_Key, _Value, _Alloc, _ExtractKey,
1072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				     _Equal, _H1, _H2, _Hash,
1073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				     _RehashPolicy, _Traits>;
1074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       float
1076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       max_load_factor() const noexcept
1077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	const __hashtable* __this = static_cast<const __hashtable*>(this);
1079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return __this->__rehash_policy().max_load_factor();
1080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       max_load_factor(float __z)
1084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__hashtable* __this = static_cast<__hashtable*>(this);
1086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__this->__rehash_policy(_RehashPolicy(__z));
1087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       reserve(std::size_t __n)
1091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__hashtable* __this = static_cast<__hashtable*>(this);
1093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__this->rehash(__this->__rehash_policy()._M_bkt_for_elements(__n));
1094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
1098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Primary class template _Hashtable_ebo_helper.
1099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
1100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Helper class using EBO when it is not forbidden (the type is not
1101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  final) and when it is worth it (the type is empty.)
1102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
1103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<int _Nm, typename _Tp,
1104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   bool __use_ebo = !__is_final(_Tp) && __is_empty(_Tp)>
1105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hashtable_ebo_helper;
1106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 59


1107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Specialization using EBO.
1108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<int _Nm, typename _Tp>
1109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hashtable_ebo_helper<_Nm, _Tp, true>
1110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : private _Tp
1111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hashtable_ebo_helper() = default;
1113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _OtherTp>
1115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_Hashtable_ebo_helper(_OtherTp&& __tp)
1116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	: _Tp(std::forward<_OtherTp>(__tp))
1117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{ }
1118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _Tp& _M_cget() const { return static_cast<const _Tp&>(*this); }
1120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Tp& _M_get() { return static_cast<_Tp&>(*this); }
1121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Specialization not using EBO.
1124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<int _Nm, typename _Tp>
1125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hashtable_ebo_helper<_Nm, _Tp, false>
1126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hashtable_ebo_helper() = default;
1128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _OtherTp>
1130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_Hashtable_ebo_helper(_OtherTp&& __tp)
1131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	: _M_tp(std::forward<_OtherTp>(__tp))
1132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{ }
1133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _Tp& _M_cget() const { return _M_tp; }
1135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Tp& _M_get() { return _M_tp; }
1136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
1138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Tp _M_tp;
1139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
1142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Primary class template _Local_iterator_base.
1143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
1144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Base class for local iterators, used to iterate within a bucket
1145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  but not between buckets.
1146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
1147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
1148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   bool __cache_hash_code>
1150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Local_iterator_base;
1151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
1153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Primary class template _Hash_code_base.
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
1155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Encapsulates two policy issues that aren't quite orthogonal.
1156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *   (1) the difference between using a ranged hash function and using
1157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *       the combination of a hash function and a range-hashing function.
1158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *       In the former case we don't have such things as hash codes, so
1159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *       we have a dummy type as placeholder.
1160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *   (2) Whether or not we cache hash codes.  Caching hash codes is
1161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *       meaningless if we have a ranged hash function.
1162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
1163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  We also put the key extraction objects here, for convenience.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 60


1164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Each specialization derives from one or more of the template
1165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  parameters to benefit from Ebo. This is important as this type
1166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  is inherited in some cases by the _Local_iterator_base type used
1167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  to implement local_iterator and const_local_iterator. As with
1168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  any iterator type we prefer to make it as small as possible.
1169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
1170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Primary template is unused except as a hook for specializations.
1171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
1172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
1173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
1174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   bool __cache_hash_code>
1175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hash_code_base;
1176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Specialization: ranged hash function, no caching hash codes.  H1
1178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// and H2 are provided but ignored.  We define a dummy hash code type.
1179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
1180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash>
1181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, false>
1182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : private _Hashtable_ebo_helper<0, _ExtractKey>,
1183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       private _Hashtable_ebo_helper<1, _Hash>
1184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
1186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __ebo_extract_key = _Hashtable_ebo_helper<0, _ExtractKey>;
1187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __ebo_hash = _Hashtable_ebo_helper<1, _Hash>;
1188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     protected:
1190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef void* 					__hash_code;
1191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef _Hash_node<_Value, false>			__node_type;
1192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // We need the default constructor for the local iterators and _Hashtable
1194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // default constructor.
1195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hash_code_base() = default;
1196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hash_code_base(const _ExtractKey& __ex, const _H1&, const _H2&,
1198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      const _Hash& __h)
1199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __ebo_extract_key(__ex), __ebo_hash(__h) { }
1200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hash_code
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_hash_code(const _Key& __key) const
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return 0; }
1204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t
1206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_bucket_index(const _Key& __k, __hash_code,
1207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      std::size_t __bkt_count) const
1208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return _M_ranged_hash()(__k, __bkt_count); }
1209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t
1211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_bucket_index(const __node_type* __p, std::size_t __bkt_count) const
1212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	noexcept( noexcept(declval<const _Hash&>()(declval<const _Key&>(),
1213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						   (std::size_t)0)) )
1214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return _M_ranged_hash()(_M_extract()(__p->_M_v()), __bkt_count); }
1215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_store_code(__node_type*, __hash_code) const
1218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { }
1219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 61


1221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_copy_code(__node_type*, const __node_type*) const
1222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { }
1223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_swap(_Hash_code_base& __x)
1226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::swap(__ebo_extract_key::_M_get(),
1228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		  __x.__ebo_extract_key::_M_get());
1229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::swap(__ebo_hash::_M_get(), __x.__ebo_hash::_M_get());
1230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _ExtractKey&
1233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_extract() const { return __ebo_extract_key::_M_cget(); }
1234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _Hash&
1236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_ranged_hash() const { return __ebo_hash::_M_cget(); }
1237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // No specialization for ranged hash function while caching hash codes.
1240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // That combination is meaningless, and trying to do it is an error.
1241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Specialization: ranged hash function, cache hash codes.  This
1243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// combination is meaningless, so we provide only a declaration
1244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// and no definition.
1245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
1246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash>
1247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, true>;
1248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Specialization: hash function and range-hashing function, no
1250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// caching of hash codes.
1251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Provides typedef and accessor required by C++ 11.
1252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
1253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2>
1254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2,
1255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			   _Default_ranged_hash, false>
1256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : private _Hashtable_ebo_helper<0, _ExtractKey>,
1257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       private _Hashtable_ebo_helper<1, _H1>,
1258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       private _Hashtable_ebo_helper<2, _H2>
1259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
1261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __ebo_extract_key = _Hashtable_ebo_helper<0, _ExtractKey>;
1262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __ebo_h1 = _Hashtable_ebo_helper<1, _H1>;
1263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __ebo_h2 = _Hashtable_ebo_helper<2, _H2>;
1264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // Gives the local iterator implementation access to _M_bucket_index().
1266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       friend struct _Local_iterator_base<_Key, _Value, _ExtractKey, _H1, _H2,
1267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					 _Default_ranged_hash, false>;
1268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
1270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef _H1 					hasher;
1271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       hasher
1273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       hash_function() const
1274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return _M_h1(); }
1275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     protected:
1277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef std::size_t 				__hash_code;
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 62


1278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef _Hash_node<_Value, false>			__node_type;
1279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // We need the default constructor for the local iterators and _Hashtable
1281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // default constructor.
1282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hash_code_base() = default;
1283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hash_code_base(const _ExtractKey& __ex,
1285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      const _H1& __h1, const _H2& __h2,
1286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      const _Default_ranged_hash&)
1287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __ebo_extract_key(__ex), __ebo_h1(__h1), __ebo_h2(__h2) { }
1288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hash_code
1290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_hash_code(const _Key& __k) const
1291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	static_assert(__is_invocable<const _H1&, const _Key&>{},
1293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    "hash function must be invocable with an argument of key type");
1294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return _M_h1()(__k);
1295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t
1298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_bucket_index(const _Key&, __hash_code __c,
1299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      std::size_t __bkt_count) const
1300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return _M_h2()(__c, __bkt_count); }
1301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t
1303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_bucket_index(const __node_type* __p, std::size_t __bkt_count) const
1304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	noexcept( noexcept(declval<const _H1&>()(declval<const _Key&>()))
1305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		  && noexcept(declval<const _H2&>()((__hash_code)0,
1306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						    (std::size_t)0)) )
1307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return _M_h2()(_M_h1()(_M_extract()(__p->_M_v())), __bkt_count); }
1308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_store_code(__node_type*, __hash_code) const
1311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { }
1312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_copy_code(__node_type*, const __node_type*) const
1315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { }
1316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_swap(_Hash_code_base& __x)
1319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::swap(__ebo_extract_key::_M_get(),
1321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		  __x.__ebo_extract_key::_M_get());
1322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::swap(__ebo_h1::_M_get(), __x.__ebo_h1::_M_get());
1323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::swap(__ebo_h2::_M_get(), __x.__ebo_h2::_M_get());
1324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _ExtractKey&
1327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_extract() const { return __ebo_extract_key::_M_cget(); }
1328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _H1&
1330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_h1() const { return __ebo_h1::_M_cget(); }
1331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _H2&
1333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_h2() const { return __ebo_h2::_M_cget(); }
1334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 63


1335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Specialization: hash function and range-hashing function,
1337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// caching hash codes.  H is provided but ignored.  Provides
1338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// typedef and accessor required by C++ 11.
1339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
1340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2>
1341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2,
1342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			   _Default_ranged_hash, true>
1343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : private _Hashtable_ebo_helper<0, _ExtractKey>,
1344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       private _Hashtable_ebo_helper<1, _H1>,
1345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       private _Hashtable_ebo_helper<2, _H2>
1346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
1348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // Gives the local iterator implementation access to _M_h2().
1349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       friend struct _Local_iterator_base<_Key, _Value, _ExtractKey, _H1, _H2,
1350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					 _Default_ranged_hash, true>;
1351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __ebo_extract_key = _Hashtable_ebo_helper<0, _ExtractKey>;
1353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __ebo_h1 = _Hashtable_ebo_helper<1, _H1>;
1354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __ebo_h2 = _Hashtable_ebo_helper<2, _H2>;
1355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
1357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef _H1 					hasher;
1358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       hasher
1360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       hash_function() const
1361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return _M_h1(); }
1362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     protected:
1364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef std::size_t 				__hash_code;
1365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef _Hash_node<_Value, true>			__node_type;
1366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // We need the default constructor for _Hashtable default constructor.
1368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hash_code_base() = default;
1369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hash_code_base(const _ExtractKey& __ex,
1370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      const _H1& __h1, const _H2& __h2,
1371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      const _Default_ranged_hash&)
1372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __ebo_extract_key(__ex), __ebo_h1(__h1), __ebo_h2(__h2) { }
1373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hash_code
1375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_hash_code(const _Key& __k) const
1376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	static_assert(__is_invocable<const _H1&, const _Key&>{},
1378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    "hash function must be invocable with an argument of key type");
1379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return _M_h1()(__k);
1380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t
1383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_bucket_index(const _Key&, __hash_code __c,
1384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      std::size_t __bkt_count) const
1385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return _M_h2()(__c, __bkt_count); }
1386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t
1388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_bucket_index(const __node_type* __p, std::size_t __bkt_count) const
1389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	noexcept( noexcept(declval<const _H2&>()((__hash_code)0,
1390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						 (std::size_t)0)) )
1391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return _M_h2()(__p->_M_hash_code, __bkt_count); }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 64


1392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_store_code(__node_type* __n, __hash_code __c) const
1395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { __n->_M_hash_code = __c; }
1396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_copy_code(__node_type* __to, const __node_type* __from) const
1399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { __to->_M_hash_code = __from->_M_hash_code; }
1400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_swap(_Hash_code_base& __x)
1403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::swap(__ebo_extract_key::_M_get(),
1405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		  __x.__ebo_extract_key::_M_get());
1406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::swap(__ebo_h1::_M_get(), __x.__ebo_h1::_M_get());
1407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::swap(__ebo_h2::_M_get(), __x.__ebo_h2::_M_get());
1408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _ExtractKey&
1411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_extract() const { return __ebo_extract_key::_M_cget(); }
1412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _H1&
1414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_h1() const { return __ebo_h1::_M_cget(); }
1415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _H2&
1417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_h2() const { return __ebo_h2::_M_cget(); }
1418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Partial specialization used when nodes contain a cached hash code.
1421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
1422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash>
1423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Local_iterator_base<_Key, _Value, _ExtractKey,
1424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				_H1, _H2, _Hash, true>
1425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : private _Hashtable_ebo_helper<0, _H2>
1426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     protected:
1428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __base_type = _Hashtable_ebo_helper<0, _H2>;
1429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hash_code_base = _Hash_code_base<_Key, _Value, _ExtractKey,
1430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					       _H1, _H2, _Hash, true>;
1431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_iterator_base() = default;
1433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_iterator_base(const __hash_code_base& __base,
1434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			   _Hash_node<_Value, true>* __p,
1435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			   std::size_t __bkt, std::size_t __bkt_count)
1436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __base_type(__base._M_h2()),
1437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_M_cur(__p), _M_bucket(__bkt), _M_bucket_count(__bkt_count) { }
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_incr()
1441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_M_cur = _M_cur->_M_next();
1443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	if (_M_cur)
1444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  {
1445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    std::size_t __bkt
1446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      = __base_type::_M_get()(_M_cur->_M_hash_code,
1447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					   _M_bucket_count);
1448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    if (__bkt != _M_bucket)
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 65


1449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      _M_cur = nullptr;
1450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  }
1451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hash_node<_Value, true>*  _M_cur;
1454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t _M_bucket;
1455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t _M_bucket_count;
1456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
1458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const void*
1459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_curr() const { return _M_cur; }  // for equality ops
1460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t
1462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_get_bucket() const { return _M_bucket; }  // for debug mode
1463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // Uninitialized storage for a _Hash_code_base.
1466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // This type is DefaultConstructible and Assignable even if the
1467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // _Hash_code_base type isn't, so that _Local_iterator_base<..., false>
1468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // can be DefaultConstructible and Assignable.
1469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Tp, bool _IsEmpty = std::is_empty<_Tp>::value>
1470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hash_code_storage
1471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __gnu_cxx::__aligned_buffer<_Tp> _M_storage;
1473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Tp*
1475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_h() { return _M_storage._M_ptr(); }
1476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _Tp*
1478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_h() const { return _M_storage._M_ptr(); }
1479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // Empty partial specialization for empty _Hash_code_base types.
1482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Tp>
1483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hash_code_storage<_Tp, true>
1484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       static_assert( std::is_empty<_Tp>::value, "Type must be empty" );
1486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // As _Tp is an empty type there will be no bytes written/read through
1488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // the cast pointer, so no strict-aliasing violation.
1489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Tp*
1490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_h() { return reinterpret_cast<_Tp*>(this); }
1491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _Tp*
1493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_h() const { return reinterpret_cast<const _Tp*>(this); }
1494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
1497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash>
1498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using __hash_code_for_local_iter
1499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       = _Hash_code_storage<_Hash_code_base<_Key, _Value, _ExtractKey,
1500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					   _H1, _H2, _Hash, false>>;
1501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // Partial specialization used when hash codes are not cached
1503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
1504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash>
1505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Local_iterator_base<_Key, _Value, _ExtractKey,
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 66


1506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				_H1, _H2, _Hash, false>
1507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : __hash_code_for_local_iter<_Key, _Value, _ExtractKey, _H1, _H2, _Hash>
1508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     protected:
1510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hash_code_base = _Hash_code_base<_Key, _Value, _ExtractKey,
1511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					       _H1, _H2, _Hash, false>;
1512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_iterator_base() : _M_bucket_count(-1) { }
1514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_iterator_base(const __hash_code_base& __base,
1516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			   _Hash_node<_Value, false>* __p,
1517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			   std::size_t __bkt, std::size_t __bkt_count)
1518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_cur(__p), _M_bucket(__bkt), _M_bucket_count(__bkt_count)
1519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { _M_init(__base); }
1520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       ~_Local_iterator_base()
1522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	if (_M_bucket_count != -1)
1524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  _M_destroy();
1525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_iterator_base(const _Local_iterator_base& __iter)
1528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_cur(__iter._M_cur), _M_bucket(__iter._M_bucket),
1529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****         _M_bucket_count(__iter._M_bucket_count)
1530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	if (_M_bucket_count != -1)
1532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  _M_init(*__iter._M_h());
1533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_iterator_base&
1536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator=(const _Local_iterator_base& __iter)
1537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	if (_M_bucket_count != -1)
1539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  _M_destroy();
1540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_M_cur = __iter._M_cur;
1541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_M_bucket = __iter._M_bucket;
1542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_M_bucket_count = __iter._M_bucket_count;
1543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	if (_M_bucket_count != -1)
1544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  _M_init(*__iter._M_h());
1545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return *this;
1546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_incr()
1550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_M_cur = _M_cur->_M_next();
1552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	if (_M_cur)
1553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  {
1554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    std::size_t __bkt = this->_M_h()->_M_bucket_index(_M_cur,
1555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 							      _M_bucket_count);
1556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    if (__bkt != _M_bucket)
1557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      _M_cur = nullptr;
1558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  }
1559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hash_node<_Value, false>*  _M_cur;
1562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t _M_bucket;
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 67


1563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t _M_bucket_count;
1564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_init(const __hash_code_base& __base)
1567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { ::new(this->_M_h()) __hash_code_base(__base); }
1568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_destroy() { this->_M_h()->~__hash_code_base(); }
1571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
1573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const void*
1574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_curr() const { return _M_cur; }  // for equality ops and debug mode
1575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t
1577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_get_bucket() const { return _M_bucket; }  // for debug mode
1578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
1581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash, bool __cache>
1582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     inline bool
1583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     operator==(const _Local_iterator_base<_Key, _Value, _ExtractKey,
1584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					  _H1, _H2, _Hash, __cache>& __x,
1585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       const _Local_iterator_base<_Key, _Value, _ExtractKey,
1586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					  _H1, _H2, _Hash, __cache>& __y)
1587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return __x._M_curr() == __y._M_curr(); }
1588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
1590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash, bool __cache>
1591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     inline bool
1592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     operator!=(const _Local_iterator_base<_Key, _Value, _ExtractKey,
1593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					  _H1, _H2, _Hash, __cache>& __x,
1594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       const _Local_iterator_base<_Key, _Value, _ExtractKey,
1595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					  _H1, _H2, _Hash, __cache>& __y)
1596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return __x._M_curr() != __y._M_curr(); }
1597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// local iterators
1599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
1600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
1601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   bool __constant_iterators, bool __cache>
1602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Local_iterator
1603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : public _Local_iterator_base<_Key, _Value, _ExtractKey,
1604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				  _H1, _H2, _Hash, __cache>
1605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
1607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __base_type = _Local_iterator_base<_Key, _Value, _ExtractKey,
1608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					       _H1, _H2, _Hash, __cache>;
1609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hash_code_base = typename __base_type::__hash_code_base;
1610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
1611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef _Value					value_type;
1612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef typename std::conditional<__constant_iterators,
1613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					const _Value*, _Value*>::type
1614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						       pointer;
1615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef typename std::conditional<__constant_iterators,
1616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					const _Value&, _Value&>::type
1617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						       reference;
1618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef std::ptrdiff_t				difference_type;
1619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef std::forward_iterator_tag			iterator_category;
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 68


1620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_iterator() = default;
1622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_iterator(const __hash_code_base& __base,
1624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      _Hash_node<_Value, __cache>* __n,
1625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      std::size_t __bkt, std::size_t __bkt_count)
1626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __base_type(__base, __n, __bkt, __bkt_count)
1627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { }
1628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       reference
1630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator*() const
1631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return this->_M_cur->_M_v(); }
1632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       pointer
1634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator->() const
1635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return this->_M_cur->_M_valptr(); }
1636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_iterator&
1638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator++()
1639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	this->_M_incr();
1641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return *this;
1642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_iterator
1645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator++(int)
1646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_Local_iterator __tmp(*this);
1648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	this->_M_incr();
1649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return __tmp;
1650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// local const_iterators
1654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
1655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
1656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   bool __constant_iterators, bool __cache>
1657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Local_const_iterator
1658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : public _Local_iterator_base<_Key, _Value, _ExtractKey,
1659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				  _H1, _H2, _Hash, __cache>
1660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
1662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __base_type = _Local_iterator_base<_Key, _Value, _ExtractKey,
1663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					       _H1, _H2, _Hash, __cache>;
1664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hash_code_base = typename __base_type::__hash_code_base;
1665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
1667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef _Value					value_type;
1668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef const _Value*				pointer;
1669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef const _Value&				reference;
1670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef std::ptrdiff_t				difference_type;
1671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef std::forward_iterator_tag			iterator_category;
1672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_const_iterator() = default;
1674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_const_iterator(const __hash_code_base& __base,
1676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			    _Hash_node<_Value, __cache>* __n,
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 69


1677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			    std::size_t __bkt, std::size_t __bkt_count)
1678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __base_type(__base, __n, __bkt, __bkt_count)
1679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { }
1680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_const_iterator(const _Local_iterator<_Key, _Value, _ExtractKey,
1682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						  _H1, _H2, _Hash,
1683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						  __constant_iterators,
1684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						  __cache>& __x)
1685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __base_type(__x)
1686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { }
1687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       reference
1689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator*() const
1690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return this->_M_cur->_M_v(); }
1691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       pointer
1693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator->() const
1694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return this->_M_cur->_M_valptr(); }
1695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_const_iterator&
1697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator++()
1698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	this->_M_incr();
1700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return *this;
1701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_const_iterator
1704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator++(int)
1705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_Local_const_iterator __tmp(*this);
1707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	this->_M_incr();
1708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return __tmp;
1709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
1713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Primary class template _Hashtable_base.
1714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
1715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Helper class adding management of _Equal functor to
1716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  _Hash_code_base type.
1717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
1718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Base class templates are:
1719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *    - __detail::_Hash_code_base
1720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *    - __detail::_Hashtable_ebo_helper
1721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
1722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value,
1723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
1724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash, typename _Traits>
1725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   struct _Hashtable_base
1726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   : public _Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash,
1727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			   _Traits::__hash_cached::value>,
1728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private _Hashtable_ebo_helper<0, _Equal>
1729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   {
1730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   public:
1731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef _Key					key_type;
1732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef _Value					value_type;
1733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef _Equal					key_equal;
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 70


1734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef std::size_t					size_type;
1735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef std::ptrdiff_t				difference_type;
1736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using __traits_type = _Traits;
1738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using __hash_cached = typename __traits_type::__hash_cached;
1739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using __constant_iterators = typename __traits_type::__constant_iterators;
1740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using __unique_keys = typename __traits_type::__unique_keys;
1741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using __hash_code_base = _Hash_code_base<_Key, _Value, _ExtractKey,
1743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					     _H1, _H2, _Hash,
1744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					     __hash_cached::value>;
1745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using __hash_code = typename __hash_code_base::__hash_code;
1747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using __node_type = typename __hash_code_base::__node_type;
1748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using iterator = __detail::_Node_iterator<value_type,
1750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					      __constant_iterators::value,
1751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					      __hash_cached::value>;
1752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using const_iterator = __detail::_Node_const_iterator<value_type,
1754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						   __constant_iterators::value,
1755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						   __hash_cached::value>;
1756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using local_iterator = __detail::_Local_iterator<key_type, value_type,
1758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						  _ExtractKey, _H1, _H2, _Hash,
1759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						  __constant_iterators::value,
1760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						     __hash_cached::value>;
1761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using const_local_iterator = __detail::_Local_const_iterator<key_type,
1763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 								 value_type,
1764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					_ExtractKey, _H1, _H2, _Hash,
1765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					__constant_iterators::value,
1766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					__hash_cached::value>;
1767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using __ireturn_type = typename std::conditional<__unique_keys::value,
1769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						     std::pair<iterator, bool>,
1770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						     iterator>::type;
1771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   private:
1772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using _EqualEBO = _Hashtable_ebo_helper<0, _Equal>;
1773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     template<typename _NodeT>
1775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       struct _Equal_hash_code
1776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****        static bool
1778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****        _S_equals(__hash_code, const _NodeT&)
1779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****        { return true; }
1780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       };
1781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     template<typename _Ptr2>
1783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       struct _Equal_hash_code<_Hash_node<_Ptr2, true>>
1784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****        static bool
1786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****        _S_equals(__hash_code __c, const _Hash_node<_Ptr2, true>& __n)
1787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****        { return __c == __n._M_hash_code; }
1788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       };
1789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   protected:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 71


1791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Hashtable_base() = default;
1792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Hashtable_base(const _ExtractKey& __ex, const _H1& __h1, const _H2& __h2,
1793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		    const _Hash& __hash, const _Equal& __eq)
1794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : __hash_code_base(__ex, __h1, __h2, __hash), _EqualEBO(__eq)
1795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { }
1796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     bool
1798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_equals(const _Key& __k, __hash_code __c, __node_type* __n) const
1799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       static_assert(__is_invocable<const _Equal&, const _Key&, const _Key&>{},
1801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  "key equality predicate must be invocable with two arguments of "
1802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  "key type");
1803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return _Equal_hash_code<__node_type>::_S_equals(__c, *__n)
1804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	&& _M_eq()(__k, this->_M_extract()(__n->_M_v()));
1805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
1806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     void
1808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_swap(_Hashtable_base& __x)
1809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hash_code_base::_M_swap(__x);
1811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::swap(_EqualEBO::_M_get(), __x._EqualEBO::_M_get());
1812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
1813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     const _Equal&
1815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_eq() const { return _EqualEBO::_M_cget(); }
1816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
1817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
1819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Primary class template  _Equality.
1820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
1821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  This is for implementing equality comparison for unordered
1822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  containers, per N3068, by John Lakos and Pablo Halpern.
1823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Algorithmically, we follow closely the reference implementations
1824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  therein.
1825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
1826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
1827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
1828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
1829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits,
1830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   bool _Unique_keys = _Traits::__unique_keys::value>
1831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Equality;
1832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// unordered_map and unordered_set specializations.
1834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
1835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
1836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
1837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
1838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Equality<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		     _H1, _H2, _Hash, _RehashPolicy, _Traits, true>
1840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hashtable = _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				     _H1, _H2, _Hash, _RehashPolicy, _Traits>;
1843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       bool
1845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_equal(const __hashtable&) const;
1846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 72


1848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
1849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
1850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
1851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
1852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     bool
1853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Equality<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::
1855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_equal(const __hashtable& __other) const
1856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_base = typename __hashtable::__node_base;
1858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_type = typename __hashtable::__node_type;
1859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const __hashtable* __this = static_cast<const __hashtable*>(this);
1860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       if (__this->size() != __other.size())
1861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return false;
1862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       for (auto __itx = __this->begin(); __itx != __this->end(); ++__itx)
1864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{
1865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  std::size_t __ybkt = __other._M_bucket_index(__itx._M_cur);
1866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  __node_base* __prev_n = __other._M_buckets[__ybkt];
1867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  if (!__prev_n)
1868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    return false;
1869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  for (__node_type* __n = static_cast<__node_type*>(__prev_n->_M_nxt);;
1871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       __n = __n->_M_next())
1872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    {
1873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      if (__n->_M_v() == *__itx)
1874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		break;
1875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      if (!__n->_M_nxt
1877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		  || __other._M_bucket_index(__n->_M_next()) != __ybkt)
1878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		return false;
1879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    }
1880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	}
1881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return true;
1883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
1884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// unordered_multiset and unordered_multimap specializations.
1886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
1887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
1888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
1889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
1890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Equality<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		     _H1, _H2, _Hash, _RehashPolicy, _Traits, false>
1892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hashtable = _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				     _H1, _H2, _Hash, _RehashPolicy, _Traits>;
1895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       bool
1897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_equal(const __hashtable&) const;
1898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
1901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
1902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
1903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
1904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     bool
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 73


1905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Equality<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      _H1, _H2, _Hash, _RehashPolicy, _Traits, false>::
1907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_equal(const __hashtable& __other) const
1908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_base = typename __hashtable::__node_base;
1910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_type = typename __hashtable::__node_type;
1911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const __hashtable* __this = static_cast<const __hashtable*>(this);
1912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       if (__this->size() != __other.size())
1913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return false;
1914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       for (auto __itx = __this->begin(); __itx != __this->end();)
1916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{
1917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  std::size_t __x_count = 1;
1918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  auto __itx_end = __itx;
1919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  for (++__itx_end; __itx_end != __this->end()
1920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		 && __this->key_eq()(_ExtractKey()(*__itx),
1921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				     _ExtractKey()(*__itx_end));
1922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       ++__itx_end)
1923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    ++__x_count;
1924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  std::size_t __ybkt = __other._M_bucket_index(__itx._M_cur);
1926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  __node_base* __y_prev_n = __other._M_buckets[__ybkt];
1927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  if (!__y_prev_n)
1928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    return false;
1929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  __node_type* __y_n = static_cast<__node_type*>(__y_prev_n->_M_nxt);
1931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  for (;; __y_n = __y_n->_M_next())
1932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    {
1933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      if (__this->key_eq()(_ExtractKey()(__y_n->_M_v()),
1934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				   _ExtractKey()(*__itx)))
1935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		break;
1936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      if (!__y_n->_M_nxt
1938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		  || __other._M_bucket_index(__y_n->_M_next()) != __ybkt)
1939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		return false;
1940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    }
1941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  typename __hashtable::const_iterator __ity(__y_n);
1943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  for (auto __ity_end = __ity; __ity_end != __other.end(); ++__ity_end)
1944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    if (--__x_count == 0)
1945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      break;
1946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  if (__x_count != 0)
1948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    return false;
1949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  if (!std::is_permutation(__itx, __itx_end, __ity))
1951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    return false;
1952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  __itx = __itx_end;
1954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	}
1955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return true;
1956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
1957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
1959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    * This type deals with all allocation and keeps an allocator instance
1960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    * through inheritance to benefit from EBO when possible.
1961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 74


1962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _NodeAlloc>
1963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hashtable_alloc : private _Hashtable_ebo_helper<0, _NodeAlloc>
1964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
1966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __ebo_node_alloc = _Hashtable_ebo_helper<0, _NodeAlloc>;
1967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
1968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_type = typename _NodeAlloc::value_type;
1969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_alloc_type = _NodeAlloc;
1970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // Use __gnu_cxx to benefit from _S_always_equal and al.
1971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_alloc_traits = __gnu_cxx::__alloc_traits<__node_alloc_type>;
1972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __value_alloc_traits = typename __node_alloc_traits::template
1974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	rebind_traits<typename __node_type::value_type>;
1975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_base = __detail::_Hash_node_base;
1977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __bucket_type = __node_base*;      
1978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __bucket_alloc_type =
1979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__alloc_rebind<__node_alloc_type, __bucket_type>;
1980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __bucket_alloc_traits = std::allocator_traits<__bucket_alloc_type>;
1981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hashtable_alloc() = default;
1983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hashtable_alloc(const _Hashtable_alloc&) = default;
1984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hashtable_alloc(_Hashtable_alloc&&) = default;
1985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _Alloc>
1987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_Hashtable_alloc(_Alloc&& __a)
1988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	: __ebo_node_alloc(std::forward<_Alloc>(__a))
1989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{ }
1990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __node_alloc_type&
1992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_node_allocator()
1993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return __ebo_node_alloc::_M_get(); }
1994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const __node_alloc_type&
1996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_node_allocator() const
1997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return __ebo_node_alloc::_M_cget(); }
1998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // Allocate a node and construct an element within it.
2000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename... _Args>
2001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__node_type*
2002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_M_allocate_node(_Args&&... __args);
2003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
2004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // Destroy the element within a node and deallocate the node.
2005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
2006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_deallocate_node(__node_type* __n);
2007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
2008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // Deallocate a node.
2009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
2010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_deallocate_node_ptr(__node_type* __n);
2011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
2012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // Deallocate the linked list of nodes pointed to by __n.
2013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // The elements within the nodes are destroyed.
2014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
2015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_deallocate_nodes(__node_type* __n);
2016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
2017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __bucket_type*
2018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_allocate_buckets(std::size_t __bkt_count);
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 75


2019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
2020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
2021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_deallocate_buckets(__bucket_type*, std::size_t __bkt_count);
2022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
2023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
2024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // Definitions of class template _Hashtable_alloc's out-of-line member
2025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // functions.
2026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _NodeAlloc>
2027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     template<typename... _Args>
2028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       auto
2029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&&... __args)
2030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       -> __node_type*
2031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
2032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	auto __nptr = __node_alloc_traits::allocate(_M_node_allocator(), 1);
2033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__node_type* __n = std::__to_address(__nptr);
2034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__try
2035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  {
2036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    ::new ((void*)__n) __node_type;
2037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    __node_alloc_traits::construct(_M_node_allocator(),
2038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					   __n->_M_valptr(),
2039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					   std::forward<_Args>(__args)...);
2040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    return __n;
2041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  }
2042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__catch(...)
2043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  {
2044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    __node_alloc_traits::deallocate(_M_node_allocator(), __nptr, 1);
2045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    __throw_exception_again;
2046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  }
2047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
2048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
2049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _NodeAlloc>
2050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     void
2051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(__node_type* __n)
2052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
2053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __node_alloc_traits::destroy(_M_node_allocator(), __n->_M_valptr());
2054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_deallocate_node_ptr(__n);
2055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
2056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
2057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _NodeAlloc>
2058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     void
2059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Hashtable_alloc<_NodeAlloc>::_M_deallocate_node_ptr(__node_type* __n)
2060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
2061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef typename __node_alloc_traits::pointer _Ptr;
2062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       auto __ptr = std::pointer_traits<_Ptr>::pointer_to(*__n);
2063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __n->~__node_type();
2064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __node_alloc_traits::deallocate(_M_node_allocator(), __ptr, 1);
2065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
2066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
2067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _NodeAlloc>
2068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     void
2069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Hashtable_alloc<_NodeAlloc>::_M_deallocate_nodes(__node_type* __n)
  72              		.loc 3 2069 5 is_stmt 1 view .LVU8
  73              	.LBB1940:
2070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
2071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       while (__n)
  74              		.loc 3 2071 14 view .LVU9
  75 0006 85B1     		cbz	r5, .L2
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 76


  76              	.LVL2:
  77              	.L4:
  78              	.LBB1941:
  79              	.LBB1942:
  80              	.LBI1942:
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return static_cast<_Hash_node*>(this->_M_nxt); }
  81              		.loc 3 269 7 view .LVU10
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return static_cast<_Hash_node*>(this->_M_nxt); }
  82              		.loc 3 269 7 is_stmt 0 view .LVU11
  83 0008 2C46     		mov	r4, r5
  84              	.LVL3:
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return static_cast<_Hash_node*>(this->_M_nxt); }
  85              		.loc 3 269 7 view .LVU12
  86              	.LBE1942:
  87              	.LBB1944:
  88              	.LBB1945:
  89              	.LBB1946:
  90              	.LBB1947:
  91              	.LBB1948:
  92              	.LBB1949:
  93              	.LBB1950:
  94              	.LBB1951:
  95              	.LBI1951:
  96              		.file 4 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\basic_strin
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // Components for manipulating sequences of characters -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** /** @file bits/basic_string.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****  *  This is an internal header file, included by other library headers.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****  *  Do not attempt to use it directly. @headername{string}
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****  */
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** //
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // ISO C++ 14882: 21 Strings library
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** //
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 77


  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #ifndef _BASIC_STRING_H
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #define _BASIC_STRING_H 1
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #pragma GCC system_header
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #include <ext/atomicity.h>
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #include <ext/alloc_traits.h>
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #include <debug/debug.h>
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #include <initializer_list>
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** # include <string_view>
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** namespace std _GLIBCXX_VISIBILITY(default)
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** {
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_USE_CXX11_ABI
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @class basic_string basic_string.h <string>
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @ingroup strings
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @ingroup sequences
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _CharT  Type of character
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *                   char_traits<_CharT>.
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     class basic_string
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     {
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	rebind<_CharT>::other _Char_alloc_type;
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__alloc_traits<_Char_alloc_type> _Alloc_traits;
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Types:
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef _Traits					traits_type;
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Traits::char_type		value_type;
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef _Char_alloc_type				allocator_type;
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::size_type		size_type;
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::difference_type	difference_type;
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::reference		reference;
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 78


  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::pointer		pointer;
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 							const_iterator;
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Value returned by various member functions when they fail.
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     protected:
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // type used for positions in insert, erase etc.
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus < 201103L
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef iterator __const_iterator;
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef const_iterator __const_iterator;
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     private:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // A helper type for avoiding boiler-plate.
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef basic_string_view<_CharT, _Traits> __sv_type;
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename _Res>
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	using _If_sv = enable_if_t<
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __and_<is_convertible<const _Tp&, __sv_type>,
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 __not_<is_convertible<const _Tp*, const basic_string*>>,
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 __not_<is_convertible<const _Tp&, const _CharT*>>>::value,
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _Res>;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Allows an implicit conversion to __sv_type.
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static __sv_type
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_to_string_view(__sv_type __svt) noexcept
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __svt; }
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Wraps a string_view by explicit conversion and thus
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // allows to add an internal constructor that does not
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // participate in overload resolution when a string_view
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // is provided.
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       struct __sv_wrapper
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	explicit __sv_wrapper(__sv_type __sv) noexcept : _M_sv(__sv) { }
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__sv_type _M_sv;
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Only internally used: Construct string from a string view
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *          wrapper.
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __svw  string view wrapper.
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       explicit
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(__sv_wrapper __svw, const _Alloc& __a)
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 79


 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       struct _Alloc_hider : allocator_type // TODO check __is_final
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus < 201103L
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a = _Alloc())
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a)
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_Alloc_hider(pointer __dat, _Alloc&& __a = _Alloc())
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	pointer _M_p; // The actual data.
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _Alloc_hider	_M_dataplus;
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type		_M_string_length;
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       enum { _S_local_capacity = 15 / sizeof(_CharT) };
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       union
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_CharT           _M_local_buf[_S_local_capacity + 1];
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	size_type        _M_allocated_capacity;
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_data(pointer __p)
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_length(size_type __length)
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       pointer
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_data() const
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       pointer
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_local_data()
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return std::pointer_traits<pointer>::pointer_to(*_M_local_buf);
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return pointer(_M_local_buf);
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_pointer
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_local_data() const
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 80


 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return const_pointer(_M_local_buf);
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_capacity(size_type __capacity)
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_set_length(size_type __n)
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_length(__n);
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	traits_type::assign(_M_data()[__n], _CharT());
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_is_local() const
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Create & Destroy
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       pointer
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_create(size_type&, size_type);
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_dispose()
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (!_M_is_local())
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_destroy(size_type __size) throw()
  97              		.loc 4 236 7 is_stmt 1 view .LVU13
  98              		.loc 4 236 7 is_stmt 0 view .LVU14
  99              	.LBE1951:
 100              	.LBE1950:
 101              	.LBE1949:
 102              	.LBE1948:
 103              	.LBE1947:
 104              	.LBE1946:
 105              	.LBE1945:
 106              	.LBE1944:
 107              	.LBB1982:
 108              	.LBB1943:
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 109              		.loc 3 270 53 view .LVU15
 110 000a 2D68     		ldr	r5, [r5]
 111              	.LVL4:
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 112              		.loc 3 270 53 view .LVU16
 113              	.LBE1943:
 114              	.LBE1982:
 115              	.LBB1983:
 116              	.LBI1944:
2051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 117              		.loc 3 2051 5 is_stmt 1 view .LVU17
 118              	.LBB1976:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 81


 119              	.LBI1945:
 120              		.file 5 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\alloc_trait
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Copyright (C) 2011-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** /** @file bits/alloc_traits.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****  *  This is an internal header file, included by other library headers.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****  *  Do not attempt to use it directly. @headername{memory}
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****  */
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #ifndef _ALLOC_TRAITS_H
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #define _ALLOC_TRAITS_H 1
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #include <bits/stl_construct.h>
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #include <bits/memoryfwd.h>
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201103L
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # include <bits/allocator.h>
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # include <bits/ptr_traits.h>
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # include <ext/numeric_traits.h>
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** {
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201103L
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #define __cpp_lib_allocator_traits_is_always_equal 201411
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   struct __allocator_traits_base
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   {
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp, typename _Up, typename = void>
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       struct __rebind : __replace_first_arg<_Tp, _Up> { };
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp, typename _Up>
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       struct __rebind<_Tp, _Up,
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		      __void_t<typename _Tp::template rebind<_Up>::other>>
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 82


  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { using type = typename _Tp::template rebind<_Up>::other; };
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   protected:
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pointer = typename _Tp::pointer;
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __c_pointer = typename _Tp::const_pointer;
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __v_pointer = typename _Tp::void_pointer;
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __cv_pointer = typename _Tp::const_void_pointer;
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pocca = typename _Tp::propagate_on_container_copy_assignment;
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pocma = typename _Tp::propagate_on_container_move_assignment;
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pocs = typename _Tp::propagate_on_container_swap;
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __equal = typename _Tp::is_always_equal;
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   };
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc, typename _Up>
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     using __alloc_rebind
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       = typename __allocator_traits_base::template __rebind<_Alloc, _Up>::type;
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   /**
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * @brief  Uniform interface to all allocator types.
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * @ingroup allocators
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   */
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct allocator_traits : __allocator_traits_base
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator type
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef _Alloc allocator_type;
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocated type
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef typename _Alloc::value_type value_type;
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's pointer type.
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::pointer if that type exists, otherwise @c value_type*
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using pointer = __detected_or_t<value_type*, __pointer, _Alloc>;
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     private:
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       // Select _Func<_Alloc> or pointer_traits<pointer>::rebind<_Tp>
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<template<typename> class _Func, typename _Tp, typename = void>
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Ptr
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using type = typename pointer_traits<pointer>::template rebind<_Tp>;
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	};
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<template<typename> class _Func, typename _Tp>
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Ptr<_Func, _Tp, __void_t<_Func<_Alloc>>>
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using type = _Func<_Alloc>;
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	};
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 83


 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       // Select _A2::difference_type or pointer_traits<_Ptr>::difference_type
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _PtrT, typename = void>
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Diff
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ using type = typename pointer_traits<_PtrT>::difference_type; };
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _PtrT>
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Diff<_A2, _PtrT, __void_t<typename _A2::difference_type>>
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ using type = typename _A2::difference_type; };
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       // Select _A2::size_type or make_unsigned<_DiffT>::type
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _DiffT, typename = void>
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Size : make_unsigned<_DiffT> { };
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _DiffT>
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Size<_A2, _DiffT, __void_t<typename _A2::size_type>>
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ using type = typename _A2::size_type; };
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     public:
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's const pointer type.
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::const_pointer if that type exists, otherwise
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const value_type> </tt>
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_pointer = typename _Ptr<__c_pointer, const value_type>::type;
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's void pointer type.
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::void_pointer if that type exists, otherwise
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<void> </tt>
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using void_pointer = typename _Ptr<__v_pointer, void>::type;
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's const void pointer type.
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::const_void_pointer if that type exists, otherwise
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const void> </tt>
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_void_pointer = typename _Ptr<__cv_pointer, const void>::type;
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's difference type
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::difference_type if that type exists, otherwise
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::difference_type </tt>
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using difference_type = typename _Diff<_Alloc, pointer>::type;
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's size type
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::size_type if that type exists, otherwise
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> make_unsigned<difference_type>::type </tt>
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 84


 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using size_type = typename _Size<_Alloc, difference_type>::type;
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   How the allocator is propagated on copy assignment
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::propagate_on_container_copy_assignment if that type exists,
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c false_type
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_copy_assignment
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<false_type, __pocca, _Alloc>;
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   How the allocator is propagated on move assignment
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::propagate_on_container_move_assignment if that type exists,
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c false_type
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_move_assignment
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<false_type, __pocma, _Alloc>;
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   How the allocator is propagated on swap
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::propagate_on_container_swap if that type exists,
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c false_type
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_swap
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<false_type, __pocs, _Alloc>;
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   Whether all instances of the allocator type compare equal.
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::is_always_equal if that type exists,
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c is_empty<Alloc>::type
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using is_always_equal
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<typename is_empty<_Alloc>::type, __equal, _Alloc>;
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp>
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_alloc = __alloc_rebind<_Alloc, _Tp>;
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp>
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_traits = allocator_traits<rebind_alloc<_Tp>>;
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     private:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr auto
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer __hint, int)
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.allocate(__n, __hint))
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.allocate(__n, __hint); }
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr pointer
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer, ...)
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.allocate(__n); }
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct __construct_helper
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 85


 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  template<typename _Alloc2,
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    typename = decltype(std::declval<_Alloc2*>()->construct(
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  std::declval<_Tp*>(), std::declval<_Args>()...))>
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    static true_type __test(int);
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  template<typename>
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    static false_type __test(...);
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using type = decltype(__test<_Alloc>(0));
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	};
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using __has_construct
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  = typename __construct_helper<_Tp, _Args...>::type;
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR _Require<__has_construct<_Tp, _Args...>>
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_Require<__and_<__not_<__has_construct<_Tp, _Args...>>,
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 			       is_constructible<_Tp, _Args...>>>
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_construct(_Alloc&, _Tp* __p, _Args&&... __args)
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(std::is_nothrow_constructible<_Tp, _Args...>::value)
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  std::construct_at(__p, std::forward<_Args>(__args)...);
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR auto
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_destroy(_Alloc2& __a, _Tp* __p, int)
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(__a.destroy(__p)))
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.destroy(__p))
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ __a.destroy(__p); }
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR void
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_destroy(_Alloc2&, _Tp* __p, ...)
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(std::is_nothrow_destructible<_Tp>::value)
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ std::_Destroy(__p); }
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr auto
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_max_size(_Alloc2& __a, int)
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.max_size())
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.max_size(); }
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr size_type
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 86


 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_max_size(_Alloc2&, ...)
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  // _GLIBCXX_RESOLVE_LIB_DEFECTS
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  // 2466. allocator_traits::max_size() default behavior is incorrect
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  return __gnu_cxx::__numeric_traits<size_type>::__max
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    / sizeof(value_type);
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr auto
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_select(_Alloc2& __a, int)
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.select_on_container_copy_construction())
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.select_on_container_copy_construction(); }
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr _Alloc2
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_select(_Alloc2& __a, ...)
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a; }
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     public:
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c a.allocate(n)
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(_Alloc& __a, size_type __n)
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __hint Aid to locality.
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *          of type @c value_type
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt> if that expression is
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  well-formed, otherwise returns @c a.allocate(n)
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(_Alloc& __a, size_type __n, const_void_pointer __hint)
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return _S_allocate(__a, __n, __hint, 0); }
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Deallocate memory.
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR void
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       deallocate(_Alloc& __a, pointer __p, size_type __n)
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 87


 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Construct an object of type @a _Tp
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for Tp
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __args Constructor arguments.
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls <tt> __a.construct(__p, std::forward<Args>(__args)...) </tt>
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  if that expression is well-formed, otherwise uses placement-new
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  to construct an object of type @a _Tp at location @a __p from the
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  arguments @a __args...
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR auto
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(_S_construct(__a, __p,
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 				       std::forward<_Args>(__args)...)))
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(_S_construct(__a, __p, std::forward<_Args>(__args)...))
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ _S_construct(__a, __p, std::forward<_Args>(__args)...); }
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Destroy an object of type @a _Tp
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c __a.destroy(__p) if that expression is well-formed,
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  otherwise calls @c __p->~_Tp()
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp>
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	destroy(_Alloc& __a, _Tp* __p)
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(_S_destroy(__a, __p, 0)))
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ _S_destroy(__a, __p, 0); }
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  The maximum supported allocation size
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __a.max_size() or @c numeric_limits<size_type>::max()
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns @c __a.max_size() if that expression is well-formed,
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  otherwise returns @c numeric_limits<size_type>::max()
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR size_type
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       max_size(const _Alloc& __a) noexcept
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return _S_max_size(__a, 0); }
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __rhs  An allocator.
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __rhs.select_on_container_copy_construction() or @a __rhs
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns @c __rhs.select_on_container_copy_construction() if that
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  expression is well-formed, otherwise returns @a __rhs
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR _Alloc
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       select_on_container_copy_construction(const _Alloc& __rhs)
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 88


 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return _S_select(__rhs, 0); }
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     };
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus > 201703L
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # define __cpp_lib_constexpr_dynamic_alloc 201907L
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   /// Partial specialization for std::allocator.
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Tp>
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct allocator_traits<allocator<_Tp>>
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator type
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using allocator_type = allocator<_Tp>;
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocated type
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using value_type = _Tp;
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's pointer type.
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using pointer = _Tp*;
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's const pointer type.
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_pointer = const _Tp*;
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's void pointer type.
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using void_pointer = void*;
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's const void pointer type.
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_void_pointer = const void*;
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's difference type
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using difference_type = std::ptrdiff_t;
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's size type
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using size_type = std::size_t;
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// How the allocator is propagated on copy assignment
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_copy_assignment = false_type;
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// How the allocator is propagated on move assignment
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_move_assignment = true_type;
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// How the allocator is propagated on swap
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_swap = false_type;
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// Whether all instances of the allocator type compare equal.
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using is_always_equal = true_type;
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up>
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_alloc = allocator<_Up>;
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up>
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_traits = allocator_traits<allocator<_Up>>;
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 89


 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c a.allocate(n)
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(allocator_type& __a, size_type __n)
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __hint Aid to locality.
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *          of type @c value_type
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt>
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(allocator_type& __a, size_type __n, const_void_pointer __hint)
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       {
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return __a.allocate(__n, __hint);
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return __a.allocate(__n);
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       }
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Deallocate memory.
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR void
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       deallocate(allocator_type& __a, pointer __p, size_type __n)
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Construct an object of type `_Up`
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *	       an object of type `_Up`.
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __args Constructor arguments.
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls `__a.construct(__p, std::forward<_Args>(__args)...)`
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  in C++11, C++14 and C++17. Changed in C++20 to call
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  `std::construct_at(__p, std::forward<_Args>(__args)...)` instead.
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up, typename... _Args>
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 90


 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  __a.construct(__p, std::forward<_Args>(__args)...);
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  std::construct_at(__p, std::forward<_Args>(__args)...);
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Destroy an object of type @a _Up
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c __a.destroy(__p).
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up>
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
 121              		.loc 5 527 2 view .LVU18
 122              	.LBB1975:
 123              	.LBI1946:
 124              		.file 6 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\ext\\new_allocato
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** /** @file ext/new_allocator.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****  */
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <bits/c++config.h>
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <new>
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <bits/functexcept.h>
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <bits/move.h>
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <type_traits>
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 91


  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** {
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****   /**
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  @brief  An allocator that uses global new, as per [20.4].
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  @ingroup allocators
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *    - all allocation calls operator new
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *    - all deallocation calls operator delete
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    */
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****   template<typename _Tp>
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     class new_allocator
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     {
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     public:
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef _Tp        value_type;
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef std::size_t     size_type;
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef std::ptrdiff_t  difference_type;
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus <= 201703L
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef _Tp*       pointer;
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef const _Tp* const_pointer;
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef _Tp&       reference;
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef const _Tp& const_reference;
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Tp1>
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	struct rebind
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	{ typedef new_allocator<_Tp1> other; };
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Tp1>
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	_GLIBCXX20_CONSTEXPR
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus <= 201703L
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       pointer
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       address(reference __x) const _GLIBCXX_NOEXCEPT
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       { return std::__addressof(__x); }
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 92


  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       const_pointer
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       address(const_reference __x) const _GLIBCXX_NOEXCEPT
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       { return std::__addressof(__x); }
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // about what the return value is when __n == 0.
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       _GLIBCXX_NODISCARD _Tp*
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       allocate(size_type __n, const void* = static_cast<const void*>(0))
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	if (__n > this->_M_max_size())
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  std::__throw_bad_alloc();
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_aligned_new
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  {
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  }
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // __p is not permitted to be a null pointer.
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       void
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       deallocate(_Tp* __p, size_type __t)
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_aligned_new
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  {
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    ::operator delete(__p,
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** # if __cpp_sized_deallocation
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			      __t * sizeof(_Tp),
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** # endif
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			      std::align_val_t(alignof(_Tp)));
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    return;
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  }
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	::operator delete(__p
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			  , __t * sizeof(_Tp)
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			 );
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus <= 201703L
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       size_type
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       max_size() const _GLIBCXX_USE_NOEXCEPT
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       { return _M_max_size(); }
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Up, typename... _Args>
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	void
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	construct(_Up* __p, _Args&&... __args)
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 93


 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Up>
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	void
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	destroy(_Up* __p)
 125              		.loc 6 154 2 view .LVU19
 126              	.LBB1974:
 127              	.LBI1947:
 128              		.file 7 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_pair.h"
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // Pair implementation -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * Copyright (c) 1996,1997
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * representations about the suitability of this software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 94


  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** /** @file bits/stl_pair.h
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *  Do not attempt to use it directly. @headername{utility}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #ifndef _STL_PAIR_H
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #define _STL_PAIR_H 1
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #include <bits/move.h> // for std::move / std::forward, and std::swap
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** # include <type_traits> // for std::__decay_and_strip, std::is_reference_v
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus > 201703L
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** # include <compare>
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** # define __cpp_lib_constexpr_utility 201811L
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** namespace std _GLIBCXX_VISIBILITY(default)
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** {
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /**
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  @addtogroup utilities
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  @{
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    */
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /// Tag type for piecewise construction of std::pair objects.
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   struct piecewise_construct_t { explicit piecewise_construct_t() = default; };
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /// Tag for piecewise construction of std::pair objects.
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   _GLIBCXX17_INLINE constexpr piecewise_construct_t piecewise_construct =
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     piecewise_construct_t();
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /// @cond undocumented
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // Forward declarations.
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<typename...>
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     class tuple;
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<std::size_t...>
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     struct _Index_tuple;
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // Concept utility functions, reused in conditionally-explicit
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // constructors.
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // See PR 70437, don't look at is_constructible or
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // is_convertible if the types are the same to
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // avoid querying those properties for incomplete types.
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template <bool, typename _T1, typename _T2>
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     struct _PCC
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     {
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _ConstructiblePair()
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return __and_<is_constructible<_T1, const _U1&>,
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      is_constructible<_T2, const _U2&>>::value;
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 95


 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _ImplicitlyConvertiblePair()
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return __and_<is_convertible<const _U1&, _T1>,
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      is_convertible<const _U2&, _T2>>::value;
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _MoveConstructiblePair()
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return __and_<is_constructible<_T1, _U1&&>,
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      is_constructible<_T2, _U2&&>>::value;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _ImplicitlyMoveConvertiblePair()
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return __and_<is_convertible<_U1&&, _T1>,
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      is_convertible<_U2&&, _T2>>::value;
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <bool __implicit, typename _U1, typename _U2>
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _CopyMovePair()
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	using __do_converts = __and_<is_convertible<const _U1&, _T1>,
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				  is_convertible<_U2&&, _T2>>;
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	using __converts = typename conditional<__implicit,
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				       __do_converts,
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				       __not_<__do_converts>>::type;
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return __and_<is_constructible<_T1, const _U1&>,
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      is_constructible<_T2, _U2&&>,
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      __converts
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      >::value;
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <bool __implicit, typename _U1, typename _U2>
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _MoveCopyPair()
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	using __do_converts = __and_<is_convertible<_U1&&, _T1>,
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				  is_convertible<const _U2&, _T2>>;
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	using __converts = typename conditional<__implicit,
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				       __do_converts,
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				       __not_<__do_converts>>::type;
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return __and_<is_constructible<_T1, _U1&&>,
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      is_constructible<_T2, const _U2&&>,
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      __converts
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      >::value;
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   };
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template <typename _T1, typename _T2>
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     struct _PCC<false, _T1, _T2>
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     {
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _ConstructiblePair()
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 96


 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return false;
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _ImplicitlyConvertiblePair()
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return false;
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _MoveConstructiblePair()
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return false;
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _ImplicitlyMoveConvertiblePair()
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return false;
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   };
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif // C++11
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<typename _U1, typename _U2> class __pair_base
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   {
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     template<typename _T1, typename _T2> friend struct pair;
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     __pair_base() = default;
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     ~__pair_base() = default;
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     __pair_base(const __pair_base&) = default;
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     __pair_base& operator=(const __pair_base&) = delete;
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif // C++11
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   };
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /// @endcond
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  /**
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  @brief Struct holding two objects of arbitrary type.
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  @tparam _T1  Type of first object.
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  @tparam _T2  Type of second object.
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  <https://gcc.gnu.org/onlinedocs/libstdc++/manual/utilities.html>
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    */
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<typename _T1, typename _T2>
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     struct pair
 129              		.loc 7 211 12 view .LVU20
 130              	.LBB1973:
 131              	.LBI1948:
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _M_construct_aux is used to implement the 21.3.1 para 15 which
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // requires special behaviour if _InIterator is an integral type
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InIterator>
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct_aux(_InIterator __beg, _InIterator __end,
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 97


 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           _M_construct(__beg, __end, _Tag());
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Integer>
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct_aux(_Integer __beg, _Integer __end, std::__true_type)
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ _M_construct_aux_2(static_cast<size_type>(__beg), __end); }
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_construct_aux_2(size_type __req, _CharT __c)
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__req, __c); }
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InIterator>
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end)
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_construct_aux(__beg, __end, _Integral());
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         }
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InIterator>
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end,
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     std::input_iterator_tag);
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // string::iterator, _CharT*, etc.
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _FwdIterator>
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct(_FwdIterator __beg, _FwdIterator __end,
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     std::forward_iterator_tag);
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_construct(size_type __req, _CharT __c);
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       allocator_type&
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_get_allocator()
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const allocator_type&
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_get_allocator() const
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     private:
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // The explicit instantiations in misc-inst.cc require this due to
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // https://gcc.gnu.org/bugzilla/show_bug.cgi?id=64063
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, bool _Requires =
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       !__are_same<_Tp, _CharT*>::__value
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       && !__are_same<_Tp, const _CharT*>::__value
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 98


 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       && !__are_same<_Tp, iterator>::__value
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       && !__are_same<_Tp, const_iterator>::__value>
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	struct __enable_if_not_native_iterator
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ typedef basic_string& __type; };
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	struct __enable_if_not_native_iterator<_Tp, false> { };
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_check(size_type __pos, const char* __s) const
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__pos > this->size())
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "this->size() (which is %zu)"),
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   __s, __pos, this->size());
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return __pos;
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_length_error(__N(__s));
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // True if _Rep and source do not overlap.
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // When __n = 1 way faster than the general multichar
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // traits_type::copy/move/assign.
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy(_CharT* __d, const _CharT* __s, size_type __n)
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::copy(__d, __s, __n);
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_move(_CharT* __d, const _CharT* __s, size_type __n)
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 99


 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::move(__d, __s, __n);
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_assign(_CharT* __d, size_type __n, _CharT __c)
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, __c);
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(__d, __n, __c);
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // to optimize for the common case of pointers as iterators.
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _Iterator>
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static void
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  for (; __k1 != __k2; ++__k1, (void)++__p)
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static int
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return int(__d);
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_assign(const basic_string&);
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 100


 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, const _CharT* __s,
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		size_type __len2);
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_erase(size_type __pos, size_type __n);
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Construct/copy/destroy:
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // NB: We overload ctors in some cases instead of using default
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Default constructor creates an empty string.
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string()
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data())
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_set_length(0); }
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       explicit
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _Alloc& __a) _GLIBCXX_NOEXCEPT
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_set_length(0); }
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string with copy of value of @a __str.
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str)
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(),
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _Alloc_traits::_S_select_on_copy(__str._M_get_allocator()))
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 2583. no way to supply an allocator for basic_string(str, pos)
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   const _Alloc& __a = _Alloc())
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const _CharT* __start = __str._M_data()
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, npos));
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 101


 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   size_type __n)
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data())
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const _CharT* __start = __str._M_data()
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   size_type __n, const _Alloc& __a)
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const _CharT* __start
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  = __str._M_data() + __str._M_check(__pos, "string::string");
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string initialized by a character %array.
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source character %array.
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  has no special meaning.
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   const _Alloc& __a = _Alloc())
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__s, __s + __n); }
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a C string.
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source C string.
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 3076. basic_string CTAD ambiguity
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 102


 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as multiple characters.
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters.
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __c  Character to use.
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 3076. basic_string CTAD ambiguity
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc())
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__n, __c); }
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Move construct string.
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __str is a valid, but unspecified string.
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        **/
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(basic_string&& __str) noexcept
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__str._M_is_local())
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			      _S_local_capacity + 1);
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_data(__str._M_data());
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// Must use _M_length() here not _M_set_length() because
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// basic_stringbuf relies on writing into unallocated capacity so
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// we mess up the contents if we put a '\0' in the string.
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_length(__str.length());
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__str._M_data(__str._M_local_data());
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__str._M_set_length(0);
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string from an initializer %list.
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __l  std::initializer_list of characters.
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc())
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__l.begin(), __l.end()); }
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, const _Alloc& __a)
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__str.begin(), __str.end()); }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 103


 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(basic_string&& __str, const _Alloc& __a)
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       noexcept(_Alloc_traits::_S_always_equal())
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__str._M_is_local())
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			      _S_local_capacity + 1);
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_length(__str.length());
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __str._M_set_length(0);
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else if (_Alloc_traits::_S_always_equal()
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    || __str.get_allocator() == __a)
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_data(__str._M_data());
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_length(__str.length());
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __str._M_data(__str._M_local_buf);
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __str._M_set_length(0);
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_construct(__str.begin(), __str.end());
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a range.
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __beg  Start of range.
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __end  End of range.
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InputIterator,
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InputIterator>
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     const _Alloc& __a = _Alloc())
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: _M_dataplus(_M_local_data(), __a)
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ _M_construct(__beg, __end); }
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string from a substring of a string_view.
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __t   Source object convertible to string view.
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos The index of the first character to copy from __t.
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n   The number of characters to copy from __t.
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a   Allocator to use.
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string(const _Tp& __t, size_type __pos, size_type __n,
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     const _Alloc& __a = _Alloc())
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: basic_string(_S_to_string_view(__t).substr(__pos, __n), __a) { }
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 104


 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string from a string_view.
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __t  Source object convertible to string view.
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	explicit
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string(const _Tp& __t, const _Alloc& __a = _Alloc())
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: basic_string(__sv_wrapper(_S_to_string_view(__t)), __a) { }
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Destroy the string instance.
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ~basic_string()
 132              		.loc 4 657 7 view .LVU21
 133              	.LBB1969:
 134              	.LBI1949:
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 135              		.loc 4 229 7 view .LVU22
 136              	.LBB1968:
 137              	.LBB1959:
 138              	.LBI1959:
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 139              		.loc 4 221 7 view .LVU23
 140              	.LBB1960:
 141              	.LBI1960:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 142              		.loc 4 186 7 view .LVU24
 143              	.LBB1961:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 144              		.loc 4 187 28 is_stmt 0 view .LVU25
 145 000c 6068     		ldr	r0, [r4, #4]
 146              	.LVL5:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 147              		.loc 4 187 28 view .LVU26
 148              	.LBE1961:
 149              	.LBE1960:
 150              	.LBB1962:
 151              	.LBI1962:
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 152              		.loc 4 200 7 is_stmt 1 view .LVU27
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 153              		.loc 4 200 7 is_stmt 0 view .LVU28
 154              	.LBE1962:
 155              	.LBE1959:
 156              	.LBB1965:
 157              	.LBB1952:
 158              	.LBB1953:
 159              	.LBI1953:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 160              		.loc 5 491 7 is_stmt 1 view .LVU29
 161              	.LBB1954:
 162              	.LBI1954:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 163              		.loc 6 120 7 view .LVU30
 164              	.LBE1954:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 105


 165              	.LBE1953:
 166              	.LBE1952:
 167              	.LBE1965:
 168              	.LBB1966:
 169              	.LBB1964:
 170              	.LBB1963:
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 171              		.loc 4 203 57 is_stmt 0 view .LVU31
 172 000e 04F10C03 		add	r3, r4, #12
 173              	.LVL6:
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 174              		.loc 4 203 57 view .LVU32
 175              	.LBE1963:
 176              	.LBE1964:
 177              	.LBE1966:
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 178              		.loc 4 231 2 view .LVU33
 179 0012 9842     		cmp	r0, r3
 180 0014 03D0     		beq	.L3
 181              	.LBB1967:
 182              	.LBB1958:
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 183              		.loc 4 237 34 view .LVU34
 184 0016 E168     		ldr	r1, [r4, #12]
 185              	.LBB1957:
 186              	.LBB1956:
 187              	.LBB1955:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 188              		.loc 6 133 19 view .LVU35
 189 0018 0131     		adds	r1, r1, #1
 190              	.LVL7:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 191              		.loc 6 133 19 view .LVU36
 192 001a FFF7FEFF 		bl	_ZdlPvj
 193              	.LVL8:
 194              	.L3:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 195              		.loc 6 133 19 view .LVU37
 196              	.LBE1955:
 197              	.LBE1956:
 198              	.LBE1957:
 199              	.LBE1958:
 200              	.LBE1967:
 201              	.LBE1968:
 202              	.LBE1969:
 203              	.LBB1970:
 204              	.LBI1970:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 205              		.loc 4 150 14 is_stmt 1 view .LVU38
 206              	.LBB1971:
 207              	.LBI1971:
 208              		.file 8 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\allocator.h
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Allocators -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 106


   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * Copyright (c) 1996-1997
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * Silicon Graphics Computer Systems, Inc.
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  *
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * provided that the above copyright notice appear in all copies and
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * that both that copyright notice and this permission notice appear
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * in supporting documentation.  Silicon Graphics makes no
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * representations about the suitability of this software for any
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  */
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** /** @file bits/allocator.h
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  *  This is an internal header file, included by other library headers.
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  *  Do not attempt to use it directly. @headername{memory}
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  */
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #ifndef _ALLOCATOR_H
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #define _ALLOCATOR_H 1
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #include <bits/c++allocator.h> // Define the base class to std::allocator.
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #include <bits/memoryfwd.h>
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #include <type_traits>
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #define __cpp_lib_incomplete_container_elements 201505
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** {
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   /**
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  @addtogroup allocators
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  @{
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    */
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 107


  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   /// allocator<void> specialization.
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   template<>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     class allocator<void>
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     {
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     public:
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef void        value_type;
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef size_t      size_type;
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef ptrdiff_t   difference_type;
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus <= 201703L
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef void*       pointer;
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef const void* const_pointer;
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Tp1>
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	struct rebind
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ typedef allocator<_Tp1> other; };
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #else
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator() = default;
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Up>
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	constexpr
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	allocator(const allocator<_Up>&) { }
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif // ! C++20
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L && __cplusplus <= 201703L
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type propagate_on_container_move_assignment;
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type is_always_equal;
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Up, typename... _Args>
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	void
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	construct(_Up* __p, _Args&&... __args)
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Up>
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	void
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	destroy(_Up* __p)
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	noexcept(std::is_nothrow_destructible<_Up>::value)
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ __p->~_Up(); }
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif // C++11 to C++17
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     };
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   /**
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    * @brief  The @a standard allocator, as per [20.4].
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/memory.html#std.util.memory.allocator
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  for further details.
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  @tparam  _Tp  Type of allocated object.
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    */
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   template<typename _Tp>
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     class allocator : public __allocator_base<_Tp>
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     {
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     public:
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef _Tp        value_type;
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 108


 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef size_t     size_type;
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef ptrdiff_t  difference_type;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus <= 201703L
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef _Tp*       pointer;
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef const _Tp* const_pointer;
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef _Tp&       reference;
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef const _Tp& const_reference;
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Tp1>
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	struct rebind
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ typedef allocator<_Tp1> other; };
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type propagate_on_container_move_assignment;
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type is_always_equal;
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // 3035. std::allocator's constructors should be constexpr
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       _GLIBCXX20_CONSTEXPR
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator() _GLIBCXX_NOTHROW { }
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       _GLIBCXX20_CONSTEXPR
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator(const allocator& __a) _GLIBCXX_NOTHROW
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // Avoid implicit deprecation.
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator& operator=(const allocator&) = default;
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Tp1>
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	_GLIBCXX20_CONSTEXPR
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cpp_constexpr_dynamic_alloc
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       constexpr
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       ~allocator() _GLIBCXX_NOTHROW { }
 209              		.loc 8 162 7 view .LVU39
 210              	.LBB1972:
 211              	.LBI1972:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 212              		.loc 6 89 7 view .LVU40
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 213              		.loc 6 89 7 is_stmt 0 view .LVU41
 214              	.LBE1972:
 215              	.LBE1971:
 216              	.LBE1970:
 217              	.LBE1973:
 218              	.LBE1974:
 219              	.LBE1975:
 220              	.LBE1976:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 109


 221              	.LBB1977:
 222              	.LBI1977:
2059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 223              		.loc 3 2059 5 is_stmt 1 view .LVU42
 224              	.LBB1978:
 225              	.LBB1979:
 226              	.LBI1979:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 227              		.loc 5 491 7 view .LVU43
 228              	.LBB1980:
 229              	.LBI1980:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 230              		.loc 6 120 7 view .LVU44
 231              	.LBB1981:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 232              		.loc 6 133 19 is_stmt 0 view .LVU45
 233 001e 2421     		movs	r1, #36
 234 0020 2046     		mov	r0, r4
 235 0022 FFF7FEFF 		bl	_ZdlPvj
 236              	.LVL9:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 237              		.loc 6 133 19 view .LVU46
 238              	.LBE1981:
 239              	.LBE1980:
 240              	.LBE1979:
 241              	.LBE1978:
 242              	.LBE1977:
 243              	.LBE1983:
 244              	.LBE1941:
 245              		.loc 3 2071 14 is_stmt 1 view .LVU47
 246 0026 002D     		cmp	r5, #0
 247 0028 EED1     		bne	.L4
 248              	.LVL10:
 249              	.L2:
 250              		.loc 3 2071 14 is_stmt 0 view .LVU48
 251              	.LBE1940:
 252              	.LBE1939:
2027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
2028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     clear() noexcept
2029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
2030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       this->_M_deallocate_nodes(_M_begin());
2031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __builtin_memset(_M_buckets, 0, _M_bucket_count * sizeof(__bucket_type));
 253              		.loc 2 2031 23 view .LVU49
 254 002a 7268     		ldr	r2, [r6, #4]
 255 002c 0021     		movs	r1, #0
 256 002e 3068     		ldr	r0, [r6]
 257 0030 9200     		lsls	r2, r2, #2
 258 0032 FFF7FEFF 		bl	memset
 259              	.LVL11:
 260              	.LBE1984:
 261              	.LBE1987:
 262              	.LBB1988:
 263              	.LBB1989:
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 264              		.loc 2 412 30 view .LVU50
 265 0036 3068     		ldr	r0, [r6]
 266              	.LBB1990:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 110


 267              	.LBB1991:
 268              	.LBB1992:
 269              	.LBB1993:
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 270              		.loc 2 380 44 view .LVU51
 271 0038 06F11803 		add	r3, r6, #24
 272              	.LBE1993:
 273              	.LBE1992:
 274              	.LBE1991:
 275              	.LBE1990:
 276              	.LBE1989:
 277              	.LBE1988:
 278              	.LBB2010:
 279              	.LBB1985:
2032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_element_count = 0;
 280              		.loc 2 2032 24 view .LVU52
 281 003c 0022     		movs	r2, #0
 282              	.LBE1985:
 283              	.LBE2010:
 284              	.LBB2011:
 285              	.LBB2008:
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 286              		.loc 2 412 30 view .LVU53
 287 003e 7168     		ldr	r1, [r6, #4]
 288              	.LBB2006:
 289              	.LBB2004:
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return;
 290              		.loc 2 404 2 view .LVU54
 291 0040 9842     		cmp	r0, r3
 292              	.LBE2004:
 293              	.LBE2006:
 294              	.LBE2008:
 295              	.LBE2011:
 296              	.LBB2012:
 297              	.LBB1986:
2033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_before_begin._M_nxt = nullptr;
 298              		.loc 2 2033 30 view .LVU55
 299 0042 C6E90222 		strd	r2, r2, [r6, #8]
 300              	.LVL12:
 301              		.loc 2 2033 30 view .LVU56
 302              	.LBE1986:
 303              	.LBE2012:
 304              	.LBB2013:
 305              	.LBI1988:
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { _M_deallocate_buckets(_M_buckets, _M_bucket_count); }
 306              		.loc 2 411 7 is_stmt 1 view .LVU57
 307              	.LBB2009:
 308              	.LBB2007:
 309              	.LBI1990:
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 310              		.loc 2 402 7 view .LVU58
 311              	.LBB2005:
 312              	.LBB1994:
 313              	.LBI1992:
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __builtin_expect(__bkts == &_M_single_bucket, false); }
 314              		.loc 2 379 7 view .LVU59
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __builtin_expect(__bkts == &_M_single_bucket, false); }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 111


 315              		.loc 2 379 7 is_stmt 0 view .LVU60
 316              	.LBE1994:
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return;
 317              		.loc 2 404 2 view .LVU61
 318 0046 02D0     		beq	.L5
 319              	.LVL13:
 320              	.LBB1995:
 321              	.LBI1995:
2072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{
2073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  __node_type* __tmp = __n;
2074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  __n = __n->_M_next();
2075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  _M_deallocate_node(__tmp);
2076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	}
2077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
2078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
2079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _NodeAlloc>
2080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typename _Hashtable_alloc<_NodeAlloc>::__bucket_type*
2081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t __bkt_count)
2082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
2083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __bucket_alloc_type __alloc(_M_node_allocator());
2084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
2085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       auto __ptr = __bucket_alloc_traits::allocate(__alloc, __bkt_count);
2086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __bucket_type* __p = std::__to_address(__ptr);
2087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __builtin_memset(__p, 0, __bkt_count * sizeof(__bucket_type));
2088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return __p;
2089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
2090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
2091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _NodeAlloc>
2092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     void
2093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(__bucket_type* __bkts,
 322              		.loc 3 2093 5 is_stmt 1 view .LVU62
 323              	.LBB1996:
 324              	.LBB1997:
 325              	.LBI1997:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 326              		.loc 8 157 2 view .LVU63
 327              	.LBB1998:
 328              	.LBI1998:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 329              		.loc 6 79 7 view .LVU64
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 330              		.loc 6 79 7 is_stmt 0 view .LVU65
 331              	.LBE1998:
 332              	.LBE1997:
 333              	.LBB1999:
 334              	.LBI1999:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 335              		.loc 5 491 7 is_stmt 1 view .LVU66
 336              	.LBB2000:
 337              	.LBI2000:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 338              		.loc 6 120 7 view .LVU67
 339              	.LBB2001:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 340              		.loc 6 133 19 is_stmt 0 view .LVU68
 341 0048 8900     		lsls	r1, r1, #2
 342              	.LVL14:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 112


 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 343              		.loc 6 133 19 view .LVU69
 344 004a FFF7FEFF 		bl	_ZdlPvj
 345              	.LVL15:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 346              		.loc 6 133 19 view .LVU70
 347              	.LBE2001:
 348              	.LBE2000:
 349              	.LBE1999:
 350              	.LBB2002:
 351              	.LBI2002:
 352              		.loc 8 162 7 is_stmt 1 view .LVU71
 353              	.LBB2003:
 354              	.LBI2003:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 355              		.loc 6 89 7 view .LVU72
 356              	.L5:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 357              		.loc 6 89 7 is_stmt 0 view .LVU73
 358              	.LBE2003:
 359              	.LBE2002:
 360              	.LBE1996:
 361              	.LBE1995:
 362              	.LBE2005:
 363              	.LBE2007:
 364              	.LBE2009:
 365              	.LBE2013:
 366              	.LBB2014:
 367              	.LBI2014:
1963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 368              		.loc 3 1963 12 is_stmt 1 view .LVU74
 369              	.LBB2015:
 370              	.LBI2015:
1109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : private _Tp
 371              		.loc 3 1109 12 view .LVU75
 372              	.LBB2016:
 373              	.LBI2016:
 374              		.loc 8 162 7 view .LVU76
 375              	.LBB2017:
 376              	.LBI2017:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 377              		.loc 6 89 7 view .LVU77
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 378              		.loc 6 89 7 is_stmt 0 view .LVU78
 379              	.LBE2017:
 380              	.LBE2016:
 381              	.LBE2015:
 382              	.LBE2014:
 383              	.LBE2018:
 384              		.loc 1 102 11 view .LVU79
 385 004e 3046     		mov	r0, r6
 386 0050 70BD     		pop	{r4, r5, r6, pc}
 387              		.loc 1 102 11 view .LVU80
 388              		.cfi_endproc
 389              	.LFE4200:
 391              		.weak	_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4hashIS5_ESt8equ
 392              		.thumb_set _ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4hashIS5_ES
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 113


 393 0052 00BF     		.section	.text._ZN10ChordSynth13set_bass_noteEh,"ax",%progbits
 394              		.align	1
 395              		.p2align 2,,3
 396              		.global	_ZN10ChordSynth13set_bass_noteEh
 397              		.syntax unified
 398              		.thumb
 399              		.thumb_func
 400              		.fpu fpv5-d16
 402              	_ZN10ChordSynth13set_bass_noteEh:
 403              	.LVL16:
 404              	.LFB4297:
 405              		.file 9 "ChordSynth.cpp"
   1:ChordSynth.cpp **** /*
   2:ChordSynth.cpp **** GNU General Public License v3.0
   3:ChordSynth.cpp **** Author: Jack Payne
   4:ChordSynth.cpp **** 
   5:ChordSynth.cpp ****  _______             __                                __                                  __ 
   6:ChordSynth.cpp **** /       \           /  |                              /  |                                /  |
   7:ChordSynth.cpp **** BBBBBBB  |  ______  BB/  ________   ______    _______ BB |____    ______    ______    ____BB |
   8:ChordSynth.cpp **** BB |__BB | /      \ /  |/        | /      \  /       |BB      \  /      \  /      \  /    BB |
   9:ChordSynth.cpp **** BB    BB< /BBBBBB  |BB |BBBBBBBB/  BBBBBB  |/BBBBBBB/ BBBBBBB  |/BBBBBB  |/BBBBBB  |/BBBBBBB |
  10:ChordSynth.cpp **** BBBBBBB  |BB |  BB/ BB |  /  BB/   /    BB |BB |      BB |  BB |BB |  BB |BB |  BB/ BB |  BB |
  11:ChordSynth.cpp **** BB |__BB |BB |      BB | /BBBB/__ /BBBBBBB |BB \_____ BB |  BB |BB \__BB |BB |      BB \__BB |
  12:ChordSynth.cpp **** BB    BB/ BB |      BB |/BB      |BB    BB |BB       |BB |  BB |BB    BB/ BB |      BB    BB |
  13:ChordSynth.cpp **** BBBBBBB/  BB/       BB/ BBBBBBBB/  BBBBBBB/  BBBBBBB/ BB/   BB/  BBBBBB/  BB/        BBBBBBB/	v1.0
  14:ChordSynth.cpp **** */
  15:ChordSynth.cpp **** 
  16:ChordSynth.cpp **** #include "ChordSynth.h"
  17:ChordSynth.cpp **** 
  18:ChordSynth.cpp **** void ChordSynth::set_chord(Chord chord) {
  19:ChordSynth.cpp **** 	std::vector<int> midi_notes = chord_to_midi(chord);
  20:ChordSynth.cpp **** 	chord_oscs.clear();
  21:ChordSynth.cpp **** 	for (int i = 0; i < midi_notes.size(); i++) {
  22:ChordSynth.cpp **** 		daisysp::Oscillator osc;
  23:ChordSynth.cpp **** 		osc.Init(sample_rate);
  24:ChordSynth.cpp **** 		osc.SetWaveform(Oscillator::WAVE_POLYBLEP_SAW);
  25:ChordSynth.cpp **** 		osc.SetFreq(mtof(midi_notes[i]));
  26:ChordSynth.cpp **** 		osc.SetAmp(1.f / (midi_notes.size() + 1));
  27:ChordSynth.cpp **** 
  28:ChordSynth.cpp **** 		chord_oscs.push_back(osc);
  29:ChordSynth.cpp **** 	}
  30:ChordSynth.cpp **** 
  31:ChordSynth.cpp **** 	bass_scale = chord_to_scale_midi(chord);
  32:ChordSynth.cpp **** 
  33:ChordSynth.cpp **** 	bass_osc.Init(sample_rate);
  34:ChordSynth.cpp **** 	bass_osc.SetWaveform(Oscillator::WAVE_POLYBLEP_SAW);
  35:ChordSynth.cpp **** 	bass_osc.SetFreq(mtof(midi_notes[0])/4.f);
  36:ChordSynth.cpp **** 	bass_osc.SetAmp(1.f / (midi_notes.size() + 1));
  37:ChordSynth.cpp **** 
  38:ChordSynth.cpp **** 	high_pass.Init(sample_rate);
  39:ChordSynth.cpp **** 	high_pass.SetFreq(250.f);
  40:ChordSynth.cpp **** 	high_pass.SetRes(0.1f);
  41:ChordSynth.cpp **** 
  42:ChordSynth.cpp **** 	low_pass.Init(sample_rate);
  43:ChordSynth.cpp **** 	low_pass.SetFreq(2800.f);
  44:ChordSynth.cpp **** 	low_pass.SetRes(0.1f);
  45:ChordSynth.cpp **** }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 114


  46:ChordSynth.cpp **** 
  47:ChordSynth.cpp **** void ChordSynth::set_bass_note(uint8_t scale_idx) {
 406              		.loc 9 47 51 is_stmt 1 view -0
 407              		.cfi_startproc
 408              		@ args = 0, pretend = 0, frame = 8
 409              		@ frame_needed = 0, uses_anonymous_args = 0
  48:ChordSynth.cpp **** 	bass_osc.SetFreq(
 410              		.loc 9 48 2 view .LVU82
 411              		.loc 9 48 18 is_stmt 0 view .LVU83
 412 0000 FF29     		cmp	r1, #255
  47:ChordSynth.cpp **** 	bass_osc.SetFreq(
 413              		.loc 9 47 51 view .LVU84
 414 0002 10B5     		push	{r4, lr}
 415              		.cfi_def_cfa_offset 8
 416              		.cfi_offset 4, -8
 417              		.cfi_offset 14, -4
 418 0004 0446     		mov	r4, r0
 419 0006 82B0     		sub	sp, sp, #8
 420              		.cfi_def_cfa_offset 16
 421              		.loc 9 48 18 view .LVU85
 422 0008 00F10800 		add	r0, r0, #8
 423              	.LVL17:
 424              		.loc 9 48 18 view .LVU86
 425 000c 09D1     		bne	.L16
 426 000e 9FED110A 		vldr.32	s0, .L17
 427              	.LVL18:
 428              	.L13:
 429              	.LBB2025:
 430              	.LBI2025:
 431              		.file 10 "../../DaisySP//Source/Synthesis/oscillator.h"
   1:../../DaisySP//Source/Synthesis/oscillator.h **** /*
   2:../../DaisySP//Source/Synthesis/oscillator.h **** Copyright (c) 2020 Electrosmith, Corp
   3:../../DaisySP//Source/Synthesis/oscillator.h **** 
   4:../../DaisySP//Source/Synthesis/oscillator.h **** Use of this source code is governed by an MIT-style
   5:../../DaisySP//Source/Synthesis/oscillator.h **** license that can be found in the LICENSE file or at
   6:../../DaisySP//Source/Synthesis/oscillator.h **** https://opensource.org/licenses/MIT.
   7:../../DaisySP//Source/Synthesis/oscillator.h **** */
   8:../../DaisySP//Source/Synthesis/oscillator.h **** 
   9:../../DaisySP//Source/Synthesis/oscillator.h **** #pragma once
  10:../../DaisySP//Source/Synthesis/oscillator.h **** #ifndef DSY_OSCILLATOR_H
  11:../../DaisySP//Source/Synthesis/oscillator.h **** #define DSY_OSCILLATOR_H
  12:../../DaisySP//Source/Synthesis/oscillator.h **** #include <stdint.h>
  13:../../DaisySP//Source/Synthesis/oscillator.h **** #include "Utility/dsp.h"
  14:../../DaisySP//Source/Synthesis/oscillator.h **** #ifdef __cplusplus
  15:../../DaisySP//Source/Synthesis/oscillator.h **** 
  16:../../DaisySP//Source/Synthesis/oscillator.h **** namespace daisysp
  17:../../DaisySP//Source/Synthesis/oscillator.h **** {
  18:../../DaisySP//Source/Synthesis/oscillator.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  19:../../DaisySP//Source/Synthesis/oscillator.h **** */
  20:../../DaisySP//Source/Synthesis/oscillator.h **** class Oscillator
  21:../../DaisySP//Source/Synthesis/oscillator.h **** {
  22:../../DaisySP//Source/Synthesis/oscillator.h ****   public:
  23:../../DaisySP//Source/Synthesis/oscillator.h ****     Oscillator() {}
  24:../../DaisySP//Source/Synthesis/oscillator.h ****     ~Oscillator() {}
  25:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
  26:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  27:../../DaisySP//Source/Synthesis/oscillator.h ****     enum
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 115


  28:../../DaisySP//Source/Synthesis/oscillator.h ****     {
  29:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_SIN,
  30:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_TRI,
  31:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_SAW,
  32:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_RAMP,
  33:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_SQUARE,
  34:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_TRI,
  35:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SAW,
  36:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SQUARE,
  37:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_LAST,
  38:../../DaisySP//Source/Synthesis/oscillator.h ****     };
  39:../../DaisySP//Source/Synthesis/oscillator.h **** 
  40:../../DaisySP//Source/Synthesis/oscillator.h **** 
  41:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Initializes the Oscillator
  42:../../DaisySP//Source/Synthesis/oscillator.h **** 
  43:../../DaisySP//Source/Synthesis/oscillator.h ****         \param sample_rate - sample rate of the audio engine being run, and the frequency that the 
  44:../../DaisySP//Source/Synthesis/oscillator.h **** 
  45:../../DaisySP//Source/Synthesis/oscillator.h ****         Defaults:
  46:../../DaisySP//Source/Synthesis/oscillator.h ****         - freq_ = 100 Hz
  47:../../DaisySP//Source/Synthesis/oscillator.h ****         - amp_ = 0.5
  48:../../DaisySP//Source/Synthesis/oscillator.h ****         - waveform_ = sine wave.
  49:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  50:../../DaisySP//Source/Synthesis/oscillator.h ****     void Init(float sample_rate)
  51:../../DaisySP//Source/Synthesis/oscillator.h ****     {
  52:../../DaisySP//Source/Synthesis/oscillator.h ****         sr_        = sample_rate;
  53:../../DaisySP//Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
  54:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
  55:../../DaisySP//Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
  56:../../DaisySP//Source/Synthesis/oscillator.h ****         pw_        = 0.5f;
  57:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
  59:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
  60:../../DaisySP//Source/Synthesis/oscillator.h ****         eoc_       = true;
  61:../../DaisySP//Source/Synthesis/oscillator.h ****         eor_       = true;
  62:../../DaisySP//Source/Synthesis/oscillator.h ****     }
  63:../../DaisySP//Source/Synthesis/oscillator.h **** 
  64:../../DaisySP//Source/Synthesis/oscillator.h **** 
  65:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Changes the frequency of the Oscillator, and recalculates phase increment.
  66:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  67:../../DaisySP//Source/Synthesis/oscillator.h ****     inline void SetFreq(const float f)
 432              		.loc 10 67 17 is_stmt 1 discriminator 2 view .LVU87
 433              	.LBB2026:
  68:../../DaisySP//Source/Synthesis/oscillator.h ****     {
  69:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = f;
 434              		.loc 10 69 9 discriminator 2 view .LVU88
 435              		.loc 10 69 20 is_stmt 0 discriminator 2 view .LVU89
 436 0012 84ED040A 		vstr.32	s0, [r4, #16]
  70:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 437              		.loc 10 70 9 is_stmt 1 discriminator 2 view .LVU90
 438              		.loc 10 70 34 is_stmt 0 discriminator 2 view .LVU91
 439 0016 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 440              	.LVL19:
 441              		.loc 10 70 20 discriminator 2 view .LVU92
 442 001a 84ED090A 		vstr.32	s0, [r4, #36]
 443              		.loc 10 70 20 discriminator 2 view .LVU93
 444              	.LBE2026:
 445              	.LBE2025:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 116


  49:ChordSynth.cpp **** 		(scale_idx == NO_BASS_FLAG ? 0.f 
  50:ChordSynth.cpp **** 		: mtof(bass_scale[scale_idx])));
  51:ChordSynth.cpp **** }
 446              		.loc 9 51 1 discriminator 2 view .LVU94
 447 001e 02B0     		add	sp, sp, #8
 448              		.cfi_remember_state
 449              		.cfi_def_cfa_offset 8
 450              		@ sp needed
 451 0020 10BD     		pop	{r4, pc}
 452              	.LVL20:
 453              	.L16:
 454              		.cfi_restore_state
 455              	.LBB2027:
 456              	.LBI2027:
 457              		.file 11 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\array"
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // <array> -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // Copyright (C) 2007-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** /** @file include/array
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****  *  This is a Standard C++ Library header.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****  */
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** #ifndef _GLIBCXX_ARRAY
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** #define _GLIBCXX_ARRAY 1
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** #pragma GCC system_header
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** #if __cplusplus < 201103L
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** # include <bits/c++0x_warning.h>
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** #else
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** #include <utility>
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** #include <bits/functexcept.h>
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** #include <bits/stl_algobase.h>
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** #include <bits/range_access.h>
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 117


  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** namespace std _GLIBCXX_VISIBILITY(default)
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** {
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****   template<typename _Tp, std::size_t _Nm>
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****     struct __array_traits
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****     {
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       typedef _Tp _Type[_Nm];
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       typedef __is_swappable<_Tp> _Is_swappable;
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       typedef __is_nothrow_swappable<_Tp> _Is_nothrow_swappable;
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       static constexpr _Tp&
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _S_ref(const _Type& __t, std::size_t __n) noexcept
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       static constexpr _Tp*
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _S_ptr(const _Type& __t) noexcept
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp*>(__t); }
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****     };
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****  template<typename _Tp>
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****    struct __array_traits<_Tp, 0>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****    {
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****      struct _Type { };
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****      typedef true_type _Is_swappable;
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****      typedef true_type _Is_nothrow_swappable;
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****      static constexpr _Tp&
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****      _S_ref(const _Type&, std::size_t) noexcept
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****      { return *static_cast<_Tp*>(nullptr); }
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****      static constexpr _Tp*
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****      _S_ptr(const _Type&) noexcept
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****      { return nullptr; }
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****    };
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****   /**
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****    *  @brief A standard container for storing a fixed size sequence of elements.
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****    *
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****    *  @ingroup sequences
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****    *
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****    *  <a href="tables.html#66">reversible container</a>, and a
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****    *  <a href="tables.html#67">sequence</a>.
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****    *
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****    *  Sets support random access iterators.
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****    *
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****    *  @tparam  Tp  Type of element. Required to be a complete type.
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****    *  @tparam  Nm  Number of elements.
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****   */
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****   template<typename _Tp, std::size_t _Nm>
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****     struct array
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****     {
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       typedef _Tp 	    			      value_type;
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       typedef value_type*			      pointer;
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       typedef const value_type*                       const_pointer;
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       typedef value_type&                   	      reference;
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 118


 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       typedef const value_type&             	      const_reference;
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       typedef value_type*          		      iterator;
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       typedef const value_type*			      const_iterator;
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       typedef std::size_t                    	      size_type;
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       typedef std::ptrdiff_t                   	      difference_type;
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       typedef std::reverse_iterator<iterator>	      reverse_iterator;
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       typedef std::reverse_iterator<const_iterator>   const_reverse_iterator;
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       // Support for zero-sized arrays mandatory.
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       typedef _GLIBCXX_STD_C::__array_traits<_Tp, _Nm> _AT_Type;
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       typename _AT_Type::_Type                         _M_elems;
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       // No explicit construct/copy/destroy for aggregate type.
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       // DR 776.
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX20_CONSTEXPR void
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       fill(const value_type& __u)
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { std::fill_n(begin(), size(), __u); }
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX20_CONSTEXPR void
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       swap(array& __other)
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       noexcept(_AT_Type::_Is_nothrow_swappable::value)
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { std::swap_ranges(begin(), end(), __other.begin()); }
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       // Iterators.
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR iterator
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       begin() noexcept
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { return iterator(data()); }
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_iterator
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       begin() const noexcept
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { return const_iterator(data()); }
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR iterator
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       end() noexcept
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { return iterator(data() + _Nm); }
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_iterator
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       end() const noexcept
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { return const_iterator(data() + _Nm); }
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       rbegin() noexcept
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { return reverse_iterator(end()); }
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       rbegin() const noexcept
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { return const_reverse_iterator(end()); }
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       rend() noexcept
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { return reverse_iterator(begin()); }
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       rend() const noexcept
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { return const_reverse_iterator(begin()); }
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 119


 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_iterator
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       cbegin() const noexcept
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { return const_iterator(data()); }
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_iterator
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       cend() const noexcept
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { return const_iterator(data() + _Nm); }
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       crbegin() const noexcept
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { return const_reverse_iterator(end()); }
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       crend() const noexcept
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { return const_reverse_iterator(begin()); }
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       // Capacity.
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       constexpr size_type
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       size() const noexcept { return _Nm; }
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       constexpr size_type
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       max_size() const noexcept { return _Nm; }
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX_NODISCARD constexpr bool
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       empty() const noexcept { return size() == 0; }
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       // Element access.
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR reference
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       operator[](size_type __n) noexcept
 458              		.loc 11 185 7 is_stmt 1 view .LVU95
 459              	.LBB2028:
 460              	.LBI2028:
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 461              		.loc 11 55 7 view .LVU96
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 462              		.loc 11 55 7 is_stmt 0 view .LVU97
 463              	.LBE2028:
 464              	.LBE2027:
 465              	.LBB2029:
 466              	.LBI2029:
 467              		.file 12 "../../DaisySP//Source/Utility/dsp.h"
   1:../../DaisySP//Source/Utility/dsp.h **** /*
   2:../../DaisySP//Source/Utility/dsp.h **** Copyright (c) 2020 Electrosmith, Corp, Emilie Gillet
   3:../../DaisySP//Source/Utility/dsp.h **** 
   4:../../DaisySP//Source/Utility/dsp.h **** Use of this source code is governed by an MIT-style
   5:../../DaisySP//Source/Utility/dsp.h **** license that can be found in the LICENSE file or at
   6:../../DaisySP//Source/Utility/dsp.h **** https://opensource.org/licenses/MIT.
   7:../../DaisySP//Source/Utility/dsp.h **** */
   8:../../DaisySP//Source/Utility/dsp.h **** 
   9:../../DaisySP//Source/Utility/dsp.h **** /** Helpful defines, functions, and other utilities for use in/with daisysp modules.
  10:../../DaisySP//Source/Utility/dsp.h **** */
  11:../../DaisySP//Source/Utility/dsp.h **** #pragma once
  12:../../DaisySP//Source/Utility/dsp.h **** #ifndef DSY_CORE_DSP
  13:../../DaisySP//Source/Utility/dsp.h **** #define DSY_CORE_DSP
  14:../../DaisySP//Source/Utility/dsp.h **** #include <cassert>
  15:../../DaisySP//Source/Utility/dsp.h **** #include <cstdint>
  16:../../DaisySP//Source/Utility/dsp.h **** #include <random>
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 120


  17:../../DaisySP//Source/Utility/dsp.h **** #include <cmath>
  18:../../DaisySP//Source/Utility/dsp.h **** 
  19:../../DaisySP//Source/Utility/dsp.h **** /** PIs
  20:../../DaisySP//Source/Utility/dsp.h **** */
  21:../../DaisySP//Source/Utility/dsp.h **** #define PI_F 3.1415927410125732421875f
  22:../../DaisySP//Source/Utility/dsp.h **** #define TWOPI_F (2.0f * PI_F)
  23:../../DaisySP//Source/Utility/dsp.h **** #define HALFPI_F (PI_F * 0.5f)
  24:../../DaisySP//Source/Utility/dsp.h **** #define DSY_MIN(in, mn) (in < mn ? in : mn)
  25:../../DaisySP//Source/Utility/dsp.h **** #define DSY_MAX(in, mx) (in > mx ? in : mx)
  26:../../DaisySP//Source/Utility/dsp.h **** #define DSY_CLAMP(in, mn, mx) (DSY_MIN(DSY_MAX(in, mn), mx))
  27:../../DaisySP//Source/Utility/dsp.h **** #define DSY_COUNTOF(_arr) (sizeof(_arr) / sizeof(_arr[0]))
  28:../../DaisySP//Source/Utility/dsp.h **** 
  29:../../DaisySP//Source/Utility/dsp.h **** namespace daisysp
  30:../../DaisySP//Source/Utility/dsp.h **** {
  31:../../DaisySP//Source/Utility/dsp.h **** //Avoids division for random floats. e.g. rand() * kRandFrac
  32:../../DaisySP//Source/Utility/dsp.h **** static constexpr float kRandFrac = 1.f / (float)RAND_MAX;
  33:../../DaisySP//Source/Utility/dsp.h **** 
  34:../../DaisySP//Source/Utility/dsp.h **** //Convert from semitones to other units. e.g. 2 ^ (kOneTwelfth * x)
  35:../../DaisySP//Source/Utility/dsp.h **** static constexpr float kOneTwelfth = 1.f / 12.f;
  36:../../DaisySP//Source/Utility/dsp.h **** 
  37:../../DaisySP//Source/Utility/dsp.h **** /** efficient floating point min/max
  38:../../DaisySP//Source/Utility/dsp.h **** c/o stephen mccaul
  39:../../DaisySP//Source/Utility/dsp.h **** */
  40:../../DaisySP//Source/Utility/dsp.h **** inline float fmax(float a, float b)
  41:../../DaisySP//Source/Utility/dsp.h **** {
  42:../../DaisySP//Source/Utility/dsp.h ****     float r;
  43:../../DaisySP//Source/Utility/dsp.h **** #ifdef __arm__
  44:../../DaisySP//Source/Utility/dsp.h ****     asm("vmaxnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  45:../../DaisySP//Source/Utility/dsp.h **** #else
  46:../../DaisySP//Source/Utility/dsp.h ****     r = (a > b) ? a : b;
  47:../../DaisySP//Source/Utility/dsp.h **** #endif // __arm__
  48:../../DaisySP//Source/Utility/dsp.h ****     return r;
  49:../../DaisySP//Source/Utility/dsp.h **** }
  50:../../DaisySP//Source/Utility/dsp.h **** 
  51:../../DaisySP//Source/Utility/dsp.h **** inline float fmin(float a, float b)
  52:../../DaisySP//Source/Utility/dsp.h **** {
  53:../../DaisySP//Source/Utility/dsp.h ****     float r;
  54:../../DaisySP//Source/Utility/dsp.h **** #ifdef __arm__
  55:../../DaisySP//Source/Utility/dsp.h ****     asm("vminnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  56:../../DaisySP//Source/Utility/dsp.h **** #else
  57:../../DaisySP//Source/Utility/dsp.h ****     r = (a < b) ? a : b;
  58:../../DaisySP//Source/Utility/dsp.h **** #endif // __arm__
  59:../../DaisySP//Source/Utility/dsp.h ****     return r;
  60:../../DaisySP//Source/Utility/dsp.h **** }
  61:../../DaisySP//Source/Utility/dsp.h **** 
  62:../../DaisySP//Source/Utility/dsp.h **** /** quick fp clamp
  63:../../DaisySP//Source/Utility/dsp.h **** */
  64:../../DaisySP//Source/Utility/dsp.h **** inline float fclamp(float in, float min, float max)
  65:../../DaisySP//Source/Utility/dsp.h **** {
  66:../../DaisySP//Source/Utility/dsp.h ****     return fmin(fmax(in, min), max);
  67:../../DaisySP//Source/Utility/dsp.h **** }
  68:../../DaisySP//Source/Utility/dsp.h **** 
  69:../../DaisySP//Source/Utility/dsp.h **** /** From Musicdsp.org "Fast power and root estimates for 32bit floats)
  70:../../DaisySP//Source/Utility/dsp.h **** Original code by Stefan Stenzel
  71:../../DaisySP//Source/Utility/dsp.h **** These are approximations
  72:../../DaisySP//Source/Utility/dsp.h **** */
  73:../../DaisySP//Source/Utility/dsp.h **** inline float fastpower(float f, int n)
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 121


  74:../../DaisySP//Source/Utility/dsp.h **** {
  75:../../DaisySP//Source/Utility/dsp.h ****     long *lp, l;
  76:../../DaisySP//Source/Utility/dsp.h ****     lp = (long *)(&f);
  77:../../DaisySP//Source/Utility/dsp.h ****     l  = *lp;
  78:../../DaisySP//Source/Utility/dsp.h ****     l -= 0x3F800000;
  79:../../DaisySP//Source/Utility/dsp.h ****     l <<= (n - 1);
  80:../../DaisySP//Source/Utility/dsp.h ****     l += 0x3F800000;
  81:../../DaisySP//Source/Utility/dsp.h ****     *lp = l;
  82:../../DaisySP//Source/Utility/dsp.h ****     return f;
  83:../../DaisySP//Source/Utility/dsp.h **** }
  84:../../DaisySP//Source/Utility/dsp.h **** 
  85:../../DaisySP//Source/Utility/dsp.h **** inline float fastroot(float f, int n)
  86:../../DaisySP//Source/Utility/dsp.h **** {
  87:../../DaisySP//Source/Utility/dsp.h ****     long *lp, l;
  88:../../DaisySP//Source/Utility/dsp.h ****     lp = (long *)(&f);
  89:../../DaisySP//Source/Utility/dsp.h ****     l  = *lp;
  90:../../DaisySP//Source/Utility/dsp.h ****     l -= 0x3F800000;
  91:../../DaisySP//Source/Utility/dsp.h ****     l >>= (n - 1);
  92:../../DaisySP//Source/Utility/dsp.h ****     l += 0x3F800000;
  93:../../DaisySP//Source/Utility/dsp.h ****     *lp = l;
  94:../../DaisySP//Source/Utility/dsp.h ****     return f;
  95:../../DaisySP//Source/Utility/dsp.h **** }
  96:../../DaisySP//Source/Utility/dsp.h **** 
  97:../../DaisySP//Source/Utility/dsp.h **** /** Significantly more efficient than fmodf(x, 1.0f) for calculating
  98:../../DaisySP//Source/Utility/dsp.h ****  *  the decimal part of a floating point value.
  99:../../DaisySP//Source/Utility/dsp.h ****  */
 100:../../DaisySP//Source/Utility/dsp.h **** inline float fastmod1f(float x)
 101:../../DaisySP//Source/Utility/dsp.h **** {
 102:../../DaisySP//Source/Utility/dsp.h ****     return x - static_cast<int>(x);
 103:../../DaisySP//Source/Utility/dsp.h **** }
 104:../../DaisySP//Source/Utility/dsp.h **** 
 105:../../DaisySP//Source/Utility/dsp.h **** /** From http://openaudio.blogspot.com/2017/02/faster-log10-and-pow.html
 106:../../DaisySP//Source/Utility/dsp.h **** No approximation, pow10f(x) gives a 90% speed increase over powf(10.f, x)
 107:../../DaisySP//Source/Utility/dsp.h **** */
 108:../../DaisySP//Source/Utility/dsp.h **** inline float pow10f(float f)
 109:../../DaisySP//Source/Utility/dsp.h **** {
 110:../../DaisySP//Source/Utility/dsp.h ****     return expf(2.302585092994046f * f);
 111:../../DaisySP//Source/Utility/dsp.h **** }
 112:../../DaisySP//Source/Utility/dsp.h **** 
 113:../../DaisySP//Source/Utility/dsp.h **** /* Original code for fastlog2f by Dr. Paul Beckmann from the ARM community forum, adapted from the 
 114:../../DaisySP//Source/Utility/dsp.h **** About 25% performance increase over std::log10f
 115:../../DaisySP//Source/Utility/dsp.h **** */
 116:../../DaisySP//Source/Utility/dsp.h **** inline float fastlog2f(float f)
 117:../../DaisySP//Source/Utility/dsp.h **** {
 118:../../DaisySP//Source/Utility/dsp.h ****     float frac;
 119:../../DaisySP//Source/Utility/dsp.h ****     int   exp;
 120:../../DaisySP//Source/Utility/dsp.h ****     frac = frexpf(fabsf(f), &exp);
 121:../../DaisySP//Source/Utility/dsp.h ****     f    = 1.23149591368684f;
 122:../../DaisySP//Source/Utility/dsp.h ****     f *= frac;
 123:../../DaisySP//Source/Utility/dsp.h ****     f += -4.11852516267426f;
 124:../../DaisySP//Source/Utility/dsp.h ****     f *= frac;
 125:../../DaisySP//Source/Utility/dsp.h ****     f += 6.02197014179219f;
 126:../../DaisySP//Source/Utility/dsp.h ****     f *= frac;
 127:../../DaisySP//Source/Utility/dsp.h ****     f += -3.13396450166353f;
 128:../../DaisySP//Source/Utility/dsp.h ****     f += exp;
 129:../../DaisySP//Source/Utility/dsp.h ****     return (f);
 130:../../DaisySP//Source/Utility/dsp.h **** }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 122


 131:../../DaisySP//Source/Utility/dsp.h **** 
 132:../../DaisySP//Source/Utility/dsp.h **** inline float fastlog10f(float f)
 133:../../DaisySP//Source/Utility/dsp.h **** {
 134:../../DaisySP//Source/Utility/dsp.h ****     return fastlog2f(f) * 0.3010299956639812f;
 135:../../DaisySP//Source/Utility/dsp.h **** }
 136:../../DaisySP//Source/Utility/dsp.h **** 
 137:../../DaisySP//Source/Utility/dsp.h **** /** Midi to frequency helper
 138:../../DaisySP//Source/Utility/dsp.h **** */
 139:../../DaisySP//Source/Utility/dsp.h **** inline float mtof(float m)
 468              		.loc 12 139 14 is_stmt 1 view .LVU98
 469              	.LBB2030:
 140:../../DaisySP//Source/Utility/dsp.h **** {
 141:../../DaisySP//Source/Utility/dsp.h ****     return powf(2, (m - 69.0f) / 12.0f) * 440.0f;
 470              		.loc 12 141 5 view .LVU99
 471              	.LBE2030:
 472              	.LBE2029:
  50:ChordSynth.cpp **** }
 473              		.loc 9 50 9 is_stmt 0 view .LVU100
 474 0022 04EB8101 		add	r1, r4, r1, lsl #2
 475              	.LVL21:
 476              	.LBB2035:
 477              	.LBB2031:
 478              		.loc 12 141 23 view .LVU101
 479 0026 9FED0C7A 		vldr.32	s14, .L17+4
 480              		.loc 12 141 16 view .LVU102
 481 002a F2EE080A 		vmov.f32	s1, #1.2e+1
 482 002e 0190     		str	r0, [sp, #4]
 483              	.LBE2031:
 484              	.LBE2035:
  50:ChordSynth.cpp **** }
 485              		.loc 9 50 9 view .LVU103
 486 0030 D1ED0D7A 		vldr.32	s15, [r1, #52]	@ int
 487              	.LBB2036:
 488              	.LBB2032:
 489              		.loc 12 141 16 view .LVU104
 490 0034 B0EE000A 		vmov.f32	s0, #2.0e+0
 491              	.LBE2032:
 492              	.LBE2036:
  50:ChordSynth.cpp **** }
 493              		.loc 9 50 9 view .LVU105
 494 0038 F8EEE77A 		vcvt.f32.s32	s15, s15
 495              	.LBB2037:
 496              	.LBB2033:
 497              		.loc 12 141 23 view .LVU106
 498 003c 77EEC77A 		vsub.f32	s15, s15, s14
 499              		.loc 12 141 16 view .LVU107
 500 0040 C7EEA00A 		vdiv.f32	s1, s15, s1
 501 0044 FFF7FEFF 		bl	powf
 502              	.LVL22:
 503              		.loc 12 141 43 view .LVU108
 504 0048 DFED047A 		vldr.32	s15, .L17+8
 505              	.LBE2033:
 506              	.LBE2037:
 507 004c 0198     		ldr	r0, [sp, #4]
 508              	.LBB2038:
 509              	.LBB2034:
 510 004e 20EE270A 		vmul.f32	s0, s0, s15
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 123


 511              		.loc 12 141 43 view .LVU109
 512              	.LBE2034:
 513              	.LBE2038:
 514 0052 DEE7     		b	.L13
 515              	.L18:
 516              		.align	2
 517              	.L17:
 518 0054 00000000 		.word	0
 519 0058 00008A42 		.word	1116340224
 520 005c 0000DC43 		.word	1138491392
 521              		.cfi_endproc
 522              	.LFE4297:
 524              		.section	.text._ZN10ChordSynth7processEv,"ax",%progbits
 525              		.align	1
 526              		.p2align 2,,3
 527              		.global	_ZN10ChordSynth7processEv
 528              		.syntax unified
 529              		.thumb
 530              		.thumb_func
 531              		.fpu fpv5-d16
 533              	_ZN10ChordSynth7processEv:
 534              	.LVL23:
 535              	.LFB4298:
  52:ChordSynth.cpp **** 
  53:ChordSynth.cpp **** float ChordSynth::process() {
 536              		.loc 9 53 29 is_stmt 1 view -0
 537              		.cfi_startproc
 538              		@ args = 0, pretend = 0, frame = 0
 539              		@ frame_needed = 0, uses_anonymous_args = 0
  54:ChordSynth.cpp ****     float chord_sample{};
 540              		.loc 9 54 5 view .LVU111
  55:ChordSynth.cpp **** 	for (auto& osc : chord_oscs) {
 541              		.loc 9 55 2 view .LVU112
  53:ChordSynth.cpp ****     float chord_sample{};
 542              		.loc 9 53 29 is_stmt 0 view .LVU113
 543 0000 70B5     		push	{r4, r5, r6, lr}
 544              		.cfi_def_cfa_offset 16
 545              		.cfi_offset 4, -16
 546              		.cfi_offset 5, -12
 547              		.cfi_offset 6, -8
 548              		.cfi_offset 14, -4
 549              	.LBB2039:
 550              	.LBB2040:
 551              	.LBB2041:
 552              	.LBB2042:
 553              		.file 13 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_iterat
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // Iterators -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // This library is distributed in the hope that it will be useful,
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 124


  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Copyright (c) 1996-1998
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * representations about the suitability of this software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** /** @file bits/stl_iterator.h
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  Do not attempt to use it directly. @headername{iterator}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  This file implements reverse_iterator, back_insert_iterator,
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  front_insert_iterator, insert_iterator, __normal_iterator, and their
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  supporting functions and overloaded operators.
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  */
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #ifndef _STL_ITERATOR_H
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #define _STL_ITERATOR_H 1
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #include <bits/cpp_type_traits.h>
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #include <ext/type_traits.h>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #include <bits/move.h>
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #include <bits/ptr_traits.h>
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus >= 201103L
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 125


  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # include <type_traits>
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # define __cpp_lib_array_constexpr 201811L
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # define __cpp_lib_constexpr_iterator 201811L
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #elif __cplusplus == 201703L
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # define __cpp_lib_array_constexpr 201803L
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # include <compare>
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # include <new>
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # include <bits/iterator_concepts.h>
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** {
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    * @addtogroup iterators
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    * @{
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    */
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   namespace __detail
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   {
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     // Weaken iterator_category _Cat to _Limit if it is derived from that,
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     // otherwise use _Otherwise.
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     template<typename _Cat, typename _Limit, typename _Otherwise = _Cat>
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using __clamp_iter_cat
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	= conditional_t<derived_from<_Cat, _Limit>, _Limit, _Otherwise>;
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   }
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // 24.4.1 Reverse iterators
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Bidirectional and random access iterators have corresponding reverse
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  %iterator adaptors that iterate through the data structure in the
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  opposite direction.  They have the same signatures as the corresponding
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  iterators.  The fundamental relation between a reverse %iterator and its
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  corresponding %iterator @c i is established by the identity:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @code
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *      &*(reverse_iterator(i)) == &*(i - 1)
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @endcode
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  <em>This mapping is dictated by the fact that while there is always a
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  pointer past the end of an array, there might not be a valid pointer
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  before the beginning of an array.</em> [24.4.1]/1,2
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Reverse iterators can be tricky and surprising at first.  Their
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  semantics make sense, however, and the trickiness is a side effect of
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  the requirement that the iterators must be safe.
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class reverse_iterator
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 126


 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : public iterator<typename iterator_traits<_Iterator>::iterator_category,
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		      typename iterator_traits<_Iterator>::value_type,
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		      typename iterator_traits<_Iterator>::difference_type,
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		      typename iterator_traits<_Iterator>::pointer,
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****                       typename iterator_traits<_Iterator>::reference>
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Iterator current;
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef iterator_traits<_Iterator>		__traits_type;
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Iterator					iterator_type;
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::difference_type	difference_type;
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::pointer		pointer;
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::reference		reference;
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using iterator_concept
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	= conditional_t<random_access_iterator<_Iterator>,
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 			random_access_iterator_tag,
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 			bidirectional_iterator_tag>;
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using iterator_category
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	= __detail::__clamp_iter_cat<typename __traits_type::iterator_category,
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 				     random_access_iterator_tag>;
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The default constructor value-initializes member @p current.
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  If it is a pointer, that means it is zero-initialized.
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // 235 No specification of default ctor for reverse_iterator
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // 1012. reverse_iterator default ctor should value initialize
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reverse_iterator() : current() { }
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This %iterator will move in the opposite direction that @p x does.
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       explicit _GLIBCXX17_CONSTEXPR
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reverse_iterator(iterator_type __x) : current(__x) { }
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The copy constructor is normal.
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reverse_iterator(const reverse_iterator& __x)
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : current(__x.current) { }
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus >= 201103L
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reverse_iterator& operator=(const reverse_iterator&) = default;
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  A %reverse_iterator across other types can be copied if the
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  underlying %iterator can be converted to the type of @c current.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 127


 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _Iter>
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_GLIBCXX17_CONSTEXPR
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         reverse_iterator(const reverse_iterator<_Iter>& __x)
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	: current(__x.base()) { }
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  @c current, the %iterator used for underlying work.
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR iterator_type
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       base() const
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return current; }
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A reference to the value at @c --current
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This requires that @c --current is dereferenceable.
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @warning This implementation requires that for an iterator of the
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *           underlying iterator type, @c x, a reference obtained by
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *           @c *x remains valid after @c x has been modified or
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *           destroyed. This is a bug: http://gcc.gnu.org/PR51823
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reference
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*() const
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_Iterator __tmp = current;
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *--__tmp;
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A pointer to the value at @c --current
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This requires that @c --current is dereferenceable.
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR pointer
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator->() const
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_concepts >= 201907L
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       requires is_pointer_v<_Iterator>
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	|| requires(const _Iterator __i) { __i.operator->(); }
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	// 1052. operator-> should also support smart pointers
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_Iterator __tmp = current;
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	--__tmp;
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return _S_to_pointer(__tmp);
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  @c *this
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Decrements the underlying iterator.
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++()
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 128


 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	--current;
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  The original value of @c *this
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Decrements the underlying iterator.
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int)
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	reverse_iterator __tmp = *this;
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	--current;
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return __tmp;
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  @c *this
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Increments the underlying iterator.
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator--()
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++current;
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A reverse_iterator with the previous value of @c *this
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Increments the underlying iterator.
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator--(int)
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	reverse_iterator __tmp = *this;
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++current;
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return __tmp;
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A reverse_iterator that refers to @c current - @a __n
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator+(difference_type __n) const
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return reverse_iterator(current - __n); }
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  *this
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Moves the underlying iterator backwards @a __n steps.
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 129


 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator+=(difference_type __n)
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	current -= __n;
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A reverse_iterator that refers to @c current - @a __n
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator-(difference_type __n) const
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return reverse_iterator(current + __n); }
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  *this
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Moves the underlying iterator forwards @a __n steps.
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator-=(difference_type __n)
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	current += __n;
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  The value at @c current - @a __n - 1
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reference
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator[](difference_type __n) const
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *(*this + __n); }
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       friend constexpr iter_rvalue_reference_t<_Iterator>
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       iter_move(const reverse_iterator& __i)
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       noexcept(is_nothrow_copy_constructible_v<_Iterator>
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       && noexcept(ranges::iter_move(--std::declval<_Iterator&>())))
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	auto __tmp = __i.base();
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return ranges::iter_move(--__tmp);
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<indirectly_swappable<_Iterator> _Iter2>
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	friend constexpr void
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	iter_swap(const reverse_iterator& __x,
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		  const reverse_iterator<_Iter2>& __y)
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	noexcept(is_nothrow_copy_constructible_v<_Iterator>
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		 && is_nothrow_copy_constructible_v<_Iter2>
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		 && noexcept(ranges::iter_swap(--std::declval<_Iterator&>(),
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 					       --std::declval<_Iter2&>())))
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	{
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 130


 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  auto __xtmp = __x.base();
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  auto __ytmp = __y.base();
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  ranges::iter_swap(--__xtmp, --__ytmp);
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	}
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     private:
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _Tp>
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	static _GLIBCXX17_CONSTEXPR _Tp*
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_S_to_pointer(_Tp* __p)
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         { return __p; }
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _Tp>
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	static _GLIBCXX17_CONSTEXPR pointer
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_S_to_pointer(_Tp __t)
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         { return __t.operator->(); }
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   //@{
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param  __x  A %reverse_iterator.
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param  __y  A %reverse_iterator.
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @return  A simple bool.
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Reverse iterators forward comparisons to their underlying base()
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  iterators.
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus <= 201703L || ! defined __cpp_lib_concepts
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const reverse_iterator<_Iterator>& __x,
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() == __y.base(); }
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const reverse_iterator<_Iterator>& __x,
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() < __x.base(); }
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const reverse_iterator<_Iterator>& __x,
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x == __y); }
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const reverse_iterator<_Iterator>& __x,
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y < __x; }
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const reverse_iterator<_Iterator>& __x,
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 131


 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__y < __x); }
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const reverse_iterator<_Iterator>& __x,
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x < __y); }
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // DR 280. Comparison of reverse_iterator to const reverse_iterator.
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const reverse_iterator<_IteratorL>& __x,
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() == __y.base(); }
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const reverse_iterator<_IteratorL>& __x,
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() < __x.base(); }
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const reverse_iterator<_IteratorL>& __x,
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x == __y); }
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const reverse_iterator<_IteratorL>& __x,
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y < __x; }
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const reverse_iterator<_IteratorL>& __x,
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__y < __x); }
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const reverse_iterator<_IteratorL>& __x,
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x < __y); }
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else // C++20
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const reverse_iterator<_IteratorL>& __x,
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() == __y.base() } -> convertible_to<bool>; }
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() == __y.base(); }
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const reverse_iterator<_IteratorL>& __x,
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 132


 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() != __y.base() } -> convertible_to<bool>; }
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() != __y.base(); }
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const reverse_iterator<_IteratorL>& __x,
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() > __y.base() } -> convertible_to<bool>; }
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() > __y.base(); }
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const reverse_iterator<_IteratorL>& __x,
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() < __y.base() } -> convertible_to<bool>; }
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() < __y.base(); }
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const reverse_iterator<_IteratorL>& __x,
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() >= __y.base() } -> convertible_to<bool>; }
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() >= __y.base(); }
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const reverse_iterator<_IteratorL>& __x,
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() <= __y.base() } -> convertible_to<bool>; }
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() <= __y.base(); }
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL,
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	   three_way_comparable_with<_IteratorL> _IteratorR>
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr compare_three_way_result_t<_IteratorL, _IteratorR>
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=>(const reverse_iterator<_IteratorL>& __x,
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		const reverse_iterator<_IteratorR>& __y)
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() <=> __x.base(); }
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif // C++20
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   //@}
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus < 201103L
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline typename reverse_iterator<_Iterator>::difference_type
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const reverse_iterator<_Iterator>& __x,
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() - __x.base(); }
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline typename reverse_iterator<_IteratorL>::difference_type
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const reverse_iterator<_IteratorL>& __x,
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() - __x.base(); }
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // DR 685. reverse_iterator/move_iterator difference has invalid signatures
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR auto
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 133


 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const reverse_iterator<_IteratorL>& __x,
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     -> decltype(__y.base() - __x.base())
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() - __x.base(); }
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR reverse_iterator<_Iterator>
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator+(typename reverse_iterator<_Iterator>::difference_type __n,
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __x)
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return reverse_iterator<_Iterator>(__x.base() - __n); }
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus >= 201103L
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // Same as C++14 make_reverse_iterator but used in C++11 mode too.
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR reverse_iterator<_Iterator>
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     __make_reverse_iterator(_Iterator __i)
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return reverse_iterator<_Iterator>(__i); }
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # if __cplusplus >= 201402L
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #  define __cpp_lib_make_reverse_iterator 201402
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // DR 2285. make_reverse_iterator
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /// Generator function for reverse_iterator.
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR reverse_iterator<_Iterator>
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     make_reverse_iterator(_Iterator __i)
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return reverse_iterator<_Iterator>(__i); }
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #  if __cplusplus > 201703L && defined __cpp_lib_concepts
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator1, typename _Iterator2>
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires (!sized_sentinel_for<_Iterator1, _Iterator2>)
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline constexpr bool
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     disable_sized_sentinel_for<reverse_iterator<_Iterator1>,
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 			       reverse_iterator<_Iterator2>> = true;
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #  endif // C++20
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # endif // C++14
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     auto
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     __niter_base(reverse_iterator<_Iterator> __it)
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     -> decltype(__make_reverse_iterator(__niter_base(__it.base())))
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __make_reverse_iterator(__niter_base(__it.base())); }
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     struct __is_move_iterator<reverse_iterator<_Iterator> >
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : __is_move_iterator<_Iterator>
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { };
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     auto
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     __miter_base(reverse_iterator<_Iterator> __it)
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     -> decltype(__make_reverse_iterator(__miter_base(__it.base())))
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __make_reverse_iterator(__miter_base(__it.base())); }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 134


 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif // C++11
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // 24.4.2.2.1 back_insert_iterator
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Assigning a T to the iterator appends it to the container using
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  push_back.
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Tip:  Using the back_inserter function to create these iterators can
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  save typing.
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class back_insert_iterator
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Container* container;
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Container          container_type;
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using difference_type = ptrdiff_t;
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       constexpr back_insert_iterator() noexcept : container(nullptr) { }
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// The only way to create this %iterator is with a container.
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       explicit _GLIBCXX20_CONSTEXPR
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator(_Container& __x)
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : container(std::__addressof(__x)) { }
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @param  __value  An instance of whatever type
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 reference-to-const T for container<T>.
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This kind of %iterator doesn't really have a @a position in the
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  container (you can think of the position as being permanently at
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  the end, if you like).  Assigning a value to the %iterator will
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  always append the value to the end of the container.
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus < 201103L
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_back(__value);
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 135


 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_back(__value);
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_back(std::move(__value));
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*()
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++()
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int)
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param  __x  A container of arbitrary type.
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @return  An instance of back_insert_iterator working on @p __x.
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  This wrapper function helps in creating back_insert_iterator instances.
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  types for you.
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline back_insert_iterator<_Container>
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     back_inserter(_Container& __x)
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return back_insert_iterator<_Container>(__x); }
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Assigning a T to the iterator prepends it to the container using
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  push_front.
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Tip:  Using the front_inserter function to create these iterators can
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 136


 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  save typing.
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class front_insert_iterator
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Container* container;
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Container          container_type;
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using difference_type = ptrdiff_t;
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       constexpr front_insert_iterator() noexcept : container(nullptr) { }
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// The only way to create this %iterator is with a container.
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       explicit _GLIBCXX20_CONSTEXPR
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator(_Container& __x)
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : container(std::__addressof(__x)) { }
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @param  __value  An instance of whatever type
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 reference-to-const T for container<T>.
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This kind of %iterator doesn't really have a @a position in the
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  container (you can think of the position as being permanently at
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  the front, if you like).  Assigning a value to the %iterator will
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  always prepend the value to the front of the container.
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus < 201103L
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_front(__value);
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_front(__value);
 743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_front(std::move(__value));
 751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 137


 753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.
 756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*()
 759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++()
 765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator
 770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int)
 771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
 773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param  __x  A container of arbitrary type.
 776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @return  An instance of front_insert_iterator working on @p x.
 777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  This wrapper function helps in creating front_insert_iterator instances.
 779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  types for you.
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
 787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline front_insert_iterator<_Container>
 788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     front_inserter(_Container& __x)
 789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return front_insert_iterator<_Container>(__x); }
 790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Assigning a T to the iterator inserts it in the container at the
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  %iterator's position, rather than overwriting the value at that
 797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  position.
 798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  (Sequences will actually insert a @e copy of the value before the
 800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  %iterator's position.)
 801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Tip:  Using the inserter function to create these iterators can
 803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  save typing.
 804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class insert_iterator
 807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && defined __cpp_lib_concepts
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 138


 810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using _Iter = std::__detail::__range_iter_t<_Container>;
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Container* container = nullptr;
 814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Iter iter = _Iter();
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename _Container::iterator		_Iter;
 817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Container* container;
 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Iter iter;
 821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Container          container_type;
 826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && defined __cpp_lib_concepts
 828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using difference_type = ptrdiff_t;
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator() = default;
 831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The only way to create this %iterator is with a container and an
 835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  initial position (a normal %iterator into the container).
 836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator(_Container& __x, _Iter __i)
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : container(std::__addressof(__x)), iter(__i) {}
 840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @param  __value  An instance of whatever type
 843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 reference-to-const T for container<T>.
 845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This kind of %iterator maintains its own position in the
 848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  container.  Assigning a value to the %iterator will insert the
 849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  value into the container at the place before the %iterator.
 850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The position is maintained such that subsequent assignments will
 852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  insert values immediately after one another.  For example,
 853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @code
 854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     // vector v contains A and Z
 855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     insert_iterator i (v, ++v.begin());
 857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     i = 1;
 858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     i = 2;
 859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     i = 3;
 860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     // vector v contains A, 1, 2, 3, and Z
 862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @endcode
 863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus < 201103L
 865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::const_reference __value)
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 139


 867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	iter = container->insert(iter, __value);
 869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++iter;
 870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	iter = container->insert(iter, __value);
 878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++iter;
 879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	iter = container->insert(iter, std::move(__value));
 887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++iter;
 888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.
 893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*()
 896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++()
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int)
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
 910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param __x  A container of arbitrary type.
 913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param __i  An iterator into the container.
 914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @return  An instance of insert_iterator working on @p __x.
 915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  This wrapper function helps in creating insert_iterator instances.
 917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  types for you.
 922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && defined __cpp_lib_concepts
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 140


 924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr insert_iterator<_Container>
 926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inserter(_Container& __x, std::__detail::__range_iter_t<_Container> __i)
 927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return insert_iterator<_Container>(__x, __i); }
 928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container, typename _Iterator>
 930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline insert_iterator<_Container>
 931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inserter(_Container& __x, _Iterator __i)
 932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       return insert_iterator<_Container>(__x,
 934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 					 typename _Container::iterator(__i));
 935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     }
 936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // @} group iterators
 939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** _GLIBCXX_END_NAMESPACE_VERSION
 941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** } // namespace
 942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
 944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** {
 945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // This iterator adapter is @a normal in the sense that it does not
 948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // change the semantics of any of the operators of its iterator
 949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // parameter.  Its primary purpose is to convert an iterator that is
 950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // not a class, e.g. a pointer, into an iterator that is a class.
 951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // The _Container parameter exists solely so that different containers
 952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // using this template can instantiate different types, even if the
 953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _Iterator parameter is the same.
 954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
 955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class __normal_iterator
 956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Iterator _M_current;
 959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef std::iterator_traits<_Iterator>		__traits_type;
 961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Iterator					iterator_type;
 964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::iterator_category iterator_category;
 965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::value_type  	value_type;
 966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::difference_type 	difference_type;
 967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::reference 	reference;
 968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::pointer   	pointer;
 969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
 971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using iterator_concept = std::__detail::__iter_concept<_Iterator>;
 972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX_CONSTEXPR __normal_iterator() _GLIBCXX_NOEXCEPT
 975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(_Iterator()) { }
 976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       explicit _GLIBCXX20_CONSTEXPR
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 554              		.loc 13 979 23 view .LVU114
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 141


 555 0002 D0E92546 		ldrd	r4, r6, [r0, #148]
 556              	.LBE2042:
 557              	.LBE2041:
 558              	.LBE2040:
 559              	.LBE2039:
  53:ChordSynth.cpp ****     float chord_sample{};
 560              		.loc 9 53 29 view .LVU115
 561 0006 2DED028B 		vpush.64	{d8}
 562              		.cfi_def_cfa_offset 24
 563              		.cfi_offset 80, -24
 564              		.cfi_offset 81, -20
 565              	.LBB2045:
 566              		.loc 9 55 19 view .LVU116
 567 000a B442     		cmp	r4, r6
 568              	.LBE2045:
  53:ChordSynth.cpp ****     float chord_sample{};
 569              		.loc 9 53 29 view .LVU117
 570 000c 0546     		mov	r5, r0
 571              	.LVL24:
 572              	.LBB2046:
 573              	.LBB2043:
 574              	.LBI2043:
 575              		.file 14 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_vector
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Vector implementation -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 142


  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Copyright (c) 1996
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * representations about the suitability of this  software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** /** @file bits/stl_vector.h
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *  Do not attempt to use it directly. @headername{vector}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #ifndef _STL_VECTOR_H
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _STL_VECTOR_H 1
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <bits/stl_iterator_base_funcs.h>
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <bits/functexcept.h>
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <bits/concept_check.h>
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <initializer_list>
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus > 201703L
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # include <compare>
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <debug/assertions.h>
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** extern "C" void
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** __sanitizer_annotate_contiguous_container(const void*, const void*,
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  const void*, const void*);
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** namespace std _GLIBCXX_VISIBILITY(default)
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** {
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   /// See bits/stl_deque.h's _Deque_base for an explanation.
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   template<typename _Tp, typename _Alloc>
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     struct _Vector_base
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     {
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	rebind<_Tp>::other _Tp_alloc_type;
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        	pointer;
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       struct _Vector_impl_data
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 143


  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer _M_start;
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer _M_finish;
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer _M_end_of_storage;
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl_data() _GLIBCXX_NOEXCEPT
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl_data(_Vector_impl_data&& __x) noexcept
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage(__x._M_end_of_storage)
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_copy_data(_Vector_impl_data const& __x) _GLIBCXX_NOEXCEPT
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_start = __x._M_start;
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_finish = __x._M_finish;
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage = __x._M_end_of_storage;
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_swap_data(_Vector_impl_data& __x) _GLIBCXX_NOEXCEPT
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Do not use std::swap(_M_start, __x._M_start), etc as it loses
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // information used by TBAA.
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Vector_impl_data __tmp;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __tmp._M_copy_data(*this);
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_copy_data(__x);
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __x._M_copy_data(__tmp);
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       };
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       struct _Vector_impl
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    is_nothrow_default_constructible<_Tp_alloc_type>::value)
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type()
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(__a)
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// Not defaulted, to enforce noexcept(true) even when
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// !is_nothrow_move_constructible<_Tp_alloc_type>.
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Vector_impl&& __x) noexcept
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a) noexcept
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__a))
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 144


 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a, _Vector_impl&& __rv) noexcept
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__a)), _Vector_impl_data(std::move(__rv))
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	template<typename = _Tp_alloc_type>
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  struct _Asan
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ::size_type size_type;
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void _S_shrink(_Vector_impl&, size_type) { }
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void _S_on_dealloc(_Vector_impl&) { }
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    typedef _Vector_impl& _Reinit;
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    struct _Grow
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow(_Vector_impl&, size_type) { }
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      void _M_grew(size_type) { }
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    };
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  };
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// Enable ASan annotations for memory obtained from std::allocator.
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	template<typename _Up>
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  struct _Asan<allocator<_Up> >
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ::size_type size_type;
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // Adjust ASan annotation for [_M_start, _M_end_of_storage) to
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // mark end of valid region as __curr instead of __prev.
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_adjust(_Vector_impl& __impl, pointer __prev, pointer __curr)
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __sanitizer_annotate_contiguous_container(__impl._M_start,
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  __impl._M_end_of_storage, __prev, __curr);
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_grow(_Vector_impl& __impl, size_type __n)
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    { _S_adjust(__impl, __impl._M_finish, __impl._M_finish + __n); }
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_shrink(_Vector_impl& __impl, size_type __n)
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    { _S_adjust(__impl, __impl._M_finish + __n, __impl._M_finish); }
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_on_dealloc(_Vector_impl& __impl)
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      if (__impl._M_start)
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		_S_adjust(__impl, __impl._M_finish, __impl._M_end_of_storage);
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 145


 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // Used on reallocation to tell ASan unused capacity is invalid.
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    struct _Reinit
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      explicit _Reinit(_Vector_impl& __impl) : _M_impl(__impl)
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      {
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		// Mark unused capacity as valid again before deallocating it.
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		_S_on_dealloc(_M_impl);
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      }
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ~_Reinit()
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      {
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		// Mark unused capacity as invalid after reallocation.
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		if (_M_impl._M_start)
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _S_adjust(_M_impl, _M_impl._M_end_of_storage,
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    _M_impl._M_finish);
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      }
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Vector_impl& _M_impl;
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Reinit(const _Reinit&) = delete;
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Reinit& operator=(const _Reinit&) = delete;
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    };
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // Tell ASan when unused capacity is initialized to be valid.
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    struct _Grow
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow(_Vector_impl& __impl, size_type __n)
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      : _M_impl(__impl), _M_n(__n)
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      { _S_grow(_M_impl, __n); }
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ~_Grow() { if (_M_n) _S_shrink(_M_impl, _M_n); }
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      void _M_grew(size_type __n) { _M_n -= __n; }
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow(const _Grow&) = delete;
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow& operator=(const _Grow&) = delete;
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    private:
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Vector_impl& _M_impl;
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      size_type _M_n;
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    };
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  };
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_REINIT \
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   typename _Base::_Vector_impl::template _Asan<>::_Reinit const \
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__attribute__((__unused__)) __reinit_guard(this->_M_impl)
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GROW(n) \
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   typename _Base::_Vector_impl::template _Asan<>::_Grow \
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__attribute__((__unused__)) __grow_guard(this->_M_impl, (n))
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GREW(n) __grow_guard._M_grew(n)
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_SHRINK(n) \
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   _Base::_Vector_impl::template _Asan<>::_S_shrink(this->_M_impl, n)
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC \
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   _Base::_Vector_impl::template _Asan<>::_S_on_dealloc(this->_M_impl)
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 146


 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else // ! (_GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR)
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_REINIT
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GROW(n)
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GREW(n)
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_SHRINK(n)
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif // _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       };
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Alloc allocator_type;
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Tp_alloc_type&
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const _Tp_alloc_type&
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       allocator_type
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return allocator_type(_M_get_Tp_allocator()); }
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base() = default;
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base() { }
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a) { }
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Kept for ABI compatibility.
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if !_GLIBCXX_INLINE_VERSION
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(size_t __n)
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl()
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_create_storage(__n); }
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(size_t __n, const allocator_type& __a)
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a)
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_create_storage(__n); }
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(_Vector_base&&) = default;
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Kept for ABI compatibility.
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # if !_GLIBCXX_INLINE_VERSION
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(_Tp_alloc_type&& __a) noexcept
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(std::move(__a)) { }
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(_Vector_base&& __x, const allocator_type& __a)
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a)
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__x.get_allocator() == __a)
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_swap_data(__x._M_impl);
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 147


 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    size_t __n = __x._M_impl._M_finish - __x._M_impl._M_start;
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _M_create_storage(__n);
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # endif
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(const allocator_type& __a, _Vector_base&& __x)
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(_Tp_alloc_type(__a), std::move(__x._M_impl))
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { }
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       ~_Vector_base() _GLIBCXX_NOEXCEPT
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_deallocate(_M_impl._M_start,
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_impl _M_impl;
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       pointer
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_allocate(size_t __n)
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_deallocate(pointer __p, size_t __n)
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__p)
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_create_storage(size_t __n)
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_start = this->_M_allocate(__n);
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     };
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   /**
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @brief A standard container which offers fixed time access to
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  individual elements in any order.
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @ingroup sequences
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @tparam _Tp  Type of element.
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_Tp>.
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 148


 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  <a href="tables.html#66">reversible container</a>, and a
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  <a href="tables.html#67">sequence</a>, including the
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  <a href="tables.html#68">optional sequence requirements</a> with the
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  %exception of @c push_front and @c pop_front.
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  In some terminology a %vector can be described as a dynamic
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  C-style array, it offers fast and efficient access to individual
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  elements in any order and saves the user from worrying about
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  memory and size allocation.  Subscripting ( @c [] ) access is
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  also provided as with C-style arrays.
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   */
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   template<typename _Tp, typename _Alloc = std::allocator<_Tp> >
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     class vector : protected _Vector_base<_Tp, _Alloc>
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     {
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #ifdef _GLIBCXX_CONCEPT_CHECKS
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Concept requirements.
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc::value_type		_Alloc_value_type;
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # if __cplusplus < 201103L
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # endif
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       __glibcxx_class_requires2(_Tp, _Alloc_value_type, _SameTypeConcept)
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static_assert(is_same<typename remove_cv<_Tp>::type, _Tp>::value,
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  "std::vector must have a non-const, non-volatile value_type");
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # if __cplusplus > 201703L || defined __STRICT_ANSI__
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static_assert(is_same<typename _Alloc::value_type, _Tp>::value,
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  "std::vector must have the same value_type as its allocator");
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # endif
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Vector_base<_Tp, _Alloc>			_Base;
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Base::_Tp_alloc_type		_Tp_alloc_type;
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>	_Alloc_traits;
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Tp					value_type;
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Base::pointer			pointer;
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc_traits::reference		reference;
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<pointer, vector> iterator;
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, vector>
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator;
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef size_t					size_type;
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef ptrdiff_t					difference_type;
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Alloc					allocator_type;
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     private:
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static constexpr bool
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_nothrow_relocate(true_type)
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return noexcept(std::__relocate_a(std::declval<pointer>(),
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 149


 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  std::declval<pointer>(),
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  std::declval<pointer>(),
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  std::declval<_Tp_alloc_type&>()));
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static constexpr bool
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_nothrow_relocate(false_type)
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return false; }
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static constexpr bool
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_use_relocate()
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// Instantiating std::__relocate_a might cause an error outside the
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// immediate context (in __relocate_object_a's noexcept-specifier),
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// so only do it if we know the type can be move-inserted into *this.
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return _S_nothrow_relocate(__is_move_insertable<_Tp_alloc_type>{});
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static pointer
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_do_relocate(pointer __first, pointer __last, pointer __result,
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return std::__relocate_a(__first, __last, __result, __alloc);
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static pointer
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_do_relocate(pointer, pointer, pointer __result,
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type&, false_type) noexcept
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return __result; }
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static pointer
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_relocate(pointer __first, pointer __last, pointer __result,
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	using __do_it = __bool_constant<_S_use_relocate()>;
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif // C++11
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_allocate;
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_deallocate;
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_impl;
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_get_Tp_allocator;
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // [23.2.4.1] construct/copy/destroy
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // (assign() and get_allocator() are also listed in this section)
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector() = default;
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector() { }
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 150


 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator object.
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       explicit
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__a) { }
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with default constructed elements.
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n default
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  constructed elements.
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       explicit
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(size_type __n, const allocator_type& __a = allocator_type())
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_default_initialize(__n); }
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __value  An element to copy.
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(size_type __n, const value_type& __value,
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __value  An element to copy.
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       explicit
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(size_type __n, const value_type& __value = value_type(),
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector copy constructor.
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  All the elements of @a __x are copied, but any unused capacity in
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @a __x  will not be copied
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 151


 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  (i.e. capacity() == size() in the new %vector).
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The newly-created %vector uses a copy of the allocator object used
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  by @a __x (unless the allocator traits dictate a different object).
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(const vector& __x)
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(),
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      this->_M_impl._M_start,
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      _M_get_Tp_allocator());
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector move constructor.
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The newly-created %vector contains the exact contents of the
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  moved instance.
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The contents of the moved instance are a valid, but unspecified
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector.
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&&) noexcept = default;
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Copy constructor with alternative allocator
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(const vector& __x, const allocator_type& __a)
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(), __a)
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      this->_M_impl._M_start,
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      _M_get_Tp_allocator());
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     private:
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m, true_type) noexcept
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__m, std::move(__rv))
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { }
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m, false_type)
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__m)
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__rv.get_allocator() == __m)
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_swap_data(__rv._M_impl);
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (!__rv.empty())
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_create_storage(__rv.size());
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_impl._M_finish =
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      std::__uninitialized_move_a(__rv.begin(), __rv.end(),
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  this->_M_impl._M_start,
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  _M_get_Tp_allocator());
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    __rv.clear();
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 152


 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Move constructor with alternative allocator
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m)
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       noexcept( noexcept(
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector(std::declval<vector&&>(), std::declval<const allocator_type&>(),
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       std::declval<typename _Alloc_traits::is_always_equal>())) )
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : vector(std::move(__rv), __m, typename _Alloc_traits::is_always_equal{})
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { }
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Builds a %vector from an initializer list.
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Create a %vector consisting of copies of the elements in the
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer_list @a __l.
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This will call the element type's copy constructor N times
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  (where N is @a __l.size()) and do no memory reallocation.
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(initializer_list<value_type> __l,
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__a)
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_initialize(__l.begin(), __l.end(),
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Builds a %vector from a range.
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last  An input iterator.
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Create a %vector consisting of copies of the elements from
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [first,last).
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  If the iterators are forward, bidirectional, or
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  random-access, then this will call the elements' copy
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  constructor N times (where N is distance(first,last)) and do
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  no memory reallocation.  But if only input iterators are
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used, then this will do at most 2N calls to the copy
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  constructor, and logN memory reallocations.
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator,
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Base(__a)
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_range_initialize(__first, __last,
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			      std::__iterator_category(__first));
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 153


 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Base(__a)
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_initialize_dispatch(__first, __last, _Integral());
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The dtor only erases the elements, and note that if the
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  elements themselves are pointers, the pointed-to memory is
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  not touched in any way.  Managing the pointer is the user's
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  responsibility.
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       ~vector() _GLIBCXX_NOEXCEPT
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_get_Tp_allocator());
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector assignment operator.
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  All the elements of @a __x are copied, but any unused capacity in
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @a __x will not be copied.
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Whether the allocator is copied depends on the allocator traits.
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector&
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator=(const vector& __x);
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector move assignment operator.
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The contents of @a __x are moved into this %vector (without copying,
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  if the allocators permit it).
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Afterwards @a __x is a valid, but unspecified %vector.
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Whether the allocator is moved depends on the allocator traits.
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector&
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	constexpr bool __move_storage =
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Alloc_traits::_S_propagate_on_move_assign()
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  || _Alloc_traits::_S_always_equal();
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *this;
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 154


 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector list assignment operator.
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer list @a __l.
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  of elements assigned.
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector&
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator=(initializer_list<value_type> __l)
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_assign_aux(__l.begin(), __l.end(),
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *this;
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Assigns a given value to a %vector.
 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements to be assigned.
 741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __val  Value to be assigned.
 742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with @a __n copies of the given
 744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  value.  Note that the assignment completely changes the
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and that the resulting %vector's size is the same as
 746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the number of elements assigned.
 747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       assign(size_type __n, const value_type& __val)
 750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_assign(__n, __val); }
 751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Assigns a range to a %vector.
 754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
 755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last   An input iterator.
 756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  range [__first,__last).
 759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  of elements assigned.
 763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator,
 766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	assign(_InputIterator __first, _InputIterator __last)
 769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_assign_dispatch(__first, __last, __false_type()); }
 770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
 772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	assign(_InputIterator __first, _InputIterator __last)
 774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 155


 776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_assign_dispatch(__first, __last, _Integral());
 778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Assigns an initializer list to a %vector.
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer list @a __l.
 788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  of elements assigned.
 792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       assign(initializer_list<value_type> __l)
 795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_assign_aux(__l.begin(), __l.end(),
 797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Get a copy of the memory allocation object.
 802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::get_allocator;
 803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // iterators
 805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write iterator that points to the first
 807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       begin() _GLIBCXX_NOEXCEPT
 576              		.loc 14 811 7 is_stmt 1 view .LVU118
 577              	.LBB2044:
 578              	.LBI2044:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 579              		.loc 13 978 7 view .LVU119
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 580              		.loc 13 978 7 is_stmt 0 view .LVU120
 581              	.LBE2044:
 582              	.LBE2043:
 583              		.loc 9 55 19 is_stmt 1 view .LVU121
 584              	.LBE2046:
  54:ChordSynth.cpp **** 	for (auto& osc : chord_oscs) {
 585              		.loc 9 54 11 is_stmt 0 view .LVU122
 586 000e 9FED158A 		vldr.32	s16, .L27
 587              	.LBB2047:
 588              		.loc 9 55 19 view .LVU123
 589 0012 07D0     		beq	.L20
 590              	.LVL25:
 591              	.L21:
  56:ChordSynth.cpp **** 		chord_sample += osc.Process();
 592              		.loc 9 56 3 is_stmt 1 view .LVU124
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 156


 593              		.loc 9 56 30 is_stmt 0 view .LVU125
 594 0014 2046     		mov	r0, r4
  55:ChordSynth.cpp **** 		chord_sample += osc.Process();
 595              		.loc 9 55 19 view .LVU126
 596 0016 2C34     		adds	r4, r4, #44
 597              	.LVL26:
 598              		.loc 9 56 30 view .LVU127
 599 0018 FFF7FEFF 		bl	_ZN7daisysp10Oscillator7ProcessEv
 600              	.LVL27:
 601              		.loc 9 56 16 view .LVU128
 602 001c 38EE008A 		vadd.f32	s16, s16, s0
 603              	.LVL28:
  55:ChordSynth.cpp **** 		chord_sample += osc.Process();
 604              		.loc 9 55 2 is_stmt 1 view .LVU129
  55:ChordSynth.cpp **** 		chord_sample += osc.Process();
 605              		.loc 9 55 19 view .LVU130
 606 0020 A642     		cmp	r6, r4
 607 0022 F7D1     		bne	.L21
 608              	.LVL29:
 609              	.L20:
  55:ChordSynth.cpp **** 		chord_sample += osc.Process();
 610              		.loc 9 55 19 is_stmt 0 view .LVU131
 611              	.LBE2047:
  57:ChordSynth.cpp **** 	}
  58:ChordSynth.cpp **** 	
  59:ChordSynth.cpp **** 	float bass_sample = bass_osc.Process();
 612              		.loc 9 59 2 is_stmt 1 view .LVU132
 613              		.loc 9 59 38 is_stmt 0 view .LVU133
 614 0024 05F10800 		add	r0, r5, #8
 615 0028 FFF7FEFF 		bl	_ZN7daisysp10Oscillator7ProcessEv
 616              	.LVL30:
 617 002c F0EE407A 		vmov.f32	s15, s0
  60:ChordSynth.cpp **** 
  61:ChordSynth.cpp **** 	high_pass.Process(chord_sample);
 618              		.loc 9 61 19 view .LVU134
 619 0030 05F1A000 		add	r0, r5, #160
 620 0034 B0EE480A 		vmov.f32	s0, s16
  59:ChordSynth.cpp **** 
 621              		.loc 9 59 38 view .LVU135
 622 0038 B0EE678A 		vmov.f32	s16, s15
 623              	.LVL31:
 624              		.loc 9 61 2 is_stmt 1 view .LVU136
 625              		.loc 9 61 19 is_stmt 0 view .LVU137
 626 003c FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 627              	.LVL32:
  62:ChordSynth.cpp **** 	// Silence chord if not enabled
  63:ChordSynth.cpp **** 	float hp = enabled ? high_pass.High() : 0.f;
 628              		.loc 9 63 2 is_stmt 1 view .LVU138
 629              		.loc 9 63 21 is_stmt 0 view .LVU139
 630 0040 2B79     		ldrb	r3, [r5, #4]	@ zero_extendqisi2
 631 0042 63B1     		cbz	r3, .L24
 632              	.LVL33:
 633              	.LBB2048:
 634              	.LBI2048:
 635              		.file 15 "../../DaisySP//Source/Filters/svf.h"
   1:../../DaisySP//Source/Filters/svf.h **** /*
   2:../../DaisySP//Source/Filters/svf.h **** Copyright (c) 2020 Electrosmith, Corp
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 157


   3:../../DaisySP//Source/Filters/svf.h **** 
   4:../../DaisySP//Source/Filters/svf.h **** Use of this source code is governed by an MIT-style
   5:../../DaisySP//Source/Filters/svf.h **** license that can be found in the LICENSE file or at
   6:../../DaisySP//Source/Filters/svf.h **** https://opensource.org/licenses/MIT.
   7:../../DaisySP//Source/Filters/svf.h **** */
   8:../../DaisySP//Source/Filters/svf.h **** 
   9:../../DaisySP//Source/Filters/svf.h **** #pragma once
  10:../../DaisySP//Source/Filters/svf.h **** #ifndef DSY_SVF_H
  11:../../DaisySP//Source/Filters/svf.h **** #define DSY_SVF_H
  12:../../DaisySP//Source/Filters/svf.h **** 
  13:../../DaisySP//Source/Filters/svf.h **** namespace daisysp
  14:../../DaisySP//Source/Filters/svf.h **** {
  15:../../DaisySP//Source/Filters/svf.h **** /**      Double Sampled, Stable State Variable Filter
  16:../../DaisySP//Source/Filters/svf.h **** 
  17:../../DaisySP//Source/Filters/svf.h **** Credit to Andrew Simper from musicdsp.org
  18:../../DaisySP//Source/Filters/svf.h **** 
  19:../../DaisySP//Source/Filters/svf.h **** This is his "State Variable Filter (Double Sampled, Stable)"
  20:../../DaisySP//Source/Filters/svf.h **** 
  21:../../DaisySP//Source/Filters/svf.h **** Additional thanks to Laurent de Soras for stability limit, and 
  22:../../DaisySP//Source/Filters/svf.h **** Stefan Diedrichsen for the correct notch output
  23:../../DaisySP//Source/Filters/svf.h **** 
  24:../../DaisySP//Source/Filters/svf.h **** Ported by: Stephen Hensley
  25:../../DaisySP//Source/Filters/svf.h **** */
  26:../../DaisySP//Source/Filters/svf.h **** class Svf
  27:../../DaisySP//Source/Filters/svf.h **** {
  28:../../DaisySP//Source/Filters/svf.h ****   public:
  29:../../DaisySP//Source/Filters/svf.h ****     Svf() {}
  30:../../DaisySP//Source/Filters/svf.h ****     ~Svf() {}
  31:../../DaisySP//Source/Filters/svf.h ****     /** Initializes the filter
  32:../../DaisySP//Source/Filters/svf.h ****         float sample_rate - sample rate of the audio engine being run, and the frequency that the P
  33:../../DaisySP//Source/Filters/svf.h ****     */
  34:../../DaisySP//Source/Filters/svf.h ****     void Init(float sample_rate);
  35:../../DaisySP//Source/Filters/svf.h **** 
  36:../../DaisySP//Source/Filters/svf.h **** 
  37:../../DaisySP//Source/Filters/svf.h ****     /** 
  38:../../DaisySP//Source/Filters/svf.h ****         Process the input signal, updating all of the outputs.
  39:../../DaisySP//Source/Filters/svf.h ****     */
  40:../../DaisySP//Source/Filters/svf.h ****     void Process(float in);
  41:../../DaisySP//Source/Filters/svf.h **** 
  42:../../DaisySP//Source/Filters/svf.h **** 
  43:../../DaisySP//Source/Filters/svf.h ****     /** sets the frequency of the cutoff frequency. 
  44:../../DaisySP//Source/Filters/svf.h ****         f must be between 0.0 and sample_rate / 3
  45:../../DaisySP//Source/Filters/svf.h ****     */
  46:../../DaisySP//Source/Filters/svf.h ****     void SetFreq(float f);
  47:../../DaisySP//Source/Filters/svf.h **** 
  48:../../DaisySP//Source/Filters/svf.h ****     /** sets the resonance of the filter.
  49:../../DaisySP//Source/Filters/svf.h ****         Must be between 0.0 and 1.0 to ensure stability.
  50:../../DaisySP//Source/Filters/svf.h ****     */
  51:../../DaisySP//Source/Filters/svf.h ****     void SetRes(float r);
  52:../../DaisySP//Source/Filters/svf.h **** 
  53:../../DaisySP//Source/Filters/svf.h ****     /** sets the drive of the filter 
  54:../../DaisySP//Source/Filters/svf.h ****         affects the response of the resonance of the filter
  55:../../DaisySP//Source/Filters/svf.h ****     */
  56:../../DaisySP//Source/Filters/svf.h ****     void SetDrive(float d);
  57:../../DaisySP//Source/Filters/svf.h ****     /** lowpass output
  58:../../DaisySP//Source/Filters/svf.h ****         \return low pass output of the filter
  59:../../DaisySP//Source/Filters/svf.h ****     */
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 158


  60:../../DaisySP//Source/Filters/svf.h ****     inline float Low() { return out_low_; }
  61:../../DaisySP//Source/Filters/svf.h ****     /** highpass output
  62:../../DaisySP//Source/Filters/svf.h ****         \return high pass output of the filter
  63:../../DaisySP//Source/Filters/svf.h ****     */
  64:../../DaisySP//Source/Filters/svf.h ****     inline float High() { return out_high_; }
 636              		.loc 15 64 18 is_stmt 1 discriminator 1 view .LVU140
 637              	.LBB2049:
 638              		.loc 15 64 27 discriminator 1 view .LVU141
 639              		.loc 15 64 34 is_stmt 0 discriminator 1 view .LVU142
 640 0044 95ED350A 		vldr.32	s0, [r5, #212]
 641              	.LVL34:
 642              	.L22:
 643              		.loc 15 64 34 discriminator 1 view .LVU143
 644              	.LBE2049:
 645              	.LBE2048:
  64:ChordSynth.cpp **** 	low_pass.Process(hp + bass_sample);
 646              		.loc 9 64 2 is_stmt 1 discriminator 4 view .LVU144
 647              		.loc 9 64 18 is_stmt 0 discriminator 4 view .LVU145
 648 0048 30EE080A 		vadd.f32	s0, s0, s16
 649              	.LVL35:
 650              		.loc 9 64 18 discriminator 4 view .LVU146
 651 004c 05F1EC00 		add	r0, r5, #236
 652 0050 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 653              	.LVL36:
  65:ChordSynth.cpp **** 	return low_pass.Low();
 654              		.loc 9 65 2 is_stmt 1 discriminator 4 view .LVU147
 655              	.LBB2050:
 656              	.LBI2050:
  60:../../DaisySP//Source/Filters/svf.h ****     /** highpass output
 657              		.loc 15 60 18 discriminator 4 view .LVU148
 658              	.LBB2051:
  60:../../DaisySP//Source/Filters/svf.h ****     /** highpass output
 659              		.loc 15 60 26 discriminator 4 view .LVU149
  60:../../DaisySP//Source/Filters/svf.h ****     /** highpass output
 660              		.loc 15 60 26 is_stmt 0 discriminator 4 view .LVU150
 661              	.LBE2051:
 662              	.LBE2050:
  66:ChordSynth.cpp **** }
 663              		.loc 9 66 1 discriminator 4 view .LVU151
 664 0054 95ED470A 		vldr.32	s0, [r5, #284]
 665 0058 BDEC028B 		vldm	sp!, {d8}
 666              		.cfi_remember_state
 667              		.cfi_restore 80
 668              		.cfi_restore 81
 669              		.cfi_def_cfa_offset 16
 670              	.LVL37:
 671              		.loc 9 66 1 discriminator 4 view .LVU152
 672 005c 70BD     		pop	{r4, r5, r6, pc}
 673              	.LVL38:
 674              	.L24:
 675              		.cfi_restore_state
  63:ChordSynth.cpp **** 	low_pass.Process(hp + bass_sample);
 676              		.loc 9 63 21 view .LVU153
 677 005e 9FED010A 		vldr.32	s0, .L27
 678 0062 F1E7     		b	.L22
 679              	.L28:
 680              		.align	2
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 159


 681              	.L27:
 682 0064 00000000 		.word	0
 683              		.cfi_endproc
 684              	.LFE4298:
 686              		.section	.rodata._ZNSt6vectorIN7daisysp10OscillatorESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_
 687              		.align	2
 688              	.LC0:
 689 0000 76656374 		.ascii	"vector::_M_realloc_insert\000"
 689      6F723A3A 
 689      5F4D5F72 
 689      65616C6C 
 689      6F635F69 
 690              		.section	.text._ZNSt6vectorIN7daisysp10OscillatorESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cx
 691              		.align	1
 692              		.p2align 2,,3
 693              		.weak	_ZNSt6vectorIN7daisysp10OscillatorESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__norm
 694              		.syntax unified
 695              		.thumb
 696              		.thumb_func
 697              		.fpu fpv5-d16
 699              	_ZNSt6vectorIN7daisysp10OscillatorESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iter
 700              	.LVL39:
 701              	.LFB4978:
 702              		.file 16 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\vector.tcc
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // Vector implementation (out of line) -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * that both that copyright notice and this permission notice appear
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 160


  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Copyright (c) 1996
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * representations about the suitability of this  software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** /** @file bits/vector.tcc
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *  Do not attempt to use it directly. @headername{vector}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #ifndef _VECTOR_TCC
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #define _VECTOR_TCC 1
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** namespace std _GLIBCXX_VISIBILITY(default)
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** {
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     void
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     reserve(size_type __n)
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (__n > this->max_size())
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	__throw_length_error(__N("vector::reserve"));
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (this->capacity() < __n)
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  const size_type __old_size = size();
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  pointer __tmp;
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __tmp = this->_M_allocate(__n);
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			  __tmp, _M_get_Tp_allocator());
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __tmp = _M_allocate_and_copy(__n,
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(this->_M_impl._M_start),
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(this->_M_impl._M_finish));
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    _M_get_Tp_allocator());
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 161


  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _GLIBCXX_ASAN_ANNOTATE_REINIT;
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_deallocate(this->_M_impl._M_start,
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			this->_M_impl._M_end_of_storage
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			- this->_M_impl._M_start);
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_start = __tmp;
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_finish = __tmp + __old_size;
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename... _Args>
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       typename vector<_Tp, _Alloc>::reference
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       {
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				     std::forward<_Args>(__args)...);
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    ++this->_M_impl._M_finish;
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	return back();
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       }
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     typename vector<_Tp, _Alloc>::iterator
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     insert(const_iterator __position, const value_type& __x)
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     insert(iterator __position, const value_type& __x)
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       const size_type __n = __position - begin();
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (__position == end())
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				     __x);
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    ++this->_M_impl._M_finish;
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 162


 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    const auto __pos = begin() + (__position - cbegin());
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    // __x could be an existing element of this vector, so make a
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    // copy of it before _M_insert_aux moves elements around.
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _Temporary_value __x_copy(this, __x);
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _M_insert_aux(__pos, std::move(__x_copy._M_val()));
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _M_insert_aux(__position, __x);
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       else
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	_M_realloc_insert(begin() + (__position - cbegin()), __x);
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	_M_realloc_insert(__position, __x);
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       return iterator(this->_M_impl._M_start + __n);
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     typename vector<_Tp, _Alloc>::iterator
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_erase(iterator __position)
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (__position + 1 != end())
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	_GLIBCXX_MOVE3(__position + 1, end(), __position);
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       --this->_M_impl._M_finish;
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _GLIBCXX_ASAN_ANNOTATE_SHRINK(1);
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       return __position;
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     typename vector<_Tp, _Alloc>::iterator
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_erase(iterator __first, iterator __last)
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (__first != __last)
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (__last != end())
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_MOVE3(__last, end(), __first);
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_erase_at_end(__first.base() + (end() - __last));
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       return __first;
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>&
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     operator=(const vector<_Tp, _Alloc>& __x)
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (&__x != this)
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _GLIBCXX_ASAN_ANNOTATE_REINIT;
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 163


 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (_Alloc_traits::_S_propagate_on_copy_assign())
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      if (!_Alloc_traits::_S_always_equal()
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	          && _M_get_Tp_allocator() != __x._M_get_Tp_allocator())
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	        {
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  // replacement allocator cannot free existing storage
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  this->clear();
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  _M_deallocate(this->_M_impl._M_start,
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				this->_M_impl._M_end_of_storage
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				- this->_M_impl._M_start);
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  this->_M_impl._M_start = nullptr;
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  this->_M_impl._M_finish = nullptr;
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  this->_M_impl._M_end_of_storage = nullptr;
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		}
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::__alloc_on_copy(_M_get_Tp_allocator(),
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   __x._M_get_Tp_allocator());
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  const size_type __xlen = __x.size();
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (__xlen > capacity())
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      pointer __tmp = _M_allocate_and_copy(__xlen, __x.begin(),
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						   __x.end());
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    _M_get_Tp_allocator());
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _M_deallocate(this->_M_impl._M_start,
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    this->_M_impl._M_end_of_storage
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    - this->_M_impl._M_start);
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      this->_M_impl._M_start = __tmp;
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __xlen;
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else if (size() >= __xlen)
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::_Destroy(std::copy(__x.begin(), __x.end(), begin()),
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    end(), _M_get_Tp_allocator());
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::copy(__x._M_impl._M_start, __x._M_impl._M_start + size(),
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			this->_M_impl._M_start);
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::__uninitialized_copy_a(__x._M_impl._M_start + size(),
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  __x._M_impl._M_finish,
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  this->_M_impl._M_finish,
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  _M_get_Tp_allocator());
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_finish = this->_M_impl._M_start + __xlen;
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       return *this;
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     void
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_fill_assign(size_t __n, const value_type& __val)
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (__n > capacity())
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 164


 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  vector __tmp(__n, __val, _M_get_Tp_allocator());
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  __tmp._M_impl._M_swap_data(this->_M_impl);
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       else if (__n > size())
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  std::fill(begin(), end(), __val);
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  const size_type __add = __n - size();
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _GLIBCXX_ASAN_ANNOTATE_GROW(__add);
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_finish =
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    std::__uninitialized_fill_n_a(this->_M_impl._M_finish,
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  __add, __val, _M_get_Tp_allocator());
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _GLIBCXX_ASAN_ANNOTATE_GREW(__add);
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       else
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****         _M_erase_at_end(std::fill_n(this->_M_impl._M_start, __n, __val));
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename _InputIterator>
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_assign_aux(_InputIterator __first, _InputIterator __last,
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::input_iterator_tag)
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       {
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	pointer __cur(this->_M_impl._M_start);
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	for (; __first != __last && __cur != this->_M_impl._M_finish;
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	     ++__cur, (void)++__first)
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  *__cur = *__first;
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (__first == __last)
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_erase_at_end(__cur);
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_range_insert(end(), __first, __last,
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			  std::__iterator_category(__first));
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       }
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename _ForwardIterator>
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::forward_iterator_tag)
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       {
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	const size_type __len = std::distance(__first, __last);
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (__len > capacity())
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _S_check_init_len(__len, _M_get_Tp_allocator());
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    pointer __tmp(_M_allocate_and_copy(__len, __first, __last));
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			  _M_get_Tp_allocator());
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_REINIT;
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _M_deallocate(this->_M_impl._M_start,
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			  this->_M_impl._M_end_of_storage
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			  - this->_M_impl._M_start);
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    this->_M_impl._M_start = __tmp;
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    this->_M_impl._M_finish = this->_M_impl._M_start + __len;
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    this->_M_impl._M_end_of_storage = this->_M_impl._M_finish;
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 165


 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else if (size() >= __len)
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_erase_at_end(std::copy(__first, __last, this->_M_impl._M_start));
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _ForwardIterator __mid = __first;
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    std::advance(__mid, size());
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    std::copy(__first, __mid, this->_M_impl._M_start);
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    const size_type __attribute__((__unused__)) __n = __len - size();
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    this->_M_impl._M_finish =
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::__uninitialized_copy_a(__mid, __last,
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  this->_M_impl._M_finish,
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  _M_get_Tp_allocator());
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(__n);
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       }
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     auto
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_insert_rval(const_iterator __position, value_type&& __v) -> iterator
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       const auto __n = __position - cbegin();
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (__position == cend())
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				     std::move(__v));
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    ++this->_M_impl._M_finish;
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_insert_aux(begin() + __n, std::move(__v));
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       else
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	_M_realloc_insert(begin() + __n, std::move(__v));
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       return iterator(this->_M_impl._M_start + __n);
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename... _Args>
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       auto
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_emplace_aux(const_iterator __position, _Args&&... __args)
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       -> iterator
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       {
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	const auto __n = __position - cbegin();
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (__position == cend())
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				       std::forward<_Args>(__args)...);
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      ++this->_M_impl._M_finish;
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 166


 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      // We need to construct a temporary because something in __args...
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      // could alias one of the elements of the container and so we
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      // need to use it before _M_insert_aux moves elements around.
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _Temporary_value __tmp(this, std::forward<_Args>(__args)...);
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _M_insert_aux(begin() + __n, std::move(__tmp._M_val()));
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_realloc_insert(begin() + __n, std::forward<_Args>(__args)...);
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	return iterator(this->_M_impl._M_start + __n);
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       }
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename _Arg>
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_insert_aux(iterator __position, _Arg&& __arg)
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     void
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_insert_aux(iterator __position, const _Tp& __x)
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			       _GLIBCXX_MOVE(*(this->_M_impl._M_finish - 1)));
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       ++this->_M_impl._M_finish;
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus < 201103L
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _Tp __x_copy = __x;
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _GLIBCXX_MOVE_BACKWARD3(__position.base(),
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			      this->_M_impl._M_finish - 2,
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			      this->_M_impl._M_finish - 1);
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus < 201103L
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       *__position = __x_copy;
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       *__position = std::forward<_Arg>(__arg);
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename... _Args>
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 703              		.loc 16 426 7 is_stmt 1 view -0
 704              		.cfi_startproc
 705              		@ args = 0, pretend = 0, frame = 8
 706              		@ frame_needed = 0, uses_anonymous_args = 0
 707              		.loc 16 426 7 is_stmt 0 view .LVU155
 708 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 167


 709              		.cfi_def_cfa_offset 36
 710              		.cfi_offset 4, -36
 711              		.cfi_offset 5, -32
 712              		.cfi_offset 6, -28
 713              		.cfi_offset 7, -24
 714              		.cfi_offset 8, -20
 715              		.cfi_offset 9, -16
 716              		.cfi_offset 10, -12
 717              		.cfi_offset 11, -8
 718              		.cfi_offset 14, -4
 719 0004 D0E90085 		ldrd	r8, r5, [r0]
 720              	.LBB2107:
 721              	.LBB2108:
 722              	.LBB2109:
 723              	.LBB2110:
 812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       begin() const _GLIBCXX_NOEXCEPT
 821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write iterator that points one past the last
 825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       end() _GLIBCXX_NOEXCEPT
 830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  ordinary element order.
 836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       end() const _GLIBCXX_NOEXCEPT
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reverse iterator that points to the
 843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  last element in the %vector.  Iteration is done in reverse
 844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reverse_iterator
 847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rbegin() _GLIBCXX_NOEXCEPT
 848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return reverse_iterator(end()); }
 849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  reverse element order.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 168


 854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(end()); }
 858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reverse iterator that points to one
 861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  before the first element in the %vector.  Iteration is done
 862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  in reverse element order.
 863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reverse_iterator
 865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rend() _GLIBCXX_NOEXCEPT
 866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return reverse_iterator(begin()); }
 867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is done in reverse element order.
 872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rend() const _GLIBCXX_NOEXCEPT
 875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(begin()); }
 876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       cbegin() const noexcept
 885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  ordinary element order.
 891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       cend() const noexcept
 894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  reverse element order.
 900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       crbegin() const noexcept
 903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(end()); }
 904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is done in reverse element order.
 909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 169


 911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       crend() const noexcept
 912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(begin()); }
 913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // [23.2.4.2] capacity
 916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**  Returns the number of elements in the %vector.  */
 917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size() const _GLIBCXX_NOEXCEPT
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 724              		.loc 14 919 50 view .LVU156
 725 0008 444E     		ldr	r6, .L50
 726              	.LBE2110:
 727              	.LBE2109:
 728              	.LBE2108:
 729              	.LBE2107:
 730              		.loc 16 426 7 view .LVU157
 731 000a 0C46     		mov	r4, r1
 732              	.LVL40:
 733              	.LBB2118:
 734              	.LBI2107:
 920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**  Returns the size() of the largest possible %vector.  */
 922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
 923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       max_size() const _GLIBCXX_NOEXCEPT
 924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _S_max_size(_M_get_Tp_allocator()); }
 925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will %resize the %vector to the specified
 932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number of elements.  If the number is smaller than the
 933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  default constructed elements are appended.
 935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       resize(size_type __new_size)
 938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__new_size > size())
 940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_default_append(__new_size - size());
 941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (__new_size < size())
 942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will %resize the %vector to the specified
 951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number of elements.  If the number is smaller than the
 952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the %vector is extended and new elements are populated with
 954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  given data.
 955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 170


 957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       resize(size_type __new_size, const value_type& __x)
 958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__new_size > size())
 960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_fill_insert(end(), __new_size - size(), __x);
 961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (__new_size < size())
 962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will %resize the %vector to the specified
 971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number of elements.  If the number is smaller than the
 972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the %vector is extended and new elements are populated with
 974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  given data.
 975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       resize(size_type __new_size, value_type __x = value_type())
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__new_size > size())
 980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_fill_insert(end(), __new_size - size(), __x);
 981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (__new_size < size())
 982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**  A non-binding request to reduce capacity() to size().  */
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       shrink_to_fit()
 990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_shrink_to_fit(); }
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns the total number of elements that the %vector can
 995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  hold before needing to allocate more memory.
 996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
 998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       capacity() const _GLIBCXX_NOEXCEPT
 999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_end_of_storage
1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			 - this->_M_impl._M_start); }
1001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns true if the %vector is empty.  (Thus begin() would
1004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  equal end().)
1005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _GLIBCXX_NODISCARD bool
1007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       empty() const _GLIBCXX_NOEXCEPT
1008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return begin() == end(); }
1009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
1012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *          elements.
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements required.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 171


1014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @throw  std::length_error  If @a n exceeds @c max_size().
1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function attempts to reserve enough memory for the
1017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector to hold the specified number of elements.  If the
1018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number requested is more than max_size(), length_error is
1019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  thrown.
1020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The advantage of this function is that if optimal code is a
1022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  necessity and the user can determine the number of elements
1023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that will be required, the user can reserve the memory in
1024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %advance, and thus prevent a possible reallocation of memory
1025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  and copying of %vector data.
1026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reserve(size_type __n);
1029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // element access
1031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
1033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read/write reference to data.
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This operator allows for easy, array-style, data access.
1038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that data access with this operator is unchecked and
1039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
1040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  see at().)
1041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator[](size_type __n) _GLIBCXX_NOEXCEPT
1044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_subscript(__n);
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(this->_M_impl._M_start + __n);
1047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
1051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read-only (constant) reference to data.
1054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This operator allows for easy, array-style, data access.
1056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that data access with this operator is unchecked and
1057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
1058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  see at().)
1059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
1062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_subscript(__n);
1064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(this->_M_impl._M_start + __n);
1065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
1068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Safety check used only from at().
1069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_range_check(size_type __n) const
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 172


1071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__n >= this->size())
1073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_out_of_range_fmt(__N("vector::_M_range_check: __n "
1074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				       "(which is %zu) >= this->size() "
1075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				       "(which is %zu)"),
1076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				   __n, this->size());
1077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
1080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
1082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read/write reference to data.
1085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
1086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function provides for safer data access.  The parameter
1088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
1089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  function throws out_of_range if the check fails.
1090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       at(size_type __n)
1093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_check(__n);
1095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (*this)[__n];
1096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
1100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read-only (constant) reference to data.
1103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
1104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function provides for safer data access.  The parameter
1106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
1107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  function throws out_of_range if the check fails.
1108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       at(size_type __n) const
1111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_check(__n);
1113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (*this)[__n];
1114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reference to the data at the first
1118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element of the %vector.
1119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       front() _GLIBCXX_NOEXCEPT
1122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *begin();
1125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 173


1128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the first
1129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element of the %vector.
1130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       front() const _GLIBCXX_NOEXCEPT
1133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *begin();
1136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reference to the data at the last
1140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element of the %vector.
1141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       back() _GLIBCXX_NOEXCEPT
1144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(end() - 1);
1147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the
1151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  last element of the %vector.
1152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       back() const _GLIBCXX_NOEXCEPT
1155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(end() - 1);
1158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // DR 464. Suggestion for new member functions in standard containers.
1162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // data access
1163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *   Returns a pointer such that [data(), data() + size()) is a valid
1165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *   range.  For a non-empty %vector, data() == &front().
1166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Tp*
1168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       data() _GLIBCXX_NOEXCEPT
1169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
1170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const _Tp*
1172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       data() const _GLIBCXX_NOEXCEPT
1173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
1174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // [23.2.4.3] modifiers
1176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Add data to the end of the %vector.
1178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be added.
1179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This is a typical stack operation.  The function creates an
1181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element at the end of the %vector and assigns the given data
1182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to it.  Due to the nature of a %vector this operation can be
1183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  done in constant time if the %vector has preallocated space
1184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  available.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 174


1185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       push_back(const value_type& __x)
1188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
1190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
1191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
1192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
1193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				     __x);
1194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    ++this->_M_impl._M_finish;
1195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
1196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
1197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else
1198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_realloc_insert(end(), __x);
1199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       push_back(value_type&& __x)
1204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
1205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus > 201402L
1208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	reference
1209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	emplace_back(_Args&&... __args);
1213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Removes last element.
1217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This is a typical stack operation. It shrinks the %vector by one.
1219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that no data is returned, and if the last element's
1221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  data is needed, it should be retrieved before pop_back() is
1222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  called.
1223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       pop_back() _GLIBCXX_NOEXCEPT
1226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	--this->_M_impl._M_finish;
1229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
1230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_GLIBCXX_ASAN_ANNOTATE_SHRINK(1);
1231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts an object in %vector before specified iterator.
1236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __args  Arguments.
1238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert an object of type T constructed
1241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  with T(std::forward<Args>(args)...) before the specified location.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 175


1242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a %vector
1243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  and if it is frequently used the user should consider using
1244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  std::list.
1245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	iterator
1248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	emplace(const_iterator __position, _Args&&... __args)
1249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ return _M_emplace_aux(__position, std::forward<_Args>(__args)...); }
1250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
1253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a copy of the given value before
1258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the specified location.  Note that this kind of operation
1259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used the user should consider using std::list.
1261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, const value_type& __x);
1264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
1267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a copy of the given value before
1272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the specified location.  Note that this kind of operation
1273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used the user should consider using std::list.
1275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(iterator __position, const value_type& __x);
1278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts given rvalue into %vector before specified iterator.
1283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a copy of the given rvalue before
1288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the specified location.  Note that this kind of operation
1289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used the user should consider using std::list.
1291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, value_type&& __x)
1294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_insert_rval(__position, std::move(__x)); }
1295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts an initializer_list into the %vector.
1298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 176


1299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
1300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert copies of the data in the
1302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer_list @a l into the %vector before the location
1303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  specified by @a position.
1304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, initializer_list<value_type> __l)
1311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	auto __offset = __position - cbegin();
1313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_insert(begin() + __offset, __l.begin(), __l.end(),
1314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			std::random_access_iterator_tag());
1315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return begin() + __offset;
1316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a specified number of copies of
1328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the given data before the location specified by @a position.
1329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, size_type __n, const value_type& __x)
1336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	difference_type __offset = __position - cbegin();
1338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_fill_insert(begin() + __offset, __n, __x);
1339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return begin() + __offset;
1340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a specified number of copies of
1349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the given data before the location specified by @a position.
1350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 177


1356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(iterator __position, size_type __n, const value_type& __x)
1357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_insert(__position, __n, __x); }
1358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
1365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last   An input iterator.
1366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert copies of the data in the range
1369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  by @a pos.
1371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator,
1377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	iterator
1379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	insert(const_iterator __position, _InputIterator __first,
1380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       _InputIterator __last)
1381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  difference_type __offset = __position - cbegin();
1383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_insert_dispatch(begin() + __offset,
1384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			     __first, __last, __false_type());
1385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  return begin() + __offset;
1386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
1392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last   An input iterator.
1393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert copies of the data in the range
1395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  by @a pos.
1397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	insert(iterator __position, _InputIterator __first,
1405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       _InputIterator __last)
1406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
1408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
1409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_insert_dispatch(__position, __first, __last, _Integral());
1410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 178


1413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Remove element at given position.
1415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  Iterator pointing to element to be erased.
1416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator pointing to the next element (or end()).
1417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will erase the element at the given position and thus
1419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  shorten the %vector by one.
1420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note This operation could be expensive and if it is
1422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  frequently used the user should consider using std::list.
1423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The user is also cautioned that this function only erases
1424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the element, and that if the element is itself a pointer,
1425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the pointed-to memory is not touched in any way.  Managing
1426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the pointer is the user's responsibility.
1427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(const_iterator __position)
1431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_erase(begin() + (__position - cbegin())); }
1432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(iterator __position)
1434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_erase(__position); }
1435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Remove a range of elements.
1439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  Iterator pointing to the first element to be erased.
1440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last  Iterator pointing to one past the last element to be
1441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *                  erased.
1442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator pointing to the element pointed to by @a __last
1443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *           prior to erasing (or end()).
1444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will erase the elements in the range
1446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [__first,__last) and shorten the %vector accordingly.
1447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note This operation could be expensive and if it is
1449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  frequently used the user should consider using std::list.
1450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The user is also cautioned that this function only erases
1451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the elements, and that if the elements themselves are
1452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  pointers, the pointed-to memory is not touched in any way.
1453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Managing the pointer is the user's responsibility.
1454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(const_iterator __first, const_iterator __last)
1458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const auto __beg = begin();
1460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const auto __cbeg = cbegin();
1461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return _M_erase(__beg + (__first - __cbeg), __beg + (__last - __cbeg));
1462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(iterator __first, iterator __last)
1465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_erase(__first, __last); }
1466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Swaps data with another %vector.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 179


1470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of the same element and allocator types.
1471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This exchanges the elements between two vectors in constant time.
1473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  (Three pointers, so it should be quite fast.)
1474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the global std::swap() function is specialized such that
1475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  std::swap(v1,v2) will feed to this function.
1476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Whether the allocators are swapped depends on the allocator traits.
1478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       swap(vector& __x) _GLIBCXX_NOEXCEPT
1481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_assert(_Alloc_traits::propagate_on_container_swap::value
1484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			 || _M_get_Tp_allocator() == __x._M_get_Tp_allocator());
1485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_swap_data(__x._M_impl);
1487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Alloc_traits::_S_on_swap(_M_get_Tp_allocator(),
1488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				  __x._M_get_Tp_allocator());
1489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Erases all the elements.  Note that this function only erases the
1493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  elements, and that if the elements themselves are pointers, the
1494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  pointed-to memory is not touched in any way.  Managing the pointer is
1495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the user's responsibility.
1496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       clear() _GLIBCXX_NOEXCEPT
1499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_erase_at_end(this->_M_impl._M_start); }
1500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
1502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Memory expansion handler.  Uses the member allocation function to
1504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  obtain @a n bytes of memory, and then copies [first,last) into it.
1505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer
1508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_allocate_and_copy(size_type __n,
1509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			     _ForwardIterator __first, _ForwardIterator __last)
1510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  pointer __result = this->_M_allocate(__n);
1512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __try
1513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
1514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      std::__uninitialized_copy_a(__first, __last, __result,
1515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  _M_get_Tp_allocator());
1516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      return __result;
1517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
1518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __catch(...)
1519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
1520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _M_deallocate(__result, __n);
1521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __throw_exception_again;
1522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
1523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Internal constructor functions follow.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 180


1527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus < 201103L
1531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Integer>
1534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_initialize_dispatch(_Integer __n, _Integer __value, __true_type)
1536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_start = _M_allocate(_S_check_init_len(
1538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		static_cast<size_type>(__n), _M_get_Tp_allocator()));
1539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_end_of_storage =
1540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_impl._M_start + static_cast<size_type>(__n);
1541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_fill_initialize(static_cast<size_type>(__n), __value);
1542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_initialize_dispatch(_InputIterator __first, _InputIterator __last,
1548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			       __false_type)
1549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_range_initialize(__first, __last,
1551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			      std::__iterator_category(__first));
1552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second initialize_dispatch above
1556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_initialize(_InputIterator __first, _InputIterator __last,
1559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    std::input_iterator_tag)
1560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __try {
1562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    for (; __first != __last; ++__first)
1563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      emplace_back(*__first);
1565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      push_back(*__first);
1567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  } __catch(...) {
1569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    clear();
1570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    __throw_exception_again;
1571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
1572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second initialize_dispatch above
1575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
1578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    std::forward_iterator_tag)
1579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  const size_type __n = std::distance(__first, __last);
1581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_start
1582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
1583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 181


1584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_finish =
1585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
1586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					this->_M_impl._M_start,
1587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					_M_get_Tp_allocator());
1588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the first initialize_dispatch above and by the
1591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // vector(n,value,a) constructor.
1592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_fill_initialize(size_type __n, const value_type& __value)
1594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
1596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_fill_n_a(this->_M_impl._M_start, __n, __value,
1597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					_M_get_Tp_allocator());
1598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the vector(n) constructor.
1602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_default_initialize(size_type __n)
1604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
1606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
1607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					   _M_get_Tp_allocator());
1608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Internal assign functions follow.  The *_aux functions do the actual
1612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // assignment work for the range versions.
1613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range assign to implement [23.1.1]/9
1615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Integer>
1619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_dispatch(_Integer __n, _Integer __val, __true_type)
1621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_fill_assign(__n, __val); }
1622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range assign to implement [23.1.1]/9
1624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_dispatch(_InputIterator __first, _InputIterator __last,
1627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			   __false_type)
1628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_assign_aux(__first, __last, std::__iterator_category(__first)); }
1629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second assign_dispatch above
1631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_aux(_InputIterator __first, _InputIterator __last,
1634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      std::input_iterator_tag);
1635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second assign_dispatch above
1637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,
1640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      std::forward_iterator_tag);
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 182


1641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by assign(n,t), and the range assign when it turns out
1643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // to be the same thing.
1644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_fill_assign(size_type __n, const value_type& __val);
1646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Internal insert functions follow.
1648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range insert to implement [23.1.1]/9
1650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Integer>
1654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_insert_dispatch(iterator __pos, _Integer __n, _Integer __val,
1656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			   __true_type)
1657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_fill_insert(__pos, __n, __val); }
1658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range insert to implement [23.1.1]/9
1660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_insert_dispatch(iterator __pos, _InputIterator __first,
1663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			   _InputIterator __last, __false_type)
1664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_range_insert(__pos, __first, __last,
1666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			  std::__iterator_category(__first));
1667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second insert_dispatch above
1670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_insert(iterator __pos, _InputIterator __first,
1673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			_InputIterator __last, std::input_iterator_tag);
1674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second insert_dispatch above
1676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_insert(iterator __pos, _ForwardIterator __first,
1679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			_ForwardIterator __last, std::forward_iterator_tag);
1680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by insert(p,n,x), and the range insert when it turns out to be
1682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // the same thing.
1683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_fill_insert(iterator __pos, size_type __n, const value_type& __x);
1685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by resize(n).
1688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_default_append(size_type __n);
1690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       bool
1692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_shrink_to_fit();
1693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus < 201103L
1696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by insert(p,x)
1697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 183


1698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_insert_aux(iterator __position, const value_type& __x);
1699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_realloc_insert(iterator __position, const value_type& __x);
1702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // A value_type object constructed with _Alloc_traits::construct()
1704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // and destroyed with _Alloc_traits::destroy().
1705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       struct _Temporary_value
1706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	template<typename... _Args>
1708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  explicit
1709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Temporary_value(vector* __vec, _Args&&... __args) : _M_this(__vec)
1710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
1711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _Alloc_traits::construct(_M_this->_M_impl, _M_ptr(),
1712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				     std::forward<_Args>(__args)...);
1713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
1714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	~_Temporary_value()
1716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _Alloc_traits::destroy(_M_this->_M_impl, _M_ptr()); }
1717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	value_type&
1719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_val() { return *_M_ptr(); }
1720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       private:
1722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Tp*
1723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_ptr() { return reinterpret_cast<_Tp*>(&__buf); }
1724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector* _M_this;
1726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	typename aligned_storage<sizeof(_Tp), alignof(_Tp)>::type __buf;
1727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       };
1728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by insert(p,x) and other functions when insertion needs to
1730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // reallocate or move existing elements. _Arg is either _Tp& or _Tp.
1731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Arg>
1732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_insert_aux(iterator __position, _Arg&& __arg);
1734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_realloc_insert(iterator __position, _Args&&... __args);
1738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Either move-construct at the end, or forward to _M_insert_aux.
1740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_insert_rval(const_iterator __position, value_type&& __v);
1742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Try to emplace at the end, otherwise forward to _M_insert_aux.
1744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	iterator
1746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_emplace_aux(const_iterator __position, _Args&&... __args);
1747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Emplacing an rvalue of the correct type can use _M_insert_rval.
1749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_emplace_aux(const_iterator __position, value_type&& __v)
1751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_insert_rval(__position, std::move(__v)); }
1752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by _M_fill_insert, _M_insert_aux etc.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 184


1755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
1756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_check_len(size_type __n, const char* __s) const
 735              		.loc 14 1756 7 is_stmt 1 view .LVU158
 736              	.LBB2115:
 737              	.LBB2113:
 738              	.LBI2109:
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 739              		.loc 14 918 7 view .LVU159
 740              	.LBB2111:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 741              		.loc 14 919 50 is_stmt 0 view .LVU160
 742 000c A5EB0803 		sub	r3, r5, r8
 743              	.LBE2111:
 744              	.LBE2113:
1757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (max_size() - size() < __n)
 745              		.loc 14 1758 2 view .LVU161
 746 0010 4349     		ldr	r1, .L50+4
 747              	.LBE2115:
 748              	.LBE2118:
 749              		.loc 16 426 7 view .LVU162
 750 0012 83B0     		sub	sp, sp, #12
 751              		.cfi_def_cfa_offset 48
 752              	.LBB2119:
 753              	.LBB2116:
 754              	.LBB2114:
 755              	.LBB2112:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 756              		.loc 14 919 50 view .LVU163
 757 0014 9B10     		asrs	r3, r3, #2
 758 0016 06FB03F3 		mul	r3, r6, r3
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 759              		.loc 14 919 50 view .LVU164
 760              	.LBE2112:
 761              	.LBE2114:
 762              		.loc 14 1758 2 view .LVU165
 763 001a 8B42     		cmp	r3, r1
 764 001c 7AD0     		beq	.L48
 765 001e 012B     		cmp	r3, #1
 766 0020 1E46     		mov	r6, r3
 767 0022 0746     		mov	r7, r0
 768              	.LBE2116:
 769              	.LBE2119:
 770              	.LBB2120:
 771              	.LBB2121:
 980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // Allow iterator to const_iterator conversion
 982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _Iter>
 983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         _GLIBCXX20_CONSTEXPR
 984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         __normal_iterator(const __normal_iterator<_Iter,
 985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 			  typename __enable_if<
 986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       	       (std::__are_same<_Iter, typename _Container::pointer>::__value),
 987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		      _Container>::__type>& __i) _GLIBCXX_NOEXCEPT
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         : _M_current(__i.base()) { }
 989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // Forward iterator requirements
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 185


 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reference
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*() const _GLIBCXX_NOEXCEPT
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *_M_current; }
 995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       pointer
 998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator->() const _GLIBCXX_NOEXCEPT
 999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return _M_current; }
1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator&
1003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++() _GLIBCXX_NOEXCEPT
1004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
1005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++_M_current;
1006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
1007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
1008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator
1011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int) _GLIBCXX_NOEXCEPT
1012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return __normal_iterator(_M_current++); }
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // Bidirectional iterator requirements
1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator&
1017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator--() _GLIBCXX_NOEXCEPT
1018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
1019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	--_M_current;
1020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
1021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
1022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator
1025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator--(int) _GLIBCXX_NOEXCEPT
1026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return __normal_iterator(_M_current--); }
1027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // Random access iterator requirements
1029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reference
1031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator[](difference_type __n) const _GLIBCXX_NOEXCEPT
1032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return _M_current[__n]; }
1033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator&
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator+=(difference_type __n) _GLIBCXX_NOEXCEPT
1037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { _M_current += __n; return *this; }
1038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator
1041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT
1042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return __normal_iterator(_M_current + __n); }
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator&
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator-=(difference_type __n) _GLIBCXX_NOEXCEPT
1047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { _M_current -= __n; return *this; }
1048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 186


1049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator
1051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
1052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return __normal_iterator(_M_current - __n); }
1053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       const _Iterator&
1056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       base() const _GLIBCXX_NOEXCEPT
1057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return _M_current; }
1058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
1059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // Note: In what follows, the left- and right-hand-side iterators are
1061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // allowed to vary in types (conceptually in cv-qualification) so that
1062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // comparison between cv-qualified and non-cv-qualified iterators be
1063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // valid.  However, the greedy and unfriendly operators in std::rel_ops
1064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // will make overload resolution ambiguous (when in scope) if we don't
1065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // provide overloads whose operands are of the same type.  Can someone
1066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // remind me what generic programming is about? -- Gaby
1067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cpp_lib_three_way_comparison
1069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires (_IteratorL __lhs, _IteratorR __rhs)
1071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { { __lhs == __rhs } -> std::convertible_to<bool>; }
1072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
1073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
1074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
1075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     noexcept(noexcept(__lhs.base() == __rhs.base()))
1076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() == __rhs.base(); }
1077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr std::__detail::__synth3way_t<_IteratorR, _IteratorL>
1080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=>(const __normal_iterator<_IteratorL, _Container>& __lhs,
1081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		const __normal_iterator<_IteratorR, _Container>& __rhs)
1082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     noexcept(noexcept(std::__detail::__synth3way(__lhs.base(), __rhs.base())))
1083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return std::__detail::__synth3way(__lhs.base(), __rhs.base()); }
1084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
1085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    // Forward iterator requirements
1086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
1090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
1091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() == __rhs.base(); }
1093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
1098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
1099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() == __rhs.base(); }
1101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const __normal_iterator<_IteratorL, _Container>& __lhs,
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 187


1106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
1107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() != __rhs.base(); }
1109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
1114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
1115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() != __rhs.base(); }
1117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // Random access iterator requirements
1119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const __normal_iterator<_IteratorL, _Container>& __lhs,
1122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs)
1123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() < __rhs.base(); }
1125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const __normal_iterator<_Iterator, _Container>& __lhs,
1130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
1131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() < __rhs.base(); }
1133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const __normal_iterator<_IteratorL, _Container>& __lhs,
1137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs)
1138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() > __rhs.base(); }
1140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const __normal_iterator<_Iterator, _Container>& __lhs,
1145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
1146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() > __rhs.base(); }
1148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const __normal_iterator<_IteratorL, _Container>& __lhs,
1152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
1153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() <= __rhs.base(); }
1155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const __normal_iterator<_Iterator, _Container>& __lhs,
1160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
1161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() <= __rhs.base(); }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 188


1163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const __normal_iterator<_IteratorL, _Container>& __lhs,
1167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
1168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() >= __rhs.base(); }
1170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const __normal_iterator<_Iterator, _Container>& __lhs,
1175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
1176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() >= __rhs.base(); }
1178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif // three-way comparison
1179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
1181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // According to the resolution of DR179 not only the various comparison
1182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // operators but also operator- must accept mixed iterator/const_iterator
1183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // parameters.
1184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus >= 201103L
1186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     // DR 685.
1187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline auto
1189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const __normal_iterator<_IteratorL, _Container>& __lhs,
1190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs) noexcept
1191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     -> decltype(__lhs.base() - __rhs.base())
1192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
1193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline typename __normal_iterator<_IteratorL, _Container>::difference_type
1194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const __normal_iterator<_IteratorL, _Container>& __lhs,
1195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs)
1196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
1197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() - __rhs.base(); }
1198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline typename __normal_iterator<_Iterator, _Container>::difference_type
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
1204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() - __rhs.base(); }
 772              		.loc 13 1205 27 view .LVU166
 773 0024 A4EB080B 		sub	fp, r4, r8
 774 0028 38BF     		it	cc
 775 002a 0126     		movcc	r6, #1
 776 002c F618     		adds	r6, r6, r3
 777 002e 6FD2     		bcs	.L32
 778              	.LVL41:
 779              		.loc 13 1205 27 view .LVU167
 780              	.LBE2121:
 781              	.LBE2120:
 782              	.LBB2123:
 783              	.LBI2123:
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 784              		.loc 14 811 7 is_stmt 1 view .LVU168
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 189


 785              	.LBB2124:
 786              	.LBI2124:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 787              		.loc 13 978 7 view .LVU169
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 788              		.loc 13 978 7 is_stmt 0 view .LVU170
 789              	.LBE2124:
 790              	.LBE2123:
 791              	.LBB2126:
 792              	.LBI2120:
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 793              		.loc 13 1202 5 is_stmt 1 view .LVU171
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 794              		.loc 13 1202 5 is_stmt 0 view .LVU172
 795              	.LBE2126:
 796              	.LBB2127:
 797              	.LBI2127:
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 798              		.loc 14 343 7 is_stmt 1 view .LVU173
 799              	.LBB2128:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 800              		.loc 14 346 18 is_stmt 0 view .LVU174
 801 0030 002E     		cmp	r6, #0
 802 0032 5CD1     		bne	.L49
 803 0034 4FF02C0A 		mov	r10, #44
 804 0038 B146     		mov	r9, r6
 805              	.LVL42:
 806              	.L40:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 807              		.loc 14 346 18 view .LVU175
 808              	.LBE2128:
 809              	.LBE2127:
 810              	.LBB2139:
 811              	.LBI2139:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 812              		.loc 5 507 2 is_stmt 1 view .LVU176
 813              	.LBB2140:
 814              	.LBI2140:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 815              		.loc 6 148 2 view .LVU177
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 816              		.loc 6 148 2 is_stmt 0 view .LVU178
 817              	.LBE2140:
 818              	.LBE2139:
 819              		.file 17 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\new"
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // The -*- C++ -*- dynamic memory management header.
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // Copyright (C) 1994-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // This file is part of GCC.
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** //
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // GCC is free software; you can redistribute it and/or modify
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // it under the terms of the GNU General Public License as published by
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // the Free Software Foundation; either version 3, or (at your option)
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // any later version.
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // 
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // GCC is distributed in the hope that it will be useful,
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 190


  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // GNU General Public License for more details.
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // 
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // Under Section 7 of GPL version 3, you are granted additional
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // permissions described in the GCC Runtime Library Exception, version
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // 3.1, as published by the Free Software Foundation.
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // You should have received a copy of the GNU General Public License and
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // a copy of the GCC Runtime Library Exception along with this program;
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // <http://www.gnu.org/licenses/>.
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** /** @file new
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  This is a Standard C++ Library header.
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  The header @c new defines several functions to manage dynamic memory and
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  handling memory allocation errors; see
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  https://gcc.gnu.org/onlinedocs/libstdc++/manual/dynamic_memory.html
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  for more.
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  */
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #ifndef _NEW
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #define _NEW
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #pragma GCC system_header
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #include <bits/c++config.h>
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #include <exception>
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #pragma GCC visibility push(default)
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** extern "C++" {
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** namespace std 
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** {
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   /**
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****    *  @brief  Exception possibly thrown by @c new.
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****    *  @ingroup exceptions
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****    *
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****    *  @c bad_alloc (or classes derived from it) is used to report allocation
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****    *  errors from the throwing forms of @c new.  */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   class bad_alloc : public exception 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   {
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   public:
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     bad_alloc() throw() { }
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     bad_alloc(const bad_alloc&) = default;
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     bad_alloc& operator=(const bad_alloc&) = default;
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     // This declaration is not useless:
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     // http://gcc.gnu.org/onlinedocs/gcc-3.0.2/gcc_6.html#SEC118
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     virtual ~bad_alloc() throw();
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     // See comment in eh_exception.cc.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 191


  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     virtual const char* what() const throw();
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   };
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   class bad_array_new_length : public bad_alloc
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   {
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   public:
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     bad_array_new_length() throw() { }
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     // This declaration is not useless:
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     // http://gcc.gnu.org/onlinedocs/gcc-3.0.2/gcc_6.html#SEC118
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     virtual ~bad_array_new_length() throw();
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     // See comment in eh_exception.cc.
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     virtual const char* what() const throw();
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   };
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_aligned_new
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   enum class align_val_t: size_t {};
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   struct nothrow_t
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   {
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     explicit nothrow_t() = default;
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   };
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   extern const nothrow_t nothrow;
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   /** If you write your own error handler to be called by @c new, it must
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****    *  be of this type.  */
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   typedef void (*new_handler)();
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   /// Takes a replacement handler as the argument, returns the
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   /// previous handler.
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   new_handler set_new_handler(new_handler) throw();
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   /// Return the current new handler.
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   new_handler get_new_handler() noexcept;
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** } // namespace std
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** //@{
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** /** These are replaceable signatures:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  - normal single new and delete (no arguments, throw @c bad_alloc on error)
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  - normal array new and delete (same)
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  - @c nothrow single new and delete (take a @c nothrow argument, return
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *    @c NULL on error)
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  - @c nothrow array new and delete (same)
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  Placement new and delete signatures (take a memory address argument,
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  does nothing) may not be replaced by a user's program.
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** */
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t) _GLIBCXX_THROW (std::bad_alloc)
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 192


 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t) _GLIBCXX_THROW (std::bad_alloc)
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*) _GLIBCXX_USE_NOEXCEPT
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*) _GLIBCXX_USE_NOEXCEPT
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_sized_deallocation
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::size_t) _GLIBCXX_USE_NOEXCEPT
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::size_t) _GLIBCXX_USE_NOEXCEPT
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__, __malloc__));
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__, __malloc__));
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_aligned_new
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t, std::align_val_t)
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t, std::align_val_t, const std::nothrow_t&)
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__, __malloc__));
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::align_val_t)
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::align_val_t, const std::nothrow_t&)
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t, std::align_val_t)
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t, std::align_val_t, const std::nothrow_t&)
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__, __malloc__));
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::align_val_t)
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::align_val_t, const std::nothrow_t&)
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_sized_deallocation
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::size_t, std::align_val_t)
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::size_t, std::align_val_t)
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif // __cpp_sized_deallocation
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif // __cpp_aligned_new
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // Default placement versions of operator new.
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** { return __p; }
 820              		.loc 17 175 3 is_stmt 1 view .LVU179
 821              	.LBB2145:
 822              	.LBB2143:
 823              	.LBB2141:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 824              		.loc 6 150 4 is_stmt 0 view .LVU180
 825 003a 9646     		mov	lr, r2
 826 003c 09EB0B0C 		add	ip, r9, fp
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 193


 827              	.LVL43:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 828              		.loc 6 150 4 view .LVU181
 829              	.LBE2141:
 830              	.LBE2143:
 831              	.LBE2145:
 832              	.LBB2146:
 833              	.LBB2147:
 834              	.LBB2148:
 835              	.LBB2149:
 836              	.LBB2150:
 837              	.LBB2151:
 838              		.file 18 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_uninit
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Raw memory manipulators -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Copyright (c) 1996,1997
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 194


  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * representations about the suitability of this software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** /** @file bits/stl_uninitialized.h
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #ifndef _STL_UNINITIALIZED_H
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #define _STL_UNINITIALIZED_H 1
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus > 201402L
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #include <bits/stl_pair.h>
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus >= 201103L
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #include <type_traits>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #include <ext/alloc_traits.h>
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** namespace std _GLIBCXX_VISIBILITY(default)
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** {
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /** @addtogroup memory
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @{
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    */
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueTypes>
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_copy
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __result;
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __first != __last; ++__first, (void)++__cur)
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      return __cur;
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__result, __cur);
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 195


 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_copy<true>
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         { return std::copy(__first, __last, __result); }
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Copies the range [first,last) into result.
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __last   An input iterator.
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __result An output iterator.
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   __result + (__first - __last)
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  Like copy(), but does not require an initialized output range.
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator>
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_copy(_InputIterator __first, _InputIterator __last,
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       _ForwardIterator __result)
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::value_type
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType1;
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType2;
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus < 201103L
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = true;
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #else
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted copy constructor, but the std::copy
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // optimization that uses memmove would happily "copy" them anyway.
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       static_assert(is_constructible<_ValueType2, decltype(*__first)>::value,
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  "result type must be constructible from value type of input range");
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::reference _RefType1;
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::reference _RefType2;
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted assignment, so using std::copy
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // would be ill-formed. Require assignability before using std::copy:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return std::__uninitialized_copy<__is_trivial(_ValueType1)
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       && __is_trivial(_ValueType2)
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       && __assignable>::
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_copy(__first, __last, __result);
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 196


 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static void
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      const _Tp& __x)
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __cur != __last; ++__cur)
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill<true>
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static void
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      const _Tp& __x)
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         { std::fill(__first, __last, __x); }
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,last).
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __last   An input iterator.
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __x      The source value.
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   Nothing.
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  Like fill(), but does not require an initialized output range.
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp>
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_fill(_ForwardIterator __first, _ForwardIterator __last,
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       const _Tp& __x)
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus < 201103L
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = true;
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #else
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted copy constructor, but the std::fill
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // optimization that uses memmove would happily "copy" them anyway.
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       static_assert(is_constructible<_ValueType, const _Tp&>::value,
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  "result type must be constructible from input type");
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted assignment, so using std::fill
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // would be ill-formed. Require assignability before using std::fill:
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 197


 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       std::__uninitialized_fill<__is_trivial(_ValueType) && __assignable>::
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_fill(__first, __last, __x);
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill_n
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			const _Tp& __x)
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __n > 0; --__n, (void) ++__cur)
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      return __cur;
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill_n<true>
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			const _Tp& __x)
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         { return std::fill_n(__first, __n, __x); }
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    // _GLIBCXX_RESOLVE_LIB_DEFECTS
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    // DR 1339. uninitialized_fill_n should return the end of its range
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,first+n).
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __n      The number of copies to make.
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __x      The source value.
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   Nothing.
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  Like fill_n(), but does not require an initialized output range.
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp>
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_fill_n(_ForwardIterator __first, _Size __n, const _Tp& __x)
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 198


 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus < 201103L
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = true;
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #else
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted copy constructor, but the std::fill
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // optimization that uses memmove would happily "copy" them anyway.
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       static_assert(is_constructible<_ValueType, const _Tp&>::value,
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  "result type must be constructible from input type");
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted assignment, so using std::fill
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // would be ill-formed. Require assignability before using std::fill:
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __uninitialized_fill_n<__is_trivial(_ValueType) && __assignable>::
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_fill_n(__first, __n, __x);
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Extensions: versions of uninitialized_copy, uninitialized_fill,
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  and uninitialized_fill_n that take an allocator parameter.
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  We dispatch back to the standard versions when we're given the
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  default allocator.  For nondefault allocators we do not use 
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  any of the POD optimizations.
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     _ForwardIterator
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, _Allocator& __alloc)
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __result;
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __first != __last; ++__first, (void)++__cur)
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), *__first);
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return __cur;
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __cur, __alloc);
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator, typename _Tp>
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, allocator<_Tp>&)
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { return std::uninitialized_copy(__first, __last, __result); }
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 199


 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_move_a(_InputIterator __first, _InputIterator __last,
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, _Allocator& __alloc)
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return std::__uninitialized_copy_a(_GLIBCXX_MAKE_MOVE_ITERATOR(__first),
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 					 _GLIBCXX_MAKE_MOVE_ITERATOR(__last),
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 					 __result, __alloc);
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_move_if_noexcept_a(_InputIterator __first,
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       _InputIterator __last,
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       _ForwardIterator __result,
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       _Allocator& __alloc)
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return std::__uninitialized_copy_a
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	(_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(__first),
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	 _GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(__last), __result, __alloc);
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp, typename _Allocator>
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     void
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last,
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   const _Tp& __x, _Allocator& __alloc)
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __first;
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __cur != __last; ++__cur)
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), __x);
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp, typename _Tp2>
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last,
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   const _Tp& __x, allocator<_Tp2>&)
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { std::uninitialized_fill(__first, __last, __x); }
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp,
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     _ForwardIterator
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, 
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			     const _Tp& __x, _Allocator& __alloc)
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __first;
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __n > 0; --__n, (void) ++__cur)
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 200


 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), __x);
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return __cur;
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp,
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Tp2>
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, 
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			     const _Tp& __x, allocator<_Tp2>&)
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { return std::uninitialized_fill_n(__first, __n, __x); }
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Extensions: __uninitialized_copy_move, __uninitialized_move_copy,
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_fill_move, __uninitialized_move_fill.
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // All of these algorithms take a user-supplied allocator, which is used
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // for construction and destruction.
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_copy_move
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Copies [first1, last1) into [result, result + (last1 - first1)), and
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  move [first2, last2) into
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  [result, result + (last1 - first1) + (last2 - first2)).
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator1, typename _InputIterator2,
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _ForwardIterator, typename _Allocator>
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_move(_InputIterator1 __first1,
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator1 __last1,
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator2 __first2,
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator2 __last2,
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __result,
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _Allocator& __alloc)
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __mid = std::__uninitialized_copy_a(__first1, __last1,
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 							   __result,
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 							   __alloc);
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return std::__uninitialized_move_a(__first2, __last2, __mid, __alloc);
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __mid, __alloc);
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_move_copy
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Moves [first1, last1) into [result, result + (last1 - first1)), and
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  copies [first2, last2) into
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  [result, result + (last1 - first1) + (last2 - first2)).
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator1, typename _InputIterator2,
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _ForwardIterator, typename _Allocator>
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 201


 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_move_copy(_InputIterator1 __first1,
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator1 __last1,
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator2 __first2,
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator2 __last2,
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __result,
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _Allocator& __alloc)
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __mid = std::__uninitialized_move_a(__first1, __last1,
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 							   __result,
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 							   __alloc);
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return std::__uninitialized_copy_a(__first2, __last2, __mid, __alloc);
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __mid, __alloc);
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_fill_move
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [result, mid) with x, and moves [first, last) into
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  [mid, mid + (last - first)).
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp, typename _InputIterator,
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_fill_move(_ForwardIterator __result, _ForwardIterator __mid,
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      const _Tp& __x, _InputIterator __first,
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator __last, _Allocator& __alloc)
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       std::__uninitialized_fill_a(__result, __mid, __x, __alloc);
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return std::__uninitialized_move_a(__first, __last, __mid, __alloc);
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __mid, __alloc);
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_move_fill
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Moves [first1, last1) into [first2, first2 + (last1 - first1)), and
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  fills [first2 + (last1 - first1), last2) with x.
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator, typename _Tp,
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_move_fill(_InputIterator __first1, _InputIterator __last1,
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __first2,
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __last2, const _Tp& __x,
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _Allocator& __alloc)
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __mid2 = std::__uninitialized_move_a(__first1, __last1,
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 							    __first2,
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 202


 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 							    __alloc);
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::__uninitialized_fill_a(__mid2, __last2, __x, __alloc);
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__first2, __mid2, __alloc);
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus >= 201103L
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Extensions: __uninitialized_default, __uninitialized_default_n,
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default_a, __uninitialized_default_n_a.
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_1
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator>
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static void
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_default(_ForwardIterator __first, _ForwardIterator __last)
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __cur != __last; ++__cur)
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur));
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_1<true>
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator>
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static void
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_default(_ForwardIterator __first, _ForwardIterator __last)
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef typename iterator_traits<_ForwardIterator>::value_type
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    _ValueType;
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::fill(__first, __last, _ValueType());
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_n_1
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 203


 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size>
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_default_n(_ForwardIterator __first, _Size __n)
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __n > 0; --__n, (void) ++__cur)
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur));
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      return __cur;
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_n_1<true>
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size>
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_default_n(_ForwardIterator __first, _Size __n)
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef typename iterator_traits<_ForwardIterator>::value_type
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    _ValueType;
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return std::fill_n(__first, __n, _ValueType());
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [first, last) with std::distance(first, last) default
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // constructed value_types(s).
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator>
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default(_ForwardIterator __first,
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			    _ForwardIterator __last)
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // trivial types can have deleted assignment
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       std::__uninitialized_default_1<__is_trivial(_ValueType)
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				     && __assignable>::
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_default(__first, __last);
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default_n
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [first, first + n) with n default constructed value_type(s).
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size>
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_n(_ForwardIterator __first, _Size __n)
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 204


 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // trivial types can have deleted assignment
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __uninitialized_default_n_1<__is_trivial(_ValueType)
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       && __assignable>::
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_default_n(__first, __n);
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default_a
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [first, last) with std::distance(first, last) default
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // constructed value_types(s), constructed with the allocator alloc.
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Allocator>
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     void
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_a(_ForwardIterator __first,
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __last,
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _Allocator& __alloc)
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __first;
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __cur != __last; ++__cur)
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur));
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp>
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_a(_ForwardIterator __first,
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __last,
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      allocator<_Tp>&)
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { std::__uninitialized_default(__first, __last); }
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default_n_a
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [first, first + n) with n default constructed value_types(s),
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // constructed with the allocator alloc.
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Allocator>
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     _ForwardIterator
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_n_a(_ForwardIterator __first, _Size __n, 
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				_Allocator& __alloc)
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __first;
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __n > 0; --__n, (void) ++__cur)
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur));
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 205


 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return __cur;
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp>
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_n_a(_ForwardIterator __first, _Size __n, 
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				allocator<_Tp>&)
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { return std::__uninitialized_default_n(__first, __n); }
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_novalue_1
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator>
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	static void
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_default_novalue(_ForwardIterator __first,
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				 _ForwardIterator __last)
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __cur != __last; ++__cur)
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct_novalue(std::__addressof(*__cur));
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_novalue_1<true>
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator>
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static void
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_default_novalue(_ForwardIterator __first,
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				 _ForwardIterator __last)
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_novalue_n_1
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size>
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	static _ForwardIterator
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_default_novalue_n(_ForwardIterator __first, _Size __n)
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 206


 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __n > 0; --__n, (void) ++__cur)
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct_novalue(std::__addressof(*__cur));
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      return __cur;
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_novalue_n_1<true>
 744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size>
 746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	static _ForwardIterator
 747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_default_novalue_n(_ForwardIterator __first, _Size __n)
 748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{ return std::next(__first, __n); }
 749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default_novalue
 752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [first, last) with std::distance(first, last) default-initialized
 753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // value_types(s).
 754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator>
 755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_novalue(_ForwardIterator __first,
 757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				    _ForwardIterator __last)
 758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       std::__uninitialized_default_novalue_1<
 763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	is_trivially_default_constructible<_ValueType>::value>::
 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_default_novalue(__first, __last);
 765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default_n
 768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [first, first + n) with n default-initialized value_type(s).
 769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size>
 770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_novalue_n(_ForwardIterator __first, _Size __n)
 772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __uninitialized_default_novalue_n_1<
 777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	is_trivially_default_constructible<_ValueType>::value>::
 778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_default_novalue_n(__first, __n);
 779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _Size,
 782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _ForwardIterator>
 783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     _ForwardIterator
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_n(_InputIterator __first, _Size __n,
 785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, input_iterator_tag)
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 207


 786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __result;
 788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __n > 0; --__n, (void) ++__first, ++__cur)
 791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    std::_Construct(std::__addressof(*__cur), *__first);
 792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return __cur;
 793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __cur);
 797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _RandomAccessIterator, typename _Size,
 802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _ForwardIterator>
 803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_n(_RandomAccessIterator __first, _Size __n,
 805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result,
 806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   random_access_iterator_tag)
 807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { return std::uninitialized_copy(__first, __first + __n, __result); }
 808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _Size,
 810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _ForwardIterator>
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     pair<_InputIterator, _ForwardIterator>
 812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_n_pair(_InputIterator __first, _Size __n,
 813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, input_iterator_tag)
 814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __result;
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __n > 0; --__n, (void) ++__first, ++__cur)
 819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    std::_Construct(std::__addressof(*__cur), *__first);
 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return {__first, __cur};
 821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __cur);
 825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _RandomAccessIterator, typename _Size,
 830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _ForwardIterator>
 831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline pair<_RandomAccessIterator, _ForwardIterator>
 832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_n_pair(_RandomAccessIterator __first, _Size __n,
 833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result,
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   random_access_iterator_tag)
 835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       auto __second_res = uninitialized_copy(__first, __first + __n, __result);
 837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       auto __first_res = std::next(__first, __n);
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return {__first_res, __second_res};
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 208


 843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Copies the range [first,first+n) into result.
 845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __n      The number of elements to copy.
 847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __result An output iterator.
 848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return  __result + __n
 849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *
 850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  Like copy_n(), but does not require an initialized output range.
 851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _Size, typename _ForwardIterator>
 853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_copy_n(_InputIterator __first, _Size __n,
 855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			 _ForwardIterator __result)
 856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { return std::__uninitialized_copy_n(__first, __n, __result,
 857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 					 std::__iterator_category(__first)); }
 858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _Size, typename _ForwardIterator>
 861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline pair<_InputIterator, _ForwardIterator>
 862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_n_pair(_InputIterator __first, _Size __n,
 863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __result)
 864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return
 866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	std::__uninitialized_copy_n_pair(__first, __n, __result,
 867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 					 std::__iterator_category(__first));
 868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
 871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus >= 201703L
 873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** # define __cpp_lib_raw_memory_algorithms 201606L
 874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Default-initializes objects in the range [first,last).
 877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  A forward iterator.
 878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __last   A forward iterator.
 879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _ForwardIterator>
 881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_default_construct(_ForwardIterator __first,
 883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				    _ForwardIterator __last)
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __uninitialized_default_novalue(__first, __last);
 886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Default-initializes objects in the range [first,first+count).
 890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  A forward iterator.
 891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __count  The number of objects to construct.
 892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   __first + __count
 893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _ForwardIterator, typename _Size>
 895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_default_construct_n(_ForwardIterator __first, _Size __count)
 897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __uninitialized_default_novalue_n(__first, __count);
 899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 209


 900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Value-initializes objects in the range [first,last).
 903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  A forward iterator.
 904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __last   A forward iterator.
 905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _ForwardIterator>
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_value_construct(_ForwardIterator __first,
 909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				  _ForwardIterator __last)
 910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __uninitialized_default(__first, __last);
 912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Value-initializes objects in the range [first,first+count).
 916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  A forward iterator.
 917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __count  The number of objects to construct.
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   __result + __count
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _ForwardIterator, typename _Size>
 921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_value_construct_n(_ForwardIterator __first, _Size __count)
 923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __uninitialized_default_n(__first, __count);
 925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Move-construct from the range [first,last) into result.
 929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __last   An input iterator.
 931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __result An output iterator.
 932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   __result + (__first - __last)
 933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _InputIterator, typename _ForwardIterator>
 935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_move(_InputIterator __first, _InputIterator __last,
 937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       _ForwardIterator __result)
 938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return std::uninitialized_copy
 940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	(_GLIBCXX_MAKE_MOVE_ITERATOR(__first),
 941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	 _GLIBCXX_MAKE_MOVE_ITERATOR(__last), __result);
 942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Move-construct from the range [first,first+count) into result.
 946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __count  The number of objects to initialize.
 948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __result An output iterator.
 949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return  __result + __count
 950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _InputIterator, typename _Size, typename _ForwardIterator>
 952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline pair<_InputIterator, _ForwardIterator>
 953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_move_n(_InputIterator __first, _Size __count,
 954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			 _ForwardIterator __result)
 955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       auto __res = std::__uninitialized_copy_n_pair
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 210


 957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	(_GLIBCXX_MAKE_MOVE_ITERATOR(__first),
 958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	 __count, __result);
 959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return {__res.first.base(), __res.second};
 960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif // C++17
 962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus >= 201103L
 964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _Tp, typename _Up, typename _Allocator>
 967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __relocate_object_a(_Tp* __restrict __dest, _Up* __restrict __orig,
 969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			_Allocator& __alloc)
 970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     noexcept(noexcept(std::allocator_traits<_Allocator>::construct(__alloc,
 971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			 __dest, std::move(*__orig)))
 972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	     && noexcept(std::allocator_traits<_Allocator>::destroy(
 973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			    __alloc, std::__addressof(*__orig))))
 974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef std::allocator_traits<_Allocator> __traits;
 976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __traits::construct(__alloc, __dest, std::move(*__orig));
 977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __traits::destroy(__alloc, std::__addressof(*__orig));
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // This class may be specialized for specific types.
 981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Also known as is_trivially_relocatable.
 982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _Tp, typename = void>
 983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __is_bitwise_relocatable
 984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     : is_trivial<_Tp> { };
 985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _Tp, typename _Up>
 987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline __enable_if_t<std::__is_bitwise_relocatable<_Tp>::value, _Tp*>
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __relocate_a_1(_Tp* __first, _Tp* __last,
 989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		   _Tp* __result, allocator<_Up>&) noexcept
 990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       ptrdiff_t __count = __last - __first;
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       if (__count > 0)
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __result + __count;
 995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _InputIterator, typename _ForwardIterator,
 998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    typename _Allocator>
 999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __relocate_a_1(_InputIterator __first, _InputIterator __last,
1001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		   _ForwardIterator __result, _Allocator& __alloc)
1002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     noexcept(noexcept(std::__relocate_object_a(std::addressof(*__result),
1003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 					       std::addressof(*__first),
1004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 					       __alloc)))
1005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
1006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::value_type
1007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
1008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
1009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType2;
1010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       static_assert(std::is_same<_ValueType, _ValueType2>::value,
1011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  "relocation is only possible for values of the same type");
1012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __result;
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       for (; __first != __last; ++__first, (void)++__cur)
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 211


 839              		.loc 18 1013 22 view .LVU182
 840 0040 4445     		cmp	r4, r8
 841              	.LBE2151:
 842              	.LBE2150:
 843              	.LBE2149:
 844              	.LBE2148:
 845              	.LBE2147:
 846              	.LBE2146:
 847              	.LBB2189:
 848              	.LBB2144:
 849              	.LBB2142:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 850              		.loc 6 150 4 view .LVU183
 851 0042 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 852              	.LVL44:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 853              		.loc 6 150 4 view .LVU184
 854 0046 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 855              	.LVL45:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 856              		.loc 6 150 4 view .LVU185
 857 004a BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 858              	.LVL46:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 859              		.loc 6 150 4 view .LVU186
 860 004e ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 861              	.LVL47:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 862              		.loc 6 150 4 view .LVU187
 863 0052 9EE80700 		ldm	lr, {r0, r1, r2}
 864 0056 8CE80700 		stm	ip, {r0, r1, r2}
 865              	.LVL48:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 866              		.loc 6 150 4 view .LVU188
 867              	.LBE2142:
 868              	.LBE2144:
 869              	.LBE2189:
 870              	.LBB2190:
 871              	.LBI2146:
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 872              		.loc 14 465 7 is_stmt 1 view .LVU189
 873              	.LBB2186:
 874              	.LBB2183:
 875              	.LBB2180:
 876              	.LBB2177:
 877              	.LBB2174:
 878              		.loc 18 1013 22 view .LVU190
 879 005a 27D0     		beq	.L36
 880 005c 09F12C0B 		add	fp, r9, #44
 881 0060 C246     		mov	r10, r8
 882              	.LVL49:
 883              	.L37:
 884              	.LBB2152:
 885              	.LBI2152:
 968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			_Allocator& __alloc)
 886              		.loc 18 968 5 view .LVU191
 887              	.LBB2153:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 212


 888              	.LBB2154:
 889              	.LBI2154:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 890              		.loc 5 507 2 view .LVU192
 891              	.LBB2155:
 892              	.LBI2155:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 893              		.loc 6 148 2 view .LVU193
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 894              		.loc 6 148 2 is_stmt 0 view .LVU194
 895              	.LBE2155:
 896              	.LBE2154:
 897              	.LBE2153:
 898              	.LBE2152:
 899              	.LBE2174:
 900              	.LBE2177:
 901              	.LBE2180:
 902              	.LBE2183:
 903              	.LBE2186:
 904              	.LBE2190:
 905              		.loc 17 175 3 is_stmt 1 view .LVU195
 906              	.LBB2191:
 907              	.LBB2187:
 908              	.LBB2184:
 909              	.LBB2181:
 910              	.LBB2178:
 911              	.LBB2175:
 912              	.LBB2171:
 913              	.LBB2168:
 914              	.LBB2162:
 915              	.LBB2159:
 916              	.LBB2156:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 917              		.loc 6 150 4 is_stmt 0 view .LVU196
 918 0062 D646     		mov	lr, r10
 919 0064 ABF12C0C 		sub	ip, fp, #44
 920              	.LBE2156:
 921              	.LBE2159:
 922              	.LBE2162:
 923              	.LBE2168:
 924              	.LBE2171:
 925              		.loc 18 1013 7 view .LVU197
 926 0068 0AF12C0A 		add	r10, r10, #44
 927              	.LVL50:
 928              		.loc 18 1013 22 view .LVU198
 929 006c 0BF12C0B 		add	fp, fp, #44
 930              	.LBB2172:
 931              	.LBB2169:
 932              	.LBB2163:
 933              	.LBB2160:
 934              	.LBB2157:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 935              		.loc 6 150 4 view .LVU199
 936 0070 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 937              	.LVL51:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 938              		.loc 6 150 4 view .LVU200
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 213


 939 0074 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 940 0078 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 941              	.LVL52:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 942              		.loc 6 150 4 view .LVU201
 943              	.LBE2157:
 944              	.LBE2160:
 945              	.LBE2163:
 946              	.LBE2169:
 947              	.LBE2172:
 948              		.loc 18 1013 22 view .LVU202
 949 007c A245     		cmp	r10, r4
 950              	.LBB2173:
 951              	.LBB2170:
 952              	.LBB2164:
 953              	.LBB2161:
 954              	.LBB2158:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 955              		.loc 6 150 4 view .LVU203
 956 007e ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 957 0082 9EE80700 		ldm	lr, {r0, r1, r2}
 958 0086 8CE80700 		stm	ip, {r0, r1, r2}
 959              	.LVL53:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 960              		.loc 6 150 4 view .LVU204
 961              	.LBE2158:
 962              	.LBE2161:
 963              	.LBE2164:
 964              	.LBB2165:
 965              	.LBI2165:
 966              		.loc 5 527 2 is_stmt 1 view .LVU205
 967              	.LBB2166:
 968              	.LBI2166:
 969              		.loc 6 154 2 view .LVU206
 970              	.LBB2167:
 971              	.LBI2167:
  24:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
 972              		.loc 10 24 5 view .LVU207
  24:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
 973              		.loc 10 24 5 is_stmt 0 view .LVU208
 974              	.LBE2167:
 975              	.LBE2166:
 976              	.LBE2165:
 977              	.LBE2170:
 978              	.LBE2173:
 979              		.loc 18 1013 7 is_stmt 1 view .LVU209
 980              		.loc 18 1013 22 view .LVU210
 981 008a EAD1     		bne	.L37
 982              	.LBE2175:
 983              	.LBE2178:
 984              	.LBE2181:
 985              	.LBE2184:
 986              	.LBE2187:
 987              	.LBE2191:
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_realloc_insert(iterator __position, _Args&&... __args)
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 214


 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     void
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_realloc_insert(iterator __position, const _Tp& __x)
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       const size_type __len =
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	_M_check_len(size_type(1), "vector::_M_realloc_insert");
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       pointer __old_start = this->_M_impl._M_start;
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       pointer __old_finish = this->_M_impl._M_finish;
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       const size_type __elems_before = __position - begin();
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       pointer __new_start(this->_M_allocate(__len));
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       pointer __new_finish(__new_start);
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       __try
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  // The order of the three operations is dictated by the C++11
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  // case, where the moves could alter a new element belonging
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  // to the existing vector.  This is an issue only for callers
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  // taking the element by lvalue ref (see last bullet of C++11
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  // [res.on.arguments]).
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _Alloc_traits::construct(this->_M_impl,
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   __new_start + __elems_before,
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   std::forward<_Args>(__args)...);
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   __x);
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  __new_finish = pointer();
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __new_finish = _S_relocate(__old_start, __position.base(),
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					 __new_start, _M_get_Tp_allocator());
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      ++__new_finish;
 988              		.loc 16 464 8 is_stmt 0 view .LVU211
 989 008c A4F12C0A 		sub	r10, r4, #44
 990              	.LVL54:
 991              		.loc 16 464 8 view .LVU212
 992 0090 244B     		ldr	r3, .L50+8
 993 0092 AAEB080A 		sub	r10, r10, r8
 994 0096 4FEA9A0A 		lsr	r10, r10, #2
 995 009a 03FB0AFA 		mul	r10, r3, r10
 996 009e 2C23     		movs	r3, #44
 997 00a0 2AF0404A 		bic	r10, r10, #-1073741824
 998 00a4 0AF1020A 		add	r10, r10, #2
 999 00a8 03FB0A9A 		mla	r10, r3, r10, r9
 1000              	.LVL55:
 1001              	.L36:
 1002              	.LBB2192:
 1003              	.LBI2192:
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 1004              		.loc 14 465 7 is_stmt 1 view .LVU213
 1005              	.LBB2193:
 1006              	.LBB2194:
 1007              	.LBB2195:
 1008              	.LBB2196:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 215


 1009              	.LBB2197:
 1010              		.loc 18 1013 22 view .LVU214
 1011 00ac AC42     		cmp	r4, r5
 1012 00ae 0FD0     		beq	.L38
 1013              	.LBB2198:
 1014              	.LBB2199:
 1015              	.LBB2200:
 1016              	.LBB2201:
 1017              	.LBB2202:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1018              		.loc 6 150 4 is_stmt 0 view .LVU215
 1019 00b0 2A1B     		subs	r2, r5, r4
 1020 00b2 1C4B     		ldr	r3, .L50+8
 1021 00b4 5046     		mov	r0, r10
 1022 00b6 2146     		mov	r1, r4
 1023 00b8 2C3A     		subs	r2, r2, #44
 1024 00ba 9208     		lsrs	r2, r2, #2
 1025 00bc 03FB02F2 		mul	r2, r3, r2
 1026 00c0 2C23     		movs	r3, #44
 1027 00c2 22F04042 		bic	r2, r2, #-1073741824
 1028 00c6 02FB0332 		mla	r2, r2, r3, r3
 1029              	.LBE2202:
 1030              	.LBE2201:
 1031              	.LBE2200:
 1032              	.LBE2199:
 1033              	.LBE2198:
 1034              		.loc 18 1013 44 view .LVU216
 1035 00ca 9244     		add	r10, r10, r2
 1036              	.LBB2207:
 1037              	.LBB2206:
 1038              	.LBB2205:
 1039              	.LBB2204:
 1040              	.LBB2203:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1041              		.loc 6 150 4 view .LVU217
 1042 00cc FFF7FEFF 		bl	memcpy
 1043              	.LVL56:
 1044              	.L38:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1045              		.loc 6 150 4 view .LVU218
 1046              	.LBE2203:
 1047              	.LBE2204:
 1048              	.LBE2205:
 1049              	.LBE2206:
 1050              	.LBE2207:
 1051              	.LBE2197:
 1052              	.LBE2196:
 1053              	.LBE2195:
 1054              	.LBE2194:
 1055              	.LBE2193:
 1056              	.LBE2192:
 1057              	.LBB2208:
 1058              	.LBI2208:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1059              		.loc 14 350 7 is_stmt 1 view .LVU219
 1060              	.LBB2209:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 216


 1061              		.loc 14 353 2 is_stmt 0 view .LVU220
 1062 00d0 B8F1000F 		cmp	r8, #0
 1063 00d4 05D0     		beq	.L39
 1064              	.LVL57:
 1065              	.LBB2210:
 1066              	.LBI2210:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 1067              		.loc 5 491 7 is_stmt 1 view .LVU221
 1068              	.LBB2211:
 1069              	.LBB2212:
 1070              	.LBI2212:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 1071              		.loc 6 120 7 view .LVU222
 1072              	.LBE2212:
 1073              	.LBE2211:
 1074              	.LBE2210:
 1075              	.LBE2209:
 1076              	.LBE2208:
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __new_finish = _S_relocate(__position.base(), __old_finish,
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					 __new_finish, _M_get_Tp_allocator());
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __new_finish
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		= std::__uninitialized_move_if_noexcept_a
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		(__old_start, __position.base(),
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		 __new_start, _M_get_Tp_allocator());
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      ++__new_finish;
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __new_finish
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		= std::__uninitialized_move_if_noexcept_a
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		(__position.base(), __old_finish,
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		 __new_finish, _M_get_Tp_allocator());
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       __catch(...)
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (!__new_finish)
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _Alloc_traits::destroy(this->_M_impl,
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   __new_start + __elems_before);
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    std::_Destroy(__new_start, __new_finish, _M_get_Tp_allocator());
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_deallocate(__new_start, __len);
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  __throw_exception_again;
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if _GLIBCXX17_CONSTEXPR (!_S_use_relocate())
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	std::_Destroy(__old_start, __old_finish, _M_get_Tp_allocator());
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _GLIBCXX_ASAN_ANNOTATE_REINIT;
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_deallocate(__old_start,
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    this->_M_impl._M_end_of_storage - __old_start);
 1077              		.loc 16 501 39 is_stmt 0 view .LVU223
 1078 00d6 B968     		ldr	r1, [r7, #8]
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 217


 1079              	.LBB2218:
 1080              	.LBB2217:
 1081              	.LBB2216:
 1082              	.LBB2215:
 1083              	.LBB2214:
 1084              	.LBB2213:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 1085              		.loc 6 133 19 view .LVU224
 1086 00d8 4046     		mov	r0, r8
 1087 00da A1EB0801 		sub	r1, r1, r8
 1088 00de FFF7FEFF 		bl	_ZdlPvj
 1089              	.LVL58:
 1090              	.L39:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 1091              		.loc 6 133 19 view .LVU225
 1092              	.LBE2213:
 1093              	.LBE2214:
 1094              	.LBE2215:
 1095              	.LBE2216:
 1096              	.LBE2217:
 1097              	.LBE2218:
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_start = __new_start;
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_finish = __new_finish;
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_end_of_storage = __new_start + __len;
 1098              		.loc 16 504 39 view .LVU226
 1099 00e2 BE60     		str	r6, [r7, #8]
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_end_of_storage = __new_start + __len;
 1100              		.loc 16 503 31 view .LVU227
 1101 00e4 C7E9009A 		strd	r9, r10, [r7]
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 1102              		.loc 16 505 5 view .LVU228
 1103 00e8 03B0     		add	sp, sp, #12
 1104              		.cfi_remember_state
 1105              		.cfi_def_cfa_offset 36
 1106              		@ sp needed
 1107 00ea BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1108              	.LVL59:
 1109              	.L49:
 1110              		.cfi_restore_state
 1111              	.LBB2219:
 1112              	.LBB2137:
 1113              	.LBB2129:
 1114              	.LBB2130:
 1115              	.LBB2131:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 1116              		.loc 6 115 41 view .LVU229
 1117 00ee 8E42     		cmp	r6, r1
 1118 00f0 4FF02C03 		mov	r3, #44
 1119 00f4 28BF     		it	cs
 1120 00f6 0E46     		movcs	r6, r1
 1121              	.LVL60:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 1122              		.loc 6 115 41 view .LVU230
 1123 00f8 03FB06F6 		mul	r6, r3, r6
 1124              	.LVL61:
 1125              	.L34:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 218


 1126              		.loc 6 115 41 view .LVU231
 1127 00fc 3046     		mov	r0, r6
 1128              	.LVL62:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 1129              		.loc 6 115 41 view .LVU232
 1130 00fe 0192     		str	r2, [sp, #4]
 1131              	.LBE2131:
 1132              	.LBE2130:
 1133              	.LBI2129:
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 1134              		.loc 5 459 7 is_stmt 1 view .LVU233
 1135              	.LVL63:
 1136              	.LBB2134:
 1137              	.LBI2130:
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 1138              		.loc 6 103 7 view .LVU234
 1139              	.LBB2132:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 1140              		.loc 6 115 41 is_stmt 0 view .LVU235
 1141 0100 FFF7FEFF 		bl	_Znwj
 1142              	.LVL64:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 1143              		.loc 6 115 41 view .LVU236
 1144              	.LBE2132:
 1145              	.LBE2134:
 1146              	.LBE2129:
 1147 0104 019A     		ldr	r2, [sp, #4]
 1148              	.LBB2136:
 1149              	.LBB2135:
 1150              	.LBB2133:
 1151 0106 8146     		mov	r9, r0
 1152              	.LVL65:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 1153              		.loc 6 115 41 view .LVU237
 1154              	.LBE2133:
 1155              	.LBE2135:
 1156              	.LBE2136:
 1157              	.LBE2137:
 1158              	.LBE2219:
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 1159              		.loc 16 504 53 view .LVU238
 1160 0108 0644     		add	r6, r6, r0
 1161              	.LBB2220:
 1162              	.LBB2188:
 1163              	.LBB2185:
 1164              	.LBB2182:
 1165              	.LBB2179:
 1166              	.LBB2176:
 1167              		.loc 18 1013 44 view .LVU239
 1168 010a 00F12C0A 		add	r10, r0, #44
 1169              	.LBE2176:
 1170              	.LBE2179:
 1171              	.LBE2182:
 1172              	.LBE2185:
 1173              	.LBE2188:
 1174              	.LBE2220:
 1175              	.LBB2221:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 219


 1176              	.LBB2138:
 1177 010e 94E7     		b	.L40
 1178              	.LVL66:
 1179              	.L32:
 1180              		.loc 18 1013 44 view .LVU240
 1181              	.LBE2138:
 1182              	.LBE2221:
 1183              	.LBB2222:
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 1184              		.loc 14 811 7 is_stmt 1 view .LVU241
 1185              	.LBB2125:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 1186              		.loc 13 978 7 view .LVU242
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 1187              		.loc 13 978 7 is_stmt 0 view .LVU243
 1188              	.LBE2125:
 1189              	.LBE2222:
 1190              	.LBB2223:
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 1191              		.loc 13 1202 5 is_stmt 1 view .LVU244
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 1192              		.loc 13 1202 5 is_stmt 0 view .LVU245
 1193              	.LBE2223:
 1194              	.LBB2224:
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1195              		.loc 14 343 7 is_stmt 1 view .LVU246
 1196              	.LBE2224:
 1197              	.LBB2225:
 1198              	.LBB2122:
 1199              		.loc 13 1205 27 is_stmt 0 view .LVU247
 1200 0110 054E     		ldr	r6, .L50+12
 1201 0112 F3E7     		b	.L34
 1202              	.LVL67:
 1203              	.L48:
 1204              		.loc 13 1205 27 view .LVU248
 1205              	.LBE2122:
 1206              	.LBE2225:
 1207              	.LBB2226:
 1208              	.LBB2117:
1759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(__N(__s));
 1209              		.loc 14 1759 24 view .LVU249
 1210 0114 0548     		ldr	r0, .L50+16
 1211              	.LVL68:
 1212              		.loc 14 1759 24 view .LVU250
 1213 0116 FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 1214              	.LVL69:
 1215              	.L51:
 1216              		.loc 14 1759 24 view .LVU251
 1217 011a 00BF     		.align	2
 1218              	.L50:
 1219 011c A38B2EBA 		.word	-1171354717
 1220 0120 2EBAE802 		.word	48806446
 1221 0124 A38B2E3A 		.word	976128931
 1222 0128 E8FFFF7F 		.word	2147483624
 1223 012c 00000000 		.word	.LC0
 1224              	.LBE2117:
 1225              	.LBE2226:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 220


 1226              		.cfi_endproc
 1227              	.LFE4978:
 1229              		.section	.text._ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_E
 1230              		.align	1
 1231              		.p2align 2,,3
 1232              		.weak	_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_
 1233              		.syntax unified
 1234              		.thumb
 1235              		.thumb_func
 1236              		.fpu fpv5-d16
 1238              	_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_:
 1239              	.LVL70:
 1240              	.LFB5048:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_realloc_insert(iterator __position, _Args&&... __args)
 1241              		.loc 16 426 7 is_stmt 1 view -0
 1242              		.cfi_startproc
 1243              		@ args = 0, pretend = 0, frame = 0
 1244              		@ frame_needed = 0, uses_anonymous_args = 0
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_realloc_insert(iterator __position, _Args&&... __args)
 1245              		.loc 16 426 7 is_stmt 0 view .LVU253
 1246 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1247              		.cfi_def_cfa_offset 40
 1248              		.cfi_offset 3, -40
 1249              		.cfi_offset 4, -36
 1250              		.cfi_offset 5, -32
 1251              		.cfi_offset 6, -28
 1252              		.cfi_offset 7, -24
 1253              		.cfi_offset 8, -20
 1254              		.cfi_offset 9, -16
 1255              		.cfi_offset 10, -12
 1256              		.cfi_offset 11, -8
 1257              		.cfi_offset 14, -4
 1258 0004 D0E90089 		ldrd	r8, r9, [r0]
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_realloc_insert(iterator __position, _Args&&... __args)
 1259              		.loc 16 426 7 view .LVU254
 1260 0008 0F46     		mov	r7, r1
 1261              	.LVL71:
 1262              	.LBB2264:
 1263              	.LBI2264:
1756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1264              		.loc 14 1756 7 is_stmt 1 view .LVU255
 1265              	.LBB2265:
 1266              	.LBB2266:
 1267              	.LBI2266:
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 1268              		.loc 14 918 7 view .LVU256
 1269              	.LBE2266:
 1270              	.LBE2265:
 1271              	.LBE2264:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_realloc_insert(iterator __position, _Args&&... __args)
 1272              		.loc 16 426 7 is_stmt 0 view .LVU257
 1273 000a 9246     		mov	r10, r2
 1274              	.LBB2271:
 1275              	.LBB2269:
1758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(__N(__s));
 1276              		.loc 14 1758 2 view .LVU258
 1277 000c 6FF06041 		mvn	r1, #-536870912
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 221


 1278              	.LBB2268:
 1279              	.LBB2267:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 1280              		.loc 14 919 50 view .LVU259
 1281 0010 A9EB0802 		sub	r2, r9, r8
 1282              	.LVL72:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 1283              		.loc 14 919 50 view .LVU260
 1284              	.LBE2267:
 1285              	.LBE2268:
1758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(__N(__s));
 1286              		.loc 14 1758 2 view .LVU261
 1287 0014 B1EBA20F 		cmp	r1, r2, asr #2
 1288 0018 54D0     		beq	.L73
 1289 001a 9310     		asrs	r3, r2, #2
 1290 001c 0646     		mov	r6, r0
 1291              	.LBE2269:
 1292              	.LBE2271:
 1293              	.LBB2272:
 1294              	.LBB2273:
 1295              		.loc 13 1205 27 view .LVU262
 1296 001e A7EB0805 		sub	r5, r7, r8
 1297 0022 012B     		cmp	r3, #1
 1298 0024 1C46     		mov	r4, r3
 1299 0026 38BF     		it	cc
 1300 0028 0124     		movcc	r4, #1
 1301 002a 1C19     		adds	r4, r3, r4
 1302 002c 48D2     		bcs	.L55
 1303              	.LVL73:
 1304              		.loc 13 1205 27 view .LVU263
 1305              	.LBE2273:
 1306              	.LBE2272:
 1307              	.LBB2275:
 1308              	.LBI2275:
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 1309              		.loc 14 811 7 is_stmt 1 view .LVU264
 1310              	.LBB2276:
 1311              	.LBI2276:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 1312              		.loc 13 978 7 view .LVU265
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 1313              		.loc 13 978 7 is_stmt 0 view .LVU266
 1314              	.LBE2276:
 1315              	.LBE2275:
 1316              	.LBB2278:
 1317              	.LBI2272:
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 1318              		.loc 13 1202 5 is_stmt 1 view .LVU267
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 1319              		.loc 13 1202 5 is_stmt 0 view .LVU268
 1320              	.LBE2278:
 1321              	.LBB2279:
 1322              	.LBI2279:
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1323              		.loc 14 343 7 is_stmt 1 view .LVU269
 1324              	.LBB2280:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 222


 1325              		.loc 14 346 18 is_stmt 0 view .LVU270
 1326 002e 002C     		cmp	r4, #0
 1327 0030 3CD1     		bne	.L74
 1328 0032 A346     		mov	fp, r4
 1329              	.LVL74:
 1330              	.L64:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 1331              		.loc 14 346 18 view .LVU271
 1332              	.LBE2280:
 1333              	.LBE2279:
 1334              	.LBB2288:
 1335              	.LBI2288:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 1336              		.loc 5 507 2 is_stmt 1 view .LVU272
 1337              	.LBB2289:
 1338              	.LBI2289:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 1339              		.loc 6 148 2 view .LVU273
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 1340              		.loc 6 148 2 is_stmt 0 view .LVU274
 1341              	.LBE2289:
 1342              	.LBE2288:
 1343              		.loc 17 175 3 is_stmt 1 view .LVU275
 1344              	.LBB2294:
 1345              	.LBB2292:
 1346              	.LBB2290:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1347              		.loc 6 150 4 is_stmt 0 view .LVU276
 1348 0034 DAF80030 		ldr	r3, [r10]
 1349              	.LBE2290:
 1350              	.LBE2292:
 1351              	.LBE2294:
 1352              	.LBB2295:
 1353              	.LBB2296:
 1354              	.LBB2297:
 1355              	.LBB2298:
 1356              	.LBB2299:
 1357              	.LBB2300:
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 1358              		.loc 18 992 7 view .LVU277
 1359 0038 002D     		cmp	r5, #0
 1360              	.LBE2300:
 1361              	.LBE2299:
 1362              	.LBE2298:
 1363              	.LBE2297:
 1364              	.LBE2296:
 1365              	.LBE2295:
 1366              	.LBB2316:
 1367              	.LBB2293:
 1368              	.LBB2291:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1369              		.loc 6 150 4 view .LVU278
 1370 003a 4BF80530 		str	r3, [fp, r5]
 1371              	.LVL75:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1372              		.loc 6 150 4 view .LVU279
 1373              	.LBE2291:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 223


 1374              	.LBE2293:
 1375              	.LBE2316:
 1376              	.LBB2317:
 1377              	.LBI2295:
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 1378              		.loc 14 465 7 is_stmt 1 view .LVU280
 1379              	.LBB2313:
 1380              	.LBB2310:
 1381              	.LBI2297:
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 1382              		.loc 14 453 7 view .LVU281
 1383              	.LBB2307:
 1384              	.LBI2298:
1014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				 std::__addressof(*__first), __alloc);
1016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __cur;
1017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
1018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
1019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _InputIterator, typename _ForwardIterator,
1020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    typename _Allocator>
1021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
1022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __relocate_a(_InputIterator __first, _InputIterator __last,
 1385              		.loc 18 1022 5 view .LVU282
 1386              	.LBB2304:
 1387              	.LBI2299:
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		   _Tp* __result, allocator<_Up>&) noexcept
 1388              		.loc 18 988 5 view .LVU283
 1389              	.LBB2301:
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 1390              		.loc 18 992 7 is_stmt 0 view .LVU284
 1391 003e 24DC     		bgt	.L75
 1392              	.LVL76:
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 1393              		.loc 18 992 7 view .LVU285
 1394              	.LBE2301:
 1395              	.LBE2304:
 1396              	.LBE2307:
 1397              	.LBE2310:
 1398              	.LBE2313:
 1399              	.LBE2317:
 1400              	.LBB2318:
 1401              	.LBB2319:
 1402              	.LBB2320:
 1403              	.LBB2321:
 1404              	.LBB2322:
 1405              	.LBB2323:
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       if (__count > 0)
 1406              		.loc 18 991 34 view .LVU286
 1407 0040 A9EB0709 		sub	r9, r9, r7
 1408              	.LVL77:
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       if (__count > 0)
 1409              		.loc 18 991 34 view .LVU287
 1410              	.LBE2323:
 1411              	.LBE2322:
 1412              	.LBE2321:
 1413              	.LBE2320:
 1414              	.LBE2319:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 224


 1415              	.LBE2318:
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 1416              		.loc 16 464 8 view .LVU288
 1417 0044 0435     		adds	r5, r5, #4
 1418              	.LVL78:
 1419              	.LBB2359:
 1420              	.LBB2352:
 1421              	.LBB2345:
 1422              	.LBB2338:
 1423              	.LBB2331:
 1424              	.LBB2324:
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 1425              		.loc 18 992 7 view .LVU289
 1426 0046 B9F1000F 		cmp	r9, #0
 1427              	.LBE2324:
 1428              	.LBE2331:
 1429              	.LBE2338:
 1430              	.LBE2345:
 1431              	.LBE2352:
 1432              	.LBE2359:
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 1433              		.loc 16 464 8 view .LVU290
 1434 004a 5D44     		add	r5, r5, fp
 1435              	.LVL79:
 1436              	.LBB2360:
 1437              	.LBI2318:
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 1438              		.loc 14 465 7 is_stmt 1 view .LVU291
 1439              	.LBB2353:
 1440              	.LBB2346:
 1441              	.LBI2320:
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 1442              		.loc 14 453 7 view .LVU292
 1443              	.LBB2339:
 1444              	.LBI2321:
 1445              		.loc 18 1022 5 view .LVU293
 1446              	.LBB2332:
 1447              	.LBI2322:
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		   _Tp* __result, allocator<_Up>&) noexcept
 1448              		.loc 18 988 5 view .LVU294
 1449              	.LBB2325:
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 1450              		.loc 18 992 7 is_stmt 0 view .LVU295
 1451 004c 13DC     		bgt	.L60
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 1452              		.loc 18 994 25 view .LVU296
 1453 004e 4D44     		add	r5, r5, r9
 1454              	.LVL80:
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 1455              		.loc 18 994 25 view .LVU297
 1456              	.LBE2325:
 1457              	.LBE2332:
 1458              	.LBE2339:
 1459              	.LBE2346:
 1460              	.LBE2353:
 1461              	.LBE2360:
 1462              	.LBB2361:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 225


 1463              	.LBI2361:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1464              		.loc 14 350 7 is_stmt 1 view .LVU298
 1465              	.LBB2362:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 1466              		.loc 14 353 2 is_stmt 0 view .LVU299
 1467 0050 B8F1000F 		cmp	r8, #0
 1468 0054 04D1     		bne	.L76
 1469              	.LVL81:
 1470              	.L63:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 1471              		.loc 14 353 2 view .LVU300
 1472              	.LBE2362:
 1473              	.LBE2361:
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 1474              		.loc 16 504 39 view .LVU301
 1475 0056 B460     		str	r4, [r6, #8]
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_end_of_storage = __new_start + __len;
 1476              		.loc 16 503 31 view .LVU302
 1477 0058 C6E900B5 		strd	fp, r5, [r6]
 1478              		.loc 16 505 5 view .LVU303
 1479 005c BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1480              	.LVL82:
 1481              	.L76:
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_start = __new_start;
 1482              		.loc 16 501 39 view .LVU304
 1483 0060 B168     		ldr	r1, [r6, #8]
 1484 0062 A1EB0801 		sub	r1, r1, r8
 1485              	.L65:
 1486              	.LVL83:
 1487              	.LBB2369:
 1488              	.LBB2367:
 1489              	.LBB2363:
 1490              	.LBI2363:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 1491              		.loc 5 491 7 is_stmt 1 view .LVU305
 1492              	.LBB2364:
 1493              	.LBB2365:
 1494              	.LBI2365:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 1495              		.loc 6 120 7 view .LVU306
 1496              	.LBB2366:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 1497              		.loc 6 133 19 is_stmt 0 view .LVU307
 1498 0066 4046     		mov	r0, r8
 1499 0068 FFF7FEFF 		bl	_ZdlPvj
 1500              	.LVL84:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 1501              		.loc 6 133 19 view .LVU308
 1502              	.LBE2366:
 1503              	.LBE2365:
 1504              	.LBE2364:
 1505              	.LBE2363:
 1506              	.LBE2367:
 1507              	.LBE2369:
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 1508              		.loc 16 504 39 view .LVU309
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 226


 1509 006c B460     		str	r4, [r6, #8]
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_end_of_storage = __new_start + __len;
 1510              		.loc 16 503 31 view .LVU310
 1511 006e C6E900B5 		strd	fp, r5, [r6]
 1512              		.loc 16 505 5 view .LVU311
 1513 0072 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1514              	.LVL85:
 1515              	.L60:
 1516              	.LBB2370:
 1517              	.LBB2354:
 1518              	.LBB2347:
 1519              	.LBB2340:
 1520              	.LBB2333:
 1521              	.LBB2326:
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __result + __count;
 1522              		.loc 18 993 19 view .LVU312
 1523 0076 2846     		mov	r0, r5
 1524 0078 3946     		mov	r1, r7
 1525 007a 4A46     		mov	r2, r9
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 1526              		.loc 18 994 25 view .LVU313
 1527 007c 4D44     		add	r5, r5, r9
 1528              	.LVL86:
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __result + __count;
 1529              		.loc 18 993 19 view .LVU314
 1530 007e FFF7FEFF 		bl	memcpy
 1531              	.LVL87:
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __result + __count;
 1532              		.loc 18 993 19 view .LVU315
 1533              	.LBE2326:
 1534              	.LBE2333:
 1535              	.LBE2340:
 1536              	.LBE2347:
 1537              	.LBE2354:
 1538              	.LBE2370:
 1539              	.LBB2371:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1540              		.loc 14 350 7 is_stmt 1 view .LVU316
 1541              	.LBB2368:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 1542              		.loc 14 353 2 is_stmt 0 view .LVU317
 1543 0082 B8F1000F 		cmp	r8, #0
 1544 0086 E6D0     		beq	.L63
 1545 0088 EAE7     		b	.L76
 1546              	.LVL88:
 1547              	.L75:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 1548              		.loc 14 353 2 view .LVU318
 1549              	.LBE2368:
 1550              	.LBE2371:
 1551              	.LBB2372:
 1552              	.LBB2355:
 1553              	.LBB2348:
 1554              	.LBB2341:
 1555              	.LBB2334:
 1556              	.LBB2327:
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       if (__count > 0)
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 227


 1557              		.loc 18 991 34 view .LVU319
 1558 008a A9EB0709 		sub	r9, r9, r7
 1559              	.LVL89:
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       if (__count > 0)
 1560              		.loc 18 991 34 view .LVU320
 1561              	.LBE2327:
 1562              	.LBE2334:
 1563              	.LBE2341:
 1564              	.LBE2348:
 1565              	.LBE2355:
 1566              	.LBE2372:
 1567              	.LBB2373:
 1568              	.LBB2314:
 1569              	.LBB2311:
 1570              	.LBB2308:
 1571              	.LBB2305:
 1572              	.LBB2302:
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __result + __count;
 1573              		.loc 18 993 19 view .LVU321
 1574 008e 2A46     		mov	r2, r5
 1575 0090 4146     		mov	r1, r8
 1576 0092 5846     		mov	r0, fp
 1577              	.LBE2302:
 1578              	.LBE2305:
 1579              	.LBE2308:
 1580              	.LBE2311:
 1581              	.LBE2314:
 1582              	.LBE2373:
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 1583              		.loc 16 464 8 view .LVU322
 1584 0094 0435     		adds	r5, r5, #4
 1585              	.LVL90:
 1586              	.LBB2374:
 1587              	.LBB2315:
 1588              	.LBB2312:
 1589              	.LBB2309:
 1590              	.LBB2306:
 1591              	.LBB2303:
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __result + __count;
 1592              		.loc 18 993 19 view .LVU323
 1593 0096 FFF7FEFF 		bl	memmove
 1594              	.LVL91:
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __result + __count;
 1595              		.loc 18 993 19 view .LVU324
 1596              	.LBE2303:
 1597              	.LBE2306:
 1598              	.LBE2309:
 1599              	.LBE2312:
 1600              	.LBE2315:
 1601              	.LBE2374:
 1602              	.LBB2375:
 1603              	.LBB2356:
 1604              	.LBB2349:
 1605              	.LBB2342:
 1606              	.LBB2335:
 1607              	.LBB2328:
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 228


 1608              		.loc 18 992 7 view .LVU325
 1609 009a B9F1000F 		cmp	r9, #0
 1610              	.LBE2328:
 1611              	.LBE2335:
 1612              	.LBE2342:
 1613              	.LBE2349:
 1614              	.LBE2356:
 1615              	.LBE2375:
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 1616              		.loc 16 464 8 view .LVU326
 1617 009e 5D44     		add	r5, r5, fp
 1618              	.LVL92:
 1619              	.LBB2376:
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 1620              		.loc 14 465 7 is_stmt 1 view .LVU327
 1621              	.LBB2357:
 1622              	.LBB2350:
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 1623              		.loc 14 453 7 view .LVU328
 1624              	.LBB2343:
 1625              		.loc 18 1022 5 view .LVU329
 1626              	.LBB2336:
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		   _Tp* __result, allocator<_Up>&) noexcept
 1627              		.loc 18 988 5 view .LVU330
 1628              	.LBB2329:
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 1629              		.loc 18 992 7 is_stmt 0 view .LVU331
 1630 00a0 E9DC     		bgt	.L60
 1631              	.LBE2329:
 1632              	.LBE2336:
 1633              	.LBE2343:
 1634              	.LBE2350:
 1635              	.LBE2357:
 1636              	.LBE2376:
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_start = __new_start;
 1637              		.loc 16 501 39 view .LVU332
 1638 00a2 B168     		ldr	r1, [r6, #8]
 1639              	.LBB2377:
 1640              	.LBB2358:
 1641              	.LBB2351:
 1642              	.LBB2344:
 1643              	.LBB2337:
 1644              	.LBB2330:
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 1645              		.loc 18 994 25 view .LVU333
 1646 00a4 4D44     		add	r5, r5, r9
 1647              	.LVL93:
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 1648              		.loc 18 994 25 view .LVU334
 1649              	.LBE2330:
 1650              	.LBE2337:
 1651              	.LBE2344:
 1652              	.LBE2351:
 1653              	.LBE2358:
 1654              	.LBE2377:
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_start = __new_start;
 1655              		.loc 16 501 39 view .LVU335
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 229


 1656 00a6 A1EB0801 		sub	r1, r1, r8
 1657              	.LVL94:
 1658              	.LBB2378:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1659              		.loc 14 350 7 is_stmt 1 view .LVU336
 1660 00aa DCE7     		b	.L65
 1661              	.LVL95:
 1662              	.L74:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1663              		.loc 14 350 7 is_stmt 0 view .LVU337
 1664              	.LBE2378:
 1665              	.LBB2379:
 1666              	.LBB2286:
 1667              	.LBB2281:
 1668              	.LBB2282:
 1669              	.LBB2283:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 1670              		.loc 6 115 41 view .LVU338
 1671 00ac 8C42     		cmp	r4, r1
 1672 00ae 28BF     		it	cs
 1673 00b0 0C46     		movcs	r4, r1
 1674              	.LVL96:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 1675              		.loc 6 115 41 view .LVU339
 1676 00b2 A400     		lsls	r4, r4, #2
 1677              	.LVL97:
 1678              	.L57:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 1679              		.loc 6 115 41 view .LVU340
 1680              	.LBE2283:
 1681              	.LBE2282:
 1682              	.LBI2281:
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 1683              		.loc 5 459 7 is_stmt 1 view .LVU341
 1684              	.LBB2285:
 1685              	.LBI2282:
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 1686              		.loc 6 103 7 view .LVU342
 1687              	.LBB2284:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 1688              		.loc 6 115 41 is_stmt 0 view .LVU343
 1689 00b4 2046     		mov	r0, r4
 1690              	.LVL98:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 1691              		.loc 6 115 41 view .LVU344
 1692 00b6 FFF7FEFF 		bl	_Znwj
 1693              	.LVL99:
 1694 00ba 8346     		mov	fp, r0
 1695              	.LVL100:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 1696              		.loc 6 115 41 view .LVU345
 1697              	.LBE2284:
 1698              	.LBE2285:
 1699              	.LBE2281:
 1700              	.LBE2286:
 1701              	.LBE2379:
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 230


 1702              		.loc 16 504 53 view .LVU346
 1703 00bc 0444     		add	r4, r4, r0
 1704              	.LBB2380:
 1705              	.LBB2287:
 1706 00be B9E7     		b	.L64
 1707              	.LVL101:
 1708              	.L55:
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 1709              		.loc 16 504 53 view .LVU347
 1710              	.LBE2287:
 1711              	.LBE2380:
 1712              	.LBB2381:
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 1713              		.loc 14 811 7 is_stmt 1 view .LVU348
 1714              	.LBB2277:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 1715              		.loc 13 978 7 view .LVU349
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 1716              		.loc 13 978 7 is_stmt 0 view .LVU350
 1717              	.LBE2277:
 1718              	.LBE2381:
 1719              	.LBB2382:
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 1720              		.loc 13 1202 5 is_stmt 1 view .LVU351
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 1721              		.loc 13 1202 5 is_stmt 0 view .LVU352
 1722              	.LBE2382:
 1723              	.LBB2383:
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1724              		.loc 14 343 7 is_stmt 1 view .LVU353
 1725              	.LBE2383:
 1726              	.LBB2384:
 1727              	.LBB2274:
 1728              		.loc 13 1205 27 is_stmt 0 view .LVU354
 1729 00c0 024C     		ldr	r4, .L77
 1730 00c2 F7E7     		b	.L57
 1731              	.LVL102:
 1732              	.L73:
 1733              		.loc 13 1205 27 view .LVU355
 1734              	.LBE2274:
 1735              	.LBE2384:
 1736              	.LBB2385:
 1737              	.LBB2270:
 1738              		.loc 14 1759 24 view .LVU356
 1739 00c4 0248     		ldr	r0, .L77+4
 1740              	.LVL103:
 1741              		.loc 14 1759 24 view .LVU357
 1742 00c6 FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 1743              	.LVL104:
 1744              	.L78:
 1745 00ca 00BF     		.align	2
 1746              	.L77:
 1747 00cc FCFFFF7F 		.word	2147483644
 1748 00d0 00000000 		.word	.LC0
 1749              	.LBE2270:
 1750              	.LBE2385:
 1751              		.cfi_endproc
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 231


 1752              	.LFE5048:
 1754              		.section	.text._ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_
 1755              		.align	1
 1756              		.p2align 2,,3
 1757              		.weak	_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESaIS8_E
 1758              		.syntax unified
 1759              		.thumb
 1760              		.thumb_func
 1761              		.fpu fpv5-d16
 1763              	_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESaIS8_ENSt8__d
 1764              	.LVL105:
 1765              	.LFB5173:
1567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 1766              		.loc 2 1567 5 is_stmt 1 view -0
 1767              		.cfi_startproc
 1768              		@ args = 0, pretend = 0, frame = 0
 1769              		@ frame_needed = 0, uses_anonymous_args = 0
1567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 1770              		.loc 2 1567 5 is_stmt 0 view .LVU359
 1771 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1772              		.cfi_def_cfa_offset 32
 1773              		.cfi_offset 4, -32
 1774              		.cfi_offset 5, -28
 1775              		.cfi_offset 6, -24
 1776              		.cfi_offset 7, -20
 1777              		.cfi_offset 8, -16
 1778              		.cfi_offset 9, -12
 1779              		.cfi_offset 10, -8
 1780              		.cfi_offset 14, -4
1567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 1781              		.loc 2 1567 5 view .LVU360
 1782 0004 9946     		mov	r9, r3
1573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (!__prev_p)
 1783              		.loc 2 1573 20 view .LVU361
 1784 0006 0368     		ldr	r3, [r0]
 1785              	.LVL106:
1573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (!__prev_p)
 1786              		.loc 2 1573 20 view .LVU362
 1787 0008 53F82160 		ldr	r6, [r3, r1, lsl #2]
 1788              	.LVL107:
1574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return nullptr;
 1789              		.loc 2 1574 7 view .LVU363
 1790 000c 06B3     		cbz	r6, .L79
 1791              	.LBB2426:
1577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   __p = __p->_M_next())
 1792              		.loc 2 1577 25 view .LVU364
 1793 000e 3568     		ldr	r5, [r6]
 1794              	.LVL108:
1577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   __p = __p->_M_next())
 1795              		.loc 2 1577 25 view .LVU365
 1796 0010 0746     		mov	r7, r0
 1797 0012 8846     		mov	r8, r1
 1798 0014 9246     		mov	r10, r2
 1799              	.LBB2427:
 1800              	.LBB2428:
 1801              	.LBB2429:
 1802              	.LBB2430:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 232


1787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       };
 1803              		.loc 3 1787 28 view .LVU366
 1804 0016 2C6A     		ldr	r4, [r5, #32]
 1805 0018 0BE0     		b	.L82
 1806              	.LVL109:
 1807              	.L81:
1787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       };
 1808              		.loc 3 1787 28 view .LVU367
 1809              	.LBE2430:
 1810              	.LBE2429:
 1811              	.LBE2428:
 1812              	.LBE2427:
1583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    break;
 1813              		.loc 2 1583 14 view .LVU368
 1814 001a 2C68     		ldr	r4, [r5]
 1815              	.LVL110:
 1816              	.LBB2440:
 1817              	.LBI2440:
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __hash_code_base::_M_bucket_index(__n, _M_bucket_count); }
 1818              		.loc 2 677 7 is_stmt 1 view .LVU369
 1819              	.LBB2441:
 1820              	.LBB2442:
 1821              	.LBI2442:
1388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	noexcept( noexcept(declval<const _H2&>()((__hash_code)0,
 1822              		.loc 3 1388 7 view .LVU370
 1823 001c 2E46     		mov	r6, r5
 1824              	.LBE2442:
 1825              	.LBE2441:
 1826              	.LBE2440:
 1827 001e 2546     		mov	r5, r4
 1828              	.LVL111:
1583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    break;
 1829              		.loc 2 1583 21 is_stmt 0 view .LVU371
 1830 0020 CCB1     		cbz	r4, .L83
 1831              	.LBB2448:
 1832              	.LBB2447:
 1833              	.LBB2446:
 1834              	.LBB2443:
1391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 1835              		.loc 3 1391 29 view .LVU372
 1836 0022 246A     		ldr	r4, [r4, #32]
 1837              	.LVL112:
 1838              	.LBB2444:
 1839              	.LBI2444:
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       second_argument_type __den) const noexcept
 1840              		.loc 3 431 5 is_stmt 1 view .LVU373
 1841              	.LBB2445:
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 1842              		.loc 3 433 7 view .LVU374
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 1843              		.loc 3 433 22 is_stmt 0 view .LVU375
 1844 0024 7B68     		ldr	r3, [r7, #4]
 1845 0026 B4FBF3FC 		udiv	ip, r4, r3
 1846 002a 03FB1C4C 		mls	ip, r3, ip, r4
 1847              	.LBE2445:
 1848              	.LBE2444:
 1849              	.LBE2443:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 233


 1850              	.LBE2446:
 1851              	.LBE2447:
 1852              	.LBE2448:
1583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    break;
 1853              		.loc 2 1583 21 view .LVU376
 1854 002e E045     		cmp	r8, ip
 1855 0030 15D1     		bne	.L95
 1856              	.LVL113:
 1857              	.L82:
 1858              	.LBB2449:
 1859              	.LBI2427:
1798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 1860              		.loc 3 1798 5 is_stmt 1 view .LVU377
 1861              	.LBB2439:
 1862              	.LBB2431:
 1863              	.LBI2429:
1786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****        { return __c == __n._M_hash_code; }
 1864              		.loc 3 1786 8 view .LVU378
1786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****        { return __c == __n._M_hash_code; }
 1865              		.loc 3 1786 8 is_stmt 0 view .LVU379
 1866              	.LBE2431:
1804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
 1867              		.loc 3 1804 2 view .LVU380
 1868 0032 4C45     		cmp	r4, r9
 1869 0034 F1D1     		bne	.L81
 1870              	.LVL114:
 1871              	.LBB2432:
 1872              	.LBI2432:
1798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 1873              		.loc 3 1798 5 is_stmt 1 view .LVU381
 1874              	.LBB2433:
 1875              	.LBI2433:
 1876              		.file 19 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_functi
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // Functor implementations -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 234


  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * Copyright (c) 1996-1998
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * representations about the suitability of this software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** /** @file bits/stl_function.h
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *  Do not attempt to use it directly. @headername{functional}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #ifndef _STL_FUNCTION_H
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #define _STL_FUNCTION_H 1
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #if __cplusplus > 201103L
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #include <bits/move.h>
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #endif
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** namespace std _GLIBCXX_VISIBILITY(default)
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** {
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   // 20.3.1 base classes
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /** @defgroup functors Function Objects
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    * @ingroup utilities
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  Function objects, or @e functors, are objects with an @c operator()
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  defined and accessible.  They can be passed as arguments to algorithm
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  templates and used in place of a function pointer.  Not only is the
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  resulting expressiveness of the library increased, but the generated
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  code can be more efficient than what you might write by hand.  When we
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  refer to @a functors, then, generally we include function pointers in
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  the description as well.
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  Often, functors are only created as temporaries passed to algorithm
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  calls, rather than being created as named variables.
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 235


  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  Two examples taken from the standard itself follow.  To perform a
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  by-element addition of two vectors @c a and @c b containing @c double,
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  and put the result in @c a, use
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  \code
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  transform (a.begin(), a.end(), b.begin(), a.begin(), plus<double>());
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  \endcode
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  To negate every element in @c a, use
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  \code
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  transform(a.begin(), a.end(), a.begin(), negate<double>());
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  \endcode
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  The addition and negation functions will be inlined directly.
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  The standard functors are derived from structs named @c unary_function
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  and @c binary_function.  These two classes contain nothing but typedefs,
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  to aid in generic (template) programming.  If you write your own
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  functors, you might consider doing the same.
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  @{
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    */
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /**
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  This is one of the @link functors functor base classes@endlink.
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    */
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Arg, typename _Result>
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct unary_function
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       /// @c argument_type is the type of the argument
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef _Arg 	argument_type;   
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       /// @c result_type is the return type
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef _Result 	result_type;  
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /**
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  This is one of the @link functors functor base classes@endlink.
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    */
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Arg1, typename _Arg2, typename _Result>
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct binary_function
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       /// @c first_argument_type is the type of the first argument
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef _Arg1 	first_argument_type; 
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       /// @c second_argument_type is the type of the second argument
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef _Arg2 	second_argument_type;
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       /// @c result_type is the return type
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef _Result 	result_type;
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /** @}  */
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   // 20.3.2 arithmetic
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /** @defgroup arithmetic_functors Arithmetic Classes
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    * @ingroup functors
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  Because basic math often needs to be done during an algorithm,
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  the library provides functors for those operations.  See the
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  documentation for @link functors the base classes@endlink
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  for examples of their use.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 236


 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  @{
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    */
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #if __cplusplus > 201103L
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   struct __is_transparent;  // undefined
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct plus;
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct minus;
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct multiplies;
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct divides;
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct modulus;
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct negate;
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #endif
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct plus : public binary_function<_Tp, _Tp, _Tp>
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _Tp
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x + __y; }
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct minus : public binary_function<_Tp, _Tp, _Tp>
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _Tp
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x - __y; }
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct multiplies : public binary_function<_Tp, _Tp, _Tp>
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _Tp
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x * __y; }
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 237


 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct divides : public binary_function<_Tp, _Tp, _Tp>
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _Tp
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x / __y; }
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct modulus : public binary_function<_Tp, _Tp, _Tp>
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _Tp
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x % __y; }
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct negate : public unary_function<_Tp, _Tp>
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _Tp
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x) const
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return -__x; }
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #if __cplusplus > 201103L
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #define __cpp_lib_transparent_operators 201510
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<>
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct plus<void>
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       template <typename _Tp, typename _Up>
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	auto
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) + std::forward<_Up>(__u)))
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) + std::forward<_Up>(__u))
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	{ return std::forward<_Tp>(__t) + std::forward<_Up>(__u); }
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef __is_transparent is_transparent;
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<>
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct minus<void>
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       template <typename _Tp, typename _Up>
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	auto
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) - std::forward<_Up>(__u)))
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) - std::forward<_Up>(__u))
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 238


 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	{ return std::forward<_Tp>(__t) - std::forward<_Up>(__u); }
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef __is_transparent is_transparent;
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<>
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct multiplies<void>
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       template <typename _Tp, typename _Up>
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	auto
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) * std::forward<_Up>(__u)))
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) * std::forward<_Up>(__u))
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	{ return std::forward<_Tp>(__t) * std::forward<_Up>(__u); }
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef __is_transparent is_transparent;
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<>
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct divides<void>
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       template <typename _Tp, typename _Up>
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	auto
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) / std::forward<_Up>(__u)))
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) / std::forward<_Up>(__u))
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	{ return std::forward<_Tp>(__t) / std::forward<_Up>(__u); }
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef __is_transparent is_transparent;
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<>
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct modulus<void>
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       template <typename _Tp, typename _Up>
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	auto
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) % std::forward<_Up>(__u)))
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) % std::forward<_Up>(__u))
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	{ return std::forward<_Tp>(__t) % std::forward<_Up>(__u); }
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef __is_transparent is_transparent;
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<>
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct negate<void>
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       template <typename _Tp>
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	auto
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 239


 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	operator()(_Tp&& __t) const
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	noexcept(noexcept(-std::forward<_Tp>(__t)))
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	-> decltype(-std::forward<_Tp>(__t))
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	{ return -std::forward<_Tp>(__t); }
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef __is_transparent is_transparent;
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #endif
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /** @}  */
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   // 20.3.3 comparisons
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /** @defgroup comparison_functors Comparison Classes
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    * @ingroup functors
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  The library provides six wrapper functors for all the basic comparisons
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  in C++, like @c <.
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  @{
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    */
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #if __cplusplus > 201103L
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct equal_to;
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct not_equal_to;
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct greater;
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct less;
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct greater_equal;
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct less_equal;
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #endif
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct equal_to : public binary_function<_Tp, _Tp, bool>
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       bool
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 1877              		.loc 19 355 7 view .LVU382
 1878 0036 DAF80420 		ldr	r2, [r10, #4]
 1879              	.LBB2434:
 1880              	.LBB2435:
 1881              	.LBI2435:
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Assign the value of @a str to this string.
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 240


 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(const basic_string& __str)
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->assign(__str);
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Copy contents of @a s into this string.
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source null-terminated string.
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(const _CharT* __s)
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__s); }
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to string of length 1.
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __c  Source character.
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Assigning to a character makes this string length 1 and
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  (*this)[0] == @a c.
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(_CharT __c)
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->assign(1, __c);
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a str is a valid, but unspecified string.
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        **/
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 2063. Contradictory requirements for string move assignment
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(basic_string&& __str)
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (!_M_is_local() && _Alloc_traits::_S_propagate_on_move_assign()
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    && !_Alloc_traits::_S_always_equal()
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    && _M_get_allocator() != __str._M_get_allocator())
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    // Destroy existing storage before replacing allocator.
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_destroy(_M_allocated_capacity);
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_data(_M_local_data());
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_set_length(0);
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// Replace allocator if POCMA is true.
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	std::__alloc_on_move(_M_get_allocator(), __str._M_get_allocator());
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__str._M_is_local())
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    // We've always got room for a short string, just copy it.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 241


 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    if (__str.size())
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      this->_S_copy(_M_data(), __str._M_data(), __str.size());
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_set_length(__str.size());
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else if (_Alloc_traits::_S_propagate_on_move_assign()
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    || _Alloc_traits::_S_always_equal()
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    || _M_get_allocator() == __str._M_get_allocator())
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    // Just move the allocated pointer, our allocator can free it.
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    pointer __data = nullptr;
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    size_type __capacity;
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    if (!_M_is_local())
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      {
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		if (_Alloc_traits::_S_always_equal())
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  {
 736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    // __str can reuse our existing storage.
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    __data = _M_data();
 738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    __capacity = _M_allocated_capacity;
 739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  }
 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		else // __str can't use it, so free it.
 741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  _M_destroy(_M_allocated_capacity);
 742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      }
 743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_data(__str._M_data());
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_length(__str.length());
 746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    if (__data)
 748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      {
 749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		__str._M_data(__data);
 750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		__str._M_capacity(__capacity);
 751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      }
 752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    else
 753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      __str._M_data(__str._M_local_buf);
 754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else // Need to do a deep copy
 756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  assign(__str);
 757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__str.clear();
 758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
 763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __l  std::initializer_list.
 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
 766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(initializer_list<_CharT> __l)
 767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->assign(__l.begin(), __l.size());
 769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
 772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
 774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to string constructed from a string_view.
 776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __svt  An object convertible to string_view.
 777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 242


 778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****      template<typename _Tp>
 779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        _If_sv<_Tp, basic_string&>
 780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        operator=(const _Tp& __svt)
 781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        { return this->assign(__svt); }
 782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Convert to a string_view.
 785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return A string_view.
 786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator __sv_type() const noexcept
 788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(data(), size()); }
 789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
 790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Iterators:
 792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write iterator that points to the first character in
 794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the %string.
 795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
 797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       begin() _GLIBCXX_NOEXCEPT
 798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return iterator(_M_data()); }
 799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.
 803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
 805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
 806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(_M_data()); }
 807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write iterator that points one past the last
 810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
 813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       end() _GLIBCXX_NOEXCEPT
 814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return iterator(_M_data() + this->size()); }
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  last character in the %string.
 819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
 821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
 822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
 823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
 826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
 827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  order.
 828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reverse_iterator
 830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rbegin() _GLIBCXX_NOEXCEPT
 831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return reverse_iterator(this->end()); }
 832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 243


 835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  reverse element order.
 837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->end()); }
 841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
 844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
 845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element order.
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reverse_iterator
 848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rend() _GLIBCXX_NOEXCEPT
 849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return reverse_iterator(this->begin()); }
 850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to one before the first character in the %string.  Iteration
 854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is done in reverse element order.
 855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
 857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
 858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.
 864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
 866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       cbegin() const noexcept
 867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(this->_M_data()); }
 868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  last character in the %string.
 872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
 874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       cend() const noexcept
 875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
 876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  reverse element order.
 881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
 883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       crbegin() const noexcept
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->end()); }
 885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to one before the first character in the %string.  Iteration
 889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is done in reverse element order.
 890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 244


 892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       crend() const noexcept
 893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
 897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Capacity:
 898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Returns the number of characters in the string, not including any
 899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  null-termination.
 900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Returns the number of characters in the string, not including any
 905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  null-termination.
 906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Returns the size() of the largest possible %string.
 911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
 913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return (_Alloc_traits::max_size(_M_get_allocator()) - 1) / 2; }
 914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __c  Character to fill any new elements.
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function will %resize the %string to the specified
 921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  number of characters.  If the number is smaller than the
 922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  %string's current size the %string is truncated, otherwise
 923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
 924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       resize(size_type __n, _CharT __c);
 927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function will resize the %string to the specified length.  If
 933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the new size is smaller than the %string's current size the %string
 934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
 935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
 936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  setting them to 0.
 937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       resize(size_type __n)
 940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { this->resize(__n, _CharT()); }
 941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
 944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       shrink_to_fit() noexcept
 946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_exceptions
 948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (capacity() > size())
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 245


 949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    try
 951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      { reserve(0); }
 952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    catch(...)
 953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      { }
 954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns the total number of characters that the %string can hold
 961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  before needing to allocate more memory.
 962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
 965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_is_local() ? size_type(_S_local_capacity)
 967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	                     : _M_allocated_capacity;
 968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
 972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *          characters.
 973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __res_arg  Number of characters required.
 974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
 975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function attempts to reserve enough memory for the
 977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  %string to hold the specified number of characters.  If the
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  number requested is more than max_size(), length_error is
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
 980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The advantage of this function is that if optimal code is a
 982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  necessity and the user can determine the string length that will be
 983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
 984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
 985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  data.
 986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reserve(size_type __res_arg = 0);
 989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Erases the string, making it empty.
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       clear() _GLIBCXX_NOEXCEPT
 995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_set_length(0); }
 996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
 999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  <code>*this == ""</code>.
1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NODISCARD bool
1002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
1003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->size() == 0; }
1004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Element access:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 246


1006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
1008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  The index of the character to access.
1009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read-only (constant) reference to the character.
1010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This operator allows for easy, array-style, data access.
1012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note that data access with this operator is unchecked and
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
1014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  see at().)
1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
1017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
1018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(__pos <= size());
1020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__pos];
1021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
1025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  The index of the character to access.
1026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read/write reference to the character.
1027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This operator allows for easy, array-style, data access.
1029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note that data access with this operator is unchecked and
1030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
1031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  see at().)
1032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
1034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator[](size_type __pos)
1035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
1037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// and in C++11 mode.
1038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(__pos <= size());
1039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         // In pedantic mode be strict in C++98 mode.
1040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
1041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__pos];
1042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n The index of the character to access.
1047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read-only (const) reference to the character.
1048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
1049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function provides for safer data access.  The parameter is
1051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first checked that it is in the range of the string.  The function
1052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  throws out_of_range if the check fails.
1053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
1055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       at(size_type __n) const
1056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n >= this->size())
1058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
1059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu) >= this->size() "
1060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu)"),
1061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   __n, this->size());
1062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__n];
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 247


1063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
1067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n The index of the character to access.
1068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read/write reference to the character.
1069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
1070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function provides for safer data access.  The parameter is
1072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first checked that it is in the range of the string.  The function
1073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  throws out_of_range if the check fails.
1074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
1076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       at(size_type __n)
1077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n >= size())
1079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
1080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu) >= this->size() "
1081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu)"),
1082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   __n, this->size());
1083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__n];
1084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reference to the data at the first
1089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element of the %string.
1090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
1092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       front() noexcept
1093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
1095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](0);
1096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
1100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element of the %string.
1101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
1103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       front() const noexcept
1104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
1106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](0);
1107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reference to the data at the last
1111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element of the %string.
1112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
1114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       back() noexcept
1115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
1117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](this->size() - 1);
1118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 248


1120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
1122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  last element of the %string.
1123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
1125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       back() const noexcept
1126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
1128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](this->size() - 1);
1129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Modifiers:
1133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string to this string.
1135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to append.
1136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(const basic_string& __str)
1140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__str); }
1141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a C string.
1144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to append.
1145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(const _CharT* __s)
1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__s); }
1150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a character.
1153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to append.
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(_CharT __c)
1158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->push_back(__c);
1160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
1161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append an initializer_list of characters.
1166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
1167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(initializer_list<_CharT> __l)
1171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
1173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
1175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string_view.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 249


1177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended.
1178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
1182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	operator+=(const _Tp& __svt)
1183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ return this->append(__svt); }
1184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
1185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string to this string.
1188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to append.
1189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const basic_string& __str)
1193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
1194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a substring.
1197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to append.
1198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of the first character of str to append.
1199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
1200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function appends @a __n characters from @a __str
1204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
1205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  than the number of available characters in @a __str, the
1206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  remainder of @a __str is appended.
1207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n = npos)
1210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_append(__str._M_data()
1211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 + __str._M_check(__pos, "basic_string::append"),
1212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 __str._M_limit(__pos, __n)); }
1213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a C substring.
1216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to append.
1217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
1218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const _CharT* __s, size_type __n)
1222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_append(__s, __n);
1226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a C string.
1230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to append.
1231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 250


1234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const _CharT* __s)
1235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
1237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __n = traits_type::length(__s);
1238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_append(__s, __n);
1240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append multiple characters.
1244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
1245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to use.
1246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Appends __n copies of __c to this string.
1249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(size_type __n, _CharT __c)
1252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(this->size(), size_type(0), __n, __c); }
1253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append an initializer_list of characters.
1257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to append.
1258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(initializer_list<_CharT> __l)
1262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
1264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a range of characters.
1267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
1272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator,
1275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
1277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
1278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string&
1280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
1281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { return this->replace(end(), end(), __first, __last); }
1282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
1284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string_view.
1286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended.
1287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _If_sv<_Tp, basic_string&>
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 251


1291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         append(const _Tp& __svt)
1292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
1293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           __sv_type __sv = __svt;
1294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           return this->append(__sv.data(), __sv.size());
1295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         }
1296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a range of characters from a string_view.
1299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended from.
1300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos The position in the string_view to append from.
1301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n   The number of characters to append from the string_view.
1302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _If_sv<_Tp, basic_string&>
1306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	append(const _Tp& __svt, size_type __pos, size_type __n = npos)
1307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
1308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
1309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return _M_append(__sv.data()
1310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::append"),
1311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
1312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
1313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
1314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a single character.
1317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to append.
1318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
1320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       push_back(_CharT __c)
1321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __size = this->size();
1323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__size + 1 > this->capacity())
1324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  this->_M_mutate(__size, size_type(0), 0, size_type(1));
1325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	traits_type::assign(this->_M_data()[__size], __c);
1326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->_M_set_length(__size + 1);
1327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to contents of another string.
1331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string to use.
1332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const basic_string& __str)
1336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (_Alloc_traits::_S_propagate_on_copy_assign())
1339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
1340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    if (!_Alloc_traits::_S_always_equal() && !_M_is_local()
1341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		&& _M_get_allocator() != __str._M_get_allocator())
1342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      {
1343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		// Propagating allocator cannot free existing storage so must
1344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		// deallocate it before replacing current allocator.
1345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		if (__str.size() <= _S_local_capacity)
1346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  {
1347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_destroy(_M_allocated_capacity);
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 252


1348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_data(_M_local_data());
1349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_set_length(0);
1350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  }
1351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		else
1352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  {
1353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    const auto __len = __str.size();
1354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    auto __alloc = __str._M_get_allocator();
1355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    // If this allocation throws there are no effects:
1356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    auto __ptr = _Alloc_traits::allocate(__alloc, __len + 1);
1357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_destroy(_M_allocated_capacity);
1358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_data(__ptr);
1359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_capacity(__len);
1360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_set_length(__len);
1361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  }
1362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      }
1363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    std::__alloc_on_copy(_M_get_allocator(), __str._M_get_allocator());
1364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
1365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->_M_assign(__str);
1367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
1368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to contents of another string.
1373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string to use.
1374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
1377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __str is a valid, but unspecified string.
1378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(basic_string&& __str)
1381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
1382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
1384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// 2063. Contradictory requirements for string move assignment
1385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this = std::move(__str);
1386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
1388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to a substring of a string.
1391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to use.
1392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of the first character of str.
1393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to use.
1394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
1396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets this string to the substring of @a __str
1398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
1399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is larger than the number of available characters in @a
1400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str, the remainder of @a __str is used.
1401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n = npos)
1404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace(size_type(0), this->size(), __str._M_data()
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 253


1405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  + __str._M_check(__pos, "basic_string::assign"),
1406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  __str._M_limit(__pos, __n)); }
1407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to a C substring.
1410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to use.
1411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to use.
1412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets the value of this string to the first @a __n
1415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
1416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
1417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const _CharT* __s, size_type __n)
1420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s, __n);
1423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to contents of a C string.
1427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to use.
1428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
1431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
1432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  function returns.
1433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const _CharT* __s)
1436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s,
1439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
1440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to multiple characters.
1444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Length of the resulting string.
1445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to use.
1446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets the value of this string to @a __n copies of
1449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character @a __c.
1450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(size_type __n, _CharT __c)
1453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
1454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to a range of characters.
1457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 254


1462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator,
1465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
1467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
1468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string&
1470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
1471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { return this->replace(begin(), end(), __first, __last); }
1472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
1476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
1477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(initializer_list<_CharT> __l)
1481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
1482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
1483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
1485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value from a string_view.
1487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The source object convertible to string_view.
1488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
1492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	assign(const _Tp& __svt)
1493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
1494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
1495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->assign(__sv.data(), __sv.size());
1496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
1497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value from a range of characters in a string_view.
1500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The source object convertible to string_view.
1501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  The position in the string_view to assign from.
1502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to assign.
1503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
1507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	assign(const _Tp& __svt, size_type __pos, size_type __n = npos)
1508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
1509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
1510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return _M_replace(size_type(0), this->size(),
1511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      __sv.data()
1512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::assign"),
1513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
1514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
1515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
1516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 255


1519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert multiple characters.
1520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Const_iterator referencing location in string to
1521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *              insert at.
1522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert
1523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to insert.
1524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Iterator referencing the first inserted char.
1525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
1530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
1534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(const_iterator __p, size_type __n, _CharT __c)
1535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __pos = __p - begin();
1538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->replace(__p, __p, __n, __c);
1539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(this->_M_data() + __pos);
1540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
1542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert multiple characters.
1544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert
1546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to insert.
1547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
1552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
1556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
1557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
1558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a range of characters.
1563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Const_iterator referencing location in string to
1564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *              insert at.
1565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __beg  Start of range.
1566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __end  End of range.
1567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Iterator referencing the first inserted char.
1568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts characters in range [beg,end).  If adding characters
1571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  causes the length to exceed max_size(), length_error is
1572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.
1574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator,
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 256


1576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	iterator
1578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         insert(const_iterator __p, _InputIterator __beg, _InputIterator __end)
1579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
1580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const size_type __pos = __p - begin();
1582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  this->replace(__p, __p, __beg, __end);
1583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return iterator(this->_M_data() + __pos);
1584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
1585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
1586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a range of characters.
1588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __beg  Start of range.
1590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __end  End of range.
1591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
1594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
1595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
1599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
1600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
1601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
1602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert an initializer_list of characters.
1607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
1609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
1612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(const_iterator __p, initializer_list<_CharT> __l)
1613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->insert(__p, __l.begin(), __l.end()); }
1614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #ifdef _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
1616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // See PR libstdc++/83328
1617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
1618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
1619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->insert(__p - begin(), __l.begin(), __l.size());
1622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
1625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert value of a string.
1628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1 Position in string to insert at.
1629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to insert.
1630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 257


1633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
1634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
1635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
1640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__pos1, size_type(0),
1641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __str._M_data(), __str.size()); }
1642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a substring.
1645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Position in string to insert at.
1646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str   The string to insert.
1647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
1648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert.
1649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
1652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __pos2 > @a str.size().
1653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
1655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
1656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
1657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
1658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
1659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  value of the string doesn't change if an error is thrown.
1660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
1663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	     size_type __pos2, size_type __n = npos)
1664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__pos1, size_type(0), __str._M_data()
1665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::insert"),
1666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __str._M_limit(__pos2, __n)); }
1667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a C substring.
1670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string to insert at.
1671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to insert.
1672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to insert.
1673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
1677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
1679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
1680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
1681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
1682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  doesn't change if an error is thrown.
1683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n)
1686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__pos, size_type(0), __s, __n); }
1687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a C string.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 258


1690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string to insert at.
1691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to insert.
1692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
1696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
1698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  adding characters causes the length to exceed max_size(),
1699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
1700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
1701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
1702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos, const _CharT* __s)
1705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
1707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__pos, size_type(0), __s,
1708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     traits_type::length(__s));
1709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert multiple characters.
1713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index in string to insert at.
1714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert
1715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to insert.
1716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
1720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
1722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
1723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
1724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
1729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
1730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			      size_type(0), __n, __c); }
1731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert one character.
1734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
1735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to insert.
1736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Iterator referencing newly inserted char.
1737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
1740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If adding character causes the length to exceed max_size(),
1741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
1742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
1746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(__const_iterator __p, _CharT __c)
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 259


1747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __pos = __p - begin();
1750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
1751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(_M_data() + __pos);
1752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
1755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a string_view.
1757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string to insert at.
1758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
1759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
1763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	insert(size_type __pos, const _Tp& __svt)
1764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
1765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
1766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->insert(__pos, __sv.data(), __sv.size());
1767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
1768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a string_view.
1771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Position in string to insert at.
1772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
1773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
1774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n    The number of characters to insert.
1775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
1779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	insert(size_type __pos1, const _Tp& __svt,
1780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       size_type __pos2, size_type __n = npos)
1781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
1782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
1783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__pos1, size_type(0),
1784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      __sv.data()
1785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::insert"),
1786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n));
1787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
1788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
1789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove characters.
1792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
1793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
1794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
1797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes @a __n characters from this string starting at @a
1799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
1800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
1801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
1802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 260


1804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
1807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_check(__pos, "basic_string::erase");
1809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == npos)
1810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  this->_M_set_length(__pos);
1811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else if (__n != 0)
1812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  this->_M_erase(__pos, _M_limit(__pos, __n));
1813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
1814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove one character.
1818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
1819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  iterator referencing same location after removal.
1820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the character at @a __position from this string. The value
1822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  of the string doesn't change if an error is thrown.
1823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
1825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       erase(__const_iterator __position)
1826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= begin()
1828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __position < end());
1829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __pos = __position - begin();
1830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->_M_erase(__pos, size_type(1));
1831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(_M_data() + __pos);
1832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove a range of characters.
1836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
1837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
1838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Iterator referencing location of first after removal.
1839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
1841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
1842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
1844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       erase(__const_iterator __first, __const_iterator __last)
1845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__first >= begin() && __first <= __last
1847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __last <= end());
1848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         const size_type __pos = __first - begin();
1849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__last == end())
1850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  this->_M_set_length(__pos);
1851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
1852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  this->_M_erase(__pos, __last - __first);
1853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(this->_M_data() + __pos);
1854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove the last character.
1859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The string must be non-empty.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 261


1861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
1863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       pop_back() noexcept
1864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
1866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_erase(size() - 1, 1);
1867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
1869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value from another string.
1872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
1873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to be replaced.
1874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to insert.
1875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
1878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
1881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
1882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
1884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
1885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  error is thrown.
1886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
1889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
1890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value from another string.
1893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Index of first character to replace.
1894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to insert.
1896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  Index of first character of str to use.
1897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters from str to use.
1898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
1900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str.size().
1901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
1904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
1905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
1906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
1907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string doesn't change if an error is thrown.
1908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
1911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __pos2, size_type __n2 = npos)
1912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
1913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
1914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
1915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value of a C substring.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 262


1918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
1919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to insert.
1921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
1922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
1924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
1928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
1929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
1930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the length of result exceeds max_size(), length_error is
1931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.
1933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
1936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __n2)
1937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string_len(__s, __n2);
1939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_replace(_M_check(__pos, "basic_string::replace"),
1940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  _M_limit(__pos, __n1), __s, __n2);
1941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value of a C string.
1945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
1946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to insert.
1948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
1950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  from this string.  In place, the characters of @a __s are
1954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
1955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
1956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
1961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
1963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
1964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with multiple characters.
1968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
1969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters to insert.
1971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to insert.
1972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
1974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 263


1975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
1977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
1978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
1980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.
1982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
1985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
1986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
1987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string.
1990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String value to insert.
1993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
1998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
1999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the string doesn't change if an error is thrown.
2000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const basic_string& __str)
2004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
2005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with C substring.
2008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string value to insert.
2011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to insert.
2012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
2017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is
2019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
2020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const _CharT* __s, size_type __n)
2024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= end());
2027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1, __s, __n);
2028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with C string.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 264


2032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string value to insert.
2035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
2040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
2041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  value of the string doesn't change if an error is thrown.
2042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2, const _CharT* __s)
2045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
2048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with multiple characters
2052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert.
2055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to insert.
2056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
2061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
2062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  value of the string doesn't change if an error is thrown.
2063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2, size_type __n,
2066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      _CharT __c)
2067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= end());
2070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_replace_aux(__i1 - begin(), __i2 - __i1, __n, __c);
2071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with range.
2075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
2078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
2079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
2084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is
2086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
2087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 265


2089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator,
2090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
2091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string&
2092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         replace(const_iterator __i1, const_iterator __i2,
2093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
2094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
2095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   && __i2 <= end());
2097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
2098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->_M_replace_dispatch(__i1, __i2, __k1, __k2,
2099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 					   std::__false_type());
2100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
2102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
2103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
2104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         typename __enable_if_not_native_iterator<_InputIterator>::__type
2105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
2106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string&
2107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
2108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         replace(iterator __i1, iterator __i2,
2109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
2110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
2111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   && __i2 <= end());
2113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
2114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
2115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
2116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
2118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Specializations for the common case of pointer and iterator:
2120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
2121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      _CharT* __k1, _CharT* __k2)
2124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= end());
2127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1, __k2 - __k1);
2130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
2135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= end());
2138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1, __k2 - __k1);
2141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      iterator __k1, iterator __k2)
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 266


2146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= end());
2149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1.base(), __k2 - __k1);
2152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
2157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= end());
2160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1.base(), __k2 - __k1);
2163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
2166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
2168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
2171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
2176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is
2178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
2179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string& replace(const_iterator __i1, const_iterator __i2,
2181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    initializer_list<_CharT> __l)
2182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.size()); }
2183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
2184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string_view.
2188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  The position to replace at.
2189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n    The number of characters to replace.
2190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
2191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
2195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	replace(size_type __pos, size_type __n, const _Tp& __svt)
2196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__pos, __n, __sv.data(), __sv.size());
2199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string_view.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 267


2203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  The position to replace at.
2204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1    The number of characters to replace.
2205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
2206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  The position in the string_view to insert from.
2207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2    The number of characters to insert.
2208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
2212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	replace(size_type __pos1, size_type __n1, const _Tp& __svt,
2213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		size_type __pos2, size_type __n2 = npos)
2214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__pos1, __n1,
2217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      __sv.data()
2218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::replace"),
2219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n2));
2220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string_view.
2224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1    An iterator referencing the start position
2225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           to replace at.
2226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2    An iterator referencing the end position
2227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           for the replace.
2228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
2229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
2233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	replace(const_iterator __i1, const_iterator __i2, const _Tp& __svt)
2234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__i1 - begin(), __i2 - __i1, __sv);
2237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     private:
2241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _Integer>
2242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string&
2243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_replace_dispatch(const_iterator __i1, const_iterator __i2,
2244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    _Integer __n, _Integer __val, __true_type)
2245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { return _M_replace_aux(__i1 - begin(), __i2 - __i1, __n, __val); }
2246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
2248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string&
2249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_replace_dispatch(const_iterator __i1, const_iterator __i2,
2250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    _InputIterator __k1, _InputIterator __k2,
2251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    __false_type);
2252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
2255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     _CharT __c);
2256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_replace(size_type __pos, size_type __len1, const _CharT* __s,
2259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 const size_type __len2);
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 268


2260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_append(const _CharT* __s, size_type __n);
2263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
2265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Copy substring into C string.
2268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to copy value into.
2269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to copy.
2270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to copy.
2271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Number of characters actually copied
2272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
2273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
2275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
2276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.
2277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
2280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Swap contents with another string.
2283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  String to swap with.
2284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
2286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  time.
2287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
2289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       swap(basic_string& __s) _GLIBCXX_NOEXCEPT;
2290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // String operations:
2292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
2294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
2296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  happen.
2297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const _CharT*
2299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
2300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data(); }
2301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return const pointer to contents.
2304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This is a pointer to internal data.  It is undefined to modify
2306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the contents through the returned pointer. To get a pointer that
2307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  allows modifying the contents use @c &str[0] instead,
2308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  (or in C++17 the non-const @c str.data() overload).
2309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const _CharT*
2311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
2312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data(); }
2313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return non-const pointer to contents.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 269


2317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This is a pointer to the character sequence held by the string.
2319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Modifying the characters in the sequence is allowed.
2320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _CharT*
2322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       data() noexcept
2323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data(); }
2324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
2325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
2328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       allocator_type
2330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
2331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_get_allocator(); }
2332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a C substring.
2335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
2336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from.
2337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
2338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
2339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
2341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __n characters in @a __s within this string.  If found,
2342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it begins.  If not found, returns
2343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
2344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const
2347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
2348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a string.
2351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to locate.
2352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
2354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
2356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
2357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found, returns npos.
2358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
2361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
2363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a string_view.
2367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
2368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
2370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
2373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find(const _Tp& __svt, size_type __pos = 0) const
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 270


2374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find(__sv.data(), __pos, __sv.size());
2378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a C string.
2383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
2384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
2386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
2388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __s within this string.  If found, returns the index where
2389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  it begins.  If not found, returns npos.
2390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
2393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
2396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character.
2400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
2401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
2405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
2406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
2407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
2410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a string.
2413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to locate.
2414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of last occurrence.
2416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
2418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str within this string.  If found, returns the index where
2419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  it begins.  If not found, returns npos.
2420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
2423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
2425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a string_view.
2429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
2430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 271


2431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of last occurrence.
2432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
2435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	rfind(const _Tp& __svt, size_type __pos = npos) const
2436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->rfind(__sv.data(), __pos, __sv.size());
2440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a C substring.
2445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
2446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from.
2447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to search for.
2448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of last occurrence.
2449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
2451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __n characters in @a __s within this string.  If found,
2452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it begins.  If not found, returns
2453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
2454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const
2457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
2458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a C string.
2461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
2462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
2463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of  last occurrence.
2464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
2466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __s within this string.  If found, returns the index
2467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  where it begins.  If not found, returns npos.
2468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const
2471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
2474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character.
2478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
2479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
2484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
2485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 272


2488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of string.
2491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to locate.
2492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __str within this string.  If found,
2497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
2498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
2499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
2502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
2504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of a string_view.
2508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to locate.
2510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
2515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_first_of(const _Tp& __svt, size_type __pos = 0) const
2516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_first_of(__sv.data(), __pos, __sv.size());
2520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of C substring.
2525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  String containing characters to locate.
2526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from.
2527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to search for.
2528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found, returns the index where it was found.  If not found,
2533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns npos.
2534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const
2537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
2538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of C string.
2541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  String containing characters to locate.
2542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 273


2545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
2551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
2555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character.
2559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
2560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for the character
2564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __c within this string.  If found, returns the index
2565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  where it was found.  If not found, returns npos.
2566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note: equivalent to find(__c, __pos).
2568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
2571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find(__c, __pos); }
2572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of string.
2575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to locate.
2576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __str within this string.  If found,
2581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
2582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
2583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
2586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
2588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of string.
2592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to locate.
2594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
2599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_last_of(const _Tp& __svt, size_type __pos = npos) const
2600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 274


2602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_last_of(__sv.data(), __pos, __sv.size());
2604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of C substring.
2609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to locate.
2610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from.
2611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to search for.
2612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found, returns the index where it was found.  If not found,
2617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns npos.
2618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const
2621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
2622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of C string.
2625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to locate.
2626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
2635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
2639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character.
2643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
2644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
2649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
2650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
2652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
2655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->rfind(__c, __pos); }
2656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in string.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 275


2659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to avoid.
2660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
2664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
2665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  was found.  If not found, returns npos.
2666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
2669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
2671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in a string_view.
2675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  A object convertible to string_view containing
2676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to avoid.
2677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
2680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
2682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_first_not_of(const _Tp& __svt, size_type __pos = 0) const
2683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_first_not_of(__sv.data(), __pos, __sv.size());
2687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in C substring.
2692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
2693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from.
2694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from __s to consider.
2695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  contained in the first @a __n characters of @a __s within
2699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
2700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
2701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
2704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			size_type __n) const _GLIBCXX_NOEXCEPT;
2705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in C string.
2708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
2709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  contained in @a __s within this string.  If found, returns
2714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 276


2716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
2718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
2722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a different character.
2726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to avoid.
2727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character
2731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  other than @a __c within this string.  If found, returns the
2732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  index where it was found.  If not found, returns npos.
2733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
2736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
2737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in string.
2740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to avoid.
2741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  not contained in @a __str within this string.  If found,
2746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
2747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
2748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
2751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
2753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in a string_view.
2757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to avoid.
2759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
2762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
2764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_last_not_of(const _Tp& __svt, size_type __pos = npos) const
2765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_last_not_of(__sv.data(), __pos, __sv.size());
2769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 277


2773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in C substring.
2774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
2775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from.
2776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to consider.
2777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
2780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
2781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If found, returns the index where it was found.  If not found,
2782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns npos.
2783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
2786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		       size_type __n) const _GLIBCXX_NOEXCEPT;
2787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in C string.
2789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
2790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  not contained in @a __s within this string.  If found,
2795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
2796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
2797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
2800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
2804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a different character.
2808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to avoid.
2809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
2813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
2814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
2815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
2818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
2819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Get a substring.
2822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character (default 0).
2823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
2824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  The new string.
2825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
2826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Construct and return a new string using the @a __n
2828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a __pos.  If the string is too
2829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 278


2830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
2831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string
2833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
2834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return basic_string(*this,
2835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
2836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string.
2839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to compare against.
2840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
2843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
2844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
2845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length rlen of the strings to compare as the smallest of
2846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  size() and str.size().  The function then compares the two
2847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
2848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  otherwise the shorter one is ordered first.
2850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
2852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(const basic_string& __str) const
2853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __size = this->size();
2855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __osize = __str.size();
2856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __len = std::min(__size, __osize);
2857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
2859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (!__r)
2860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
2861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return __r;
2862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string_view.
2867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt An object convertible to string_view to compare against.
2868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
2870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, int>
2872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	compare(const _Tp& __svt) const
2873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const size_type __size = this->size();
2877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const size_type __osize = __sv.size();
2878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const size_type __len = std::min(__size, __osize);
2879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  int __r = traits_type::compare(_M_data(), __sv.data(), __len);
2881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  if (!__r)
2882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __r = _S_compare(__size, __osize);
2883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __r;
2884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 279


2887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string_view.
2888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  A position in the string to start comparing from.
2889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to compare.
2890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
2891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                against.
2892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
2894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, int>
2896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	compare(size_type __pos, size_type __n, const _Tp& __svt) const
2897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __sv_type(*this).substr(__pos, __n).compare(__sv);
2901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string_view.
2905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  A position in the string to start comparing from.
2906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  The number of characters to compare.
2907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
2908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                against.
2909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  A position in the string_view to start comparing from.
2910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  The number of characters to compare.
2911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
2913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, int>
2915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	compare(size_type __pos1, size_type __n1, const _Tp& __svt,
2916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		size_type __pos2, size_type __n2 = npos) const
2917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __sv_type(*this)
2921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    .substr(__pos1, __n1).compare(__sv.substr(__pos2, __n2));
2922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring to a string.
2927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character of substring.
2928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters in substring.
2929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to compare against.
2930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n characters
2933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
2934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
2935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
2936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
2937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to compare as the smallest of the length of the substring
2938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  and @a __str.size().  The function then compares the two
2939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  strings by calling
2940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
2941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
2942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the shorter one is ordered first.
2943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 280


2944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
2945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
2946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring to a substring.
2949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Index of first character of substring.
2950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters in substring.
2951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to compare against.
2952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
2953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters in substring of str.
2954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n1
2957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
2958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
2959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
2960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
2961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
2962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
2963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  strings to compare as the smallest of the lengths of the
2964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  substrings.  The function then compares the two strings by
2965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  calling
2966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
2967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  otherwise the shorter one is ordered first.
2969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
2971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
2972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __pos2, size_type __n2 = npos) const;
2973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a C string.
2976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to compare against.
2977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
2980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
2981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
2982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  compare as the smallest of size() and the length of a string
2983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
2984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
2985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
2986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  ordered first.
2987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
2989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(const _CharT* __s) const _GLIBCXX_NOEXCEPT;
2990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
2992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 5 String::compare specification questionable
2993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring to a C string.
2995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character of substring.
2996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters in substring.
2997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to compare against.
2998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n1
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 281


3001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
3002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
3003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
3004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
3005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  compare as the smallest of the length of the substring and
3006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the length of a string constructed from @a __s.  The
3007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  function then compares the two string by calling
3008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
3009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
3010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  one is ordered first.
3011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
3012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
3013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
3014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring against a character %array.
3017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character of substring.
3018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters in substring.
3019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  character %array to compare against.
3020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters of s.
3021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
3022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n1
3024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
3025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
3026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  if this substring is ordered before the string from @a __s,
3027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
3028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
3029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  effective length rlen of the strings to compare as the
3030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
3031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  function then compares the two strings by calling
3032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
3033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
3034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  one is ordered first.
3035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
3037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  no special meaning.
3038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
3039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
3040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
3041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __n2) const;
3042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus > 201703L
3044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
3045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       starts_with(basic_string_view<_CharT, _Traits> __x) const noexcept
3046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
3049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       starts_with(_CharT __x) const noexcept
3050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
3053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       starts_with(const _CharT* __x) const noexcept
3054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
3057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ends_with(basic_string_view<_CharT, _Traits> __x) const noexcept
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 282


3058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
3061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ends_with(_CharT __x) const noexcept
3062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
3065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ends_with(const _CharT* __x) const noexcept
3066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++20
3068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Allow basic_stringbuf::__xfer_bufptrs to call _M_length:
3070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename, typename, typename> friend class basic_stringbuf;
3071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     };
3072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_END_NAMESPACE_CXX11
3073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else  // !_GLIBCXX_USE_CXX11_ABI
3074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // Reference-counted COW string implentation
3075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
3077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @class basic_string basic_string.h <string>
3078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
3079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @ingroup strings
3081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @ingroup sequences
3082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _CharT  Type of character
3084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
3085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *                   char_traits<_CharT>.
3086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
3087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
3089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
3090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
3091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
3092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
3093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @doctodo
3095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Documentation?  What's that?
3098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Nathan Myers <ncm@cantrip.org>.
3099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  A string looks like this:
3101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @code
3103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *                                        [_Rep]
3104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *                                        _M_length
3105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *   [basic_string<char_type>]            _M_capacity
3106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *   _M_dataplus                          _M_refcount
3107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *   _M_p ---------------->               unnamed array of char_type
3108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @endcode
3109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Where the _M_p points to the first character in the string, and
3111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  you cast it to a pointer-to-_Rep and subtract 1 to get a
3112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  pointer to the header.
3113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  This approach has the enormous advantage that a string object
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 283


3115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  requires only one allocation.  All the ugliness is confined
3116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  within a single %pair of inline functions, which each compile to
3117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  a single @a add instruction: _Rep::_M_data(), and
3118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  string::_M_rep(); and the allocation function which gets a
3119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  block of raw bytes and with room enough and constructs a _Rep
3120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  object at the front.
3121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  The reason you want _M_data pointing to the character %array and
3123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  not the _Rep is so that the debugger can see the string
3124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  contents. (Probably we should add a non-inline member to get
3125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  the _Rep for the debugger to use, so users can check the actual
3126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  string length.)
3127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Note that the _Rep object is a POD so that you can have a
3129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  static <em>empty string</em> _Rep object already @a constructed before
3130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  static constructors have run.  The reference-count encoding is
3131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  chosen so that a 0 indicates one reference, so you never try to
3132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  destroy the empty-string _Rep object.
3133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  All but the last paragraph is considered pretty conventional
3135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  for a C++ string implementation.
3136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   */
3137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // 21.3  Template class basic_string
3138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
3139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     class basic_string
3140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     {
3141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
3142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	rebind<_CharT>::other _CharT_alloc_type;
3143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__alloc_traits<_CharT_alloc_type> _CharT_alloc_traits;
3144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Types:
3146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
3147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef _Traits					    traits_type;
3148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Traits::char_type		    value_type;
3149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef _Alloc					    allocator_type;
3150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _CharT_alloc_type::size_type	    size_type;
3151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _CharT_alloc_type::difference_type   difference_type;
3152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus < 201103L
3153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _CharT_alloc_type::reference	    reference;
3154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _CharT_alloc_type::const_reference   const_reference;
3155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
3156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef value_type&				    reference;
3157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef const value_type&				    const_reference;
3158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _CharT_alloc_traits::pointer	    pointer;
3160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _CharT_alloc_traits::const_pointer   const_pointer;
3161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
3162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
3163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****                                                             const_iterator;
3164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
3165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef std::reverse_iterator<iterator>		    reverse_iterator;
3166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     protected:
3168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // type used for positions in insert, erase etc.
3169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef iterator __const_iterator;
3170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     private:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 284


3172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _Rep: string representation
3173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //   Invariants:
3174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //   1. String really contains _M_length + 1 characters: due to 21.3.4
3175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //      must be kept null-terminated.
3176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //   2. _M_capacity >= _M_length
3177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //      Allocated memory is always (_M_capacity + 1) * sizeof(_CharT).
3178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //   3. _M_refcount has three states:
3179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //      -1: leaked, one reference, no ref-copies allowed, non-const.
3180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //       0: one reference, non-const.
3181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //     n>0: n + 1 references, operations require a lock, const.
3182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //   4. All fields==0 is an empty string, given the extra storage
3183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //      beyond-the-end for a null terminator; thus, the shared
3184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //      empty string representation needs no constructor.
3185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       struct _Rep_base
3187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	size_type		_M_length;
3189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	size_type		_M_capacity;
3190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_Atomic_word		_M_refcount;
3191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
3192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       struct _Rep : _Rep_base
3194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// Types:
3196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
3197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  rebind<char>::other _Raw_bytes_alloc;
3198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// (Public) Data members:
3200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// The maximum number of individual char_type elements of an
3202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// individual string is determined by _S_max_size. This is the
3203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// value that will be returned by max_size().  (Whereas npos
3204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// is the maximum number of bytes the allocator can allocate.)
3205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// If one was to divvy up the theoretical largest size string,
3206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// with a terminating character and m _CharT elements, it'd
3207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// look like this:
3208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// npos = sizeof(_Rep) + (m * sizeof(_CharT)) + sizeof(_CharT)
3209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// Solving for m:
3210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// m = ((npos - sizeof(_Rep))/sizeof(CharT)) - 1
3211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// In addition, this implementation quarters this amount.
3212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	static const size_type	_S_max_size;
3213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	static const _CharT	_S_terminal;
3214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// The following storage is init'd to 0 by the linker, resulting
3216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         // (carefully) in an empty string with one reference.
3217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static size_type _S_empty_rep_storage[];
3218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static _Rep&
3220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_empty_rep() _GLIBCXX_NOEXCEPT
3221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { 
3222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  // NB: Mild hack to avoid strict-aliasing warnings.  Note that
3223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  // _S_empty_rep_storage is never modified and the punning should
3224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  // be reasonably safe in this case.
3225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  void* __p = reinterpret_cast<void*>(&_S_empty_rep_storage);
3226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return *reinterpret_cast<_Rep*>(__p);
3227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
3228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 285


3229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         bool
3230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_is_leaked() const _GLIBCXX_NOEXCEPT
3231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
3232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if defined(__GTHREADS)
3233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // _M_refcount is mutated concurrently by _M_refcopy/_M_dispose,
3234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // so we need to use an atomic load. However, _M_is_leaked
3235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // predicate does not change concurrently (i.e. the string is either
3236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // leaked or not), so a relaxed load is enough.
3237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           return __atomic_load_n(&this->_M_refcount, __ATOMIC_RELAXED) < 0;
3238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
3239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           return this->_M_refcount < 0;
3240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         }
3242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         bool
3244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_is_shared() const _GLIBCXX_NOEXCEPT
3245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
3246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if defined(__GTHREADS)
3247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // _M_refcount is mutated concurrently by _M_refcopy/_M_dispose,
3248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // so we need to use an atomic load. Another thread can drop last
3249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // but one reference concurrently with this check, so we need this
3250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // load to be acquire to synchronize with release fetch_and_add in
3251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // _M_dispose.
3252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           return __atomic_load_n(&this->_M_refcount, __ATOMIC_ACQUIRE) > 0;
3253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
3254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           return this->_M_refcount > 0;
3255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         }
3257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
3259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_set_leaked() _GLIBCXX_NOEXCEPT
3260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { this->_M_refcount = -1; }
3261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
3263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_set_sharable() _GLIBCXX_NOEXCEPT
3264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { this->_M_refcount = 0; }
3265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	void
3267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_set_length_and_sharable(size_type __n) _GLIBCXX_NOEXCEPT
3268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
3269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    {
3273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      this->_M_set_sharable();  // One reference.
3274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      this->_M_length = __n;
3275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      traits_type::assign(this->_M_refdata()[__n], _S_terminal);
3276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      // grrr. (per 21.3.4)
3277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      // You cannot leave those LWG people alone for a second.
3278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    }
3279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
3280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_CharT*
3282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_refdata() throw()
3283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ return reinterpret_cast<_CharT*>(this + 1); }
3284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_CharT*
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 286


3286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_grab(const _Alloc& __alloc1, const _Alloc& __alloc2)
3287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
3288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return (!_M_is_leaked() && __alloc1 == __alloc2)
3289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	          ? _M_refcopy() : _M_clone(__alloc1);
3290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
3291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// Create & Destroy
3293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	static _Rep*
3294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_S_create(size_type, size_type, const _Alloc&);
3295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	void
3297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_dispose(const _Alloc& __a) _GLIBCXX_NOEXCEPT
3298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
3299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    {
3303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      // Be race-detector-friendly.  For more info see bits/c++config.
3304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&this->_M_refcount);
3305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               // Decrement of _M_refcount is acq_rel, because:
3306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               // - all but last decrements need to release to synchronize with
3307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               //   the last decrement that will delete the object.
3308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               // - the last decrement needs to acquire to synchronize with
3309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               //   all the previous decrements.
3310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               // - last but one decrement needs to release to synchronize with
3311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               //   the acquire load in _M_is_shared that will conclude that
3312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               //   the object is not shared anymore.
3313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      if (__gnu_cxx::__exchange_and_add_dispatch(&this->_M_refcount,
3314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 							 -1) <= 0)
3315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		{
3316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&this->_M_refcount);
3317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  _M_destroy(__a);
3318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		}
3319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    }
3320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}  // XXX MT
3321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	void
3323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_destroy(const _Alloc&) throw();
3324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_CharT*
3326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_refcopy() throw()
3327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
3328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****             __gnu_cxx::__atomic_add_dispatch(&this->_M_refcount, 1);
3332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return _M_refdata();
3333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}  // XXX MT
3334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_CharT*
3336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_clone(const _Alloc&, size_type __res = 0);
3337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
3338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
3340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       struct _Alloc_hider : _Alloc
3341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_Alloc_hider(_CharT* __dat, const _Alloc& __a) _GLIBCXX_NOEXCEPT
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 287


3343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: _Alloc(__a), _M_p(__dat) { }
3344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_CharT* _M_p; // The actual data.
3346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
3347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
3349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Data Members (public):
3350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // NB: This is an unsigned type, and thus represents the maximum
3351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // size that the allocator can hold.
3352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Value returned by various member functions when they fail.
3353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
3354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     private:
3356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Data Members (private):
3357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       mutable _Alloc_hider	_M_dataplus;
3358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _CharT*
3360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_data() const _GLIBCXX_NOEXCEPT
3361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return  _M_dataplus._M_p; }
3362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _CharT*
3364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_data(_CharT* __p) _GLIBCXX_NOEXCEPT
3365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return (_M_dataplus._M_p = __p); }
3366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _Rep*
3368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_rep() const _GLIBCXX_NOEXCEPT
3369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return &((reinterpret_cast<_Rep*> (_M_data()))[-1]); }
3370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // For the internal use we have functions similar to `begin'/`end'
3372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // but they do not call _M_leak.
3373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
3374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_ibegin() const _GLIBCXX_NOEXCEPT
3375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return iterator(_M_data()); }
3376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
3378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_iend() const _GLIBCXX_NOEXCEPT
3379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return iterator(_M_data() + this->size()); }
3380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_leak()    // for use in begin() & non-const op[]
3383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (!_M_rep()->_M_is_leaked())
3385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_leak_hard();
3386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
3389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_check(size_type __pos, const char* __s) const
3390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__pos > this->size())
3392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
3393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "this->size() (which is %zu)"),
3394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   __s, __pos, this->size());
3395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return __pos;
3396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 288


3400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
3402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_length_error(__N(__s));
3403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
3406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
3407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
3408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
3410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
3411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // True if _Rep and source do not overlap.
3414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
3415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
3416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
3418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
3419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // When __n = 1 way faster than the general multichar
3422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // traits_type::copy/move/assign.
3423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
3424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_copy(_CharT* __d, const _CharT* __s, size_type __n) _GLIBCXX_NOEXCEPT
3425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
3427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
3428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
3429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::copy(__d, __s, __n);
3430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
3433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_move(_CharT* __d, const _CharT* __s, size_type __n) _GLIBCXX_NOEXCEPT
3434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
3436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
3437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
3438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::move(__d, __s, __n);	  
3439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
3442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_assign(_CharT* __d, size_type __n, _CharT __c) _GLIBCXX_NOEXCEPT
3443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
3445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, __c);
3446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
3447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(__d, __n, __c);	  
3448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
3451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // to optimize for the common case of pointers as iterators.
3452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _Iterator>
3453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static void
3454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
3455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
3456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  for (; __k1 != __k2; ++__k1, (void)++__p)
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 289


3457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
3458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
3459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
3461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
3462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
3463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
3465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
3466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
3467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
3468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
3470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
3471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
3472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
3474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
3475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
3476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
3477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static int
3479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
3480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
3482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
3484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
3485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
3486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
3487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
3488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return int(__d);
3489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, size_type __len2);
3493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_leak_hard();
3496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static _Rep&
3498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_empty_rep() _GLIBCXX_NOEXCEPT
3499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _Rep::_S_empty_rep(); }
3500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
3502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // A helper type for avoiding boiler-plate.
3503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef basic_string_view<_CharT, _Traits> __sv_type;
3504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename _Res>
3506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	using _If_sv = enable_if_t<
3507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __and_<is_convertible<const _Tp&, __sv_type>,
3508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 __not_<is_convertible<const _Tp*, const basic_string*>>,
3509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 __not_<is_convertible<const _Tp&, const _CharT*>>>::value,
3510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _Res>;
3511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Allows an implicit conversion to __sv_type.
3513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static __sv_type
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 290


3514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_to_string_view(__sv_type __svt) noexcept
3515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __svt; }
3516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Wraps a string_view by explicit conversion and thus
3518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // allows to add an internal constructor that does not
3519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // participate in overload resolution when a string_view
3520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // is provided.
3521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       struct __sv_wrapper
3522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	explicit __sv_wrapper(__sv_type __sv) noexcept : _M_sv(__sv) { }
3524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__sv_type _M_sv;
3525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
3526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Only internally used: Construct string from a string view
3529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *          wrapper.
3530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __svw  string view wrapper.
3531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
3532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       explicit
3534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(__sv_wrapper __svw, const _Alloc& __a)
3535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
3536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
3539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Construct/copy/destroy:
3540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // NB: We overload ctors in some cases instead of using default
3541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
3542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Default constructor creates an empty string.
3545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string()
3547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
3549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_S_empty_rep()._M_refdata(), _Alloc())
3550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
3551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_S_construct(size_type(), _CharT(), _Alloc()), _Alloc())
3552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { }
3554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
3557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       explicit
3559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _Alloc& __a);
3560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // NB: per LWG issue 42, semantics different from IS:
3562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string with copy of value of @a str.
3564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
3565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str);
3567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
3569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 2583. no way to supply an allocator for basic_string(str, pos)
3570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 291


3571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
3572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
3573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
3575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   const _Alloc& __a = _Alloc());
3578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
3581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
3582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
3584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   size_type __n);
3587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
3589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
3590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
3592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
3593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   size_type __n, const _Alloc& __a);
3596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string initialized by a character %array.
3599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source character %array.
3600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
3601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
3604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  has no special meaning.
3605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
3607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   const _Alloc& __a = _Alloc());
3608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a C string.
3611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source C string.
3612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
3615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
3616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 3076. basic_string CTAD ambiguity
3617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
3618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
3620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_S_construct(__s, __s ? __s + traits_type::length(__s) :
3621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****                                  __s + npos, __a), __a)
3622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { }
3623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as multiple characters.
3626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters.
3627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __c  Character to use.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 292


3628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc());
3631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
3633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Move construct string.
3635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
3636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
3638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __str is a valid, but unspecified string.
3639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        **/
3640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(basic_string&& __str)
3641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       noexcept // FIXME C++11: should always be noexcept.
3643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(std::move(__str._M_dataplus))
3645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__str._M_data(_S_empty_rep()._M_refdata());
3648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
3649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__str._M_data(_S_construct(size_type(), _CharT(), get_allocator()));
3650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string from an initializer %list.
3655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __l  std::initializer_list of characters.
3656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc());
3659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, const _Alloc& __a)
3661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(__str._M_rep()->_M_grab(__a, __str.get_allocator()), __a)
3662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { }
3663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(basic_string&& __str, const _Alloc& __a)
3665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(__str._M_data(), __a)
3666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__a == __str.get_allocator())
3668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
3669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __str._M_data(_S_empty_rep()._M_refdata());
3671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
3672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __str._M_data(_S_construct(size_type(), _CharT(), __a));
3673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
3675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
3676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_dataplus._M_p = _S_construct(__str.begin(), __str.end(), __a);
3677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
3679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a range.
3682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __beg  Start of range.
3683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __end  End of range.
3684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 293


3685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
3687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
3688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     const _Alloc& __a = _Alloc());
3689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
3691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string from a substring of a string_view.
3693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __t   Source object convertible to string view.
3694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos The index of the first character to copy from __t.
3695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n   The number of characters to copy from __t.
3696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a   Allocator to use.
3697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
3699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string(const _Tp& __t, size_type __pos, size_type __n,
3700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     const _Alloc& __a = _Alloc())
3701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: basic_string(_S_to_string_view(__t).substr(__pos, __n), __a) { }
3702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string from a string_view.
3705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __t  Source object convertible to string view.
3706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
3709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	explicit
3710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string(const _Tp& __t, const _Alloc& __a = _Alloc())
3711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: basic_string(__sv_wrapper(_S_to_string_view(__t)), __a) { }
3712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
3713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Destroy the string instance.
3716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ~basic_string() _GLIBCXX_NOEXCEPT
3718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_rep()->_M_dispose(this->get_allocator()); }
3719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Assign the value of @a str to this string.
3722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
3723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
3725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(const basic_string& __str)
3726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__str); }
3727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Copy contents of @a s into this string.
3730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source null-terminated string.
3731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
3733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(const _CharT* __s) 
3734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__s); }
3735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to string of length 1.
3738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __c  Source character.
3739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Assigning to a character makes this string length 1 and
3741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  (*this)[0] == @a c.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 294


3742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
3744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(_CharT __c) 
3745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { 
3746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->assign(1, __c); 
3747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
3748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
3751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
3753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
3754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
3756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a str is a valid, but unspecified string.
3757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        **/
3758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
3759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(basic_string&& __str)
3760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(allocator_traits<_Alloc>::is_always_equal::value)
3761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// NB: DR 1204.
3763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->swap(__str);
3764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
3765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
3769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __l  std::initializer_list.
3770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
3772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(initializer_list<_CharT> __l)
3773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->assign(__l.begin(), __l.size());
3775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
3776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
3778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
3780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to string constructed from a string_view.
3782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __svt An object convertible to  string_view.
3783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
3785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
3786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	operator=(const _Tp& __svt)
3787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ return this->assign(__svt); }
3788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Convert to a string_view.
3791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return A string_view.
3792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator __sv_type() const noexcept
3794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(data(), size()); }
3795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
3796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Iterators:
3798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 295


3799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write iterator that points to the first character in
3800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the %string.  Unshares the string.
3801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
3803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       begin() // FIXME C++11: should be noexcept.
3804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_leak();
3806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(_M_data());
3807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
3811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.
3812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
3814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
3815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(_M_data()); }
3816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write iterator that points one past the last
3819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.  Unshares the string.
3820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
3822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       end() // FIXME C++11: should be noexcept.
3823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_leak();
3825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(_M_data() + this->size());
3826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
3830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  last character in the %string.
3831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
3833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
3834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
3835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
3838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
3839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  order.  Unshares the string.
3840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reverse_iterator
3842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rbegin() // FIXME C++11: should be noexcept.
3843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return reverse_iterator(this->end()); }
3844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to the last character in the %string.  Iteration is done in
3848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  reverse element order.
3849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
3851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
3852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->end()); }
3853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 296


3856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
3857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element order.  Unshares the string.
3858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reverse_iterator
3860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rend() // FIXME C++11: should be noexcept.
3861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return reverse_iterator(this->begin()); }
3862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to one before the first character in the %string.  Iteration
3866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is done in reverse element order.
3867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
3869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
3870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->begin()); }
3871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
3873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
3875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.
3876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
3878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       cbegin() const noexcept
3879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(this->_M_data()); }
3880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
3883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  last character in the %string.
3884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
3886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       cend() const noexcept
3887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
3888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to the last character in the %string.  Iteration is done in
3892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  reverse element order.
3893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
3895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       crbegin() const noexcept
3896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->end()); }
3897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to one before the first character in the %string.  Iteration
3901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is done in reverse element order.
3902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
3904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       crend() const noexcept
3905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->begin()); }
3906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
3909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Capacity:
3910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Returns the number of characters in the string, not including any
3911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  null-termination.
3912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 297


3913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
3914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_rep()->_M_length; }
3915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Returns the number of characters in the string, not including any
3917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  null-termination.
3918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
3919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
3920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_rep()->_M_length; }
3921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Returns the size() of the largest possible %string.
3923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
3924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
3925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _Rep::_S_max_size; }
3926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
3929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
3930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __c  Character to fill any new elements.
3931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function will %resize the %string to the specified
3933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  number of characters.  If the number is smaller than the
3934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  %string's current size the %string is truncated, otherwise
3935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
3936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       resize(size_type __n, _CharT __c);
3939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
3942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
3943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function will resize the %string to the specified length.  If
3945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the new size is smaller than the %string's current size the %string
3946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
3947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
3948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  setting them to 0.
3949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       resize(size_type __n)
3952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { this->resize(__n, _CharT()); }
3953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
3955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
3956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       shrink_to_fit() _GLIBCXX_NOEXCEPT
3958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_exceptions
3960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (capacity() > size())
3961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
3962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    try
3963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      { reserve(0); }
3964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    catch(...)
3965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      { }
3966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
3967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 298


3970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns the total number of characters that the %string can hold
3973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  before needing to allocate more memory.
3974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
3976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
3977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_rep()->_M_capacity; }
3978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
3981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *          characters.
3982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __res_arg  Number of characters required.
3983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
3984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function attempts to reserve enough memory for the
3986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  %string to hold the specified number of characters.  If the
3987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  number requested is more than max_size(), length_error is
3988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
3989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The advantage of this function is that if optimal code is a
3991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  necessity and the user can determine the string length that will be
3992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
3993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
3994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  data.
3995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reserve(size_type __res_arg = 0);
3998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Erases the string, making it empty.
4001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
4003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
4004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       clear() _GLIBCXX_NOEXCEPT
4005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (_M_rep()->_M_is_shared())
4007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
4008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_rep()->_M_dispose(this->get_allocator());
4009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_data(_S_empty_rep()._M_refdata());
4010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
4011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
4012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_rep()->_M_set_length_and_sharable(0);
4013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
4015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // PR 56166: this should not throw.
4016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
4017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       clear()
4018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_mutate(0, this->size(), 0); }
4019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
4020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
4023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  <code>*this == ""</code>.
4024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NODISCARD bool
4026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 299


4027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->size() == 0; }
4028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Element access:
4030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
4032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  The index of the character to access.
4033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read-only (constant) reference to the character.
4034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This operator allows for easy, array-style, data access.
4036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note that data access with this operator is unchecked and
4037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
4038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  see at().)
4039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
4041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
4042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(__pos <= size());
4044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__pos];
4045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
4049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  The index of the character to access.
4050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read/write reference to the character.
4051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This operator allows for easy, array-style, data access.
4053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note that data access with this operator is unchecked and
4054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
4055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  see at().)  Unshares the string.
4056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
4058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator[](size_type __pos)
4059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
4061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// and in C++11 mode.
4062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(__pos <= size());
4063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         // In pedantic mode be strict in C++98 mode.
4064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
4065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_leak();
4066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__pos];
4067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
4071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n The index of the character to access.
4072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read-only (const) reference to the character.
4073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
4074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function provides for safer data access.  The parameter is
4076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first checked that it is in the range of the string.  The function
4077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  throws out_of_range if the check fails.
4078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
4080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       at(size_type __n) const
4081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n >= this->size())
4083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 300


4084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu) >= this->size() "
4085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu)"),
4086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   __n, this->size());
4087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__n];
4088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
4092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n The index of the character to access.
4093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read/write reference to the character.
4094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
4095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function provides for safer data access.  The parameter is
4097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first checked that it is in the range of the string.  The function
4098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  throws out_of_range if the check fails.  Success results in
4099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  unsharing the string.
4100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
4102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       at(size_type __n)
4103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n >= size())
4105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
4106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu) >= this->size() "
4107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu)"),
4108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   __n, this->size());
4109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_leak();
4110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__n];
4111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
4114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reference to the data at the first
4116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element of the %string.
4117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
4119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       front()
4120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
4122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](0);
4123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
4127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element of the %string.
4128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
4130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       front() const noexcept
4131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
4133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](0);
4134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reference to the data at the last
4138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element of the %string.
4139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 301


4141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       back()
4142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
4144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](this->size() - 1);
4145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
4149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  last element of the %string.
4150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
4152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       back() const noexcept
4153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
4155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](this->size() - 1);
4156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
4158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Modifiers:
4160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string to this string.
4162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to append.
4163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(const basic_string& __str)
4167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__str); }
4168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a C string.
4171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to append.
4172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(const _CharT* __s)
4176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__s); }
4177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a character.
4180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to append.
4181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(_CharT __c)
4185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { 
4186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->push_back(__c);
4187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
4188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
4191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append an initializer_list of characters.
4193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
4194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(initializer_list<_CharT> __l)
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 302


4198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
4199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
4200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
4202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string_view.
4204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt The object convertible to string_view to be appended.
4205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
4208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
4209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	operator+=(const _Tp& __svt)
4210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ return this->append(__svt); }
4211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
4212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string to this string.
4215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to append.
4216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const basic_string& __str);
4220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a substring.
4223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to append.
4224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of the first character of str to append.
4225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
4226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
4228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function appends @a __n characters from @a __str
4230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
4231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  than the number of available characters in @a __str, the
4232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  remainder of @a __str is appended.
4233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n = npos);
4236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a C substring.
4239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to append.
4240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
4241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const _CharT* __s, size_type __n);
4245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a C string.
4248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to append.
4249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const _CharT* __s)
4253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 303


4255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->append(__s, traits_type::length(__s));
4256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append multiple characters.
4260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
4261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to use.
4262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Appends __n copies of __c to this string.
4265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(size_type __n, _CharT __c);
4268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
4270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append an initializer_list of characters.
4272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to append.
4273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(initializer_list<_CharT> __l)
4277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
4278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
4279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a range of characters.
4282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
4283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __last  Iterator marking the end of the range.
4284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
4287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
4289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string&
4290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
4291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { return this->replace(_M_iend(), _M_iend(), __first, __last); }
4292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
4294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string_view.
4296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt The object convertible to string_view to be appended.
4297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
4300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
4301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	append(const _Tp& __svt)
4302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
4303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
4304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->append(__sv.data(), __sv.size());
4305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
4306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a range of characters from a string_view.
4309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt The object convertible to string_view to be appended
4310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *               from.
4311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos The position in the string_view to append from.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 304


4312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n   The number of characters to append from the string_view.
4313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
4316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _If_sv<_Tp, basic_string&>
4317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	append(const _Tp& __svt, size_type __pos, size_type __n = npos)
4318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
4319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
4320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return append(__sv.data()
4321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::append"),
4322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
4323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
4324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
4325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a single character.
4328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to append.
4329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
4331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       push_back(_CharT __c)
4332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { 
4333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __len = 1 + this->size();
4334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__len > this->capacity() || _M_rep()->_M_is_shared())
4335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  this->reserve(__len);
4336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	traits_type::assign(_M_data()[this->size()], __c);
4337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_rep()->_M_set_length_and_sharable(__len);
4338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to contents of another string.
4342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string to use.
4343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const basic_string& __str);
4347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
4349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to contents of another string.
4351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string to use.
4352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
4355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __str is a valid, but unspecified string.
4356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(basic_string&& __str)
4359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       noexcept(allocator_traits<_Alloc>::is_always_equal::value)
4360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->swap(__str);
4362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
4363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
4365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to a substring of a string.
4368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to use.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 305


4369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of the first character of str.
4370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to use.
4371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
4373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets this string to the substring of @a __str
4375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
4376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is larger than the number of available characters in @a
4377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str, the remainder of @a __str is used.
4378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n = npos)
4381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__str._M_data()
4382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    + __str._M_check(__pos, "basic_string::assign"),
4383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    __str._M_limit(__pos, __n)); }
4384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to a C substring.
4387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to use.
4388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to use.
4389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets the value of this string to the first @a __n
4392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
4393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
4394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const _CharT* __s, size_type __n);
4397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to contents of a C string.
4400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to use.
4401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
4404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
4405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  function returns.
4406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const _CharT* __s)
4409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
4411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->assign(__s, traits_type::length(__s));
4412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to multiple characters.
4416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Length of the resulting string.
4417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to use.
4418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets the value of this string to @a __n copies of
4421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character @a __c.
4422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(size_type __n, _CharT __c)
4425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 306


4426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to a range of characters.
4429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
4430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __last  Iterator marking the end of the range.
4431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
4434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
4436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string&
4437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
4438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { return this->replace(_M_ibegin(), _M_iend(), __first, __last); }
4439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
4441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
4443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
4444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(initializer_list<_CharT> __l)
4448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
4449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
4450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
4452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value from a string_view.
4454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt The source object convertible to string_view.
4455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
4458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
4459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	assign(const _Tp& __svt)
4460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
4461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
4462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->assign(__sv.data(), __sv.size());
4463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
4464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value from a range of characters in a string_view.
4467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The source object convertible to string_view.
4468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  The position in the string_view to assign from.
4469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to assign.
4470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
4473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _If_sv<_Tp, basic_string&>
4474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         assign(const _Tp& __svt, size_type __pos, size_type __n = npos)
4475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
4476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
4477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return assign(__sv.data()
4478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::assign"),
4479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
4480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
4481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
4482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 307


4483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert multiple characters.
4485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert
4487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to insert.
4488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
4491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  position referenced by iterator @a __p.  If adding
4492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
4493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
4495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
4497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
4498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
4499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a range of characters.
4502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __beg  Start of range.
4504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __end  End of range.
4505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
4508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
4509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
4511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
4513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
4514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
4515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
4516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
4518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert an initializer_list of characters.
4520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
4522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
4525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
4526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
4528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->insert(__p - _M_ibegin(), __l.begin(), __l.size());
4529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
4531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert value of a string.
4534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Position in string to insert at.
4535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to insert.
4536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 308


4540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
4541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
4543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
4546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->insert(__pos1, __str, size_type(0), __str.size()); }
4547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a substring.
4550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Position in string to insert at.
4551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to insert.
4552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
4553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert.
4554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
4557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __pos2 > @a str.size().
4558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
4560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
4561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
4562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
4563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
4564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
4568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	     size_type __pos2, size_type __n = npos)
4569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->insert(__pos1, __str._M_data()
4570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    + __str._M_check(__pos2, "basic_string::insert"),
4571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    __str._M_limit(__pos2, __n)); }
4572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a C substring.
4575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string to insert at.
4576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to insert.
4577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to insert.
4578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
4581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
4582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
4584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
4585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
4586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
4587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  doesn't change if an error is thrown.
4588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n);
4591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a C string.
4594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string to insert at.
4595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to insert.
4596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 309


4597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
4600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
4602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  adding characters causes the length to exceed max_size(),
4603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
4604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
4605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
4606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos, const _CharT* __s)
4609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
4611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->insert(__pos, __s, traits_type::length(__s));
4612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert multiple characters.
4616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index in string to insert at.
4617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert
4618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to insert.
4619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
4622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
4623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
4625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
4626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
4627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
4629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
4632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
4633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			      size_type(0), __n, __c); }
4634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert one character.
4637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
4638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to insert.
4639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Iterator referencing newly inserted char.
4640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
4643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If adding character causes the length to exceed max_size(),
4644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
4645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
4647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
4649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(iterator __p, _CharT __c)
4650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
4652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __pos = __p - _M_ibegin();
4653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 310


4654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_rep()->_M_set_leaked();
4655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(_M_data() + __pos);
4656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
4659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a string_view.
4661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string to insert at.
4662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
4663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
4666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
4667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	insert(size_type __pos, const _Tp& __svt)
4668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
4669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
4670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->insert(__pos, __sv.data(), __sv.size());
4671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
4672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a string_view.
4675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string to insert at.
4676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to insert from.
4677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string_view to insert
4678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  from.
4679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n    The number of characters to insert.
4680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
4683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _If_sv<_Tp, basic_string&>
4684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         insert(size_type __pos1, const _Tp& __svt,
4685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       size_type __pos2, size_type __n = npos)
4686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
4687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
4688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__pos1, size_type(0), __sv.data()
4689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::insert"),
4690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n));
4691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
4692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
4693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove characters.
4696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
4697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
4698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
4701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes @a __n characters from this string starting at @a
4703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
4704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
4705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
4706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
4708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 311


4711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { 
4712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_mutate(_M_check(__pos, "basic_string::erase"),
4713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  _M_limit(__pos, __n), size_type(0));
4714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
4715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove one character.
4719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
4720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  iterator referencing same location after removal.
4721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the character at @a __position from this string. The value
4723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  of the string doesn't change if an error is thrown.
4724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
4726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       erase(iterator __position)
4727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= _M_ibegin()
4729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __position < _M_iend());
4730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __pos = __position - _M_ibegin();
4731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_mutate(__pos, size_type(1), size_type(0));
4732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_rep()->_M_set_leaked();
4733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(_M_data() + __pos);
4734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove a range of characters.
4738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
4739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
4740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Iterator referencing location of first after removal.
4741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
4743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
4744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
4746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       erase(iterator __first, iterator __last);
4747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****  
4748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
4749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove the last character.
4751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The string must be non-empty.
4753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
4755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       pop_back() // FIXME C++11: should be noexcept.
4756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
4758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	erase(size() - 1, 1);
4759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
4761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value from another string.
4764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
4765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to be replaced.
4766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to insert.
4767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 312


4768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
4770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
4773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
4774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
4775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
4776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
4777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  error is thrown.
4778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
4781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
4782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value from another string.
4785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Index of first character to replace.
4786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to insert.
4788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  Index of first character of str to use.
4789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters from str to use.
4790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
4792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str.size().
4793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
4796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
4797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
4798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
4799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string doesn't change if an error is thrown.
4800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
4803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __pos2, size_type __n2 = npos)
4804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
4805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
4806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
4807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value of a C substring.
4810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
4811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to insert.
4813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
4814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
4816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
4819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
4820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
4821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
4822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the length of result exceeds max_size(), length_error is
4823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
4824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 313


4825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
4828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __n2);
4829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value of a C string.
4832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
4833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to insert.
4835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
4837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
4840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  from this string.  In place, the characters of @a __s are
4841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
4842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
4843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
4845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
4848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
4850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
4851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with multiple characters.
4855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
4856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters to insert.
4858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to insert.
4859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
4861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
4864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
4865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
4866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
4867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
4868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.
4869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
4872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
4873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
4874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string.
4877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String value to insert.
4880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 314


4882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
4885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
4886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the string doesn't change if an error is thrown.
4887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2, const basic_string& __str)
4890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
4891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with C substring.
4894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string value to insert.
4897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to insert.
4898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
4903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
4904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is
4905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
4906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s, size_type __n)
4909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= _M_iend());
4912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1, __s, __n);
4913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with C string.
4917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string value to insert.
4920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
4925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
4926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s)
4930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
4932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
4933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with multiple characters
4937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 315


4939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert.
4940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to insert.
4941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
4946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
4947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2, size_type __n, _CharT __c)
4951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= _M_iend());
4954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __c);
4955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with range.
4959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
4962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
4963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
4968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
4969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is
4970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
4971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
4973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string&
4974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         replace(iterator __i1, iterator __i2,
4975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
4976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
4977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   && __i2 <= _M_iend());
4979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
4980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
4981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
4982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
4983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Specializations for the common case of pointer and iterator:
4985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
4986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2, _CharT* __k1, _CharT* __k2)
4988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= _M_iend());
4991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
4992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
4993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1, __k2 - __k1);
4994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 316


4996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2,
4998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
4999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
5001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= _M_iend());
5002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
5003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
5004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1, __k2 - __k1);
5005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
5008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2)
5009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
5011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= _M_iend());
5012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
5013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
5014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1.base(), __k2 - __k1);
5015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
5018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2,
5019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
5020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
5022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= _M_iend());
5023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
5024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
5025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1.base(), __k2 - __k1);
5026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
5029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
5031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
5032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
5033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
5034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
5035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
5036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
5038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
5039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
5040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is
5041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
5042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string& replace(iterator __i1, iterator __i2,
5044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    initializer_list<_CharT> __l)
5045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.end()); }
5046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
5047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string_view.
5051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  The position to replace at.
5052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n    The number of characters to replace.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 317


5053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
5054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
5055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
5058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	replace(size_type __pos, size_type __n, const _Tp& __svt)
5059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__pos, __n, __sv.data(), __sv.size());
5062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string_view.
5066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  The position to replace at.
5067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1    The number of characters to replace.
5068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
5069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  The position in the string_view to insert from.
5070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2    The number of characters to insert.
5071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
5072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _If_sv<_Tp, basic_string&>
5075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         replace(size_type __pos1, size_type __n1, const _Tp& __svt,
5076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		size_type __pos2, size_type __n2 = npos)
5077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__pos1, __n1,
5080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      __sv.data()
5081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::replace"),
5082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n2));
5083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string_view.
5087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1    An iterator referencing the start position
5088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           to replace at.
5089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2    An iterator referencing the end position
5090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           for the replace.
5091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
5092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
5093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
5096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	replace(const_iterator __i1, const_iterator __i2, const _Tp& __svt)
5097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__i1 - begin(), __i2 - __i1, __sv);
5100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     private:
5104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _Integer>
5105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string&
5106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n,
5107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    _Integer __val, __true_type)
5108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __val); }
5109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 318


5110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
5111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string&
5112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1,
5113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    _InputIterator __k2, __false_type);
5114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
5116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
5117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     _CharT __c);
5118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
5120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_replace_safe(size_type __pos1, size_type __n1, const _CharT* __s,
5121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		      size_type __n2);
5122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _S_construct_aux is used to implement the 21.3.1 para 15 which
5124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // requires special behaviour if _InIter is an integral type
5125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InIterator>
5126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static _CharT*
5127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_construct_aux(_InIterator __beg, _InIterator __end,
5128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 const _Alloc& __a, __false_type)
5129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
5131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           return _S_construct(__beg, __end, __a, _Tag());
5132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
5135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
5136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _Integer>
5137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static _CharT*
5138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_construct_aux(_Integer __beg, _Integer __end,
5139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 const _Alloc& __a, __true_type)
5140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { return _S_construct_aux_2(static_cast<size_type>(__beg),
5141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				    __end, __a); }
5142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static _CharT*
5144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_construct_aux_2(size_type __req, _CharT __c, const _Alloc& __a)
5145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _S_construct(__req, __c, __a); }
5146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InIterator>
5148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static _CharT*
5149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a)
5150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
5152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return _S_construct_aux(__beg, __end, __a, _Integral());
5153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         }
5154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
5156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InIterator>
5157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static _CharT*
5158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****          _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a,
5159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		      input_iterator_tag);
5160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
5162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // string::iterator, _CharT*, etc.
5163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _FwdIterator>
5164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static _CharT*
5165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_construct(_FwdIterator __beg, _FwdIterator __end, const _Alloc& __a,
5166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     forward_iterator_tag);
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 319


5167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static _CharT*
5169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_construct(size_type __req, _CharT __c, const _Alloc& __a);
5170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
5172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Copy substring into C string.
5175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to copy value into.
5176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to copy.
5177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to copy.
5178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Number of characters actually copied
5179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
5180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
5182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
5183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.
5184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
5187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Swap contents with another string.
5190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  String to swap with.
5191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
5193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  time.
5194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
5196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       swap(basic_string& __s)
5197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(allocator_traits<_Alloc>::is_always_equal::value);
5198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // String operations:
5200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
5202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
5204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  happen.
5205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const _CharT*
5207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
5208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data(); }
5209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return const pointer to contents.
5212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This is a pointer to internal data.  It is undefined to modify
5214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the contents through the returned pointer. To get a pointer that
5215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  allows modifying the contents use @c &str[0] instead,
5216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  (or in C++17 the non-const @c str.data() overload).
5217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const _CharT*
5219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
5220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data(); }
5221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 320


5224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return non-const pointer to contents.
5225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This is a pointer to the character sequence held by the string.
5227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Modifying the characters in the sequence is allowed.
5228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _CharT*
5230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       data() noexcept
5231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_leak();
5233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data();
5234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
5236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
5239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       allocator_type
5241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
5242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
5243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a C substring.
5246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
5247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from.
5248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
5249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
5250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
5252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __n characters in @a __s within this string.  If found,
5253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it begins.  If not found, returns
5254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
5255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const
5258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
5259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a string.
5262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to locate.
5263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
5265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
5267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
5268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found, returns npos.
5269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
5272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
5274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a C string.
5277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
5278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
5280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 321


5281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
5282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __s within this string.  If found, returns the index where
5283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  it begins.  If not found, returns npos.
5284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
5287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
5289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
5290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character.
5294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
5295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
5299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
5300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
5301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
5304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a string_view.
5308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
5309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
5311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
5314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find(const _Tp& __svt, size_type __pos = 0) const
5315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find(__sv.data(), __pos, __sv.size());
5319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a string.
5324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to locate.
5325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of last occurrence.
5327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
5329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str within this string.  If found, returns the index where
5330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  it begins.  If not found, returns npos.
5331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
5334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
5336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 322


5338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a C substring.
5339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
5340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from.
5341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to search for.
5342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of last occurrence.
5343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
5345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __n characters in @a __s within this string.  If found,
5346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it begins.  If not found, returns
5347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
5348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const
5351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
5352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a C string.
5355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
5356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
5357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of  last occurrence.
5358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
5360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __s within this string.  If found, returns the index
5361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  where it begins.  If not found, returns npos.
5362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
5365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
5367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
5368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character.
5372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
5373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
5377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
5378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
5379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
5382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a string_view.
5386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
5387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of last occurrence.
5389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
5392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	rfind(const _Tp& __svt, size_type __pos = npos) const
5393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 323


5395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->rfind(__sv.data(), __pos, __sv.size());
5397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of string.
5402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to locate.
5403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __str within this string.  If found,
5408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
5409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
5410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
5413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
5415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of C substring.
5418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  String containing characters to locate.
5419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from.
5420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to search for.
5421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
5425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found, returns the index where it was found.  If not found,
5426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns npos.
5427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const
5430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
5431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of C string.
5434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  String containing characters to locate.
5435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __s within this string.  If found, returns
5440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
5444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
5447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
5448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 324


5452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
5453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for the character
5457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __c within this string.  If found, returns the index
5458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  where it was found.  If not found, returns npos.
5459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note: equivalent to find(__c, __pos).
5461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
5464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find(__c, __pos); }
5465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of a string_view.
5469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to locate.
5471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
5476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_first_of(const _Tp& __svt, size_type __pos = 0) const
5477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_first_of(__sv.data(), __pos, __sv.size());
5481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of string.
5486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to locate.
5487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __str within this string.  If found,
5492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
5493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
5494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
5497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
5499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of C substring.
5502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to locate.
5503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from.
5504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to search for.
5505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 325


5509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found, returns the index where it was found.  If not found,
5510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns npos.
5511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const
5514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
5515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of C string.
5518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to locate.
5519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __s within this string.  If found, returns
5524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
5528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
5531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
5532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character.
5536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
5537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
5541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
5542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
5543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
5545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
5548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->rfind(__c, __pos); }
5549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of string.
5553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to locate.
5555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
5560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_last_of(const _Tp& __svt, size_type __pos = npos) const
5561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_last_of(__sv.data(), __pos, __sv.size());
5565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 326


5566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in string.
5570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to avoid.
5571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
5575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
5576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  was found.  If not found, returns npos.
5577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
5580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
5582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in C substring.
5585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
5586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from.
5587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from __s to consider.
5588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
5591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  contained in the first @a __n characters of @a __s within
5592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
5593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
5594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
5597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			size_type __n) const _GLIBCXX_NOEXCEPT;
5598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in C string.
5601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
5602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
5606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  contained in @a __s within this string.  If found, returns
5607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
5611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
5614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
5615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a different character.
5619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to avoid.
5620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 327


5623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character
5624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  other than @a __c within this string.  If found, returns the
5625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  index where it was found.  If not found, returns npos.
5626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
5629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
5630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in a string_view.
5634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to avoid.
5636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
5639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
5641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_first_not_of(const _Tp& __svt, size_type __pos = 0) const
5642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_first_not_of(__sv.data(), __pos, __sv.size());
5646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in string.
5651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to avoid.
5652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character
5656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  not contained in @a __str within this string.  If found,
5657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
5658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
5659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
5662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
5664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in C substring.
5667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
5668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from.
5669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to consider.
5670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
5673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
5674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If found, returns the index where it was found.  If not found,
5675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns npos.
5676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
5679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		       size_type __n) const _GLIBCXX_NOEXCEPT;
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 328


5680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in C string.
5682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
5683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character
5687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  not contained in @a __s within this string.  If found,
5688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
5689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
5690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
5693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
5696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
5697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a different character.
5701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to avoid.
5702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
5706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
5707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
5708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
5711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
5712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in a string_view.
5716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to avoid.
5718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
5721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
5723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_last_not_of(const _Tp& __svt, size_type __pos = npos) const
5724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_last_not_of(__sv.data(), __pos, __sv.size());
5728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Get a substring.
5733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character (default 0).
5734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
5735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  The new string.
5736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 329


5737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Construct and return a new string using the @a __n
5739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a __pos.  If the string is too
5740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
5741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
5742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string
5744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
5745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return basic_string(*this,
5746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
5747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string.
5750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to compare against.
5751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
5754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
5755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
5756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length rlen of the strings to compare as the smallest of
5757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  size() and str.size().  The function then compares the two
5758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
5759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the result of the comparison is nonzero returns it,
5760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  otherwise the shorter one is ordered first.
5761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
5763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(const basic_string& __str) const
5764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __size = this->size();
5766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __osize = __str.size();
5767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __len = std::min(__size, __osize);
5768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
5770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (!__r)
5771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
5772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return __r;
5773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string_view.
5778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt An object convertible to string_view to compare against.
5779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
5781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, int>
5783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	compare(const _Tp& __svt) const
5784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   __sv_type __sv = __svt;
5787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const size_type __size = this->size();
5788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const size_type __osize = __sv.size();
5789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const size_type __len = std::min(__size, __osize);
5790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  int __r = traits_type::compare(_M_data(), __sv.data(), __len);
5792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  if (!__r)
5793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __r = _S_compare(__size, __osize);
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 330


5794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __r;
5795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string_view.
5799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  A position in the string to start comparing from.
5800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to compare.
5801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
5802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                against.
5803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
5805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, int>
5807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	compare(size_type __pos, size_type __n, const _Tp& __svt) const
5808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __sv_type(*this).substr(__pos, __n).compare(__sv);
5812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string_view.
5816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  A position in the string to start comparing from.
5817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  The number of characters to compare.
5818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt   An object convertible to string_view to compare
5819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                 against.
5820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  A position in the string_view to start comparing from.
5821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  The number of characters to compare.
5822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
5824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, int>
5826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	compare(size_type __pos1, size_type __n1, const _Tp& __svt,
5827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		size_type __pos2, size_type __n2 = npos) const
5828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __sv_type(*this)
5832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    .substr(__pos1, __n1).compare(__sv.substr(__pos2, __n2));
5833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring to a string.
5838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character of substring.
5839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters in substring.
5840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to compare against.
5841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n characters
5844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
5845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
5846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
5847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
5848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to compare as the smallest of the length of the substring
5849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  and @a __str.size().  The function then compares the two
5850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  strings by calling
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 331


5851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
5852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
5853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the shorter one is ordered first.
5854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
5856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
5857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring to a substring.
5860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Index of first character of substring.
5861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters in substring.
5862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to compare against.
5863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
5864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters in substring of str.
5865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n1
5868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
5869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
5870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
5871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
5872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
5873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
5874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  strings to compare as the smallest of the lengths of the
5875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  substrings.  The function then compares the two strings by
5876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  calling
5877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
5878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the result of the comparison is nonzero returns it,
5879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  otherwise the shorter one is ordered first.
5880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
5882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
5883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __pos2, size_type __n2 = npos) const;
5884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a C string.
5887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to compare against.
5888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
5891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
5892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
5893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  compare as the smallest of size() and the length of a string
5894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
5895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
5896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
5897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  ordered first.
5898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
5900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(const _CharT* __s) const _GLIBCXX_NOEXCEPT;
5901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
5903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 5 String::compare specification questionable
5904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring to a C string.
5906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character of substring.
5907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters in substring.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 332


5908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to compare against.
5909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n1
5912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
5913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
5914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
5915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
5916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  compare as the smallest of the length of the substring and
5917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the length of a string constructed from @a __s.  The
5918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  function then compares the two string by calling
5919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
5920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
5921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  one is ordered first.
5922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
5924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
5925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring against a character %array.
5928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character of substring.
5929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters in substring.
5930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  character %array to compare against.
5931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters of s.
5932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n1
5935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
5936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
5937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  if this substring is ordered before the string from @a __s,
5938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
5939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
5940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  effective length rlen of the strings to compare as the
5941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
5942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  function then compares the two strings by calling
5943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
5944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
5945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  one is ordered first.
5946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
5948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  no special meaning.
5949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
5951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
5952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __n2) const;
5953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus > 201703L
5955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
5956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       starts_with(basic_string_view<_CharT, _Traits> __x) const noexcept
5957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
5958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
5960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       starts_with(_CharT __x) const noexcept
5961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
5962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
5964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       starts_with(const _CharT* __x) const noexcept
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 333


5965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
5966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
5968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ends_with(basic_string_view<_CharT, _Traits> __x) const noexcept
5969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
5970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
5972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ends_with(_CharT __x) const noexcept
5973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
5974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
5976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ends_with(const _CharT* __x) const noexcept
5977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
5978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++20
5979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** # ifdef _GLIBCXX_TM_TS_INTERNAL
5981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       friend void
5982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ::_txnal_cow_string_C1_for_exceptions(void* that, const char* s,
5983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 					    void* exc);
5984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       friend const char*
5985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ::_txnal_cow_string_c_str(const void *that);
5986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       friend void
5987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ::_txnal_cow_string_D1(void *that);
5988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       friend void
5989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ::_txnal_cow_string_D1_commit(void *that);
5990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** # endif
5991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   };
5992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif  // !_GLIBCXX_USE_CXX11_ABI
5993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_deduction_guides >= 201606
5995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
5996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _InputIterator, typename _CharT
5997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	     = typename iterator_traits<_InputIterator>::value_type,
5998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
5999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   typename = _RequireInputIter<_InputIterator>,
6000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
6001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_string(_InputIterator, _InputIterator, _Allocator = _Allocator())
6002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       -> basic_string<_CharT, char_traits<_CharT>, _Allocator>;
6003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
6005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // 3075. basic_string needs deduction guides from basic_string_view
6006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits,
6007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
6008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
6009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_string(basic_string_view<_CharT, _Traits>, const _Allocator& = _Allocator())
6010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       -> basic_string<_CharT, _Traits, _Allocator>;
6011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits,
6013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
6014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
6015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_string(basic_string_view<_CharT, _Traits>,
6016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 typename basic_string<_CharT, _Traits, _Allocator>::size_type,
6017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 typename basic_string<_CharT, _Traits, _Allocator>::size_type,
6018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 const _Allocator& = _Allocator())
6019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       -> basic_string<_CharT, _Traits, _Allocator>;
6020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_END_NAMESPACE_CXX11
6021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 334


6022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // operator+
6024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Concatenate two strings.
6026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Last string.
6028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
6029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_string<_CharT, _Traits, _Alloc>
6032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     {
6035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
6036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       __str.append(__rhs);
6037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       return __str;
6038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     }
6039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Concatenate C string and string.
6042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Last string.
6044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
6045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
6048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(const _CharT* __lhs,
6049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const basic_string<_CharT,_Traits,_Alloc>& __rhs);
6050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Concatenate character and string.
6053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Last string.
6055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
6056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
6059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(_CharT __lhs, const basic_string<_CharT,_Traits,_Alloc>& __rhs);
6060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Concatenate string and C string.
6063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Last string.
6065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
6066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const _CharT* __rhs)
6071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     {
6072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
6073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       __str.append(__rhs);
6074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       return __str;
6075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     }
6076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Concatenate string and character.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 335


6079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Last string.
6081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
6082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)
6086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     {
6087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef basic_string<_CharT, _Traits, _Alloc>	__string_type;
6088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename __string_type::size_type		__size_type;
6089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       __string_type __str(__lhs);
6090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       __str.append(__size_type(1), __rhs);
6091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       return __str;
6092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     }
6093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
6095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
6100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
6106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     {
6112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_USE_CXX11_ABI
6113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       using _Alloc_traits = allocator_traits<_Alloc>;
6114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool __use_rhs = false;
6115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       if _GLIBCXX17_CONSTEXPR (typename _Alloc_traits::is_always_equal{})
6116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__use_rhs = true;
6117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       else if (__lhs.get_allocator() == __rhs.get_allocator())
6118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__use_rhs = true;
6119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       if (__use_rhs)
6120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
6121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
6122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const auto __size = __lhs.size() + __rhs.size();
6123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  if (__size > __lhs.capacity() && __size <= __rhs.capacity())
6124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    return std::move(__rhs.insert(0, __lhs));
6125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
6126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       return std::move(__lhs.append(__rhs));
6127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     }
6128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(const _CharT* __lhs,
6132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
6134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 336


6136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(_CharT __lhs,
6138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return std::move(__rhs.insert(0, 1, __lhs)); }
6140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const _CharT* __rhs)
6145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
6146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      _CharT __rhs)
6151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return std::move(__lhs.append(1, __rhs)); }
6152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
6153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // operator ==
6155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test equivalence of two strings.
6157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Second string.
6159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) == 0.  False otherwise.
6160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     _GLIBCXX_NOEXCEPT
6166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __lhs.compare(__rhs) == 0; }
6167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT>
6169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline
6170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, bool>::__type
6171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator==(const basic_string<_CharT>& __lhs,
 1882              		.loc 4 6171 5 view .LVU383
 1883              	.LVL115:
 1884              	.LBB2436:
6172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const basic_string<_CharT>& __rhs) _GLIBCXX_NOEXCEPT
6173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return (__lhs.size() == __rhs.size()
6174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      && !std::char_traits<_CharT>::compare(__lhs.data(), __rhs.data(),
 1885              		.loc 4 6174 8 is_stmt 0 view .LVU384
 1886 003a AB68     		ldr	r3, [r5, #8]
 1887 003c 9A42     		cmp	r2, r3
 1888 003e ECD1     		bne	.L81
 1889              	.LVL116:
 1890              	.LBB2437:
 1891              	.LBI2437:
 1892              		.file 20 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\char_trait
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // Character Traits for use by standard string and iostream -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // terms of the GNU General Public License as published by the
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 337


   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** /** @file bits/char_traits.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****  *  This is an internal header file, included by other library headers.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****  *  Do not attempt to use it directly. @headername{string}
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****  */
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** //
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // ISO C++ 14882: 21  Strings library
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** //
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifndef _CHAR_TRAITS_H
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #define _CHAR_TRAITS_H 1
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #pragma GCC system_header
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #include <bits/stl_algobase.h>  // std::copy, std::fill_n
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #include <bits/postypes.h>      // For streampos
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #include <cwchar>               // For WEOF, wmemmove, wmemset, etc.
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus > 201703L
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** # include <compare>
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifndef _GLIBCXX_ALWAYS_INLINE
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** # define _GLIBCXX_ALWAYS_INLINE inline __attribute__((__always_inline__))
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** {
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief  Mapping from character type to associated types.
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @note This is an implementation class for the generic version
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  of char_traits.  It defines int_type, off_type, pos_type, and
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  state_type.  By default these are unsigned long, streamoff,
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  streampos, and mbstate_t.  Users who need a different set of
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  types, but who don't need to change the definitions of any function
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  defined in char_traits, can specialize __gnu_cxx::_Char_types
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  while leaving __gnu_cxx::char_traits alone. */
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 338


  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     struct _Char_types
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef unsigned long   int_type;
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef std::streampos  pos_type;
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef std::streamoff  off_type;
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef std::mbstate_t  state_type;
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     };
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief  Base class used to implement std::char_traits.
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @note For any given actual character type, this definition is
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  probably wrong.  (Most of the member functions are likely to be
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  right, but the int_type and state_type typedefs, and the eof()
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  member function, are likely to be wrong.)  The reason this class
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  exists is so users can specialize it.  Classes in namespace std
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  may not be specialized for fundamental types, but classes in
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  namespace __gnu_cxx may be.
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.  
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    */
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     struct char_traits
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef _CharT                                    char_type;
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef typename _Char_types<_CharT>::int_type    int_type;
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef typename _Char_types<_CharT>::pos_type    pos_type;
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef typename _Char_types<_CharT>::off_type    off_type;
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef typename _Char_types<_CharT>::state_type  state_type;
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cpp_lib_three_way_comparison
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       using comparison_category = std::strong_ordering;
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX14_CONSTEXPR void
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       assign(char_type& __c1, const char_type& __c2)
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       eq(const char_type& __c1, const char_type& __c2)
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return __c1 == __c2; }
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       lt(const char_type& __c1, const char_type& __c2)
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return __c1 < __c2; }
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX14_CONSTEXPR int
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, std::size_t __n);
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX14_CONSTEXPR std::size_t
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       length(const char_type* __s);
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX14_CONSTEXPR const char_type*
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       find(const char_type* __s, std::size_t __n, const char_type& __a);
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 339


 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       move(char_type* __s1, const char_type* __s2, std::size_t __n);
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       copy(char_type* __s1, const char_type* __s2, std::size_t __n);
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       assign(char_type* __s, std::size_t __n, char_type __a);
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR char_type
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       to_char_type(const int_type& __c)
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return static_cast<char_type>(__c); }
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       to_int_type(const char_type& __c)
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return static_cast<int_type>(__c); }
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       eq_int_type(const int_type& __c1, const int_type& __c2)
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return __c1 == __c2; }
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       eof()
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return static_cast<int_type>(_GLIBCXX_STDIO_EOF); }
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       not_eof(const int_type& __c)
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return !eq_int_type(__c, eof()) ? __c : to_int_type(char_type()); }
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     };
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX14_CONSTEXPR int
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     compare(const char_type* __s1, const char_type* __s2, std::size_t __n)
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (lt(__s1[__i], __s2[__i]))
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return -1;
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	else if (lt(__s2[__i], __s1[__i]))
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 1;
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return 0;
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX14_CONSTEXPR std::size_t
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     length(const char_type* __p)
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       std::size_t __i = 0;
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       while (!eq(__p[__i], char_type()))
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****         ++__i;
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __i;
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX14_CONSTEXPR const typename char_traits<_CharT>::char_type*
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 340


 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     find(const char_type* __s, std::size_t __n, const char_type& __a)
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****         if (eq(__s[__i], __a))
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****           return __s + __i;
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return 0;
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX20_CONSTEXPR
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     typename char_traits<_CharT>::char_type*
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     move(char_type* __s1, const char_type* __s2, std::size_t __n)
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       if (__n == 0)
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return __s1;
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef __cpp_lib_is_constant_evaluated
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       if (std::is_constant_evaluated())
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	{
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  if (__s1 > __s2 && __s1 < __s2 + __n)
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    std::copy_backward(__s2, __s2 + __n, __s1);
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  else
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    std::copy(__s2, __s2 + __n, __s1);
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	}
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return static_cast<_CharT*>(__builtin_memmove(__s1, __s2,
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 						    __n * sizeof(char_type)));
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX20_CONSTEXPR
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     typename char_traits<_CharT>::char_type*
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     copy(char_type* __s1, const char_type* __s2, std::size_t __n)
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       // NB: Inline std::copy so no recursive dependencies.
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       std::copy(__s2, __s2 + __n, __s1);
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __s1;
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX20_CONSTEXPR
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     typename char_traits<_CharT>::char_type*
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     assign(char_type* __s, std::size_t __n, char_type __a)
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       // NB: Inline std::fill_n so no recursive dependencies.
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       std::fill_n(__s, __n, __a);
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __s;
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** _GLIBCXX_END_NAMESPACE_VERSION
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** } // namespace
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** {
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 341


 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus >= 201703L
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #define __cpp_lib_constexpr_char_traits 201611
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief Determine whether the characters of a NULL-terminated
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  string are known at compile time.
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @param  __s  The string.
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  Assumes that _CharT is a built-in character type.
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    */
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     static _GLIBCXX_ALWAYS_INLINE constexpr bool
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     __constant_string_p(const _CharT* __s)
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       (void) __s;
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       // In constexpr contexts all strings should be constant.
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __builtin_is_constant_evaluated();
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #else
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       while (__builtin_constant_p(*__s) && *__s)
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	__s++;
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __builtin_constant_p(*__s);
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief Determine whether the characters of a character array are
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  known at compile time.
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @param  __a  The character array.
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @param  __n  Number of characters.
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  Assumes that _CharT is a built-in character type.
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    */
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     static _GLIBCXX_ALWAYS_INLINE constexpr bool
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     __constant_char_array_p(const _CharT* __a, size_t __n)
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       (void) __a;
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       (void) __n;
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       // In constexpr contexts all character arrays should be constant.
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __builtin_is_constant_evaluated();
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #else
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       size_t __i = 0;
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       while (__i < __n && __builtin_constant_p(__a[__i]))
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	__i++;
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __i == __n;
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   // 21.1
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief  Basis for explicit traits specializations.
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 342


 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @note  For any given actual character type, this definition is
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  probably wrong.  Since this is just a thin wrapper around
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  __gnu_cxx::char_traits, it is possible to achieve a more
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  appropriate definition by specializing __gnu_cxx::char_traits.
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   */
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<class _CharT>
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     struct char_traits : public __gnu_cxx::char_traits<_CharT>
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     { };
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /// 21.1.3.1  char_traits specializations
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<>
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     struct char_traits<char>
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef char              char_type;
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef int               int_type;
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef streampos         pos_type;
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef streamoff         off_type;
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef mbstate_t         state_type;
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cpp_lib_three_way_comparison
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       using comparison_category = strong_ordering;
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX17_CONSTEXPR void
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       assign(char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       eq(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return __c1 == __c2; }
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	// LWG 467.
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return (static_cast<unsigned char>(__c1)
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 		< static_cast<unsigned char>(__c2));
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX17_CONSTEXPR int
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, size_t __n)
 1893              		.loc 20 337 7 is_stmt 1 view .LVU385
 1894              	.LBB2438:
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__n == 0)
 1895              		.loc 20 339 2 view .LVU386
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus >= 201703L
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__builtin_constant_p(__n)
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    && __constant_char_array_p(__s1, __n)
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    && __constant_char_array_p(__s2, __n))
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::compare(__s1, __s2, __n);
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 343


 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return __builtin_memcmp(__s1, __s2, __n);
 1896              		.loc 20 347 2 view .LVU387
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 1897              		.loc 20 339 2 is_stmt 0 view .LVU388
 1898 0040 32B1     		cbz	r2, .L79
 1899              		.loc 20 347 25 view .LVU389
 1900 0042 6968     		ldr	r1, [r5, #4]
 1901 0044 DAF80000 		ldr	r0, [r10]
 1902 0048 FFF7FEFF 		bl	memcmp
 1903              	.LVL117:
 1904              		.loc 20 347 25 view .LVU390
 1905              	.LBE2438:
 1906              	.LBE2437:
 1907              		.loc 4 6174 8 view .LVU391
 1908 004c 0028     		cmp	r0, #0
 1909 004e E4D1     		bne	.L81
 1910              	.LVL118:
 1911              	.L79:
 1912              		.loc 4 6174 8 view .LVU392
 1913              	.LBE2436:
 1914              	.LBE2435:
 1915              	.LBE2434:
 1916              	.LBE2433:
 1917              	.LBE2432:
 1918              	.LBE2439:
 1919              	.LBE2449:
 1920              	.LBE2426:
1588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 1921              		.loc 2 1588 5 view .LVU393
 1922 0050 3046     		mov	r0, r6
 1923 0052 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1924              	.LVL119:
 1925              	.L83:
1575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 1926              		.loc 2 1575 9 view .LVU394
 1927 0056 2646     		mov	r6, r4
 1928              	.LVL120:
1588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 1929              		.loc 2 1588 5 view .LVU395
 1930 0058 3046     		mov	r0, r6
 1931 005a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1932              	.LVL121:
 1933              	.L95:
1575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 1934              		.loc 2 1575 9 view .LVU396
 1935 005e 0026     		movs	r6, #0
 1936              	.LVL122:
1588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 1937              		.loc 2 1588 5 view .LVU397
 1938 0060 3046     		mov	r0, r6
 1939 0062 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
1588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 1940              		.loc 2 1588 5 view .LVU398
 1941              		.cfi_endproc
 1942              	.LFE5173:
 1944 0066 00BF     		.section	.rodata._ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5
 1945              		.align	2
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 344


 1946              	.LC1:
 1947 0000 62617369 		.ascii	"basic_string::_M_construct null not valid\000"
 1947      635F7374 
 1947      72696E67 
 1947      3A3A5F4D 
 1947      5F636F6E 
 1948              		.section	.text._ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_i
 1949              		.align	1
 1950              		.p2align 2,,3
 1951              		.weak	_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESaIS8_EN
 1952              		.syntax unified
 1953              		.thumb
 1954              		.thumb_func
 1955              		.fpu fpv5-d16
 1957              	_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESaIS8_ENSt8__de
 1958              	.LVL123:
 1959              	.LFB5029:
1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 1960              		.loc 2 1015 7 is_stmt 1 view -0
 1961              		.cfi_startproc
 1962              		@ args = 24, pretend = 0, frame = 16
 1963              		@ frame_needed = 0, uses_anonymous_args = 0
1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 1964              		.loc 2 1015 7 is_stmt 0 view .LVU400
 1965 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1966              		.cfi_def_cfa_offset 36
 1967              		.cfi_offset 4, -36
 1968              		.cfi_offset 5, -32
 1969              		.cfi_offset 6, -28
 1970              		.cfi_offset 7, -24
 1971              		.cfi_offset 8, -20
 1972              		.cfi_offset 9, -16
 1973              		.cfi_offset 10, -12
 1974              		.cfi_offset 11, -8
 1975              		.cfi_offset 14, -4
 1976 0004 9146     		mov	r9, r2
 1977              	.LBB2691:
 1978              	.LBB2692:
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { }
 1979              		.loc 2 446 42 view .LVU401
 1980 0006 00F11802 		add	r2, r0, #24
 1981              	.LVL124:
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { }
 1982              		.loc 2 446 42 view .LVU402
 1983              	.LBE2692:
 1984              	.LBE2691:
1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 1985              		.loc 2 1015 7 view .LVU403
 1986 000a 0D46     		mov	r5, r1
 1987              	.LBB2717:
 1988              	.LBB2713:
 1989              	.LBB2693:
 1990              	.LBB2694:
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 1991              		.loc 3 218 41 view .LVU404
 1992 000c 0027     		movs	r7, #0
 1993              	.LBE2694:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 345


 1994              	.LBE2693:
 1995              	.LBE2713:
 1996              	.LBE2717:
1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 1997              		.loc 2 1015 7 view .LVU405
 1998 000e 0446     		mov	r4, r0
 1999              	.LVL125:
1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 2000              		.loc 2 1015 7 view .LVU406
 2001 0010 2DED028B 		vpush.64	{d8}
 2002              		.cfi_def_cfa_offset 44
 2003              		.cfi_offset 80, -44
 2004              		.cfi_offset 81, -40
 2005 0014 87B0     		sub	sp, sp, #28
 2006              		.cfi_def_cfa_offset 72
 2007              	.LVL126:
 2008              	.LBB2718:
 2009              	.LBI2691:
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const _Equal& __eq, const _ExtractKey& __exk,
 2010              		.loc 2 442 7 is_stmt 1 view .LVU407
 2011              	.LBB2714:
 2012              	.LBB2695:
 2013              	.LBI2695:
1792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		    const _Hash& __hash, const _Equal& __eq)
 2014              		.loc 3 1792 5 view .LVU408
 2015              	.LBB2696:
 2016              	.LBI2696:
1369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      const _H1& __h1, const _H2& __h2,
 2017              		.loc 3 1369 7 view .LVU409
 2018              	.LBB2697:
 2019              	.LBI2697:
1115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	: _Tp(std::forward<_OtherTp>(__tp))
 2020              		.loc 3 1115 2 view .LVU410
1115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	: _Tp(std::forward<_OtherTp>(__tp))
 2021              		.loc 3 1115 2 is_stmt 0 view .LVU411
 2022              	.LBE2697:
 2023              	.LBB2698:
 2024              	.LBI2698:
1115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	: _Tp(std::forward<_OtherTp>(__tp))
 2025              		.loc 3 1115 2 is_stmt 1 view .LVU412
1115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	: _Tp(std::forward<_OtherTp>(__tp))
 2026              		.loc 3 1115 2 is_stmt 0 view .LVU413
 2027              	.LBE2698:
 2028              	.LBB2699:
 2029              	.LBI2699:
1115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	: _Tp(std::forward<_OtherTp>(__tp))
 2030              		.loc 3 1115 2 is_stmt 1 view .LVU414
1115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	: _Tp(std::forward<_OtherTp>(__tp))
 2031              		.loc 3 1115 2 is_stmt 0 view .LVU415
 2032              	.LBE2699:
 2033              	.LBE2696:
 2034              	.LBB2700:
 2035              	.LBI2700:
1115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	: _Tp(std::forward<_OtherTp>(__tp))
 2036              		.loc 3 1115 2 is_stmt 1 view .LVU416
1115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	: _Tp(std::forward<_OtherTp>(__tp))
 2037              		.loc 3 1115 2 is_stmt 0 view .LVU417
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 346


 2038              	.LBE2700:
 2039              	.LBE2695:
 2040              	.LBB2701:
 2041              	.LBI2701:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 2042              		.loc 8 157 2 is_stmt 1 view .LVU418
 2043              	.LBB2702:
 2044              	.LBI2702:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2045              		.loc 6 79 7 view .LVU419
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2046              		.loc 6 79 7 is_stmt 0 view .LVU420
 2047              	.LBE2702:
 2048              	.LBE2701:
 2049              	.LBB2703:
 2050              	.LBI2703:
1987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	: __ebo_node_alloc(std::forward<_Alloc>(__a))
 2051              		.loc 3 1987 2 is_stmt 1 view .LVU421
 2052              	.LBB2704:
 2053              	.LBI2704:
1115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	: _Tp(std::forward<_OtherTp>(__tp))
 2054              		.loc 3 1115 2 view .LVU422
 2055              	.LBB2705:
 2056              	.LBI2705:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 2057              		.loc 8 147 7 view .LVU423
 2058              	.LBB2706:
 2059              	.LBI2706:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2060              		.loc 6 82 7 view .LVU424
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2061              		.loc 6 82 7 is_stmt 0 view .LVU425
 2062              	.LBE2706:
 2063              	.LBE2705:
 2064              	.LBE2704:
 2065              	.LBE2703:
 2066              	.LBB2707:
 2067              	.LBI2707:
 2068              		.loc 8 162 7 is_stmt 1 view .LVU426
 2069              	.LBB2708:
 2070              	.LBI2708:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2071              		.loc 6 89 7 view .LVU427
 2072              	.LBE2708:
 2073              	.LBE2707:
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { }
 2074              		.loc 2 446 42 is_stmt 0 view .LVU428
 2075 0016 0260     		str	r2, [r0]
 2076 0018 0392     		str	r2, [sp, #12]
 2077              	.LBE2714:
 2078              	.LBE2718:
 2079              	.LBB2719:
 2080              	.LBB2720:
 2081              	.LBB2721:
 2082              	.LBB2722:
 2083              	.LBB2723:
 2084              	.LBB2724:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 347


 2085              		.file 21 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_iterat
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // Functions used by iterators -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * Copyright (c) 1996-1998
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * representations about the suitability of this software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** /** @file bits/stl_iterator_base_funcs.h
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  *  Do not attempt to use it directly. @headername{iterator}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  *
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  *  This file contains all of the general iterator-related utility
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  *  functions, such as distance() and advance().
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 348


  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  */
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** #ifndef _STL_ITERATOR_BASE_FUNCS_H
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** #define _STL_ITERATOR_BASE_FUNCS_H 1
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** #pragma GCC system_header
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** #include <bits/concept_check.h>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** #include <debug/assertions.h>
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** {
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   // Forward declaration for the overloads of __distance.
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   template <typename> struct _List_iterator;
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   template <typename> struct _List_const_iterator;
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** _GLIBCXX_END_NAMESPACE_CONTAINER
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   template<typename _InputIterator>
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     inline _GLIBCXX14_CONSTEXPR
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     typename iterator_traits<_InputIterator>::difference_type
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     __distance(_InputIterator __first, _InputIterator __last,
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****                input_iterator_tag)
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     {
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       // concept requirements
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       typename iterator_traits<_InputIterator>::difference_type __n = 0;
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       while (__first != __last)
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	{
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	  ++__first;
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	  ++__n;
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	}
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       return __n;
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     }
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   template<typename _RandomAccessIterator>
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     inline _GLIBCXX14_CONSTEXPR
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     typename iterator_traits<_RandomAccessIterator>::difference_type
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****                random_access_iterator_tag)
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     {
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       // concept requirements
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       __glibcxx_function_requires(_RandomAccessIteratorConcept<
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 				  _RandomAccessIterator>)
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       return __last - __first;
 2086              		.loc 21 104 21 view .LVU429
 2087 001a A9EB0102 		sub	r2, r9, r1
 2088              		.loc 21 104 23 view .LVU430
 2089 001e 9349     		ldr	r1, .L155
 2090              	.LVL127:
 2091              		.loc 21 104 23 view .LVU431
 2092 0020 9210     		asrs	r2, r2, #2
 2093 0022 02FB01F1 		mul	r1, r2, r1
 2094              	.LBE2724:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 349


 2095              	.LBE2723:
 2096              	.LBE2722:
 2097              	.LBE2721:
 2098              	.LBE2720:
1026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    std::max(_M_rehash_policy._M_bkt_for_elements(__nb_elems),
 2099              		.loc 2 1026 32 view .LVU432
 2100 0026 9942     		cmp	r1, r3
 2101 0028 38BF     		it	cc
 2102 002a 1946     		movcc	r1, r3
 2103              	.LBE2719:
 2104              	.LBB3119:
 2105              	.LBB2715:
 2106              	.LBB2709:
 2107              	.LBB2710:
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 2108              		.loc 3 450 48 view .LVU433
 2109 002c 4FF07E53 		mov	r3, #1065353216
 2110              	.LVL128:
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 2111              		.loc 3 450 48 view .LVU434
 2112 0030 0361     		str	r3, [r0, #16]	@ float
 2113              	.LBE2710:
 2114              	.LBE2709:
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { }
 2115              		.loc 2 446 42 view .LVU435
 2116 0032 0123     		movs	r3, #1
 2117 0034 4360     		str	r3, [r0, #4]
 2118              	.LVL129:
 2119              	.LBB2711:
 2120              	.LBI2693:
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 2121              		.loc 3 218 5 is_stmt 1 view .LVU436
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 2122              		.loc 3 218 5 is_stmt 0 view .LVU437
 2123              	.LBE2711:
 2124              	.LBB2712:
 2125              	.LBI2709:
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : _M_max_load_factor(__z), _M_next_resize(0) { }
 2126              		.loc 3 449 5 is_stmt 1 view .LVU438
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : _M_max_load_factor(__z), _M_next_resize(0) { }
 2127              		.loc 3 449 5 is_stmt 0 view .LVU439
 2128              	.LBE2712:
 2129              	.LBE2715:
 2130              	.LBE3119:
 2131              	.LBB3120:
 2132              	.LBB2728:
 2133              	.LBI2720:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return __distance_fw(__first, __last,
 2134              		.loc 3 76 5 is_stmt 1 view .LVU440
 2135              	.LBB2727:
 2136              	.LBI2721:
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		  std::forward_iterator_tag)
 2137              		.loc 3 70 5 view .LVU441
 2138              	.LBB2726:
 2139              	.LBI2722:
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     }
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 350


 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** #if _GLIBCXX_USE_CXX11_ABI
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   // Forward declaration because of the qualified call in distance.
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   template<typename _Tp>
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     ptrdiff_t
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     __distance(_GLIBCXX_STD_C::_List_iterator<_Tp>,
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	       _GLIBCXX_STD_C::_List_iterator<_Tp>,
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	       input_iterator_tag);
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   template<typename _Tp>
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     ptrdiff_t
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     __distance(_GLIBCXX_STD_C::_List_const_iterator<_Tp>,
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	       _GLIBCXX_STD_C::_List_const_iterator<_Tp>,
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	       input_iterator_tag);
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** #endif
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   /**
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  @brief A generalization of pointer arithmetic.
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  @param  __first  An input iterator.
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  @param  __last  An input iterator.
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  @return  The distance between them.
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  Returns @c n such that __first + n == __last.  This requires
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  that @p __last must be reachable from @p __first.  Note that @c
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  n may be negative.
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  For random access iterators, this uses their @c + and @c - operations
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  and are constant time.  For other %iterator classes they are linear time.
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   */
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   template<typename _InputIterator>
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     inline _GLIBCXX17_CONSTEXPR
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     typename iterator_traits<_InputIterator>::difference_type
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     distance(_InputIterator __first, _InputIterator __last)
 2140              		.loc 21 138 5 view .LVU442
 2141              	.LBB2725:
 2142              	.LBI2723:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****                random_access_iterator_tag)
 2143              		.loc 21 98 5 view .LVU443
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****                random_access_iterator_tag)
 2144              		.loc 21 98 5 is_stmt 0 view .LVU444
 2145              	.LBE2725:
 2146              	.LBE2726:
 2147              	.LBE2727:
 2148              	.LBE2728:
1026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    std::max(_M_rehash_policy._M_bkt_for_elements(__nb_elems),
 2149              		.loc 2 1026 32 view .LVU445
 2150 0036 00F11003 		add	r3, r0, #16
 2151              	.LBE3120:
 2152              	.LBB3121:
 2153              	.LBB2716:
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { }
 2154              		.loc 2 446 42 view .LVU446
 2155 003a C0E90277 		strd	r7, r7, [r0, #8]
 2156 003e C0E90577 		strd	r7, r7, [r0, #20]
 2157              	.LBE2716:
 2158              	.LBE3121:
 2159              	.LBB3122:
1026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    std::max(_M_rehash_policy._M_bkt_for_elements(__nb_elems),
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 351


 2160              		.loc 2 1026 32 view .LVU447
 2161 0042 1846     		mov	r0, r3
 2162              	.LVL130:
1026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    std::max(_M_rehash_policy._M_bkt_for_elements(__nb_elems),
 2163              		.loc 2 1026 32 view .LVU448
 2164 0044 08EE103A 		vmov	s16, r3	@ int
 2165              	.LVL131:
 2166              	.LBB2729:
 2167              	.LBI2729:
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return __builtin_ceill(__n / (long double)_M_max_load_factor); }
 2168              		.loc 3 462 5 is_stmt 1 view .LVU449
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return __builtin_ceill(__n / (long double)_M_max_load_factor); }
 2169              		.loc 3 462 5 is_stmt 0 view .LVU450
 2170              	.LBE2729:
 2171              	.LBE3122:
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 2172              		.loc 3 463 7 is_stmt 1 view .LVU451
 2173              	.LBB3123:
 2174              	.LBB2730:
 2175              	.LBI2730:
 2176              		.file 22 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_algoba
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 352


  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Copyright (c) 1996-1998
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * representations about the suitability of this software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** /** @file bits/stl_algobase.h
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/c++config.h>
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/functexcept.h>
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <ext/type_traits.h>
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <ext/numeric_traits.h>
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_pair.h>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_iterator.h>
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/concept_check.h>
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <debug/debug.h>
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/move.h> // For std::swap
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/predefined_ops.h>
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** # include <type_traits>
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus > 201703L
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** # include <compare>
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** {
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /*
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    * A constexpr wrapper for __builtin_memcmp.
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    * @param __num The number of elements of type _Tp (not bytes).
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    */
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Up>
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline int
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __memcmp(const _Tp* __first1, const _Up* __first2, size_t __num)
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       static_assert(sizeof(_Tp) == sizeof(_Up), "can be compared with memcmp");
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 353


  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (std::is_constant_evaluated())
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for(; __num > 0; ++__first1, ++__first2, --__num)
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    if (*__first1 != *__first2)
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      return *__first1 < *__first2 ? -1 : 1;
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return 0;
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       else
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __builtin_memcmp(__first1, __first2, sizeof(_Tp) * __num);
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus < 201103L
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _BoolType>
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __iter_swap
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static void
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  typedef typename iterator_traits<_ForwardIterator1>::value_type
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    _ValueType1;
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  _ValueType1 __tmp = *__a;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  *__a = *__b;
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  *__b = __tmp;
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<>
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __iter_swap<true>
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static void
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  swap(*__a, *__b);
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif // C++03
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  An iterator.
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another iterator.
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   Nothing.
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  iterators themselves.
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 354


 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline void
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator1>)
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator2>)
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus < 201103L
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ValueType1;
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ValueType2;
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ValueType2>)
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ValueType1>)
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ReferenceType1;
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ReferenceType2;
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	iter_swap(__a, __b);
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #else
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // 187. iter_swap underspecified
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       swap(*__a, *__b);
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first1  A forward iterator.
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __last1   A forward iterator.
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first2  A forward iterator.
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  The ranges must not overlap.
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _ForwardIterator2
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		_ForwardIterator2 __first2)
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator1>)
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 355


 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator2>)
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       for (; __first1 != __last1; ++__first1, (void)++__first2)
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __first2;
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The lesser of the parameters.
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  preprocessor macro.
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp>
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline const _Tp&
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       //return __b < __a ? __b : __a;
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__b < __a)
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __a;
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The greater of the parameters.
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  preprocessor macro.
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp>
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline const _Tp&
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b)
 2177              		.loc 22 254 5 view .LVU452
 2178              		.loc 22 254 5 is_stmt 0 view .LVU453
 2179              	.LBE2730:
1026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    std::max(_M_rehash_policy._M_bkt_for_elements(__nb_elems),
 2180              		.loc 2 1026 32 view .LVU454
 2181 0048 FFF7FEFF 		bl	_ZNKSt8__detail20_Prime_rehash_policy11_M_next_bktEj
 2182              	.LVL132:
1030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
 2183              		.loc 2 1030 2 view .LVU455
 2184 004c 6368     		ldr	r3, [r4, #4]
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 356


 2185 004e 8342     		cmp	r3, r0
 2186 0050 13D2     		bcs	.L97
 2187              	.LBB2731:
 2188              	.LBB2732:
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
 2189              		.loc 2 392 2 view .LVU456
 2190 0052 0128     		cmp	r0, #1
 2191 0054 0646     		mov	r6, r0
 2192              	.LVL133:
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
 2193              		.loc 2 392 2 view .LVU457
 2194              	.LBE2732:
 2195              	.LBI2731:
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 2196              		.loc 2 390 7 is_stmt 1 view .LVU458
 2197              	.LBB2750:
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
 2198              		.loc 2 392 2 is_stmt 0 view .LVU459
 2199 0056 00F0FB80 		beq	.L148
 2200              	.LVL134:
 2201              	.LBB2733:
 2202              	.LBI2733:
2081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 2203              		.loc 3 2081 5 is_stmt 1 view .LVU460
 2204              	.LBB2734:
 2205              	.LBB2735:
 2206              	.LBI2735:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 2207              		.loc 8 157 2 view .LVU461
 2208              	.LBB2736:
 2209              	.LBI2736:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2210              		.loc 6 79 7 view .LVU462
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2211              		.loc 6 79 7 is_stmt 0 view .LVU463
 2212              	.LBE2736:
 2213              	.LBE2735:
 2214              	.LBB2737:
 2215              	.LBI2737:
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 2216              		.loc 5 459 7 is_stmt 1 view .LVU464
 2217              	.LBB2738:
 2218              	.LBI2738:
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2219              		.loc 6 103 7 view .LVU465
 2220              	.LBB2739:
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  std::__throw_bad_alloc();
 2221              		.loc 6 105 2 is_stmt 0 view .LVU466
 2222 005a B0F1005F 		cmp	r0, #536870912
 2223 005e 80F0FF80 		bcs	.L113
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 2224              		.loc 6 115 41 view .LVU467
 2225 0062 8200     		lsls	r2, r0, #2
 2226 0064 1046     		mov	r0, r2
 2227              	.LVL135:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 2228              		.loc 6 115 41 view .LVU468
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 357


 2229 0066 0292     		str	r2, [sp, #8]
 2230 0068 FFF7FEFF 		bl	_Znwj
 2231              	.LVL136:
 2232              	.LBE2739:
 2233              	.LBE2738:
 2234              	.LBE2737:
2087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return __p;
 2235              		.loc 3 2087 23 view .LVU469
 2236 006c 3946     		mov	r1, r7
 2237 006e 029A     		ldr	r2, [sp, #8]
 2238              	.LBB2744:
 2239              	.LBB2742:
 2240              	.LBB2740:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 2241              		.loc 6 115 41 view .LVU470
 2242 0070 0746     		mov	r7, r0
 2243              	.LVL137:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 2244              		.loc 6 115 41 view .LVU471
 2245              	.LBE2740:
 2246              	.LBE2742:
 2247              	.LBE2744:
2087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return __p;
 2248              		.loc 3 2087 23 view .LVU472
 2249 0072 FFF7FEFF 		bl	memset
 2250              	.LVL138:
 2251              	.LBB2745:
 2252              	.LBI2745:
 2253              		.loc 8 162 7 is_stmt 1 view .LVU473
 2254              	.LBB2746:
 2255              	.LBI2746:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2256              		.loc 6 89 7 view .LVU474
 2257              	.L99:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2258              		.loc 6 89 7 is_stmt 0 view .LVU475
 2259              	.LBE2746:
 2260              	.LBE2745:
 2261              	.LBE2734:
 2262              	.LBE2733:
 2263              	.LBE2750:
 2264              	.LBE2731:
1033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
 2265              		.loc 2 1033 22 view .LVU476
 2266 0076 C4E90076 		strd	r7, r6, [r4]
 2267              	.LVL139:
 2268              	.L97:
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  this->insert(*__f);
 2269              		.loc 2 1036 13 is_stmt 1 discriminator 2 view .LVU477
 2270 007a 4D45     		cmp	r5, r9
 2271 007c 05D1     		bne	.L101
 2272 007e 62E0     		b	.L131
 2273              	.LVL140:
 2274              	.L149:
 2275              	.LBB2753:
 2276              	.LBB2754:
 2277              	.LBB2755:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 358


 2278              	.LBB2756:
 2279              	.LBB2757:
1810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return { iterator(__node), false };
 2280              		.loc 2 1810 2 is_stmt 0 view .LVU478
 2281 0080 0368     		ldr	r3, [r0]
 2282 0082 ABB1     		cbz	r3, .L102
 2283              	.LVL141:
1810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return { iterator(__node), false };
 2284              		.loc 2 1810 2 view .LVU479
 2285              	.LBE2757:
 2286              	.LBE2756:
 2287              	.LBE2755:
 2288              	.LBE2754:
 2289              	.LBE2753:
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  this->insert(*__f);
 2290              		.loc 2 1036 2 is_stmt 1 view .LVU480
 2291 0084 1C35     		adds	r5, r5, #28
 2292              	.LVL142:
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  this->insert(*__f);
 2293              		.loc 2 1036 13 view .LVU481
 2294 0086 A945     		cmp	r9, r5
 2295 0088 5DD0     		beq	.L131
 2296              	.LVL143:
 2297              	.L101:
 2298              	.LBB3107:
 2299              	.LBI2753:
 836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
 2300              		.loc 3 836 7 view .LVU482
 2301              	.LBB3097:
 2302              	.LBB3086:
 2303              	.LBI3086:
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_h(__h) { }
 2304              		.loc 3 161 7 view .LVU483
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_h(__h) { }
 2305              		.loc 3 161 7 is_stmt 0 view .LVU484
 2306              	.LBE3086:
 2307              	.LBB3087:
 2308              	.LBI2755:
1800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 2309              		.loc 2 1800 7 is_stmt 1 view .LVU485
 2310              	.LBB3076:
 2311              	.LBB2762:
 2312              	.LBI2762:
1375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
 2313              		.loc 3 1375 7 view .LVU486
 2314              	.LBB2763:
 2315              	.LBI2763:
6175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 						    __lhs.size())); }
6176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test equivalence of string and C string.
6179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  String.
6180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  C string.
6181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) == 0.  False otherwise.
6182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 359


6185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const _CharT* __rhs)
6187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __lhs.compare(__rhs) == 0; }
6188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_lib_three_way_comparison
6190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Three-way comparison of a string and a C string.
6192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  A string.
6193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  A null-terminated string.
6194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  A value indicating whether `__lhs` is less than, equal to,
6195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *	       greater than, or incomparable with `__rhs`.
6196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline auto
6199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator<=>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		const basic_string<_CharT, _Traits, _Alloc>& __rhs) noexcept
6201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     -> decltype(__detail::__char_traits_cmp_cat<_Traits>(0))
6202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __detail::__char_traits_cmp_cat<_Traits>(__lhs.compare(__rhs)); }
6203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Three-way comparison of a string and a C string.
6206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  A string.
6207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  A null-terminated string.
6208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  A value indicating whether `__lhs` is less than, equal to,
6209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *	       greater than, or incomparable with `__rhs`.
6210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline auto
6213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator<=>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		const _CharT* __rhs) noexcept
6215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     -> decltype(__detail::__char_traits_cmp_cat<_Traits>(0))
6216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __detail::__char_traits_cmp_cat<_Traits>(__lhs.compare(__rhs)); }
6217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
6218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test equivalence of C string and string.
6220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  C string.
6221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  String.
6222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __rhs.compare(@a __lhs) == 0.  False otherwise.
6223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator==(const _CharT* __lhs,
6227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __rhs.compare(__lhs) == 0; }
6229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // operator !=
6231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test difference of two strings.
6233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Second string.
6235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) != 0.  False otherwise.
6236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     _GLIBCXX_NOEXCEPT
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 360


6242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return !(__lhs == __rhs); }
6243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test difference of C string and string.
6246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  C string.
6247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  String.
6248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __rhs.compare(@a __lhs) != 0.  False otherwise.
6249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator!=(const _CharT* __lhs,
6253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return !(__lhs == __rhs); }
6255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test difference of string and C string.
6258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  String.
6259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  C string.
6260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) != 0.  False otherwise.
6261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const _CharT* __rhs)
6266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return !(__lhs == __rhs); }
6267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // operator <
6269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test if string precedes string.
6271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Second string.
6273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
6274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     _GLIBCXX_NOEXCEPT
6280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __lhs.compare(__rhs) < 0; }
6281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test if string precedes C string.
6284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  String.
6285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  C string.
6286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
6287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const _CharT* __rhs)
6292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __lhs.compare(__rhs) < 0; }
6293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test if C string precedes string.
6296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  C string.
6297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  String.
6298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 361


6299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator<(const _CharT* __lhs,
6303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __rhs.compare(__lhs) > 0; }
6305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // operator >
6307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test if string follows string.
6309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Second string.
6311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs follows @a __rhs.  False otherwise.
6312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     _GLIBCXX_NOEXCEPT
6318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __lhs.compare(__rhs) > 0; }
6319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test if string follows C string.
6322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  String.
6323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  C string.
6324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs follows @a __rhs.  False otherwise.
6325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const _CharT* __rhs)
6330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __lhs.compare(__rhs) > 0; }
6331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test if C string follows string.
6334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  C string.
6335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  String.
6336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs follows @a __rhs.  False otherwise.
6337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator>(const _CharT* __lhs,
6341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __rhs.compare(__lhs) < 0; }
6343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // operator <=
6345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test if string doesn't follow string.
6347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Second string.
6349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs doesn't follow @a __rhs.  False otherwise.
6350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator<=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     _GLIBCXX_NOEXCEPT
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 362


6356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __lhs.compare(__rhs) <= 0; }
6357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test if string doesn't follow C string.
6360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  String.
6361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  C string.
6362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs doesn't follow @a __rhs.  False otherwise.
6363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator<=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const _CharT* __rhs)
6368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __lhs.compare(__rhs) <= 0; }
6369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test if C string doesn't follow string.
6372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  C string.
6373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  String.
6374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs doesn't follow @a __rhs.  False otherwise.
6375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator<=(const _CharT* __lhs,
6379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __rhs.compare(__lhs) >= 0; }
6381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // operator >=
6383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test if string doesn't precede string.
6385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Second string.
6387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs doesn't precede @a __rhs.  False otherwise.
6388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator>=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     _GLIBCXX_NOEXCEPT
6394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __lhs.compare(__rhs) >= 0; }
6395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test if string doesn't precede C string.
6398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  String.
6399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  C string.
6400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs doesn't precede @a __rhs.  False otherwise.
6401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator>=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const _CharT* __rhs)
6406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __lhs.compare(__rhs) >= 0; }
6407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test if C string doesn't precede string.
6410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  C string.
6411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  String.
6412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs doesn't precede @a __rhs.  False otherwise.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 363


6413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator>=(const _CharT* __lhs,
6417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	     const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __rhs.compare(__lhs) <= 0; }
6419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // three-way comparison
6420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Swap contents of two strings.
6423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Second string.
6425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
6426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Exchanges the contents of @a __lhs and @a __rhs in constant time.
6427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline void
6430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     swap(basic_string<_CharT, _Traits, _Alloc>& __lhs,
6431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	 basic_string<_CharT, _Traits, _Alloc>& __rhs)
6432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     _GLIBCXX_NOEXCEPT_IF(noexcept(__lhs.swap(__rhs)))
6433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { __lhs.swap(__rhs); }
6434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Read stream into a string.
6438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __is  Input stream.
6439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __str  Buffer to store into.
6440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  Reference to the input stream.
6441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
6442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Stores characters from @a __is into @a __str until whitespace is
6443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  found, the end of the stream is encountered, or str.max_size()
6444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  is reached.  If is.width() is non-zero, that is the limit on the
6445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  number of characters stored into @a __str.  Any previous
6446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  contents of @a __str are erased.
6447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_istream<_CharT, _Traits>&
6450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator>>(basic_istream<_CharT, _Traits>& __is,
6451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       basic_string<_CharT, _Traits, _Alloc>& __str);
6452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<>
6454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_istream<char>&
6455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator>>(basic_istream<char>& __is, basic_string<char>& __str);
6456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Write string to a stream.
6459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __os  Output stream.
6460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __str  String to write out.
6461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  Reference to the output stream.
6462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
6463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Output characters of @a __str into os following the same rules as for
6464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  writing a C string.
6465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_ostream<_CharT, _Traits>&
6468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator<<(basic_ostream<_CharT, _Traits>& __os,
6469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __str)
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 364


6470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     {
6471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
6472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 586. string inserter not a formatted function
6473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       return __ostream_insert(__os, __str.data(), __str.size());
6474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     }
6475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Read a line from stream into a string.
6478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __is  Input stream.
6479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __str  Buffer to store into.
6480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __delim  Character marking end of line.
6481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  Reference to the input stream.
6482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
6483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Stores characters from @a __is into @a __str until @a __delim is
6484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  found, the end of the stream is encountered, or str.max_size()
6485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  is reached.  Any previous contents of @a __str are erased.  If
6486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @a __delim is encountered, it is extracted but not stored into
6487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @a __str.
6488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_istream<_CharT, _Traits>&
6491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     getline(basic_istream<_CharT, _Traits>& __is,
6492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    basic_string<_CharT, _Traits, _Alloc>& __str, _CharT __delim);
6493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Read a line from stream into a string.
6496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __is  Input stream.
6497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __str  Buffer to store into.
6498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  Reference to the input stream.
6499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
6500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Stores characters from is into @a __str until &apos;\n&apos; is
6501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  found, the end of the stream is encountered, or str.max_size()
6502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  is reached.  Any previous contents of @a __str are erased.  If
6503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  end of line is encountered, it is extracted but not stored into
6504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @a __str.
6505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_istream<_CharT, _Traits>&
6508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     getline(basic_istream<_CharT, _Traits>& __is,
6509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    basic_string<_CharT, _Traits, _Alloc>& __str)
6510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return std::getline(__is, __str, __is.widen('\n')); }
6511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
6513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /// Read a line from an rvalue stream into a string.
6514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_istream<_CharT, _Traits>&
6516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     getline(basic_istream<_CharT, _Traits>&& __is,
6517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    basic_string<_CharT, _Traits, _Alloc>& __str, _CharT __delim)
6518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return std::getline(__is, __str, __delim); }
6519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /// Read a line from an rvalue stream into a string.
6521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_istream<_CharT, _Traits>&
6523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     getline(basic_istream<_CharT, _Traits>&& __is,
6524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    basic_string<_CharT, _Traits, _Alloc>& __str)
6525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return std::getline(__is, __str); }
6526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 365


6527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<>
6529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_istream<char>&
6530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     getline(basic_istream<char>& __in, basic_string<char>& __str,
6531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    char __delim);
6532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #ifdef _GLIBCXX_USE_WCHAR_T
6534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<>
6535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_istream<wchar_t>&
6536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     getline(basic_istream<wchar_t>& __in, basic_string<wchar_t>& __str,
6537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    wchar_t __delim);
6538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif  
6539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_END_NAMESPACE_VERSION
6541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** } // namespace
6542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
6544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #include <ext/string_conversions.h>
6546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #include <bits/charconv.h>
6547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** namespace std _GLIBCXX_VISIBILITY(default)
6549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** {
6550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
6551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
6552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_USE_C99_STDLIB
6554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // 21.4 Numeric Conversions [string.conversions].
6555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline int
6556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   stoi(const string& __str, size_t* __idx = 0, int __base = 10)
6557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   { return __gnu_cxx::__stoa<long, int>(&std::strtol, "stoi", __str.c_str(),
6558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 					__idx, __base); }
6559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline long
6561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   stol(const string& __str, size_t* __idx = 0, int __base = 10)
6562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtol, "stol", __str.c_str(),
6563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __idx, __base); }
6564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline unsigned long
6566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   stoul(const string& __str, size_t* __idx = 0, int __base = 10)
6567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtoul, "stoul", __str.c_str(),
6568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __idx, __base); }
6569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline long long
6571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   stoll(const string& __str, size_t* __idx = 0, int __base = 10)
6572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtoll, "stoll", __str.c_str(),
6573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __idx, __base); }
6574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline unsigned long long
6576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   stoull(const string& __str, size_t* __idx = 0, int __base = 10)
6577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtoull, "stoull", __str.c_str(),
6578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __idx, __base); }
6579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // NB: strtof vs strtod.
6581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline float
6582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   stof(const string& __str, size_t* __idx = 0)
6583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtof, "stof", __str.c_str(), __idx); }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 366


6584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline double
6586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   stod(const string& __str, size_t* __idx = 0)
6587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtod, "stod", __str.c_str(), __idx); }
6588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline long double
6590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   stold(const string& __str, size_t* __idx = 0)
6591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtold, "stold", __str.c_str(), __idx); }
6592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // _GLIBCXX_USE_C99_STDLIB
6593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // DR 1261. Insufficent overloads for to_string / to_wstring
6595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline string
6597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   to_string(int __val)
6598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   {
6599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     const bool __neg = __val < 0;
6600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     const unsigned __uval = __neg ? (unsigned)~__val + 1u : __val;
6601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     const auto __len = __detail::__to_chars_len(__uval);
6602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     string __str(__neg + __len, '-');
6603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     __detail::__to_chars_10_impl(&__str[__neg], __len, __uval);
6604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     return __str;
6605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   }
6606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline string
6608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   to_string(unsigned __val)
6609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   {
6610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     string __str(__detail::__to_chars_len(__val), '\0');
6611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     __detail::__to_chars_10_impl(&__str[0], __str.size(), __val);
6612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     return __str;
6613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   }
6614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline string
6616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   to_string(long __val)
6617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   {
6618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     const bool __neg = __val < 0;
6619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     const unsigned long __uval = __neg ? (unsigned long)~__val + 1ul : __val;
6620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     const auto __len = __detail::__to_chars_len(__uval);
6621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     string __str(__neg + __len, '-');
6622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     __detail::__to_chars_10_impl(&__str[__neg], __len, __uval);
6623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     return __str;
6624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   }
6625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline string
6627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   to_string(unsigned long __val)
6628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   {
6629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     string __str(__detail::__to_chars_len(__val), '\0');
6630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     __detail::__to_chars_10_impl(&__str[0], __str.size(), __val);
6631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     return __str;
6632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   }
6633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline string
6635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   to_string(long long __val)
6636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   {
6637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     const bool __neg = __val < 0;
6638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     const unsigned long long __uval
6639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       = __neg ? (unsigned long long)~__val + 1ull : __val;
6640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     const auto __len = __detail::__to_chars_len(__uval);
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 367


6641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     string __str(__neg + __len, '-');
6642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     __detail::__to_chars_10_impl(&__str[__neg], __len, __uval);
6643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     return __str;
6644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   }
6645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline string
6647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   to_string(unsigned long long __val)
6648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   {
6649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     string __str(__detail::__to_chars_len(__val), '\0');
6650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     __detail::__to_chars_10_impl(&__str[0], __str.size(), __val);
6651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     return __str;
6652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   }
6653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_USE_C99_STDIO
6655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // NB: (v)snprintf vs sprintf.
6656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline string
6658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   to_string(float __val)
6659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   {
6660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     const int __n = 
6661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       __gnu_cxx::__numeric_traits<float>::__max_exponent10 + 20;
6662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     return __gnu_cxx::__to_xstring<string>(&std::vsnprintf, __n,
6663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 					   "%f", __val);
6664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   }
6665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline string
6667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   to_string(double __val)
6668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   {
6669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     const int __n = 
6670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       __gnu_cxx::__numeric_traits<double>::__max_exponent10 + 20;
6671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     return __gnu_cxx::__to_xstring<string>(&std::vsnprintf, __n,
6672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 					   "%f", __val);
6673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   }
6674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline string
6676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   to_string(long double __val)
6677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   {
6678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     const int __n = 
6679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       __gnu_cxx::__numeric_traits<long double>::__max_exponent10 + 20;
6680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     return __gnu_cxx::__to_xstring<string>(&std::vsnprintf, __n,
6681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 					   "%Lf", __val);
6682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   }
6683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // _GLIBCXX_USE_C99_STDIO
6684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if defined(_GLIBCXX_USE_WCHAR_T) && _GLIBCXX_USE_C99_WCHAR
6686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline int 
6687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   stoi(const wstring& __str, size_t* __idx = 0, int __base = 10)
6688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   { return __gnu_cxx::__stoa<long, int>(&std::wcstol, "stoi", __str.c_str(),
6689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 					__idx, __base); }
6690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline long 
6692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   stol(const wstring& __str, size_t* __idx = 0, int __base = 10)
6693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   { return __gnu_cxx::__stoa(&std::wcstol, "stol", __str.c_str(),
6694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __idx, __base); }
6695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline unsigned long
6697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   stoul(const wstring& __str, size_t* __idx = 0, int __base = 10)
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 368


6698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   { return __gnu_cxx::__stoa(&std::wcstoul, "stoul", __str.c_str(),
6699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __idx, __base); }
6700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline long long
6702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   stoll(const wstring& __str, size_t* __idx = 0, int __base = 10)
6703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   { return __gnu_cxx::__stoa(&std::wcstoll, "stoll", __str.c_str(),
6704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __idx, __base); }
6705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline unsigned long long
6707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   stoull(const wstring& __str, size_t* __idx = 0, int __base = 10)
6708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   { return __gnu_cxx::__stoa(&std::wcstoull, "stoull", __str.c_str(),
6709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __idx, __base); }
6710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // NB: wcstof vs wcstod.
6712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline float
6713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   stof(const wstring& __str, size_t* __idx = 0)
6714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   { return __gnu_cxx::__stoa(&std::wcstof, "stof", __str.c_str(), __idx); }
6715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline double
6717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   stod(const wstring& __str, size_t* __idx = 0)
6718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   { return __gnu_cxx::__stoa(&std::wcstod, "stod", __str.c_str(), __idx); }
6719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline long double
6721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   stold(const wstring& __str, size_t* __idx = 0)
6722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   { return __gnu_cxx::__stoa(&std::wcstold, "stold", __str.c_str(), __idx); }
6723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #ifndef _GLIBCXX_HAVE_BROKEN_VSWPRINTF
6725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // DR 1261.
6726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline wstring
6727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   to_wstring(int __val)
6728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   { return __gnu_cxx::__to_xstring<wstring>(&std::vswprintf, 4 * sizeof(int),
6729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 					    L"%d", __val); }
6730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline wstring
6732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   to_wstring(unsigned __val)
6733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   { return __gnu_cxx::__to_xstring<wstring>(&std::vswprintf,
6734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 					    4 * sizeof(unsigned),
6735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 					    L"%u", __val); }
6736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline wstring
6738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   to_wstring(long __val)
6739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   { return __gnu_cxx::__to_xstring<wstring>(&std::vswprintf, 4 * sizeof(long),
6740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 					    L"%ld", __val); }
6741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline wstring
6743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   to_wstring(unsigned long __val)
6744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   { return __gnu_cxx::__to_xstring<wstring>(&std::vswprintf,
6745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 					    4 * sizeof(unsigned long),
6746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 					    L"%lu", __val); }
6747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline wstring
6749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   to_wstring(long long __val)
6750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   { return __gnu_cxx::__to_xstring<wstring>(&std::vswprintf,
6751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 					    4 * sizeof(long long),
6752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 					    L"%lld", __val); }
6753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline wstring
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 369


6755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   to_wstring(unsigned long long __val)
6756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   { return __gnu_cxx::__to_xstring<wstring>(&std::vswprintf,
6757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 					    4 * sizeof(unsigned long long),
6758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 					    L"%llu", __val); }
6759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline wstring
6761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   to_wstring(float __val)
6762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   {
6763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     const int __n =
6764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       __gnu_cxx::__numeric_traits<float>::__max_exponent10 + 20;
6765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     return __gnu_cxx::__to_xstring<wstring>(&std::vswprintf, __n,
6766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 					    L"%f", __val);
6767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   }
6768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline wstring
6770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   to_wstring(double __val)
6771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   {
6772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     const int __n =
6773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       __gnu_cxx::__numeric_traits<double>::__max_exponent10 + 20;
6774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     return __gnu_cxx::__to_xstring<wstring>(&std::vswprintf, __n,
6775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 					    L"%f", __val);
6776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   }
6777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   inline wstring
6779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   to_wstring(long double __val)
6780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   {
6781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     const int __n =
6782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       __gnu_cxx::__numeric_traits<long double>::__max_exponent10 + 20;
6783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     return __gnu_cxx::__to_xstring<wstring>(&std::vswprintf, __n,
6784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 					    L"%Lf", __val);
6785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   }
6786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // _GLIBCXX_HAVE_BROKEN_VSWPRINTF
6787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // _GLIBCXX_USE_WCHAR_T && _GLIBCXX_USE_C99_WCHAR
6788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_END_NAMESPACE_CXX11
6790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_END_NAMESPACE_VERSION
6791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** } // namespace
6792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif /* C++11 */
6794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
6796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #include <bits/functional_hash.h>
6798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** namespace std _GLIBCXX_VISIBILITY(default)
6800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** {
6801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
6802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // DR 1182.
6804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #ifndef _GLIBCXX_COMPATIBILITY_CXX0X
6806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /// std::hash specialization for string.
6807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<>
6808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     struct hash<string>
6809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     : public __hash_base<size_t, string>
6810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     {
6811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_t
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 370


6812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator()(const string& __s) const noexcept
 2316              		.loc 4 6812 7 view .LVU487
 2317              	.LBE2763:
 2318              	.LBE2762:
 2319              	.LBE3076:
 2320              	.LBE3087:
 2321              	.LBE3097:
 2322              	.LBE3107:
 2323              	.LBE3123:
6813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return std::_Hash_impl::hash(__s.data(), __s.length()); }
 2324              		.loc 4 6813 9 view .LVU488
 2325              	.LBB3124:
 2326              	.LBB3108:
 2327              	.LBB3098:
 2328              	.LBB3088:
 2329              	.LBB3077:
 2330              	.LBB2773:
 2331              	.LBB2771:
 2332              	.LBB2764:
 2333              	.LBI2764:
2311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data(); }
 2334              		.loc 4 2311 7 view .LVU489
 2335              	.LBB2765:
 2336              	.LBI2765:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2337              		.loc 4 186 7 view .LVU490
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2338              		.loc 4 186 7 is_stmt 0 view .LVU491
 2339              	.LBE2765:
 2340              	.LBE2764:
 2341              	.LBB2766:
 2342              	.LBI2766:
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 2343              		.loc 4 907 7 is_stmt 1 view .LVU492
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 2344              		.loc 4 907 7 is_stmt 0 view .LVU493
 2345              	.LBE2766:
 2346              	.LBB2767:
 2347              	.LBI2767:
 2348              		.file 23 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\functional
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // functional_hash.h header -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // Copyright (C) 2007-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // permissions described in the GCC Runtime Library Exception, version
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 371


  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** /** @file bits/functional_hash.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****  *  This is an internal header file, included by other library headers.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****  *  Do not attempt to use it directly. @headername{functional}
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****  */
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** #ifndef _FUNCTIONAL_HASH_H
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** #define _FUNCTIONAL_HASH_H 1
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** #pragma GCC system_header
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** #include <bits/hash_bytes.h>
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** namespace std _GLIBCXX_VISIBILITY(default)
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** {
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /** @defgroup hashes Hashes
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****    *  @ingroup functors
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****    *
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****    *   Hashing functors taking a variable type and returning a @c std::size_t.
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****    *
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****    *  @{
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****    */
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   template<typename _Result, typename _Arg>
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     struct __hash_base
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     {
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       typedef _Result     result_type _GLIBCXX17_DEPRECATED;
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       typedef _Arg      argument_type _GLIBCXX17_DEPRECATED;
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     };
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Primary class template hash.
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   template<typename _Tp>
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     struct hash;
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   template<typename _Tp, typename = void>
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     struct __poison_hash
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     {
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       static constexpr bool __enable_hash_call = false;
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     private:
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       // Private rather than deleted to be non-trivially-copyable.
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       __poison_hash(__poison_hash&&);
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       ~__poison_hash();
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     };
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   template<typename _Tp>
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     struct __poison_hash<_Tp, __void_t<decltype(hash<_Tp>()(declval<_Tp>()))>>
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     {
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       static constexpr bool __enable_hash_call = true;
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     };
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 372


  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   // Helper struct for SFINAE-poisoning non-enum types.
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   template<typename _Tp, bool = is_enum<_Tp>::value>
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     struct __hash_enum
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     {
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     private:
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       // Private rather than deleted to be non-trivially-copyable.
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       __hash_enum(__hash_enum&&);
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       ~__hash_enum();
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     };
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   // Helper struct for hash with enum types.
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   template<typename _Tp>
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     struct __hash_enum<_Tp, true> : public __hash_base<size_t, _Tp>
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     {
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       size_t
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       operator()(_Tp __val) const noexcept
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       {
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****        using __type = typename underlying_type<_Tp>::type;
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****        return hash<__type>{}(static_cast<__type>(__val));
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       }
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     };
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Primary class template hash, usable for enum types only.
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   // Use with non-enum types still SFINAES.
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   template<typename _Tp>
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     struct hash : __hash_enum<_Tp>
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     { };
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Partial specializations for pointer types.
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   template<typename _Tp>
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     struct hash<_Tp*> : public __hash_base<size_t, _Tp*>
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     {
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       size_t
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       operator()(_Tp* __p) const noexcept
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       { return reinterpret_cast<size_t>(__p); }
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     };
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   // Explicit specializations for integer types.
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** #define _Cxx_hashtable_define_trivial_hash(_Tp) 	\
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   template<>						\
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     struct hash<_Tp> : public __hash_base<size_t, _Tp>  \
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     {                                                   \
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       size_t                                            \
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       operator()(_Tp __val) const noexcept              \
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       { return static_cast<size_t>(__val); }            \
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     };
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for bool.
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(bool)
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for char.
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(char)
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for signed char.
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(signed char)
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 373


 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for unsigned char.
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(unsigned char)
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for wchar_t.
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(wchar_t)
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** #ifdef _GLIBCXX_USE_CHAR8_T
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for char8_t.
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(char8_t)
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** #endif
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for char16_t.
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(char16_t)
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for char32_t.
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(char32_t)
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for short.
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(short)
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for int.
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(int)
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for long.
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(long)
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for long long.
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(long long)
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for unsigned short.
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(unsigned short)
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for unsigned int.
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(unsigned int)
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for unsigned long.
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(unsigned long)
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for unsigned long long.
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(unsigned long long)
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** #ifdef __GLIBCXX_TYPE_INT_N_0
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(__GLIBCXX_TYPE_INT_N_0)
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(__GLIBCXX_TYPE_INT_N_0 unsigned)
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** #endif
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** #ifdef __GLIBCXX_TYPE_INT_N_1
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(__GLIBCXX_TYPE_INT_N_1)
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(__GLIBCXX_TYPE_INT_N_1 unsigned)
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** #endif
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** #ifdef __GLIBCXX_TYPE_INT_N_2
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(__GLIBCXX_TYPE_INT_N_2)
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(__GLIBCXX_TYPE_INT_N_2 unsigned)
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** #endif
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** #ifdef __GLIBCXX_TYPE_INT_N_3
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(__GLIBCXX_TYPE_INT_N_3)
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(__GLIBCXX_TYPE_INT_N_3 unsigned)
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** #endif
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 374


 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** #undef _Cxx_hashtable_define_trivial_hash
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   struct _Hash_impl
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   {
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     static size_t
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     hash(const void* __ptr, size_t __clength,
 2349              		.loc 23 195 5 is_stmt 1 view .LVU494
 2350              	.LBB2768:
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 	 size_t __seed = static_cast<size_t>(0xc70f6907UL))
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     { return _Hash_bytes(__ptr, __clength, __seed); }
 2351              		.loc 23 197 7 view .LVU495
 2352              		.loc 23 197 25 is_stmt 0 view .LVU496
 2353 008a 794A     		ldr	r2, .L155+4
 2354 008c D5E90001 		ldrd	r0, r1, [r5]
 2355 0090 FFF7FEFF 		bl	_ZSt11_Hash_bytesPKvjj
 2356              	.LVL144:
 2357              		.loc 23 197 25 view .LVU497
 2358              	.LBE2768:
 2359              	.LBE2767:
 2360              	.LBE2771:
 2361              	.LBE2773:
 2362              	.LBB2774:
 2363              	.LBB2775:
 2364              	.LBB2776:
 2365              	.LBB2777:
 2366              	.LBB2778:
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 2367              		.loc 3 433 22 view .LVU498
 2368 0094 6168     		ldr	r1, [r4, #4]
 2369              	.LBE2778:
 2370              	.LBE2777:
 2371              	.LBE2776:
 2372              	.LBE2775:
 2373              	.LBE2774:
 2374              	.LBB2787:
 2375              	.LBB2772:
 2376              	.LBB2770:
 2377              	.LBB2769:
 2378              		.loc 23 197 25 view .LVU499
 2379 0096 0646     		mov	r6, r0
 2380              	.LVL145:
 2381              		.loc 23 197 25 view .LVU500
 2382              	.LBE2769:
 2383              	.LBE2770:
 2384              	.LBE2772:
 2385              	.LBE2787:
 2386              	.LBB2788:
 2387              	.LBI2774:
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __hash_code_base::_M_bucket_index(__k, __c, _M_bucket_count); }
 2388              		.loc 2 681 7 is_stmt 1 view .LVU501
 2389              	.LBB2785:
 2390              	.LBB2783:
 2391              	.LBI2776:
1383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      std::size_t __bkt_count) const
 2392              		.loc 3 1383 7 view .LVU502
 2393              	.LBB2781:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 375


 2394              	.LBI2777:
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       second_argument_type __den) const noexcept
 2395              		.loc 3 431 5 view .LVU503
 2396              	.LBB2779:
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 2397              		.loc 3 433 7 view .LVU504
 2398              	.LBE2779:
 2399              	.LBE2781:
 2400              	.LBE2783:
 2401              	.LBE2785:
 2402              	.LBE2788:
 2403              	.LBB2789:
 2404              	.LBB2758:
 2405              	.LBB2759:
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (__before_n)
 2406              		.loc 2 693 47 is_stmt 0 view .LVU505
 2407 0098 2A46     		mov	r2, r5
 2408 009a 2046     		mov	r0, r4
 2409              	.LVL146:
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (__before_n)
 2410              		.loc 2 693 47 view .LVU506
 2411 009c 3346     		mov	r3, r6
 2412              	.LBE2759:
 2413              	.LBE2758:
 2414              	.LBE2789:
 2415              	.LBB2790:
 2416              	.LBB2786:
 2417              	.LBB2784:
 2418              	.LBB2782:
 2419              	.LBB2780:
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 2420              		.loc 3 433 22 view .LVU507
 2421 009e B6FBF1F7 		udiv	r7, r6, r1
 2422 00a2 01FB1767 		mls	r7, r1, r7, r6
 2423              	.LVL147:
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 2424              		.loc 3 433 22 view .LVU508
 2425              	.LBE2780:
 2426              	.LBE2782:
 2427              	.LBE2784:
 2428              	.LBE2786:
 2429              	.LBE2790:
 2430              	.LBB2791:
 2431              	.LBB2761:
 2432              	.LBI2758:
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   __hash_code __c) const
 2433              		.loc 2 690 7 is_stmt 1 view .LVU509
 2434              	.LBB2760:
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (__before_n)
 2435              		.loc 2 693 47 is_stmt 0 view .LVU510
 2436 00a6 3946     		mov	r1, r7
 2437 00a8 FFF7FEFF 		bl	_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESaIS8_ENSt
 2438              	.LVL148:
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return static_cast<__node_type*>(__before_n->_M_nxt);
 2439              		.loc 2 694 2 view .LVU511
 2440 00ac 0028     		cmp	r0, #0
 2441 00ae E7D1     		bne	.L149
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 376


 2442              	.LVL149:
 2443              	.L102:
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return static_cast<__node_type*>(__before_n->_M_nxt);
 2444              		.loc 2 694 2 view .LVU512
 2445              	.LBE2760:
 2446              	.LBE2761:
 2447              	.LBE2791:
 2448              	.LBB2792:
 2449              	.LBI2792:
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{ return _M_h._M_allocate_node(std::forward<_Arg>(__arg)); }
 2450              		.loc 3 166 2 is_stmt 1 view .LVU513
 2451              	.LBB2793:
 2452              	.LBI2793:
2029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       -> __node_type*
 2453              		.loc 3 2029 7 view .LVU514
 2454              	.LBB2794:
 2455              	.LBB2795:
 2456              	.LBI2795:
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 2457              		.loc 5 459 7 view .LVU515
 2458              	.LBB2796:
 2459              	.LBI2796:
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2460              		.loc 6 103 7 view .LVU516
 2461              	.LBB2797:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 2462              		.loc 6 115 41 is_stmt 0 view .LVU517
 2463 00b0 2420     		movs	r0, #36
 2464 00b2 FFF7FEFF 		bl	_Znwj
 2465              	.LVL150:
 2466              	.LBE2797:
 2467              	.LBE2796:
 2468              	.LBE2795:
 2469              	.LBB2800:
 2470              	.LBB2801:
 2471              	.LBB2802:
 2472              	.LBB2803:
 2473              	.LBB2804:
 2474              	.LBB2805:
 2475              	.LBB2806:
 2476              	.LBB2807:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2477              		.loc 4 187 28 view .LVU518
 2478 00b6 D5F800A0 		ldr	r10, [r5]
 2479              	.LBE2807:
 2480              	.LBE2806:
 2481              	.LBB2808:
 2482              	.LBB2809:
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2483              		.loc 4 908 16 view .LVU519
 2484 00ba 6B68     		ldr	r3, [r5, #4]
 2485              	.LBE2809:
 2486              	.LBE2808:
 2487              	.LBE2805:
 2488              	.LBE2804:
 2489              	.LBE2803:
 2490              	.LBE2802:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 377


 2491              	.LBE2801:
 2492              	.LBE2800:
 2493              	.LBB2934:
 2494              	.LBB2935:
 2495              	.LBB2936:
 2496              	.LBB2937:
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 2497              		.loc 3 218 41 view .LVU520
 2498 00bc 0146     		mov	r1, r0
 2499 00be 0022     		movs	r2, #0
 2500              	.LBE2937:
 2501              	.LBE2936:
 2502              	.LBE2935:
 2503              	.LBE2934:
 2504              	.LBB2943:
 2505              	.LBB2799:
 2506              	.LBB2798:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 2507              		.loc 6 115 41 view .LVU521
 2508 00c0 8046     		mov	r8, r0
 2509              	.LVL151:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 2510              		.loc 6 115 41 view .LVU522
 2511              	.LBE2798:
 2512              	.LBE2799:
 2513              	.LBE2943:
 2514              	.LBE2794:
 2515              	.LBE2793:
 2516              	.LBE2792:
 2517              	.LBE3077:
 2518              	.LBE3088:
 2519              	.LBE3098:
 2520              	.LBE3108:
 2521              	.LBE3124:
 2522              		.loc 17 175 3 is_stmt 1 view .LVU523
 2523              	.LBB3125:
 2524              	.LBB3109:
 2525              	.LBB3099:
 2526              	.LBB3089:
 2527              	.LBB3078:
 2528              	.LBB2965:
 2529              	.LBB2959:
 2530              	.LBB2953:
 2531              	.LBB2944:
 2532              	.LBI2934:
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 2533              		.loc 3 264 12 view .LVU524
 2534              	.LBB2941:
 2535              	.LBI2935:
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 2536              		.loc 3 229 12 view .LVU525
 2537              	.LBB2939:
 2538              	.LBI2936:
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 2539              		.loc 3 218 5 view .LVU526
 2540              	.LBE2939:
 2541              	.LBE2941:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 378


 2542              	.LBE2944:
 2543              	.LBB2945:
 2544              	.LBB2927:
 2545              	.LBB2921:
 2546              	.LBB2915:
 2547              	.LBB2910:
 2548              	.LBB2905:
 2549              	.LBB2810:
 2550              	.LBB2811:
 2551              	.LBB2812:
 2552              	.LBB2813:
 2553              	.LBB2814:
 2554              	.LBB2815:
 2555              		.file 24 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\basic_stri
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Components for manipulating sequences of characters -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** /** @file bits/basic_string.tcc
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****  *  This is an internal header file, included by other library headers.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****  *  Do not attempt to use it directly. @headername{string}
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****  */
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** //
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // ISO C++ 14882: 21  Strings library
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** //
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Written by Jason Merrill based upon the specification by Takanori Adachi
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // in ANSI X3J16/94-0013R2.  Rewritten by Nathan Myers to ISO-14882.
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Non-reference-counted implementation written by Paolo Carlini and
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // updated by Jonathan Wakely for ISO-14882-2011.
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** #ifndef _BASIC_STRING_TCC
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** #define _BASIC_STRING_TCC 1
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** #pragma GCC system_header
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 379


  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** #include <bits/cxxabi_forced.h>
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** namespace std _GLIBCXX_VISIBILITY(default)
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** {
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** #if _GLIBCXX_USE_CXX11_ABI
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     const typename basic_string<_CharT, _Traits, _Alloc>::size_type
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::npos;
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     void
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     swap(basic_string& __s) _GLIBCXX_NOEXCEPT
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     {
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       if (this == &__s)
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	return;
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _Alloc_traits::_S_on_swap(_M_get_allocator(), __s._M_get_allocator());
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       if (_M_is_local())
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	if (__s._M_is_local())
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    if (length() && __s.length())
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      {
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		_CharT __tmp_data[_S_local_capacity + 1];
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		traits_type::copy(__tmp_data, __s._M_local_buf,
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				  _S_local_capacity + 1);
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		traits_type::copy(__s._M_local_buf, _M_local_buf,
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				  _S_local_capacity + 1);
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		traits_type::copy(_M_local_buf, __tmp_data,
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				  _S_local_capacity + 1);
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      }
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    else if (__s.length())
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      {
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		traits_type::copy(_M_local_buf, __s._M_local_buf,
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				  _S_local_capacity + 1);
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		_M_length(__s.length());
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		__s._M_set_length(0);
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		return;
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      }
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    else if (length())
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      {
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		traits_type::copy(__s._M_local_buf, _M_local_buf,
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				  _S_local_capacity + 1);
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		__s._M_length(length());
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		_M_set_length(0);
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		return;
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      }
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	else
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    const size_type __tmp_capacity = __s._M_allocated_capacity;
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    traits_type::copy(__s._M_local_buf, _M_local_buf,
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 			      _S_local_capacity + 1);
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 380


 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_data(__s._M_data());
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    __s._M_data(__s._M_local_buf);
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__tmp_capacity);
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       else
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	{
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  const size_type __tmp_capacity = _M_allocated_capacity;
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  if (__s._M_is_local())
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    {
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      traits_type::copy(_M_local_buf, __s._M_local_buf,
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				_S_local_capacity + 1);
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      __s._M_data(_M_data());
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      _M_data(_M_local_buf);
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    }
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  else
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    {
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      pointer __tmp_ptr = _M_data();
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      _M_data(__s._M_data());
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      __s._M_data(__tmp_ptr);
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      _M_capacity(__s._M_allocated_capacity);
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    }
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  __s._M_capacity(__tmp_capacity);
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	}
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       const size_type __tmp_length = length();
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_length(__s.length());
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       __s._M_length(__tmp_length);
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     }
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     typename basic_string<_CharT, _Traits, _Alloc>::pointer
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     _M_create(size_type& __capacity, size_type __old_capacity)
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     {
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // 83.  String::npos vs. string::max_size()
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       if (__capacity > max_size())
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	std::__throw_length_error(__N("basic_string::_M_create"));
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // The below implements an exponential growth policy, necessary to
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // meet amortized linear time requirements of the library: see
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // http://gcc.gnu.org/ml/libstdc++/2001-07/msg00085.html.
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       if (__capacity > __old_capacity && __capacity < 2 * __old_capacity)
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	{
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  __capacity = 2 * __old_capacity;
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  // Never allocate a string bigger than max_size.
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  if (__capacity > max_size())
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    __capacity = max_size();
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	}
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // NB: Need an array of char_type[__capacity], plus a terminating
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // null char_type() element.
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       return _Alloc_traits::allocate(_M_get_allocator(), __capacity + 1);
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     }
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   // NB: This is the special case for Input Iterators, used in
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   // istreambuf_iterators, etc.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 381


 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   // Input Iterators have a cost structure very different from
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   // pointers, calling for a different coding style.
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     template<typename _InIterator>
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       void
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>::
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		   std::input_iterator_tag)
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       {
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	size_type __len = 0;
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	size_type __capacity = size_type(_S_local_capacity);
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	while (__beg != __end && __len < __capacity)
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_data()[__len++] = *__beg;
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    ++__beg;
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	__try
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    while (__beg != __end)
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      {
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		if (__len == __capacity)
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		  {
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    // Allocate more space.
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    __capacity = __len + 1;
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    pointer __another = _M_create(__capacity, __len);
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    this->_S_copy(__another, _M_data(), __len);
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    _M_dispose();
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    _M_data(__another);
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    _M_capacity(__capacity);
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		  }
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		_M_data()[__len++] = *__beg;
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		++__beg;
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      }
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	__catch(...)
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_dispose();
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    __throw_exception_again;
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	_M_set_length(__len);
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       }
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     template<typename _InIterator>
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       void
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>::
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		   std::forward_iterator_tag)
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       {
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	// NB: Not required, but considered best practice.
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
 2556              		.loc 24 211 42 is_stmt 0 view .LVU527
 2557 00c2 1AEB030F 		cmn	r10, r3
 2558              	.LBE2815:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 382


 2559              	.LBE2814:
 2560              	.LBE2813:
 2561              	.LBE2812:
 2562              	.LBE2811:
 2563              	.LBE2810:
 2564              	.LBE2905:
 2565              	.LBE2910:
 2566              	.LBE2915:
 2567              	.LBE2921:
 2568              	.LBE2927:
 2569              	.LBE2945:
 2570              	.LBB2946:
 2571              	.LBB2942:
 2572              	.LBB2940:
 2573              	.LBB2938:
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 2574              		.loc 3 218 41 view .LVU528
 2575 00c6 41F80C2B 		str	r2, [r1], #12
 2576              	.LVL152:
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 2577              		.loc 3 218 41 view .LVU529
 2578              	.LBE2938:
 2579              	.LBE2940:
 2580              	.LBE2942:
 2581              	.LBE2946:
 2582              	.LBB2947:
 2583              	.LBI2800:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 2584              		.loc 5 507 2 is_stmt 1 view .LVU530
 2585              	.LBB2928:
 2586              	.LBI2801:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 2587              		.loc 6 148 2 view .LVU531
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 2588              		.loc 6 148 2 is_stmt 0 view .LVU532
 2589              	.LBE2928:
 2590              	.LBE2947:
 2591              	.LBE2953:
 2592              	.LBE2959:
 2593              	.LBE2965:
 2594              	.LBE3078:
 2595              	.LBE3089:
 2596              	.LBE3099:
 2597              	.LBE3109:
 2598              	.LBE3125:
 2599              		.loc 17 175 3 is_stmt 1 view .LVU533
 2600              	.LBB3126:
 2601              	.LBB3110:
 2602              	.LBB3100:
 2603              	.LBB3090:
 2604              	.LBB3079:
 2605              	.LBB2966:
 2606              	.LBB2960:
 2607              	.LBB2954:
 2608              	.LBB2948:
 2609              	.LBB2929:
 2610              	.LBB2922:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 383


 2611              	.LBI2802:
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     : private __pair_base<_T1, _T2>
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     {
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       typedef _T1 first_type;    ///< The type of the `first` member
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       typedef _T2 second_type;   ///< The type of the `second` member
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       _T1 first;                 ///< The first member
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       _T2 second;                ///< The second member
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       // 265.  std::pair::pair() effects overly restrictive
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /** The default constructor creates @c first and @c second using their
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        *  respective default constructors.  */
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1 = _T1,
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                 typename _U2 = _T2,
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                 typename enable_if<__and_<
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                                      __is_implicitly_default_constructible<_U1>,
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                                      __is_implicitly_default_constructible<_U2>>
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                                    ::value, bool>::type = true>
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       _GLIBCXX_CONSTEXPR pair()
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       : first(), second() { }
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1 = _T1,
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                 typename _U2 = _T2,
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                 typename enable_if<__and_<
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                        is_default_constructible<_U1>,
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                        is_default_constructible<_U2>,
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                        __not_<
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          __and_<__is_implicitly_default_constructible<_U1>,
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                                 __is_implicitly_default_constructible<_U2>>>>
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                                    ::value, bool>::type = false>
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       explicit constexpr pair()
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       : first(), second() { }
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus < 201103L
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// Two objects may be passed to a @c pair constructor to be copied.
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       pair(const _T1& __a, const _T2& __b)
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       : first(__a), second(__b) { }
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #else
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       // Shortcut for constraining the templates that don't take pairs.
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// @cond undocumented
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       using _PCCP = _PCC<true, _T1, _T2>;
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// @endcond
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// Construct from two const lvalues, allowing implicit conversions.
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1 = _T1, typename _U2=_T2, typename
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCP::template
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ConstructiblePair<_U1, _U2>()
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	                 && _PCCP::template
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ImplicitlyConvertiblePair<_U1, _U2>(),
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=true>
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(const _T1& __a, const _T2& __b)
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       : first(__a), second(__b) { }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 384


 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// Construct from two const lvalues, disallowing implicit conversions.
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        template<typename _U1 = _T1, typename _U2=_T2, typename
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		enable_if<_PCCP::template
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			    _ConstructiblePair<_U1, _U2>()
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	                  && !_PCCP::template
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			    _ImplicitlyConvertiblePair<_U1, _U2>(),
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=false>
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       explicit constexpr pair(const _T1& __a, const _T2& __b)
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       : first(__a), second(__b) { }
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus < 201103L
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// There is also a templated constructor to convert from other pairs.
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename _U2>
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	pair(const pair<_U1, _U2>& __p)
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(__p.first), second(__p.second) { }
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #else
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       // Shortcut for constraining the templates that take pairs.
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// @cond undocumented
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****         using _PCCFP = _PCC<!is_same<_T1, _U1>::value
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			    || !is_same<_T2, _U2>::value,
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			    _T1, _T2>;
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// @endcond
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename _U2, typename
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCFP<_U1, _U2>::template
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ConstructiblePair<_U1, _U2>()
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	                 && _PCCFP<_U1, _U2>::template
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ImplicitlyConvertiblePair<_U1, _U2>(),
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			  bool>::type=true>
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****         constexpr pair(const pair<_U1, _U2>& __p)
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****         : first(__p.first), second(__p.second) { }
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename _U2, typename
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCFP<_U1, _U2>::template
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ConstructiblePair<_U1, _U2>()
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			 && !_PCCFP<_U1, _U2>::template
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ImplicitlyConvertiblePair<_U1, _U2>(),
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=false>
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	explicit constexpr pair(const pair<_U1, _U2>& __p)
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(__p.first), second(__p.second) { }
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(const pair&) = default;	///< Copy constructor
 2612              		.loc 7 314 17 view .LVU534
 2613              	.LBB2916:
 2614              	.LBB2911:
 2615              	.LBI2804:
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(),
 2616              		.loc 4 448 7 view .LVU535
 2617              	.LBB2906:
 2618              	.LBB2885:
 2619              	.LBI2885:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 385


 2620              		.loc 4 190 7 view .LVU536
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2621              		.loc 4 190 7 is_stmt 0 view .LVU537
 2622              	.LBE2885:
 2623              	.LBB2886:
 2624              	.LBI2886:
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 2625              		.loc 4 290 7 is_stmt 1 view .LVU538
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 2626              		.loc 4 290 7 is_stmt 0 view .LVU539
 2627              	.LBE2886:
 2628              	.LBB2887:
 2629              	.LBI2887:
 2630              		.file 25 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\ext\\alloc_trait
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // Copyright (C) 2011-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** /** @file ext/alloc_traits.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****  */
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #ifndef _EXT_ALLOC_TRAITS_H
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #define _EXT_ALLOC_TRAITS_H 1
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #pragma GCC system_header
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** # include <bits/alloc_traits.h>
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #if __cplusplus < 201103L
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** # include <bits/allocator.h>  // for __alloc_swap
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #endif
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** {
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** /**
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 386


  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****  * @brief  Uniform interface to C++98 and C++11 allocators.
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****  * @ingroup allocators
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** */
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** template<typename _Alloc, typename = typename _Alloc::value_type>
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   struct __alloc_traits
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #if __cplusplus >= 201103L
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   : std::allocator_traits<_Alloc>
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #endif
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   {
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef _Alloc allocator_type;
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #if __cplusplus >= 201103L
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef std::allocator_traits<_Alloc>           _Base_type;
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::value_type         value_type;
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::pointer            pointer;
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::const_pointer      const_pointer;
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::size_type          size_type;
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::difference_type    difference_type;
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     // C++11 allocators do not define reference or const_reference
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef value_type&                             reference;
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef const value_type&                       const_reference;
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::allocate;
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::deallocate;
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::construct;
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::destroy;
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::max_size;
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   private:
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     template<typename _Ptr>
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       using __is_custom_pointer
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 	= std::__and_<std::is_same<pointer, _Ptr>,
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 		      std::__not_<std::is_pointer<_Ptr>>>;
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   public:
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     // overload construct for non-standard pointer types
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     template<typename _Ptr, typename... _Args>
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       static _GLIBCXX14_CONSTEXPR
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       std::__enable_if_t<__is_custom_pointer<_Ptr>::value>
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       construct(_Alloc& __a, _Ptr __p, _Args&&... __args)
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       noexcept(noexcept(_Base_type::construct(__a, std::__to_address(__p),
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 					      std::forward<_Args>(__args)...)))
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       {
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 	_Base_type::construct(__a, std::__to_address(__p),
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 			      std::forward<_Args>(__args)...);
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       }
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     // overload destroy for non-standard pointer types
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     template<typename _Ptr>
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       static _GLIBCXX14_CONSTEXPR
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       std::__enable_if_t<__is_custom_pointer<_Ptr>::value>
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       destroy(_Alloc& __a, _Ptr __p)
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       noexcept(noexcept(_Base_type::destroy(__a, std::__to_address(__p))))
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       { _Base_type::destroy(__a, std::__to_address(__p)); }
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     static constexpr _Alloc _S_select_on_copy(const _Alloc& __a)
 2631              		.loc 25 97 29 is_stmt 1 view .LVU540
 2632              	.LBB2888:
 2633              	.LBI2888:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 387


 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(is_nothrow_destructible<_Up>::value)
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  __a.destroy(__p);
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  std::destroy_at(__p);
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  The maximum supported allocation size
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __a.max_size()
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR size_type
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       {
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return __a.max_size();
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return size_t(-1) / sizeof(value_type);
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       }
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __rhs  An allocator.
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __rhs
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR allocator_type
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       select_on_container_copy_construction(const allocator_type& __rhs)
 2634              		.loc 5 558 7 view .LVU541
 2635              	.LBB2889:
 2636              	.LBI2889:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 2637              		.loc 8 147 7 view .LVU542
 2638              	.LBB2890:
 2639              	.LBI2890:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2640              		.loc 6 82 7 view .LVU543
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2641              		.loc 6 82 7 is_stmt 0 view .LVU544
 2642              	.LBE2890:
 2643              	.LBE2889:
 2644              	.LBE2888:
 2645              	.LBE2887:
 2646              	.LBB2891:
 2647              	.LBI2891:
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 2648              		.loc 4 159 2 is_stmt 1 view .LVU545
 2649              	.LBB2892:
 2650              	.LBB2893:
 2651              	.LBI2893:
 2652              		.file 26 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\move.h"
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // Move, forward and identity for C++11 + swap -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // Copyright (C) 2007-2020 Free Software Foundation, Inc.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 388


   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** /** @file bits/move.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****  *  This is an internal header file, included by other library headers.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****  *  Do not attempt to use it directly. @headername{utility}
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****  */
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #ifndef _MOVE_H
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #define _MOVE_H 1
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #include <bits/c++config.h>
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #if __cplusplus < 201103L
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** # include <bits/concept_check.h>
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #endif
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** {
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   // Used, in C++03 mode too, by allocators, etc.
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief Same as C++11 std::addressof
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @ingroup utilities
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    */
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     inline _GLIBCXX_CONSTEXPR _Tp*
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return __builtin_addressof(__r); }
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #if __cplusplus >= 201103L
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** _GLIBCXX_END_NAMESPACE_VERSION
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** } // namespace
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #include <type_traits> // Brings in std::declval too.
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** {
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 389


  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @addtogroup utilities
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @{
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    */
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief  Forward an lvalue.
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @return The parameter cast to the specified type.
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  This function is used to implement "perfect forwarding".
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    */
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     constexpr _Tp&&
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     forward(typename std::remove_reference<_Tp>::type& __t) noexcept
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief  Forward an rvalue.
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @return The parameter cast to the specified type.
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  This function is used to implement "perfect forwarding".
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    */
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     constexpr _Tp&&
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     forward(typename std::remove_reference<_Tp>::type&& __t) noexcept
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     {
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       static_assert(!std::is_lvalue_reference<_Tp>::value, "template argument"
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 		    " substituting _Tp is an lvalue reference type");
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       return static_cast<_Tp&&>(__t);
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     }
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief  Convert a value to an rvalue.
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @param  __t  A thing of arbitrary type.
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @return The parameter cast to an rvalue-reference to allow moving it.
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   */
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     constexpr typename std::remove_reference<_Tp>::type&&
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     move(_Tp&& __t) noexcept
 2653              		.loc 26 101 5 view .LVU546
 2654              		.loc 26 101 5 is_stmt 0 view .LVU547
 2655              	.LBE2893:
 2656              	.LBB2894:
 2657              	.LBI2894:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 2658              		.loc 8 147 7 is_stmt 1 view .LVU548
 2659              	.LBB2895:
 2660              	.LBI2895:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2661              		.loc 6 82 7 view .LVU549
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2662              		.loc 6 82 7 is_stmt 0 view .LVU550
 2663              	.LBE2895:
 2664              	.LBE2894:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 390


 2665              		.loc 4 160 46 view .LVU551
 2666 00ca 4160     		str	r1, [r0, #4]
 2667              	.LVL153:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 2668              		.loc 4 160 46 view .LVU552
 2669              	.LBE2892:
 2670              	.LBE2891:
 2671              	.LBB2896:
 2672              	.LBI2896:
 2673              		.loc 8 162 7 is_stmt 1 view .LVU553
 2674              	.LBB2897:
 2675              	.LBI2897:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2676              		.loc 6 89 7 view .LVU554
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2677              		.loc 6 89 7 is_stmt 0 view .LVU555
 2678              	.LBE2897:
 2679              	.LBE2896:
 2680              	.LBB2898:
 2681              	.LBI2806:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2682              		.loc 4 186 7 is_stmt 1 view .LVU556
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2683              		.loc 4 186 7 is_stmt 0 view .LVU557
 2684              	.LBE2898:
 2685              	.LBB2899:
 2686              	.LBI2899:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2687              		.loc 4 186 7 is_stmt 1 view .LVU558
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2688              		.loc 4 186 7 is_stmt 0 view .LVU559
 2689              	.LBE2899:
 2690              	.LBB2900:
 2691              	.LBI2808:
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 2692              		.loc 4 907 7 is_stmt 1 view .LVU560
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 2693              		.loc 4 907 7 is_stmt 0 view .LVU561
 2694              	.LBE2900:
 2695              	.LBB2901:
 2696              	.LBI2810:
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 2697              		.loc 4 263 9 is_stmt 1 view .LVU562
 2698              	.LBB2881:
 2699              	.LBB2877:
 2700              	.LBI2812:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 2701              		.loc 4 243 9 view .LVU563
 2702              	.LBB2873:
 2703              	.LBB2869:
 2704              	.LBI2814:
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 2705              		.loc 24 206 7 view .LVU564
 2706              	.LBB2865:
 2707              		.loc 24 211 42 is_stmt 0 view .LVU565
 2708 00cc 03D0     		beq	.L104
 2709 00ce BAF1000F 		cmp	r10, #0
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 391


 2710 00d2 00F0C780 		beq	.L150
 2711              	.L104:
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	if (__dnew > size_type(_S_local_capacity))
 2712              		.loc 24 217 2 view .LVU566
 2713 00d6 0F2B     		cmp	r3, #15
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 2714              		.loc 24 215 12 view .LVU567
 2715 00d8 0493     		str	r3, [sp, #16]
 2716              		.loc 24 217 2 view .LVU568
 2717 00da 3FD8     		bhi	.L151
 2718              	.LVL154:
 2719              	.LBB2816:
 2720              	.LBI2816:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2721              		.loc 4 186 7 is_stmt 1 view .LVU569
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2722              		.loc 4 186 7 is_stmt 0 view .LVU570
 2723              	.LBE2816:
 2724              	.LBB2817:
 2725              	.LBI2817:
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 2726              		.loc 4 392 7 is_stmt 1 view .LVU571
 2727              	.LBB2818:
 2728              	.LBI2818:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2729              		.loc 4 346 7 view .LVU572
 2730              	.LBB2819:
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 2731              		.loc 4 348 2 is_stmt 0 view .LVU573
 2732 00dc 012B     		cmp	r3, #1
 2733 00de 38D1     		bne	.L107
 2734              	.LVL155:
 2735              	.LBB2820:
 2736              	.LBI2820:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 2737              		.loc 20 321 7 is_stmt 1 view .LVU574
 2738              	.LBB2821:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 2739              		.loc 20 322 9 view .LVU575
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 2740              		.loc 20 322 16 is_stmt 0 view .LVU576
 2741 00e0 9AF80020 		ldrb	r2, [r10]	@ zero_extendqisi2
 2742 00e4 0DF1100B 		add	fp, sp, #16
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 2743              		.loc 20 322 14 view .LVU577
 2744 00e8 88F80C20 		strb	r2, [r8, #12]
 2745              	.LVL156:
 2746              	.L108:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 2747              		.loc 20 322 14 view .LVU578
 2748              	.LBE2821:
 2749              	.LBE2820:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 392


 2750              	.LBE2819:
 2751              	.LBE2818:
 2752              	.LBE2817:
 2753              	.LBB2837:
 2754              	.LBI2837:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2755              		.loc 4 214 7 is_stmt 1 view .LVU579
 2756              	.LBB2838:
 2757              	.LBB2839:
 2758              	.LBI2839:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 2759              		.loc 4 182 7 view .LVU580
 2760              	.LBE2839:
 2761              	.LBB2841:
 2762              	.LBB2842:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 2763              		.loc 20 322 14 is_stmt 0 view .LVU581
 2764 00ec 4FF0000A 		mov	r10, #0
 2765              	.LVL157:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 2766              		.loc 20 322 14 view .LVU582
 2767              	.LBE2842:
 2768              	.LBE2841:
 2769              	.LBB2845:
 2770              	.LBB2840:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2771              		.loc 4 183 26 view .LVU583
 2772 00f0 C8F80830 		str	r3, [r8, #8]
 2773              	.LVL158:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2774              		.loc 4 183 26 view .LVU584
 2775              	.LBE2840:
 2776              	.LBE2845:
 2777              	.LBB2846:
 2778              	.LBI2846:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2779              		.loc 4 186 7 is_stmt 1 view .LVU585
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2780              		.loc 4 186 7 is_stmt 0 view .LVU586
 2781              	.LBE2846:
 2782              	.LBB2848:
 2783              	.LBI2841:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 2784              		.loc 20 321 7 is_stmt 1 view .LVU587
 2785              	.LBB2843:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 2786              		.loc 20 322 9 view .LVU588
 2787              	.LBE2843:
 2788              	.LBE2848:
 2789              	.LBE2838:
 2790              	.LBE2837:
 2791              	.LBE2865:
 2792              	.LBE2869:
 2793              	.LBE2873:
 2794              	.LBE2877:
 2795              	.LBE2881:
 2796              	.LBE2901:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 393


 2797              	.LBE2906:
 2798              	.LBE2911:
 2799              	.LBE2916:
 2800              	.LBE2922:
 2801              	.LBE2929:
 2802              	.LBE2948:
 2803              	.LBE2954:
 2804              	.LBE2960:
 2805              	.LBE2966:
 2806              	.LBB2967:
 2807              	.LBB2968:
1723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 					  __n_elt);
 2808              		.loc 2 1723 35 is_stmt 0 view .LVU589
 2809 00f4 5846     		mov	r0, fp
 2810              	.LBE2968:
 2811              	.LBE2967:
 2812              	.LBB3060:
 2813              	.LBB2961:
 2814              	.LBB2955:
 2815              	.LBB2949:
 2816              	.LBB2930:
 2817              	.LBB2923:
 2818              	.LBB2917:
 2819              	.LBB2912:
 2820              	.LBB2907:
 2821              	.LBB2902:
 2822              	.LBB2882:
 2823              	.LBB2878:
 2824              	.LBB2874:
 2825              	.LBB2870:
 2826              	.LBB2866:
 2827              	.LBB2853:
 2828              	.LBB2851:
 2829              	.LBB2849:
 2830              	.LBB2844:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 2831              		.loc 20 322 14 view .LVU590
 2832 00f6 01F803A0 		strb	r10, [r1, r3]
 2833              	.LVL159:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 2834              		.loc 20 322 14 view .LVU591
 2835              	.LBE2844:
 2836              	.LBE2849:
 2837              	.LBE2851:
 2838              	.LBE2853:
 2839              	.LBE2866:
 2840              	.LBE2870:
 2841              	.LBE2874:
 2842              	.LBE2878:
 2843              	.LBE2882:
 2844              	.LBE2902:
 2845              	.LBE2907:
 2846              	.LBE2912:
 2847              	.LBE2917:
 2848              	.LBE2923:
 2849              	.LBE2930:
 2850              	.LBE2949:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 394


 2851              	.LBE2955:
 2852              	.LBE2961:
 2853              	.LBE3060:
 2854              	.LBB3061:
 2855              	.LBB3054:
1723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 					  __n_elt);
 2856              		.loc 2 1723 35 view .LVU592
 2857 00fa 18EE101A 		vmov	r1, s16	@ int
 2858              	.LBE3054:
 2859              	.LBE3061:
 2860              	.LBB3062:
 2861              	.LBB2962:
 2862              	.LBB2956:
 2863              	.LBB2950:
 2864              	.LBB2931:
 2865              	.LBB2924:
 2866              	.LBB2918:
 2867              		.loc 7 314 17 view .LVU593
 2868 00fe AB69     		ldr	r3, [r5, #24]
 2869 0100 C8F81C30 		str	r3, [r8, #28]
 2870              	.LVL160:
 2871              		.loc 7 314 17 view .LVU594
 2872              	.LBE2918:
 2873              	.LBE2924:
 2874              	.LBE2931:
 2875              	.LBE2950:
 2876              	.LBE2956:
 2877              	.LBE2962:
 2878              	.LBE3062:
 2879              	.LBB3063:
 2880              	.LBI3063:
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	: _M_h(__h), _M_node(__n) { }
 2881              		.loc 2 265 2 is_stmt 1 view .LVU595
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	: _M_h(__h), _M_node(__n) { }
 2882              		.loc 2 265 2 is_stmt 0 view .LVU596
 2883              	.LBE3063:
 2884              	.LBB3064:
 2885              	.LBI2967:
1714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 2886              		.loc 2 1714 5 is_stmt 1 view .LVU597
1714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 2887              		.loc 2 1714 5 is_stmt 0 view .LVU598
 2888              	.LBE3064:
 2889              	.LBE3079:
 2890              	.LBE3090:
 2891              	.LBE3100:
 2892              	.LBE3110:
 2893              	.LBE3126:
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 2894              		.loc 3 477 7 is_stmt 1 view .LVU599
 2895              	.LBB3127:
 2896              	.LBB3111:
 2897              	.LBB3101:
 2898              	.LBB3091:
 2899              	.LBB3080:
 2900              	.LBB3065:
 2901              	.LBB3055:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 395


1723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 					  __n_elt);
 2902              		.loc 2 1723 35 is_stmt 0 view .LVU600
 2903 0104 0123     		movs	r3, #1
 2904 0106 0093     		str	r3, [sp]
 2905 0108 E368     		ldr	r3, [r4, #12]
 2906 010a 6268     		ldr	r2, [r4, #4]
 2907 010c FFF7FEFF 		bl	_ZNKSt8__detail20_Prime_rehash_policy14_M_need_rehashEjjj
 2908              	.LVL161:
1726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 2909              		.loc 2 1726 7 view .LVU601
 2910 0110 9DF81030 		ldrb	r3, [sp, #16]	@ zero_extendqisi2
 2911 0114 002B     		cmp	r3, #0
 2912 0116 3AD1     		bne	.L109
 2913              	.LVL162:
 2914              	.LBB2969:
 2915              	.LBI2969:
1394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { __n->_M_hash_code = __c; }
 2916              		.loc 3 1394 7 is_stmt 1 view .LVU602
 2917              	.LBE2969:
 2918              	.LBB2972:
 2919              	.LBB2973:
1599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 2920              		.loc 2 1599 11 is_stmt 0 view .LVU603
 2921 0118 D4F800A0 		ldr	r10, [r4]
1599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 2922              		.loc 2 1599 21 view .LVU604
 2923 011c 5AF82730 		ldr	r3, [r10, r7, lsl #2]
 2924 0120 0AEB8702 		add	r2, r10, r7, lsl #2
 2925              	.LBE2973:
 2926              	.LBE2972:
 2927              	.LBB2983:
 2928              	.LBB2970:
1395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 2929              		.loc 3 1395 27 view .LVU605
 2930 0124 C8F82060 		str	r6, [r8, #32]
 2931              	.LVL163:
1395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 2932              		.loc 3 1395 27 view .LVU606
 2933              	.LBE2970:
 2934              	.LBE2983:
 2935              	.LBB2984:
 2936              	.LBI2972:
1595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 2937              		.loc 2 1595 5 is_stmt 1 view .LVU607
 2938              	.LBB2980:
1599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 2939              		.loc 2 1599 7 is_stmt 0 view .LVU608
 2940 0128 002B     		cmp	r3, #0
 2941 012a 6CD0     		beq	.L119
 2942              	.LVL164:
 2943              	.L154:
1603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_buckets[__bkt]->_M_nxt = __node;
 2944              		.loc 2 1603 40 view .LVU609
 2945 012c 1B68     		ldr	r3, [r3]
1603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_buckets[__bkt]->_M_nxt = __node;
 2946              		.loc 2 1603 19 view .LVU610
 2947 012e C8F80030 		str	r3, [r8]
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 396


1604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
 2948              		.loc 2 1604 14 view .LVU611
 2949 0132 5AF82730 		ldr	r3, [r10, r7, lsl #2]
1604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
 2950              		.loc 2 1604 30 view .LVU612
 2951 0136 C3F80080 		str	r8, [r3]
 2952              	.L120:
 2953              	.LVL165:
1604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
 2954              		.loc 2 1604 30 view .LVU613
 2955              	.LBE2980:
 2956              	.LBE2984:
1736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return iterator(__node);
 2957              		.loc 2 1736 7 view .LVU614
 2958 013a E368     		ldr	r3, [r4, #12]
 2959              	.LBE3055:
 2960              	.LBE3065:
 2961              	.LBE3080:
 2962              	.LBE3091:
 2963              	.LBE3101:
 2964              	.LBE3111:
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  this->insert(*__f);
 2965              		.loc 2 1036 2 view .LVU615
 2966 013c 1C35     		adds	r5, r5, #28
 2967              	.LVL166:
 2968              	.LBB3112:
 2969              	.LBB3102:
 2970              	.LBB3092:
 2971              	.LBB3081:
 2972              	.LBB3066:
 2973              	.LBB3056:
1736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return iterator(__node);
 2974              		.loc 2 1736 7 view .LVU616
 2975 013e 0133     		adds	r3, r3, #1
 2976              	.LBE3056:
 2977              	.LBE3066:
 2978              	.LBE3081:
 2979              	.LBE3092:
 2980              	.LBE3102:
 2981              	.LBE3112:
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  this->insert(*__f);
 2982              		.loc 2 1036 13 view .LVU617
 2983 0140 A945     		cmp	r9, r5
 2984              	.LBB3113:
 2985              	.LBB3103:
 2986              	.LBB3093:
 2987              	.LBB3082:
 2988              	.LBB3067:
 2989              	.LBB3057:
1736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return iterator(__node);
 2990              		.loc 2 1736 7 view .LVU618
 2991 0142 E360     		str	r3, [r4, #12]
 2992              	.LVL167:
 2993              	.LBB2985:
 2994              	.LBI2985:
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __base_type(__p) { }
 2995              		.loc 3 340 7 is_stmt 1 view .LVU619
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 397


 2996              	.LBB2986:
 2997              	.LBI2986:
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_cur(__p) { }
 2998              		.loc 3 294 7 view .LVU620
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_cur(__p) { }
 2999              		.loc 3 294 7 is_stmt 0 view .LVU621
 3000              	.LBE2986:
 3001              	.LBE2985:
 3002              	.LBE3057:
 3003              	.LBE3067:
 3004              	.LBB3068:
 3005              	.LBI3068:
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(pair&&) = default;		///< Move constructor
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       // DR 811.
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCP::template
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _MoveCopyPair<true, _U1, _T2>(),
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=true>
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        constexpr pair(_U1&& __x, const _T2& __y)
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(std::forward<_U1>(__x)), second(__y) { }
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCP::template
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _MoveCopyPair<false, _U1, _T2>(),
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=false>
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        explicit constexpr pair(_U1&& __x, const _T2& __y)
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(std::forward<_U1>(__x)), second(__y) { }
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U2, typename
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCP::template
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _CopyMovePair<true, _T1, _U2>(),
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=true>
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        constexpr pair(const _T1& __x, _U2&& __y)
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(__x), second(std::forward<_U2>(__y)) { }
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U2, typename
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCP::template
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _CopyMovePair<false, _T1, _U2>(),
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=false>
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        explicit pair(const _T1& __x, _U2&& __y)
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(__x), second(std::forward<_U2>(__y)) { }
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename _U2, typename
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCP::template
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _MoveConstructiblePair<_U1, _U2>()
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			  && _PCCP::template
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=true>
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	constexpr pair(_U1&& __x, _U2&& __y)
 3006              		.loc 7 352 12 is_stmt 1 view .LVU622
 3007              	.LBB3069:
 3008              	.LBI3069:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 3009              		.loc 26 76 5 view .LVU623
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 3010              		.loc 26 76 5 is_stmt 0 view .LVU624
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 398


 3011              	.LBE3069:
 3012              	.LBB3070:
 3013              	.LBI3070:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 3014              		.loc 26 76 5 is_stmt 1 view .LVU625
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 3015              		.loc 26 76 5 is_stmt 0 view .LVU626
 3016              	.LBE3070:
 3017              	.LBE3068:
 3018              	.LBB3071:
 3019              	.LBI3071:
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 3020              		.loc 2 276 2 is_stmt 1 view .LVU627
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 3021              		.loc 2 276 2 is_stmt 0 view .LVU628
 3022              	.LBE3071:
 3023              	.LBE3082:
 3024              	.LBE3093:
 3025              	.LBE3103:
 3026              	.LBE3113:
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  this->insert(*__f);
 3027              		.loc 2 1036 2 is_stmt 1 view .LVU629
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  this->insert(*__f);
 3028              		.loc 2 1036 13 view .LVU630
 3029 0144 A1D1     		bne	.L101
 3030              	.LVL168:
 3031              	.L131:
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  this->insert(*__f);
 3032              		.loc 2 1036 13 is_stmt 0 view .LVU631
 3033              	.LBE3127:
1038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 3034              		.loc 2 1038 7 view .LVU632
 3035 0146 2046     		mov	r0, r4
 3036 0148 07B0     		add	sp, sp, #28
 3037              		.cfi_remember_state
 3038              		.cfi_def_cfa_offset 44
 3039              		@ sp needed
 3040 014a BDEC028B 		vldm	sp!, {d8}
 3041              		.cfi_restore 80
 3042              		.cfi_restore 81
 3043              		.cfi_def_cfa_offset 36
 3044 014e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3045              	.LVL169:
 3046              	.L107:
 3047              		.cfi_restore_state
 3048              	.LBB3128:
 3049              	.LBB3114:
 3050              	.LBB3104:
 3051              	.LBB3094:
 3052              	.LBB3083:
 3053              	.LBB3072:
 3054              	.LBB2963:
 3055              	.LBB2957:
 3056              	.LBB2951:
 3057              	.LBB2932:
 3058              	.LBB2925:
 3059              	.LBB2919:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 399


 3060              	.LBB2913:
 3061              	.LBB2908:
 3062              	.LBB2903:
 3063              	.LBB2883:
 3064              	.LBB2879:
 3065              	.LBB2875:
 3066              	.LBB2871:
 3067              	.LBB2867:
 3068              	.LBB2854:
 3069              	.LBB2834:
 3070              	.LBB2831:
 3071              	.LBB2822:
 3072              	.LBI2822:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3073              		.loc 4 346 7 is_stmt 1 view .LVU633
 3074              	.LBB2823:
 3075              	.LBI2823:
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX17_CONSTEXPR size_t
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       length(const char_type* __s)
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus >= 201703L
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__constant_string_p(__s))
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return __builtin_strlen(__s);
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX17_CONSTEXPR const char_type*
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       find(const char_type* __s, size_t __n, const char_type& __a)
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__n == 0)
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus >= 201703L
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__builtin_constant_p(__n)
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    && __builtin_constant_p(__a)
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    && __constant_char_array_p(__s, __n))
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::find(__s, __n, __a);
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return static_cast<const char_type*>(__builtin_memchr(__s, __a, __n));
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       move(char_type* __s1, const char_type* __s2, size_t __n)
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__n == 0)
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef __cpp_lib_is_constant_evaluated
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (std::is_constant_evaluated())
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::move(__s1, __s2, __n);
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return static_cast<char_type*>(__builtin_memmove(__s1, __s2, __n));
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       copy(char_type* __s1, const char_type* __s2, size_t __n)
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 400


 3076              		.loc 20 387 7 view .LVU634
 3077              	.LBB2824:
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__n == 0)
 3078              		.loc 20 389 2 view .LVU635
 3079 0152 0DF1100B 		add	fp, sp, #16
 3080 0156 002B     		cmp	r3, #0
 3081 0158 C8D0     		beq	.L108
 3082 015a 0FE0     		b	.L106
 3083              	.LVL170:
 3084              	.L151:
 3085              		.loc 20 389 2 is_stmt 0 view .LVU636
 3086              	.LBE2824:
 3087              	.LBE2823:
 3088              	.LBE2822:
 3089              	.LBE2831:
 3090              	.LBE2834:
 3091              	.LBE2854:
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_data(_M_create(__dnew, size_type(0)));
 3092              		.loc 24 219 13 view .LVU637
 3093 015c 0DF1100B 		add	fp, sp, #16
 3094 0160 0022     		movs	r2, #0
 3095 0162 08F10400 		add	r0, r8, #4
 3096              	.LVL171:
 3097              		.loc 24 219 13 view .LVU638
 3098 0166 0293     		str	r3, [sp, #8]
 3099 0168 5946     		mov	r1, fp
 3100 016a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 3101              	.LVL172:
 3102              	.LBB2855:
 3103              	.LBB2856:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3104              		.loc 4 211 31 view .LVU639
 3105 016e 049A     		ldr	r2, [sp, #16]
 3106              	.LBE2856:
 3107              	.LBE2855:
 3108              		.loc 24 219 13 view .LVU640
 3109 0170 0146     		mov	r1, r0
 3110              	.LVL173:
 3111              	.LBB2858:
 3112              	.LBI2858:
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 3113              		.loc 4 178 7 is_stmt 1 view .LVU641
 3114 0172 029B     		ldr	r3, [sp, #8]
 3115              	.LBB2859:
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3116              		.loc 4 179 26 is_stmt 0 view .LVU642
 3117 0174 C8F80400 		str	r0, [r8, #4]
 3118              	.LVL174:
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3119              		.loc 4 179 26 view .LVU643
 3120              	.LBE2859:
 3121              	.LBE2858:
 3122              	.LBB2860:
 3123              	.LBI2855:
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 401


 3124              		.loc 4 210 7 is_stmt 1 view .LVU644
 3125              	.LBB2857:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3126              		.loc 4 211 31 is_stmt 0 view .LVU645
 3127 0178 C8F80C20 		str	r2, [r8, #12]
 3128              	.LVL175:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3129              		.loc 4 211 31 view .LVU646
 3130              	.LBE2857:
 3131              	.LBE2860:
 3132              	.LBB2861:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 3133              		.loc 4 186 7 is_stmt 1 view .LVU647
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 3134              		.loc 4 186 7 is_stmt 0 view .LVU648
 3135              	.LBE2861:
 3136              	.LBB2862:
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 3137              		.loc 4 392 7 is_stmt 1 view .LVU649
 3138              	.LBB2835:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3139              		.loc 4 346 7 view .LVU650
 3140              	.LBB2832:
 3141              	.LBB2829:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3142              		.loc 4 346 7 view .LVU651
 3143              	.LBB2827:
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 3144              		.loc 20 387 7 view .LVU652
 3145              	.LBB2825:
 3146              		.loc 20 389 2 view .LVU653
 3147              	.L106:
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef __cpp_lib_is_constant_evaluated
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (std::is_constant_evaluated())
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::copy(__s1, __s2, __n);
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
 3148              		.loc 20 395 2 view .LVU654
 3149              		.loc 20 395 49 is_stmt 0 view .LVU655
 3150 017c 1A46     		mov	r2, r3
 3151 017e 0846     		mov	r0, r1
 3152 0180 5146     		mov	r1, r10
 3153              	.LVL176:
 3154              		.loc 20 395 49 view .LVU656
 3155 0182 FFF7FEFF 		bl	memcpy
 3156              	.LVL177:
 3157              		.loc 20 395 49 view .LVU657
 3158              	.LBE2825:
 3159              	.LBE2827:
 3160              	.LBE2829:
 3161              	.LBE2832:
 3162              	.LBE2835:
 3163              	.LBE2862:
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 402


 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	// Check for out_of_range and length_error exceptions.
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	__try
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  { this->_S_copy_chars(_M_data(), __beg, __end); }
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	__catch(...)
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_dispose();
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    __throw_exception_again;
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	_M_set_length(__dnew);
 3164              		.loc 24 232 15 view .LVU658
 3165 0186 049B     		ldr	r3, [sp, #16]
 3166              	.LBB2863:
 3167              	.LBB2852:
 3168              	.LBB2850:
 3169              	.LBB2847:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3170              		.loc 4 187 28 view .LVU659
 3171 0188 D8F80410 		ldr	r1, [r8, #4]
 3172              	.LBE2847:
 3173              	.LBE2850:
 3174              	.LBE2852:
 3175              	.LBE2863:
 3176              	.LBB2864:
 3177              	.LBB2836:
 3178              	.LBB2833:
 3179              	.LBB2830:
 3180              	.LBB2828:
 3181              	.LBB2826:
 3182              		.loc 20 395 66 view .LVU660
 3183 018c AEE7     		b	.L108
 3184              	.LVL178:
 3185              	.L109:
 3186              		.loc 20 395 66 view .LVU661
 3187              	.LBE2826:
 3188              	.LBE2828:
 3189              	.LBE2830:
 3190              	.LBE2833:
 3191              	.LBE2836:
 3192              	.LBE2864:
 3193              	.LBE2867:
 3194              	.LBE2871:
 3195              	.LBE2875:
 3196              	.LBE2879:
 3197              	.LBE2883:
 3198              	.LBE2903:
 3199              	.LBE2908:
 3200              	.LBE2913:
 3201              	.LBE2919:
 3202              	.LBE2925:
 3203              	.LBE2932:
 3204              	.LBE2951:
 3205              	.LBE2957:
 3206              	.LBE2963:
 3207              	.LBE3072:
 3208              	.LBB3073:
 3209              	.LBB3058:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 403


1728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __bkt = _M_bucket_index(__k, __code);
 3210              		.loc 2 1728 13 view .LVU662
 3211 018e 059F     		ldr	r7, [sp, #20]
 3212              	.LVL179:
 3213              	.LBB2987:
 3214              	.LBI2987:
2034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
2035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
2036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
2037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
2038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
2039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
2040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     void
2041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
2042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
2043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     rehash(size_type __bkt_count)
2044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
2045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const __rehash_state& __saved_state = _M_rehash_policy._M_state();
2046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __bkt_count
2047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	= std::max(_M_rehash_policy._M_bkt_for_elements(_M_element_count + 1),
2048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   __bkt_count);
2049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __bkt_count = _M_rehash_policy._M_next_bkt(__bkt_count);
2050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
2051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__bkt_count != _M_bucket_count)
2052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_rehash(__bkt_count, __saved_state);
2053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       else
2054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// No rehash, restore previous state to keep it consistent with
2055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// container state.
2056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_rehash_policy._M_reset(__saved_state);
2057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
2058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
2059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
2060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
2061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
2062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
2063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     void
2064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
 3215              		.loc 2 2064 5 is_stmt 1 view .LVU663
 3216              	.LBB2988:
 3217              	.LBI2988:
2065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
2066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_rehash(size_type __bkt_count, const __rehash_state& __state)
2067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
2068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __try
2069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
2070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_rehash_aux(__bkt_count, __unique_keys());
2071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
2072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __catch(...)
2073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
2074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // A failure here means that buckets allocation failed.  We only
2075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // have to restore hash policy previous state.
2076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_rehash_policy._M_reset(__state);
2077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __throw_exception_again;
2078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
2079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
2080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
2081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   // Rehash when there is no equivalent elements.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 404


2082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
2083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
2084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
2085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
2086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     void
2087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
 3218              		.loc 2 2087 5 view .LVU664
 3219              	.LBB2989:
 3220              	.LBB2990:
 3221              	.LBI2990:
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 3222              		.loc 2 390 7 view .LVU665
 3223              	.LBB2991:
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
 3224              		.loc 2 392 2 is_stmt 0 view .LVU666
 3225 0190 012F     		cmp	r7, #1
 3226 0192 60D0     		beq	.L152
 3227              	.LVL180:
 3228              	.LBB2992:
 3229              	.LBI2992:
2081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 3230              		.loc 3 2081 5 is_stmt 1 view .LVU667
 3231              	.LBB2993:
 3232              	.LBB2994:
 3233              	.LBI2994:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 3234              		.loc 8 157 2 view .LVU668
 3235              	.LBB2995:
 3236              	.LBI2995:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3237              		.loc 6 79 7 view .LVU669
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3238              		.loc 6 79 7 is_stmt 0 view .LVU670
 3239              	.LBE2995:
 3240              	.LBE2994:
 3241              	.LBB2996:
 3242              	.LBI2996:
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 3243              		.loc 5 459 7 is_stmt 1 view .LVU671
 3244              	.LBB2997:
 3245              	.LBI2997:
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 3246              		.loc 6 103 7 view .LVU672
 3247              	.LBB2998:
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  std::__throw_bad_alloc();
 3248              		.loc 6 105 2 is_stmt 0 view .LVU673
 3249 0194 B7F1005F 		cmp	r7, #536870912
 3250 0198 62D2     		bcs	.L113
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 3251              		.loc 6 115 41 view .LVU674
 3252 019a BA00     		lsls	r2, r7, #2
 3253 019c 1046     		mov	r0, r2
 3254 019e 0292     		str	r2, [sp, #8]
 3255 01a0 FFF7FEFF 		bl	_Znwj
 3256              	.LVL181:
 3257              	.LBE2998:
 3258              	.LBE2997:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 405


 3259              	.LBE2996:
2087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return __p;
 3260              		.loc 3 2087 23 view .LVU675
 3261 01a4 5146     		mov	r1, r10
 3262 01a6 029A     		ldr	r2, [sp, #8]
 3263              	.LBB3001:
 3264              	.LBB3000:
 3265              	.LBB2999:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 3266              		.loc 6 115 41 view .LVU676
 3267 01a8 8246     		mov	r10, r0
 3268              	.LVL182:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 3269              		.loc 6 115 41 view .LVU677
 3270              	.LBE2999:
 3271              	.LBE3000:
 3272              	.LBE3001:
2087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return __p;
 3273              		.loc 3 2087 23 view .LVU678
 3274 01aa FFF7FEFF 		bl	memset
 3275              	.LVL183:
 3276              	.LBB3002:
 3277              	.LBI3002:
 3278              		.loc 8 162 7 is_stmt 1 view .LVU679
 3279              	.LBB3003:
 3280              	.LBI3003:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3281              		.loc 6 89 7 view .LVU680
 3282              	.L112:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3283              		.loc 6 89 7 is_stmt 0 view .LVU681
 3284              	.LBE3003:
 3285              	.LBE3002:
 3286              	.LBE2993:
 3287              	.LBE2992:
 3288              	.LBE2991:
 3289              	.LBE2990:
 3290              	.LBB3005:
 3291              	.LBI3005:
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return static_cast<__node_type*>(_M_before_begin._M_nxt); }
 3292              		.loc 2 420 7 is_stmt 1 view .LVU682
 3293              	.LBB3006:
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 3294              		.loc 2 421 64 is_stmt 0 view .LVU683
 3295 01ae A068     		ldr	r0, [r4, #8]
 3296              	.LVL184:
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 3297              		.loc 2 421 64 view .LVU684
 3298              	.LBE3006:
 3299              	.LBE3005:
2088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
2089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_rehash_aux(size_type __bkt_count, true_type)
2090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
2091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __bucket_type* __new_buckets = _M_allocate_buckets(__bkt_count);
2092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type* __p = _M_begin();
2093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_before_begin._M_nxt = nullptr;
 3300              		.loc 2 2093 30 view .LVU685
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 406


 3301 01b0 0023     		movs	r3, #0
 3302 01b2 A360     		str	r3, [r4, #8]
 3303              	.LVL185:
2094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __bbegin_bkt = 0;
2095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       while (__p)
 3304              		.loc 2 2095 14 is_stmt 1 view .LVU686
 3305 01b4 88B1     		cbz	r0, .L114
2094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __bbegin_bkt = 0;
 3306              		.loc 2 2094 19 is_stmt 0 view .LVU687
 3307 01b6 9C46     		mov	ip, r3
 3308              	.LVL186:
 3309              	.L115:
 3310              	.LBB3007:
 3311              	.LBB3008:
 3312              	.LBI3008:
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return static_cast<_Hash_node*>(this->_M_nxt); }
 3313              		.loc 3 269 7 is_stmt 1 view .LVU688
 3314 01b8 0246     		mov	r2, r0
 3315              	.LBB3009:
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 3316              		.loc 3 270 53 is_stmt 0 view .LVU689
 3317 01ba 0068     		ldr	r0, [r0]
 3318              	.LVL187:
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 3319              		.loc 3 270 53 view .LVU690
 3320              	.LBE3009:
 3321              	.LBE3008:
 3322              	.LBB3010:
 3323              	.LBI3010:
1388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	noexcept( noexcept(declval<const _H2&>()((__hash_code)0,
 3324              		.loc 3 1388 7 is_stmt 1 view .LVU691
 3325              	.LBB3011:
 3326              	.LBB3012:
 3327              	.LBI3012:
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       second_argument_type __den) const noexcept
 3328              		.loc 3 431 5 view .LVU692
 3329              	.LBB3013:
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 3330              		.loc 3 433 7 view .LVU693
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 3331              		.loc 3 433 22 is_stmt 0 view .LVU694
 3332 01bc 136A     		ldr	r3, [r2, #32]
 3333 01be B3FBF7F1 		udiv	r1, r3, r7
 3334 01c2 07FB1133 		mls	r3, r7, r1, r3
 3335              	.LVL188:
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 3336              		.loc 3 433 22 view .LVU695
 3337              	.LBE3013:
 3338              	.LBE3012:
 3339              	.LBE3011:
 3340              	.LBE3010:
2096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
2097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __node_type* __next = __p->_M_next();
2098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  std::size_t __bkt
2099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    = __hash_code_base::_M_bucket_index(__p, __bkt_count);
2100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (!__new_buckets[__bkt])
 3341              		.loc 2 2100 22 view .LVU696
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 407


 3342 01c6 5AF82310 		ldr	r1, [r10, r3, lsl #2]
 3343              		.loc 2 2100 4 view .LVU697
 3344 01ca 71B3     		cbz	r1, .L153
 3345              	.LVL189:
 3346              		.loc 2 2100 4 view .LVU698
 3347              	.LBE3007:
2095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 3348              		.loc 2 2095 14 is_stmt 1 view .LVU699
 3349              	.LBB3014:
2101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    {
2102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __p->_M_nxt = _M_before_begin._M_nxt;
2103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_before_begin._M_nxt = __p;
2104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __new_buckets[__bkt] = &_M_before_begin;
2105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      if (__p->_M_nxt)
2106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		__new_buckets[__bbegin_bkt] = __p;
2107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __bbegin_bkt = __bkt;
2108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    }
2109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  else
2110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    {
2111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __p->_M_nxt = __new_buckets[__bkt]->_M_nxt;
 3350              		.loc 2 2111 44 is_stmt 0 view .LVU700
 3351 01cc 0968     		ldr	r1, [r1]
 3352              		.loc 2 2111 20 view .LVU701
 3353 01ce 1160     		str	r1, [r2]
2112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __new_buckets[__bkt]->_M_nxt = __p;
 3354              		.loc 2 2112 21 view .LVU702
 3355 01d0 5AF82330 		ldr	r3, [r10, r3, lsl #2]
 3356              	.LVL190:
 3357              		.loc 2 2112 37 view .LVU703
 3358 01d4 1A60     		str	r2, [r3]
 3359              	.LBE3014:
2095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 3360              		.loc 2 2095 14 view .LVU704
 3361 01d6 0028     		cmp	r0, #0
 3362 01d8 EED1     		bne	.L115
 3363              	.LVL191:
 3364              	.L114:
 3365              	.LBB3015:
 3366              	.LBI3015:
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { _M_deallocate_buckets(_M_buckets, _M_bucket_count); }
 3367              		.loc 2 411 7 is_stmt 1 view .LVU705
 3368              	.LBB3016:
 3369              	.LBB3017:
 3370              	.LBB3018:
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return;
 3371              		.loc 2 404 2 is_stmt 0 view .LVU706
 3372 01da 039B     		ldr	r3, [sp, #12]
 3373              	.LBE3018:
 3374              	.LBE3017:
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 3375              		.loc 2 412 30 view .LVU707
 3376 01dc D4E90001 		ldrd	r0, r1, [r4]
 3377              	.LVL192:
 3378              	.LBB3029:
 3379              	.LBI3017:
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 3380              		.loc 2 402 7 is_stmt 1 view .LVU708
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 408


 3381              	.LBB3028:
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return;
 3382              		.loc 2 404 2 is_stmt 0 view .LVU709
 3383 01e0 8342     		cmp	r3, r0
 3384 01e2 02D0     		beq	.L118
 3385              	.LVL193:
 3386              	.LBB3019:
 3387              	.LBI3019:
 3388              		.loc 3 2093 5 is_stmt 1 view .LVU710
 3389              	.LBB3020:
 3390              	.LBB3021:
 3391              	.LBI3021:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 3392              		.loc 8 157 2 view .LVU711
 3393              	.LBB3022:
 3394              	.LBI3022:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3395              		.loc 6 79 7 view .LVU712
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3396              		.loc 6 79 7 is_stmt 0 view .LVU713
 3397              	.LBE3022:
 3398              	.LBE3021:
 3399              	.LBB3023:
 3400              	.LBI3023:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 3401              		.loc 5 491 7 is_stmt 1 view .LVU714
 3402              	.LBB3024:
 3403              	.LBI3024:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 3404              		.loc 6 120 7 view .LVU715
 3405              	.LBB3025:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3406              		.loc 6 133 19 is_stmt 0 view .LVU716
 3407 01e4 8900     		lsls	r1, r1, #2
 3408              	.LVL194:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3409              		.loc 6 133 19 view .LVU717
 3410 01e6 FFF7FEFF 		bl	_ZdlPvj
 3411              	.LVL195:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3412              		.loc 6 133 19 view .LVU718
 3413              	.LBE3025:
 3414              	.LBE3024:
 3415              	.LBE3023:
 3416              	.LBB3026:
 3417              	.LBI3026:
 3418              		.loc 8 162 7 is_stmt 1 view .LVU719
 3419              	.LBB3027:
 3420              	.LBI3027:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3421              		.loc 6 89 7 view .LVU720
 3422              	.L118:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3423              		.loc 6 89 7 is_stmt 0 view .LVU721
 3424              	.LBE3027:
 3425              	.LBE3026:
 3426              	.LBE3020:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 409


 3427              	.LBE3019:
 3428              	.LBE3028:
 3429              	.LBE3029:
 3430              	.LBE3016:
 3431              	.LBE3015:
 3432              	.LBE2989:
 3433              	.LBE2988:
 3434              	.LBE2987:
 3435              	.LBB3039:
 3436              	.LBB3040:
 3437              	.LBB3041:
 3438              	.LBB3042:
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 3439              		.loc 3 433 22 view .LVU722
 3440 01ea B6FBF7F3 		udiv	r3, r6, r7
 3441              	.LBE3042:
 3442              	.LBE3041:
 3443              	.LBE3040:
 3444              	.LBE3039:
 3445              	.LBB3046:
 3446              	.LBB3036:
 3447              	.LBB3033:
2113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    }
2114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __p = __next;
2115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
2116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
2117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_deallocate_buckets();
2118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_bucket_count = __bkt_count;
2119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_buckets = __new_buckets;
 3448              		.loc 2 2119 18 view .LVU723
 3449 01ee C4E900A7 		strd	r10, r7, [r4]
 3450              	.LVL196:
 3451              		.loc 2 2119 18 view .LVU724
 3452              	.LBE3033:
 3453              	.LBE3036:
 3454              	.LBE3046:
 3455              	.LBB3047:
 3456              	.LBI3039:
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __hash_code_base::_M_bucket_index(__k, __c, _M_bucket_count); }
 3457              		.loc 2 681 7 is_stmt 1 view .LVU725
 3458              	.LBB3045:
 3459              	.LBI3040:
1383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      std::size_t __bkt_count) const
 3460              		.loc 3 1383 7 view .LVU726
 3461              	.LBB3044:
 3462              	.LBI3041:
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       second_argument_type __den) const noexcept
 3463              		.loc 3 431 5 view .LVU727
 3464              	.LBB3043:
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 3465              		.loc 3 433 7 view .LVU728
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 3466              		.loc 3 433 22 is_stmt 0 view .LVU729
 3467 01f2 07FB1367 		mls	r7, r7, r3, r6
 3468              	.LVL197:
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 3469              		.loc 3 433 22 view .LVU730
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 410


 3470              	.LBE3043:
 3471              	.LBE3044:
 3472              	.LBE3045:
 3473              	.LBE3047:
 3474              	.LBB3048:
1394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { __n->_M_hash_code = __c; }
 3475              		.loc 3 1394 7 is_stmt 1 view .LVU731
 3476              	.LBE3048:
 3477              	.LBB3049:
 3478              	.LBB2981:
1599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 3479              		.loc 2 1599 21 is_stmt 0 view .LVU732
 3480 01f6 5AF82730 		ldr	r3, [r10, r7, lsl #2]
 3481 01fa 0AEB8702 		add	r2, r10, r7, lsl #2
 3482              	.LBE2981:
 3483              	.LBE3049:
 3484              	.LBB3050:
 3485              	.LBB2971:
1395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 3486              		.loc 3 1395 27 view .LVU733
 3487 01fe C8F82060 		str	r6, [r8, #32]
 3488              	.LVL198:
1395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 3489              		.loc 3 1395 27 view .LVU734
 3490              	.LBE2971:
 3491              	.LBE3050:
 3492              	.LBB3051:
1595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 3493              		.loc 2 1595 5 is_stmt 1 view .LVU735
 3494              	.LBB2982:
1599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 3495              		.loc 2 1599 7 is_stmt 0 view .LVU736
 3496 0202 002B     		cmp	r3, #0
 3497 0204 92D1     		bne	.L154
 3498              	.LVL199:
 3499              	.L119:
1611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_before_begin._M_nxt = __node;
 3500              		.loc 2 1611 37 view .LVU737
 3501 0206 A368     		ldr	r3, [r4, #8]
1612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (__node->_M_nxt)
 3502              		.loc 2 1612 27 view .LVU738
 3503 0208 C4F80880 		str	r8, [r4, #8]
1611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_before_begin._M_nxt = __node;
 3504              		.loc 2 1611 19 view .LVU739
 3505 020c C8F80030 		str	r3, [r8]
1613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    // We must update former begin bucket that is pointing to
 3506              		.loc 2 1613 4 view .LVU740
 3507 0210 3BB1     		cbz	r3, .L121
 3508              	.LVL200:
 3509              	.LBB2974:
 3510              	.LBI2974:
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __hash_code_base::_M_bucket_index(__n, _M_bucket_count); }
 3511              		.loc 2 677 7 is_stmt 1 view .LVU741
 3512              	.LBB2975:
 3513              	.LBB2976:
 3514              	.LBI2976:
1388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	noexcept( noexcept(declval<const _H2&>()((__hash_code)0,
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 411


 3515              		.loc 3 1388 7 view .LVU742
 3516              	.LBB2977:
 3517              	.LBB2978:
 3518              	.LBI2978:
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       second_argument_type __den) const noexcept
 3519              		.loc 3 431 5 view .LVU743
 3520              	.LBB2979:
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 3521              		.loc 3 433 7 view .LVU744
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 3522              		.loc 3 433 22 is_stmt 0 view .LVU745
 3523 0212 1B6A     		ldr	r3, [r3, #32]
 3524 0214 6168     		ldr	r1, [r4, #4]
 3525 0216 B3FBF1F0 		udiv	r0, r3, r1
 3526 021a 01FB1033 		mls	r3, r1, r0, r3
 3527              	.LBE2979:
 3528              	.LBE2978:
 3529              	.LBE2977:
 3530              	.LBE2976:
 3531              	.LBE2975:
 3532              	.LBE2974:
1616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_buckets[__bkt] = &_M_before_begin;
 3533              		.loc 2 1616 53 view .LVU746
 3534 021e 4AF82380 		str	r8, [r10, r3, lsl #2]
 3535              	.L121:
1617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
 3536              		.loc 2 1617 25 view .LVU747
 3537 0222 04F10803 		add	r3, r4, #8
1617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
 3538              		.loc 2 1617 22 view .LVU748
 3539 0226 1360     		str	r3, [r2]
 3540 0228 87E7     		b	.L120
 3541              	.LVL201:
 3542              	.L153:
1617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
 3543              		.loc 2 1617 22 view .LVU749
 3544              	.LBE2982:
 3545              	.LBE3051:
 3546              	.LBB3052:
 3547              	.LBB3037:
 3548              	.LBB3034:
 3549              	.LBB3030:
2102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_before_begin._M_nxt = __p;
 3550              		.loc 2 2102 38 view .LVU750
 3551 022a A168     		ldr	r1, [r4, #8]
2102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_before_begin._M_nxt = __p;
 3552              		.loc 2 2102 20 view .LVU751
 3553 022c 1160     		str	r1, [r2]
2103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __new_buckets[__bkt] = &_M_before_begin;
 3554              		.loc 2 2103 31 view .LVU752
 3555 022e 2146     		mov	r1, r4
 3556 0230 41F8082F 		str	r2, [r1, #8]!
2104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      if (__p->_M_nxt)
 3557              		.loc 2 2104 29 view .LVU753
 3558 0234 4AF82310 		str	r1, [r10, r3, lsl #2]
2105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		__new_buckets[__bbegin_bkt] = __p;
 3559              		.loc 2 2105 8 view .LVU754
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 412


 3560 0238 1168     		ldr	r1, [r2]
 3561 023a 29B1     		cbz	r1, .L123
2106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __bbegin_bkt = __bkt;
 3562              		.loc 2 2106 31 view .LVU755
 3563 023c 4AF82C20 		str	r2, [r10, ip, lsl #2]
2107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    }
 3564              		.loc 2 2107 21 view .LVU756
 3565 0240 9C46     		mov	ip, r3
 3566              	.LVL202:
2107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    }
 3567              		.loc 2 2107 21 view .LVU757
 3568              	.LBE3030:
2095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 3569              		.loc 2 2095 14 is_stmt 1 view .LVU758
 3570 0242 0028     		cmp	r0, #0
 3571 0244 B8D1     		bne	.L115
 3572              	.LVL203:
2095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 3573              		.loc 2 2095 14 is_stmt 0 view .LVU759
 3574 0246 C8E7     		b	.L114
 3575              	.LVL204:
 3576              	.L123:
 3577              	.LBB3031:
2107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    }
 3578              		.loc 2 2107 21 view .LVU760
 3579 0248 9C46     		mov	ip, r3
 3580              	.LVL205:
2107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    }
 3581              		.loc 2 2107 21 view .LVU761
 3582              	.LBE3031:
2095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 3583              		.loc 2 2095 14 is_stmt 1 view .LVU762
 3584 024a 0028     		cmp	r0, #0
 3585 024c B4D1     		bne	.L115
 3586              	.LVL206:
2095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 3587              		.loc 2 2095 14 is_stmt 0 view .LVU763
 3588 024e C4E7     		b	.L114
 3589              	.LVL207:
 3590              	.L148:
2095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 3591              		.loc 2 2095 14 view .LVU764
 3592              	.LBE3034:
 3593              	.LBE3037:
 3594              	.LBE3052:
 3595              	.LBE3058:
 3596              	.LBE3073:
 3597              	.LBE3083:
 3598              	.LBE3094:
 3599              	.LBE3104:
 3600              	.LBE3114:
 3601              	.LBB3115:
 3602              	.LBB2751:
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    return &_M_single_bucket;
 3603              		.loc 2 394 23 view .LVU765
 3604 0250 A761     		str	r7, [r4, #24]
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 413


 3605              		.loc 2 395 14 view .LVU766
 3606 0252 039F     		ldr	r7, [sp, #12]
 3607 0254 0FE7     		b	.L99
 3608              	.LVL208:
 3609              	.L152:
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
 3610              		.loc 2 395 14 view .LVU767
 3611              	.LBE2751:
 3612              	.LBE3115:
 3613              	.LBB3116:
 3614              	.LBB3105:
 3615              	.LBB3095:
 3616              	.LBB3084:
 3617              	.LBB3074:
 3618              	.LBB3059:
 3619              	.LBB3053:
 3620              	.LBB3038:
 3621              	.LBB3035:
 3622              	.LBB3032:
 3623              	.LBB3004:
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    return &_M_single_bucket;
 3624              		.loc 2 394 23 view .LVU768
 3625 0256 C4F818A0 		str	r10, [r4, #24]
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
 3626              		.loc 2 395 14 view .LVU769
 3627 025a DDF80CA0 		ldr	r10, [sp, #12]
 3628 025e A6E7     		b	.L112
 3629              	.LVL209:
 3630              	.L113:
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
 3631              		.loc 2 395 14 view .LVU770
 3632              	.LBE3004:
 3633              	.LBE3032:
 3634              	.LBE3035:
 3635              	.LBE3038:
 3636              	.LBE3053:
 3637              	.LBE3059:
 3638              	.LBE3074:
 3639              	.LBE3084:
 3640              	.LBE3095:
 3641              	.LBE3105:
 3642              	.LBE3116:
 3643              	.LBB3117:
 3644              	.LBB2752:
 3645              	.LBB2749:
 3646              	.LBB2748:
 3647              	.LBB2747:
 3648              	.LBB2743:
 3649              	.LBB2741:
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3650              		.loc 6 106 26 view .LVU771
 3651 0260 FFF7FEFF 		bl	_ZSt17__throw_bad_allocv
 3652              	.LVL210:
 3653              	.L150:
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3654              		.loc 6 106 26 view .LVU772
 3655              	.LBE2741:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 414


 3656              	.LBE2743:
 3657              	.LBE2747:
 3658              	.LBE2748:
 3659              	.LBE2749:
 3660              	.LBE2752:
 3661              	.LBE3117:
 3662              	.LBB3118:
 3663              	.LBB3106:
 3664              	.LBB3096:
 3665              	.LBB3085:
 3666              	.LBB3075:
 3667              	.LBB2964:
 3668              	.LBB2958:
 3669              	.LBB2952:
 3670              	.LBB2933:
 3671              	.LBB2926:
 3672              	.LBB2920:
 3673              	.LBB2914:
 3674              	.LBB2909:
 3675              	.LBB2904:
 3676              	.LBB2884:
 3677              	.LBB2880:
 3678              	.LBB2876:
 3679              	.LBB2872:
 3680              	.LBB2868:
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 3681              		.loc 24 212 28 view .LVU773
 3682 0264 0348     		ldr	r0, .L155+8
 3683              	.LVL211:
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 3684              		.loc 24 212 28 view .LVU774
 3685 0266 FFF7FEFF 		bl	_ZSt19__throw_logic_errorPKc
 3686              	.LVL212:
 3687              	.L156:
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 3688              		.loc 24 212 28 view .LVU775
 3689 026a 00BF     		.align	2
 3690              	.L155:
 3691 026c B76DDBB6 		.word	-1227133513
 3692 0270 07690FC7 		.word	-955291385
 3693 0274 00000000 		.word	.LC1
 3694              	.LBE2868:
 3695              	.LBE2872:
 3696              	.LBE2876:
 3697              	.LBE2880:
 3698              	.LBE2884:
 3699              	.LBE2904:
 3700              	.LBE2909:
 3701              	.LBE2914:
 3702              	.LBE2920:
 3703              	.LBE2926:
 3704              	.LBE2933:
 3705              	.LBE2952:
 3706              	.LBE2958:
 3707              	.LBE2964:
 3708              	.LBE3075:
 3709              	.LBE3085:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 415


 3710              	.LBE3096:
 3711              	.LBE3106:
 3712              	.LBE3118:
 3713              	.LBE3128:
 3714              		.cfi_endproc
 3715              	.LFE5029:
 3717              		.weak	_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESaIS8_EN
 3718              		.thumb_set _ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESaI
 3719              		.section	.rodata._Z17note_name_to_midiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.str1.
 3720              		.align	2
 3721              	.LC2:
 3722 0000 5F4D6170 		.ascii	"_Map_base::at\000"
 3722      5F626173 
 3722      653A3A61 
 3722      7400
 3723              		.section	.text._Z17note_name_to_midiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,"axG",%
 3724              		.align	1
 3725              		.p2align 2,,3
 3726              		.weak	_Z17note_name_to_midiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 3727              		.syntax unified
 3728              		.thumb
 3729              		.thumb_func
 3730              		.fpu fpv5-d16
 3732              	_Z17note_name_to_midiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:
 3733              	.LVL213:
 3734              	.LFB4171:
 3735              		.file 27 "utils.h"
   1:utils.h       **** #pragma once
   2:utils.h       **** #include <vector>
   3:utils.h       **** #include <unordered_map>
   4:utils.h       **** #include <cmath>
   5:utils.h       **** #include <string>
   6:utils.h       **** #include "InstrumentState.h"
   7:utils.h       **** 
   8:utils.h       **** /*
   9:utils.h       **** Used by the Sequencer to signal to the ChordSynth
  10:utils.h       **** Not to play a bass note on a given 16th
  11:utils.h       **** */
  12:utils.h       **** constexpr uint8_t NO_BASS_FLAG = 255;
  13:utils.h       **** 
  14:utils.h       **** inline int note_name_to_midi(const std::string& note) {
 3736              		.loc 27 14 55 is_stmt 1 view -0
 3737              		.cfi_startproc
 3738              		@ args = 0, pretend = 0, frame = 360
 3739              		@ frame_needed = 0, uses_anonymous_args = 0
  15:utils.h       ****     static const std::unordered_map<std::string, int> fourth_octave = {
 3740              		.loc 27 15 5 view .LVU777
  14:utils.h       ****     static const std::unordered_map<std::string, int> fourth_octave = {
 3741              		.loc 27 14 55 is_stmt 0 view .LVU778
 3742 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3743              		.cfi_def_cfa_offset 36
 3744              		.cfi_offset 4, -36
 3745              		.cfi_offset 5, -32
 3746              		.cfi_offset 6, -28
 3747              		.cfi_offset 7, -24
 3748              		.cfi_offset 8, -20
 3749              		.cfi_offset 9, -16
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 416


 3750              		.cfi_offset 10, -12
 3751              		.cfi_offset 11, -8
 3752              		.cfi_offset 14, -4
  16:utils.h       ****     {"C", 60}, {"Db", 61}, {"D", 62}, {"Eb", 63},
  17:utils.h       ****     {"E", 64}, {"F", 65}, {"Gb", 66}, {"G", 67},
  18:utils.h       ****     {"Ab", 68}, {"A", 69}, {"Bb", 70}, {"B", 71}
  19:utils.h       ****     };
 3753              		.loc 27 19 5 view .LVU779
 3754 0004 754F     		ldr	r7, .L174
  14:utils.h       ****     static const std::unordered_map<std::string, int> fourth_octave = {
 3755              		.loc 27 14 55 view .LVU780
 3756 0006 E1B0     		sub	sp, sp, #388
 3757              		.cfi_def_cfa_offset 424
  14:utils.h       ****     static const std::unordered_map<std::string, int> fourth_octave = {
 3758              		.loc 27 14 55 view .LVU781
 3759 0008 0646     		mov	r6, r0
 3760              		.loc 27 19 5 view .LVU782
 3761 000a 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 3762 000c BFF35B8F 		dmb	ish
 3763 0010 13F00105 		ands	r5, r3, #1
 3764 0014 1AD0     		beq	.L173
 3765              	.LVL214:
 3766              	.L159:
  20:utils.h       ****     return fourth_octave.at(note);
 3767              		.loc 27 20 5 is_stmt 1 view .LVU783
 3768              	.LBB3856:
 3769              	.LBI3856:
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****     {
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef __umap_hashtable<_Key, _Tp, _Hash, _Pred, _Alloc>  _Hashtable;
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       _Hashtable _M_h;
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****     public:
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // typedefs:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@{
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /// Public typedefs.
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::key_type	key_type;
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::value_type	value_type;
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::mapped_type	mapped_type;
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::hasher	hasher;
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::key_equal	key_equal;
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::allocator_type allocator_type;
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@}
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@{
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       ///  Iterator-related typedefs.
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::pointer		pointer;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::const_pointer	const_pointer;
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::reference		reference;
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::const_reference	const_reference;
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::iterator		iterator;
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::const_iterator	const_iterator;
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::local_iterator	local_iterator;
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::const_local_iterator	const_local_iterator;
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::size_type		size_type;
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::difference_type	difference_type;
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@}
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 417


 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #if __cplusplus > 201402L
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       using node_type = typename _Hashtable::node_type;
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       using insert_return_type = typename _Hashtable::insert_return_type;
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #endif
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //construct/destroy/copy
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /// Default constructor.
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map() = default;
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief  Default constructor creates no elements.
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __n  Minimal initial number of buckets.
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __hf  A hash functor.
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __eql  A key equality functor.
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __a  An allocator object.
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       explicit
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map(size_type __n,
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    const hasher& __hf = hasher(),
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    const key_equal& __eql = key_equal(),
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    const allocator_type& __a = allocator_type())
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       : _M_h(__n, __hf, __eql, __a)
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { }
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief  Builds an %unordered_map from a range.
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __first  An input iterator.
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __last  An input iterator.
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __n  Minimal initial number of buckets.
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __hf  A hash functor.
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __eql  A key equality functor.
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __a  An allocator object.
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Create an %unordered_map consisting of copies of the elements from
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  [__first,__last).  This is linear in N (where N is
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  distance(__first,__last)).
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename _InputIterator>
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	unordered_map(_InputIterator __first, _InputIterator __last,
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		      size_type __n = 0,
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		      const hasher& __hf = hasher(),
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		      const key_equal& __eql = key_equal(),
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		      const allocator_type& __a = allocator_type())
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	: _M_h(__first, __last, __n, __hf, __eql, __a)
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	{ }
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /// Copy constructor.
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map(const unordered_map&) = default;
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /// Move constructor.
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map(unordered_map&&) = default;
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Creates an %unordered_map with no elements.
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __a An allocator object.
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 418


 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       explicit
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map(const allocator_type& __a)
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	: _M_h(__a)
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { }
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /*
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Copy constructor with allocator argument.
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        * @param  __uset  Input %unordered_map to copy.
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        * @param  __a  An allocator object.
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map(const unordered_map& __umap,
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    const allocator_type& __a)
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       : _M_h(__umap._M_h, __a)
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { }
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /*
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief  Move constructor with allocator argument.
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __uset Input %unordered_map to move.
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __a    An allocator object.
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map(unordered_map&& __umap,
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    const allocator_type& __a)
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       : _M_h(std::move(__umap._M_h), __a)
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { }
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief  Builds an %unordered_map from an initializer_list.
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __l  An initializer_list.
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __n  Minimal initial number of buckets.
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __hf  A hash functor.
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __eql  A key equality functor.
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __a  An allocator object.
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Create an %unordered_map consisting of copies of the elements in the
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  list. This is linear in N (where N is @a __l.size()).
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map(initializer_list<value_type> __l,
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    size_type __n = 0,
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    const hasher& __hf = hasher(),
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    const key_equal& __eql = key_equal(),
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    const allocator_type& __a = allocator_type())
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       : _M_h(__l, __n, __hf, __eql, __a)
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { }
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map(size_type __n, const allocator_type& __a)
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       : unordered_map(__n, hasher(), key_equal(), __a)
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { }
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map(size_type __n, const hasher& __hf,
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    const allocator_type& __a)
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       : unordered_map(__n, __hf, key_equal(), __a)
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { }
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename _InputIterator>
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	unordered_map(_InputIterator __first, _InputIterator __last,
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		      size_type __n,
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		      const allocator_type& __a)
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 419


 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	: unordered_map(__first, __last, __n, hasher(), key_equal(), __a)
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	{ }
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename _InputIterator>
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	unordered_map(_InputIterator __first, _InputIterator __last,
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		      size_type __n, const hasher& __hf,
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		      const allocator_type& __a)
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	  : unordered_map(__first, __last, __n, __hf, key_equal(), __a)
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	{ }
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map(initializer_list<value_type> __l,
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    size_type __n,
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    const allocator_type& __a)
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       : unordered_map(__l, __n, hasher(), key_equal(), __a)
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { }
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map(initializer_list<value_type> __l,
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    size_type __n, const hasher& __hf,
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    const allocator_type& __a)
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       : unordered_map(__l, __n, __hf, key_equal(), __a)
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { }
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /// Copy assignment operator.
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map&
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       operator=(const unordered_map&) = default;
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /// Move assignment operator.
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map&
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       operator=(unordered_map&&) = default;
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief  %Unordered_map list assignment operator.
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __l  An initializer_list.
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function fills an %unordered_map with copies of the elements in
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  the initializer list @a __l.
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Note that the assignment completely changes the %unordered_map and
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  that the resulting %unordered_map's size is the same as the number
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  of elements assigned.
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map&
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       operator=(initializer_list<value_type> __l)
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       {
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	_M_h = __l;
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	return *this;
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       }
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       ///  Returns the allocator object used by the %unordered_map.
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       allocator_type
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       get_allocator() const noexcept
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.get_allocator(); }
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // size and capacity:
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       ///  Returns true if the %unordered_map is empty.
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       _GLIBCXX_NODISCARD bool
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 420


 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       empty() const noexcept
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.empty(); }
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       ///  Returns the size of the %unordered_map.
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       size_type
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       size() const noexcept
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.size(); }
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       ///  Returns the maximum size of the %unordered_map.
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       size_type
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       max_size() const noexcept
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.max_size(); }
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // iterators.
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Returns a read/write iterator that points to the first element in the
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %unordered_map.
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       iterator
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       begin() noexcept
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.begin(); }
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@{
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Returns a read-only (constant) iterator that points to the first
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  element in the %unordered_map.
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       const_iterator
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       begin() const noexcept
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.begin(); }
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       const_iterator
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       cbegin() const noexcept
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.begin(); }
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@}
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Returns a read/write iterator that points one past the last element in
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  the %unordered_map.
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       iterator
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       end() noexcept
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.end(); }
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@{
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Returns a read-only (constant) iterator that points one past the last
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  element in the %unordered_map.
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       const_iterator
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       end() const noexcept
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.end(); }
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       const_iterator
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       cend() const noexcept
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.end(); }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 421


 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@}
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // modifiers.
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Attempts to build and insert a std::pair into the
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %unordered_map.
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __args  Arguments used to generate a new pair instance (see
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *	        std::piecewise_contruct for passing arguments to each
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *	        part of the pair constructor).
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return  A pair, of which the first element is an iterator that points
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *           to the possibly inserted pair, and the second is a bool that
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *           is true if the pair was actually inserted.
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function attempts to build and insert a (key, value) %pair into
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  the %unordered_map.
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  An %unordered_map relies on unique keys and thus a %pair is only
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  inserted if its first element (the key) is not already present in the
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %unordered_map.
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Insertion requires amortized constant time.
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename... _Args>
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	std::pair<iterator, bool>
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	emplace(_Args&&... __args)
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	{ return _M_h.emplace(std::forward<_Args>(__args)...); }
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Attempts to build and insert a std::pair into the
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %unordered_map.
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __pos  An iterator that serves as a hint as to where the pair
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                should be inserted.
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __args  Arguments used to generate a new pair instance (see
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *	         std::piecewise_contruct for passing arguments to each
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *	         part of the pair constructor).
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return An iterator that points to the element with key of the
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *          std::pair built from @a __args (may or may not be that
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *          std::pair).
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function is not concerned about whether the insertion took place,
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  and thus does not return a boolean like the single-argument emplace()
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  does.
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Note that the first parameter is only a hint and can potentially
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  improve the performance of the insertion process. A bad hint would
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  cause no gains in efficiency.
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  See
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  https://gcc.gnu.org/onlinedocs/libstdc++/manual/associative.html#containers.associative.i
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  for more on @a hinting.
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Insertion requires amortized constant time.
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename... _Args>
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	iterator
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 422


 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	emplace_hint(const_iterator __pos, _Args&&... __args)
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	{ return _M_h.emplace_hint(__pos, std::forward<_Args>(__args)...); }
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #if __cplusplus > 201402L
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /// Extract a node.
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       node_type
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       extract(const_iterator __pos)
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       {
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	__glibcxx_assert(__pos != end());
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	return _M_h.extract(__pos);
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       }
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /// Extract a node.
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       node_type
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       extract(const key_type& __key)
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.extract(__key); }
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /// Re-insert an extracted node.
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       insert_return_type
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       insert(node_type&& __nh)
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h._M_reinsert_node(std::move(__nh)); }
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /// Re-insert an extracted node.
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       iterator
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       insert(const_iterator, node_type&& __nh)
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h._M_reinsert_node(std::move(__nh)).position; }
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #define __cpp_lib_unordered_map_try_emplace 201411
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Attempts to build and insert a std::pair into the
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %unordered_map.
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __k    Key to use for finding a possibly existing pair in
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                the unordered_map.
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __args  Arguments used to generate the .second for a 
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                new pair instance.
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return  A pair, of which the first element is an iterator that points
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *           to the possibly inserted pair, and the second is a bool that
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *           is true if the pair was actually inserted.
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function attempts to build and insert a (key, value) %pair into
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  the %unordered_map.
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  An %unordered_map relies on unique keys and thus a %pair is only
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  inserted if its first element (the key) is not already present in the
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %unordered_map.
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  If a %pair is not inserted, this function has no effect.
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Insertion requires amortized constant time.
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template <typename... _Args>
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         pair<iterator, bool>
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         try_emplace(const key_type& __k, _Args&&... __args)
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         {
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           iterator __i = find(__k);
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           if (__i == end())
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             {
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 423


 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****               __i = emplace(std::piecewise_construct,
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                             std::forward_as_tuple(__k),
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                             std::forward_as_tuple(
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                               std::forward<_Args>(__args)...))
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                 .first;
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****               return {__i, true};
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             }
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           return {__i, false};
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         }
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // move-capable overload
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template <typename... _Args>
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         pair<iterator, bool>
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         try_emplace(key_type&& __k, _Args&&... __args)
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         {
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           iterator __i = find(__k);
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           if (__i == end())
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             {
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****               __i = emplace(std::piecewise_construct,
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                             std::forward_as_tuple(std::move(__k)),
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                             std::forward_as_tuple(
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                               std::forward<_Args>(__args)...))
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                 .first;
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****               return {__i, true};
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             }
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           return {__i, false};
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         }
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Attempts to build and insert a std::pair into the
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %unordered_map.
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __hint  An iterator that serves as a hint as to where the pair
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                should be inserted.
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __k    Key to use for finding a possibly existing pair in
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                the unordered_map.
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __args  Arguments used to generate the .second for a 
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                new pair instance.
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return An iterator that points to the element with key of the
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *          std::pair built from @a __args (may or may not be that
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *          std::pair).
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function is not concerned about whether the insertion took place,
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  and thus does not return a boolean like the single-argument emplace()
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  does. However, if insertion did not take place,
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  this function has no effect.
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Note that the first parameter is only a hint and can potentially
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  improve the performance of the insertion process. A bad hint would
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  cause no gains in efficiency.
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  See
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  https://gcc.gnu.org/onlinedocs/libstdc++/manual/associative.html#containers.associative.i
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  for more on @a hinting.
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Insertion requires amortized constant time.
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template <typename... _Args>
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 424


 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         iterator
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         try_emplace(const_iterator __hint, const key_type& __k,
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                     _Args&&... __args)
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         {
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           iterator __i = find(__k);
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           if (__i == end())
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             __i = emplace_hint(__hint, std::piecewise_construct,
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                std::forward_as_tuple(__k),
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                std::forward_as_tuple(
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                  std::forward<_Args>(__args)...));
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           return __i;
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         }
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // move-capable overload
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template <typename... _Args>
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         iterator
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         try_emplace(const_iterator __hint, key_type&& __k, _Args&&... __args)
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         {
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           iterator __i = find(__k);
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           if (__i == end())
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             __i = emplace_hint(__hint, std::piecewise_construct,
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                std::forward_as_tuple(std::move(__k)),
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                std::forward_as_tuple(
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                  std::forward<_Args>(__args)...));
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           return __i;
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         }
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #endif // C++17
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@{
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Attempts to insert a std::pair into the %unordered_map.
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __x Pair to be inserted (see std::make_pair for easy
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *	     creation of pairs).
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return  A pair, of which the first element is an iterator that 
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *           points to the possibly inserted pair, and the second is 
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *           a bool that is true if the pair was actually inserted.
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function attempts to insert a (key, value) %pair into the
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %unordered_map. An %unordered_map relies on unique keys and thus a
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %pair is only inserted if its first element (the key) is not already
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  present in the %unordered_map.
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Insertion requires amortized constant time.
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       std::pair<iterator, bool>
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       insert(const value_type& __x)
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.insert(__x); }
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // 2354. Unnecessary copying when inserting into maps with braced-init
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       std::pair<iterator, bool>
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       insert(value_type&& __x)
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.insert(std::move(__x)); }
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename _Pair>
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 425


 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	__enable_if_t<is_constructible<value_type, _Pair&&>::value,
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		      pair<iterator, bool>>
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	insert(_Pair&& __x)
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         { return _M_h.emplace(std::forward<_Pair>(__x)); }
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@}
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@{
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Attempts to insert a std::pair into the %unordered_map.
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __hint  An iterator that serves as a hint as to where the
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                 pair should be inserted.
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __x  Pair to be inserted (see std::make_pair for easy creation
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *               of pairs).
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return An iterator that points to the element with key of
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *           @a __x (may or may not be the %pair passed in).
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function is not concerned about whether the insertion took place,
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  and thus does not return a boolean like the single-argument insert()
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  does.  Note that the first parameter is only a hint and can
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  potentially improve the performance of the insertion process.  A bad
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  hint would cause no gains in efficiency.
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  See
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  https://gcc.gnu.org/onlinedocs/libstdc++/manual/associative.html#containers.associative.i
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  for more on @a hinting.
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Insertion requires amortized constant time.
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       iterator
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       insert(const_iterator __hint, const value_type& __x)
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.insert(__hint, __x); }
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // 2354. Unnecessary copying when inserting into maps with braced-init
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       iterator
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       insert(const_iterator __hint, value_type&& __x)
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.insert(__hint, std::move(__x)); }
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename _Pair>
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	__enable_if_t<is_constructible<value_type, _Pair&&>::value, iterator>
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	insert(const_iterator __hint, _Pair&& __x)
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	{ return _M_h.emplace_hint(__hint, std::forward<_Pair>(__x)); }
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@}
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief A template function that attempts to insert a range of
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  elements.
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __first  Iterator pointing to the start of the range to be
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                   inserted.
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __last  Iterator pointing to the end of the range.
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Complexity similar to that of the range constructor.
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename _InputIterator>
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	void
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	insert(_InputIterator __first, _InputIterator __last)
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	{ _M_h.insert(__first, __last); }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 426


 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Attempts to insert a list of elements into the %unordered_map.
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __l  A std::initializer_list<value_type> of elements
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *               to be inserted.
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Complexity similar to that of the range constructor.
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       void
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       insert(initializer_list<value_type> __l)
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { _M_h.insert(__l); }
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #if __cplusplus > 201402L
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Attempts to insert a std::pair into the %unordered_map.
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __k    Key to use for finding a possibly existing pair in
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                the map.
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __obj  Argument used to generate the .second for a pair 
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                instance.
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return  A pair, of which the first element is an iterator that 
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *           points to the possibly inserted pair, and the second is 
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *           a bool that is true if the pair was actually inserted.
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function attempts to insert a (key, value) %pair into the
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %unordered_map. An %unordered_map relies on unique keys and thus a
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %pair is only inserted if its first element (the key) is not already
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  present in the %unordered_map.
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  If the %pair was already in the %unordered_map, the .second of 
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  the %pair is assigned from __obj.
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Insertion requires amortized constant time.
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template <typename _Obj>
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         pair<iterator, bool>
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         insert_or_assign(const key_type& __k, _Obj&& __obj)
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         {
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           iterator __i = find(__k);
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           if (__i == end())
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             {
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****               __i = emplace(std::piecewise_construct,
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                             std::forward_as_tuple(__k),
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                             std::forward_as_tuple(std::forward<_Obj>(__obj)))
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                 .first;
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****               return {__i, true};
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             }
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           (*__i).second = std::forward<_Obj>(__obj);
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           return {__i, false};
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         }
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // move-capable overload
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template <typename _Obj>
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         pair<iterator, bool>
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         insert_or_assign(key_type&& __k, _Obj&& __obj)
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         {
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           iterator __i = find(__k);
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 427


 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           if (__i == end())
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             {
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****               __i = emplace(std::piecewise_construct,
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                             std::forward_as_tuple(std::move(__k)),
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                             std::forward_as_tuple(std::forward<_Obj>(__obj)))
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                 .first;
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****               return {__i, true};
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             }
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           (*__i).second = std::forward<_Obj>(__obj);
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           return {__i, false};
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         }
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Attempts to insert a std::pair into the %unordered_map.
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __hint  An iterator that serves as a hint as to where the
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                  pair should be inserted.
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __k    Key to use for finding a possibly existing pair in
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                the unordered_map.
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __obj  Argument used to generate the .second for a pair 
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                instance.
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return An iterator that points to the element with key of
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *           @a __x (may or may not be the %pair passed in).
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function is not concerned about whether the insertion took place,
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  and thus does not return a boolean like the single-argument insert()
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  does.         
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  If the %pair was already in the %unordered map, the .second of
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  the %pair is assigned from __obj.
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Note that the first parameter is only a hint and can
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  potentially improve the performance of the insertion process.  A bad
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  hint would cause no gains in efficiency.
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  See
 736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  https://gcc.gnu.org/onlinedocs/libstdc++/manual/associative.html#containers.associative.i
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  for more on @a hinting.
 738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Insertion requires amortized constant time.
 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template <typename _Obj>
 742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         iterator
 743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         insert_or_assign(const_iterator __hint, const key_type& __k,
 744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                          _Obj&& __obj)
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         {
 746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           iterator __i = find(__k);
 747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           if (__i == end())
 748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             {
 749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****               return emplace_hint(__hint, std::piecewise_construct,
 750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                   std::forward_as_tuple(__k),
 751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                   std::forward_as_tuple(
 752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                     std::forward<_Obj>(__obj)));
 753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             }
 754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           (*__i).second = std::forward<_Obj>(__obj);
 755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           return __i;
 756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         }
 757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // move-capable overload
 759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template <typename _Obj>
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 428


 760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         iterator
 761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         insert_or_assign(const_iterator __hint, key_type&& __k, _Obj&& __obj)
 762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         {
 763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           iterator __i = find(__k);
 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           if (__i == end())
 765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             {
 766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****               return emplace_hint(__hint, std::piecewise_construct,
 767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                   std::forward_as_tuple(std::move(__k)),
 768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                   std::forward_as_tuple(
 769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                     std::forward<_Obj>(__obj)));
 770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             }
 771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           (*__i).second = std::forward<_Obj>(__obj);
 772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           return __i;
 773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         }
 774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #endif
 775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@{
 777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Erases an element from an %unordered_map.
 779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __position  An iterator pointing to the element to be erased.
 780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return An iterator pointing to the element immediately following
 781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *          @a __position prior to the element being erased. If no such
 782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *          element exists, end() is returned.
 783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function erases an element, pointed to by the given iterator,
 785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  from an %unordered_map.
 786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Note that this function only erases the element, and that if the
 787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  element is itself a pointer, the pointed-to memory is not touched in
 788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  any way.  Managing the pointer is the user's responsibility.
 789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       iterator
 791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       erase(const_iterator __position)
 792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.erase(__position); }
 793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // LWG 2059.
 795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       iterator
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       erase(iterator __position)
 797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.erase(__position); }
 798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@}
 799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Erases elements according to the provided key.
 802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __x  Key of element to be erased.
 803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return  The number of elements erased.
 804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function erases all the elements located by the given key from
 806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  an %unordered_map. For an %unordered_map the result of this function
 807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  can only be 0 (not present) or 1 (present).
 808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Note that this function only erases the element, and that if the
 809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  element is itself a pointer, the pointed-to memory is not touched in
 810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  any way.  Managing the pointer is the user's responsibility.
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       size_type
 813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       erase(const key_type& __x)
 814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.erase(__x); }
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 429


 817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Erases a [__first,__last) range of elements from an
 818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %unordered_map.
 819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __first  Iterator pointing to the start of the range to be
 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                  erased.
 821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __last  Iterator pointing to the end of the range to
 822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                be erased.
 823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return The iterator @a __last.
 824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function erases a sequence of elements from an %unordered_map.
 826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Note that this function only erases the elements, and that if
 827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  the element is itself a pointer, the pointed-to memory is not touched
 828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  in any way.  Managing the pointer is the user's responsibility.
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       iterator
 831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       erase(const_iterator __first, const_iterator __last)
 832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.erase(__first, __last); }
 833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Erases all elements in an %unordered_map.
 836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Note that this function only erases the elements, and that if the
 837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  elements themselves are pointers, the pointed-to memory is not touched
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  in any way.  Managing the pointer is the user's responsibility.
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       void
 841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       clear() noexcept
 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { _M_h.clear(); }
 843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief  Swaps data with another %unordered_map.
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __x  An %unordered_map of the same element and allocator
 847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  types.
 848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This exchanges the elements between two %unordered_map in constant
 850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  time.
 851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Note that the global std::swap() function is specialized such that
 852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  std::swap(m1,m2) will feed to this function.
 853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       void
 855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       swap(unordered_map& __x)
 856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       noexcept( noexcept(_M_h.swap(__x._M_h)) )
 857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { _M_h.swap(__x._M_h); }
 858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #if __cplusplus > 201402L
 860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename, typename, typename>
 861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	friend class std::_Hash_merge_helper;
 862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename _H2, typename _P2>
 864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	void
 865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	merge(unordered_map<_Key, _Tp, _H2, _P2, _Alloc>& __source)
 866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	{
 867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	  using _Merge_helper = _Hash_merge_helper<unordered_map, _H2, _P2>;
 868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	  _M_h._M_merge_unique(_Merge_helper::_S_get_table(__source));
 869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	}
 870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename _H2, typename _P2>
 872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	void
 873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	merge(unordered_map<_Key, _Tp, _H2, _P2, _Alloc>&& __source)
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 430


 874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	{ merge(__source); }
 875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename _H2, typename _P2>
 877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	void
 878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	merge(unordered_multimap<_Key, _Tp, _H2, _P2, _Alloc>& __source)
 879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	{
 880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	  using _Merge_helper = _Hash_merge_helper<unordered_map, _H2, _P2>;
 881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	  _M_h._M_merge_unique(_Merge_helper::_S_get_table(__source));
 882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	}
 883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename _H2, typename _P2>
 885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	void
 886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	merge(unordered_multimap<_Key, _Tp, _H2, _P2, _Alloc>&& __source)
 887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	{ merge(__source); }
 888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #endif // C++17
 889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // observers.
 891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       ///  Returns the hash functor object with which the %unordered_map was
 893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       ///  constructed.
 894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       hasher
 895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       hash_function() const
 896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.hash_function(); }
 897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       ///  Returns the key comparison object with which the %unordered_map was
 899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       ///  constructed.
 900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       key_equal
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       key_eq() const
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.key_eq(); }
 903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // lookup.
 905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@{
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Tries to locate an element in an %unordered_map.
 909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __x  Key to be located.
 910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return  Iterator pointing to sought-after element, or end() if not
 911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *           found.
 912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function takes a key and tries to locate the element with which
 914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  the key matches.  If successful the function returns an iterator
 915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  pointing to the sought after element.  If unsuccessful it returns the
 916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  past-the-end ( @c end() ) iterator.
 917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       iterator
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       find(const key_type& __x)
 920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.find(__x); }
 921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       const_iterator
 923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       find(const key_type& __x) const
 924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.find(__x); }
 925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@}
 926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief  Finds the number of elements.
 929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __x  Key to count.
 930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return  Number of elements with specified key.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 431


 931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function only makes sense for %unordered_multimap; for
 933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %unordered_map the result will either be 0 (not present) or 1
 934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  (present).
 935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       size_type
 937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       count(const key_type& __x) const
 938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.count(__x); }
 939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #if __cplusplus > 201703L
 941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief  Finds whether an element with the given key exists.
 943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __x  Key of elements to be located.
 944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return  True if there is any element with the specified key.
 945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       bool
 947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       contains(const key_type& __x) const
 948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.find(__x) != _M_h.end(); }
 949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #endif
 950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@{
 952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Finds a subsequence matching given key.
 954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __x  Key to be located.
 955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return  Pair of iterators that possibly points to the subsequence
 956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *           matching given key.
 957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function probably only makes sense for %unordered_multimap.
 959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       std::pair<iterator, iterator>
 961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       equal_range(const key_type& __x)
 962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.equal_range(__x); }
 963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       std::pair<const_iterator, const_iterator>
 965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       equal_range(const key_type& __x) const
 966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.equal_range(__x); }
 967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@}
 968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@{
 970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief  Subscript ( @c [] ) access to %unordered_map data.
 972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __k  The key for which data should be retrieved.
 973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return  A reference to the data of the (key,data) %pair.
 974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Allows for easy lookup with the subscript ( @c [] )operator.  Returns
 976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  data associated with the key specified in subscript.  If the key does
 977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  not exist, a pair with that key is created using default values, which
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  is then returned.
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Lookup requires constant time.
 981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       mapped_type&
 983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       operator[](const key_type& __k)
 984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h[__k]; }
 985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       mapped_type&
 987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       operator[](key_type&& __k)
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 432


 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h[std::move(__k)]; }
 989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@}
 990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@{
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief  Access to %unordered_map data.
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __k  The key for which data should be retrieved.
 995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return  A reference to the data whose key is equal to @a __k, if
 996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *           such a data is present in the %unordered_map.
 997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @throw  std::out_of_range  If no such data is present.
 998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       mapped_type&
1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       at(const key_type& __k)
1001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.at(__k); }
1002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
1003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       const mapped_type&
1004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       at(const key_type& __k) const
 3770              		.loc 1 1004 7 view .LVU784
 3771              	.LBB3857:
 3772              	.LBI3857:
 774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::
 3773              		.loc 3 774 5 view .LVU785
 3774              	.LBB3858:
 3775              	.LBB3859:
 3776              	.LBI3859:
1375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
 3777              		.loc 3 1375 7 view .LVU786
 3778              	.LBB3860:
 3779              	.LBI3860:
6812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return std::_Hash_impl::hash(__s.data(), __s.length()); }
 3780              		.loc 4 6812 7 view .LVU787
 3781              	.LBE3860:
 3782              	.LBE3859:
 3783              	.LBE3858:
 3784              	.LBE3857:
 3785              	.LBE3856:
 3786              		.loc 4 6813 9 view .LVU788
 3787              	.LBB3901:
 3788              	.LBB3899:
 3789              	.LBB3897:
 3790              	.LBB3873:
 3791              	.LBB3870:
 3792              	.LBB3861:
 3793              	.LBI3861:
2311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data(); }
 3794              		.loc 4 2311 7 view .LVU789
 3795              	.LBB3862:
 3796              	.LBI3862:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 3797              		.loc 4 186 7 view .LVU790
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 3798              		.loc 4 186 7 is_stmt 0 view .LVU791
 3799              	.LBE3862:
 3800              	.LBE3861:
 3801              	.LBB3863:
 3802              	.LBI3863:
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 433


 3803              		.loc 4 907 7 is_stmt 1 view .LVU792
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 3804              		.loc 4 907 7 is_stmt 0 view .LVU793
 3805              	.LBE3863:
 3806              	.LBB3864:
 3807              	.LBI3864:
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 	 size_t __seed = static_cast<size_t>(0xc70f6907UL))
 3808              		.loc 23 195 5 is_stmt 1 view .LVU794
 3809              	.LBB3865:
 3810              		.loc 23 197 7 view .LVU795
 3811              	.LBE3865:
 3812              	.LBE3864:
 3813              	.LBE3870:
 3814              	.LBE3873:
 3815              	.LBB3874:
 3816              	.LBB3875:
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 3817              		.loc 2 682 60 is_stmt 0 view .LVU796
 3818 0016 724C     		ldr	r4, .L174+4
 3819              	.LBE3875:
 3820              	.LBE3874:
 3821              	.LBB3888:
 3822              	.LBB3871:
 3823              	.LBB3868:
 3824              	.LBB3866:
 3825              		.loc 23 197 25 view .LVU797
 3826 0018 724A     		ldr	r2, .L174+8
 3827 001a D6E90001 		ldrd	r0, r1, [r6]
 3828 001e FFF7FEFF 		bl	_ZSt11_Hash_bytesPKvjj
 3829              	.LVL215:
 3830              		.loc 23 197 25 view .LVU798
 3831              	.LBE3866:
 3832              	.LBE3868:
 3833              	.LBE3871:
 3834              	.LBE3888:
 3835              	.LBB3889:
 3836              	.LBB3885:
 3837              	.LBB3876:
 3838              	.LBB3877:
 3839              	.LBB3878:
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 3840              		.loc 3 433 22 view .LVU799
 3841 0022 6168     		ldr	r1, [r4, #4]
 3842              	.LBE3878:
 3843              	.LBE3877:
 3844              	.LBE3876:
 3845              	.LBE3885:
 3846              	.LBE3889:
 3847              	.LBB3890:
 3848              	.LBB3872:
 3849              	.LBB3869:
 3850              	.LBB3867:
 3851              		.loc 23 197 25 view .LVU800
 3852 0024 0346     		mov	r3, r0
 3853              	.LVL216:
 3854              		.loc 23 197 25 view .LVU801
 3855              	.LBE3867:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 434


 3856              	.LBE3869:
 3857              	.LBE3872:
 3858              	.LBE3890:
 3859              	.LBB3891:
 3860              	.LBI3874:
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __hash_code_base::_M_bucket_index(__k, __c, _M_bucket_count); }
 3861              		.loc 2 681 7 is_stmt 1 view .LVU802
 3862              	.LBB3886:
 3863              	.LBB3883:
 3864              	.LBI3876:
1383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      std::size_t __bkt_count) const
 3865              		.loc 3 1383 7 view .LVU803
 3866              	.LBB3881:
 3867              	.LBI3877:
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       second_argument_type __den) const noexcept
 3868              		.loc 3 431 5 view .LVU804
 3869              	.LBB3879:
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 3870              		.loc 3 433 7 view .LVU805
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 3871              		.loc 3 433 7 is_stmt 0 view .LVU806
 3872              	.LBE3879:
 3873              	.LBE3881:
 3874              	.LBE3883:
 3875              	.LBE3886:
 3876              	.LBE3891:
 3877              	.LBB3892:
 3878              	.LBI3892:
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   __hash_code __c) const
 3879              		.loc 2 690 7 is_stmt 1 view .LVU807
 3880              	.LBB3893:
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (__before_n)
 3881              		.loc 2 693 47 is_stmt 0 view .LVU808
 3882 0026 2046     		mov	r0, r4
 3883              	.LVL217:
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (__before_n)
 3884              		.loc 2 693 47 view .LVU809
 3885 0028 3246     		mov	r2, r6
 3886              	.LBE3893:
 3887              	.LBE3892:
 3888              	.LBB3895:
 3889              	.LBB3887:
 3890              	.LBB3884:
 3891              	.LBB3882:
 3892              	.LBB3880:
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 3893              		.loc 3 433 22 view .LVU810
 3894 002a B3FBF1F4 		udiv	r4, r3, r1
 3895              	.LBE3880:
 3896              	.LBE3882:
 3897              	.LBE3884:
 3898              	.LBE3887:
 3899              	.LBE3895:
 3900              	.LBB3896:
 3901              	.LBB3894:
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (__before_n)
 3902              		.loc 2 693 47 view .LVU811
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 435


 3903 002e 01FB1431 		mls	r1, r1, r4, r3
 3904              	.LVL218:
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (__before_n)
 3905              		.loc 2 693 47 view .LVU812
 3906 0032 FFF7FEFF 		bl	_ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESaIS8_ENSt
 3907              	.LVL219:
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return static_cast<__node_type*>(__before_n->_M_nxt);
 3908              		.loc 2 694 2 view .LVU813
 3909 0036 0028     		cmp	r0, #0
 3910 0038 00F0CC80 		beq	.L163
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return nullptr;
 3911              		.loc 2 695 55 view .LVU814
 3912 003c 0368     		ldr	r3, [r0]
 3913              	.LVL220:
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return nullptr;
 3914              		.loc 2 695 55 view .LVU815
 3915              	.LBE3894:
 3916              	.LBE3896:
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__throw_out_of_range(__N("_Map_base::at"));
 3917              		.loc 3 784 7 view .LVU816
 3918 003e 002B     		cmp	r3, #0
 3919 0040 00F0C880 		beq	.L163
 3920              	.LVL221:
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__throw_out_of_range(__N("_Map_base::at"));
 3921              		.loc 3 784 7 view .LVU817
 3922              	.LBE3897:
 3923              	.LBE3899:
 3924              	.LBE3901:
  21:utils.h       **** }
 3925              		.loc 27 21 1 view .LVU818
 3926 0044 D869     		ldr	r0, [r3, #28]
 3927 0046 61B0     		add	sp, sp, #388
 3928              		.cfi_remember_state
 3929              		.cfi_def_cfa_offset 36
 3930              		@ sp needed
 3931 0048 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3932              	.LVL222:
 3933              	.L173:
 3934              		.cfi_restore_state
  19:utils.h       ****     return fourth_octave.at(note);
 3935              		.loc 27 19 5 discriminator 1 view .LVU819
 3936 004c 3846     		mov	r0, r7
 3937              	.LVL223:
  19:utils.h       ****     return fourth_octave.at(note);
 3938              		.loc 27 19 5 discriminator 1 view .LVU820
 3939 004e FFF7FEFF 		bl	__cxa_guard_acquire
 3940              	.LVL224:
 3941 0052 0028     		cmp	r0, #0
 3942 0054 DFD0     		beq	.L159
 3943              	.LVL225:
 3944              	.LBB3902:
 3945              	.LBI3902:
 3946              		.loc 7 352 12 is_stmt 1 discriminator 2 view .LVU821
 3947              	.LBB3903:
 3948              	.LBB3904:
 3949              	.LBB3905:
 3950              	.LBI3905:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 436


  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 3951              		.loc 26 76 5 discriminator 2 view .LVU822
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 3952              		.loc 26 76 5 is_stmt 0 discriminator 2 view .LVU823
 3953              	.LBE3905:
 3954              	.LBB3906:
 3955              	.LBI3906:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 3956              		.loc 8 144 7 is_stmt 1 discriminator 2 view .LVU824
 3957              	.LBB3907:
 3958              	.LBI3907:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3959              		.loc 6 79 7 discriminator 2 view .LVU825
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3960              		.loc 6 79 7 is_stmt 0 discriminator 2 view .LVU826
 3961              	.LBE3907:
 3962              	.LBE3906:
 3963              	.LBB3908:
 3964              	.LBI3908:
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 3965              		.loc 4 525 7 is_stmt 1 discriminator 2 view .LVU827
 3966              	.LBB3909:
 3967              	.LBB3910:
 3968              	.LBI3910:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3969              		.loc 4 190 7 discriminator 2 view .LVU828
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3970              		.loc 4 190 7 is_stmt 0 discriminator 2 view .LVU829
 3971              	.LBE3910:
 3972              	.LBB3911:
 3973              	.LBI3911:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 3974              		.loc 4 156 2 is_stmt 1 discriminator 2 view .LVU830
 3975              	.LBB3912:
 3976              	.LBB3913:
 3977              	.LBB3914:
 3978              	.LBI3914:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 3979              		.loc 8 147 7 discriminator 2 view .LVU831
 3980              	.LBB3915:
 3981              	.LBI3915:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3982              		.loc 6 82 7 discriminator 2 view .LVU832
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3983              		.loc 6 82 7 is_stmt 0 discriminator 2 view .LVU833
 3984              	.LBE3915:
 3985              	.LBE3914:
 3986              	.LBE3913:
 3987              	.LBE3912:
 3988              	.LBE3911:
 3989              	.LBE3909:
 3990              	.LBE3908:
 3991              	.LBE3904:
 3992              	.LBE3903:
 3993              	.LBE3902:
 3994              	.LBB4009:
 3995              	.LBB4010:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 437


 3996              	.LBB4011:
 3997              	.LBB4012:
 3998              	.LBB4013:
 3999              	.LBB4014:
 4000              	.LBB4015:
 4001              	.LBB4016:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 4002              		.loc 4 157 35 discriminator 2 view .LVU834
 4003 0056 0DF1540A 		add	r10, sp, #84
 4004              	.LBE4016:
 4005              	.LBE4015:
 4006              	.LBE4014:
 4007              	.LBE4013:
 4008              	.LBE4012:
 4009              	.LBE4011:
 4010              	.LBE4010:
 4011              	.LBE4009:
 4012              	.LBB4129:
 4013              	.LBB4002:
 4014              	.LBB3995:
 4015              	.LBB3984:
 4016              	.LBB3976:
 4017              	.LBB3922:
 4018              	.LBB3919:
 4019              	.LBB3916:
 4020 005a 0EAB     		add	r3, sp, #56
 4021              	.LVL226:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 4022              		.loc 4 157 35 discriminator 2 view .LVU835
 4023              	.LBE3916:
 4024              	.LBE3919:
 4025              	.LBE3922:
 4026              	.LBE3976:
 4027              	.LBE3984:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 4028              		.loc 7 353 64 discriminator 2 view .LVU836
 4029 005c 4FF03C0B 		mov	fp, #60
 4030              	.LBB3985:
 4031              	.LBB3977:
 4032              	.LBB3923:
 4033              	.LBB3920:
 4034              	.LBB3917:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 4035              		.loc 4 157 35 discriminator 2 view .LVU837
 4036 0060 0CAC     		add	r4, sp, #48
 4037              	.LVL227:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 4038              		.loc 4 157 35 discriminator 2 view .LVU838
 4039              	.LBE3917:
 4040              	.LBE3920:
 4041              	.LBE3923:
 4042              	.LBE3977:
 4043              	.LBE3985:
 4044              	.LBE3995:
 4045              	.LBE4002:
 4046              	.LBE4129:
 4047              	.LBB4130:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 438


 4048              	.LBB4121:
 4049              	.LBB4113:
 4050              	.LBB4099:
 4051              	.LBB4091:
 4052              	.LBB4023:
 4053              	.LBB4021:
 4054              	.LBB4019:
 4055 0062 C4F81CA0 		str	r10, [r4, #28]
 4056              	.LBE4019:
 4057              	.LBE4021:
 4058              	.LBE4023:
 4059              	.LBE4091:
 4060              	.LBE4099:
 4061              		.loc 7 353 64 discriminator 2 view .LVU839
 4062 0066 4FF03D0A 		mov	r10, #61
 4063              	.LBB4100:
 4064              	.LBB4092:
 4065              	.LBB4024:
 4066              	.LBB4025:
 4067              	.LBB4026:
 4068              	.LBB4027:
 4069              	.LBB4028:
 4070              	.LBB4029:
 4071              	.LBB4030:
 4072              	.LBB4031:
 4073              	.LBB4032:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 4074              		.loc 4 183 26 discriminator 2 view .LVU840
 4075 006a 0222     		movs	r2, #2
 4076              	.LBE4032:
 4077              	.LBE4031:
 4078              	.LBE4030:
 4079              	.LBE4029:
 4080              	.LBE4028:
 4081              	.LBE4027:
 4082              	.LBE4026:
 4083              	.LBE4025:
 4084              	.LBE4024:
 4085              	.LBE4092:
 4086              	.LBE4100:
 4087              	.LBE4113:
 4088              	.LBE4121:
 4089              	.LBE4130:
 4090              	.LBB4131:
 4091              	.LBB4132:
 4092              	.LBB4133:
 4093              	.LBB4134:
 4094              	.LBB4135:
 4095              	.LBB4136:
 4096              	.LBB4137:
 4097              	.LBB4138:
 4098              	.LBB4139:
 4099              	.LBB4140:
 4100              	.LBB4141:
 4101              	.LBB4142:
 4102              	.LBB4143:
 4103              	.LBB4144:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 439


 4104              	.LBB4145:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 4105              		.loc 20 322 14 discriminator 2 view .LVU841
 4106 006c 4FF0450C 		mov	ip, #69
 4107              	.LBE4145:
 4108              	.LBE4144:
 4109              	.LBE4143:
 4110              	.LBE4142:
 4111              	.LBE4141:
 4112              	.LBE4140:
 4113              	.LBE4139:
 4114              	.LBE4138:
 4115              	.LBE4137:
 4116              	.LBE4136:
 4117              	.LBE4135:
 4118              	.LBE4134:
 4119              	.LBE4133:
 4120              	.LBE4132:
 4121              	.LBE4131:
 4122              	.LBB4224:
 4123              	.LBB4122:
 4124              	.LBB4114:
 4125              		.loc 7 353 64 discriminator 2 view .LVU842
 4126 0070 C4F834A0 		str	r10, [r4, #52]
 4127              	.LBE4114:
 4128              	.LBE4122:
 4129              	.LBE4224:
 4130              	.LBB4225:
 4131              	.LBB4226:
 4132              	.LBB4227:
 4133              	.LBB4228:
 4134              	.LBB4229:
 4135              	.LBB4230:
 4136              	.LBB4231:
 4137              	.LBB4232:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 4138              		.loc 4 157 35 discriminator 2 view .LVU843
 4139 0074 0DF1700A 		add	r10, sp, #112
 4140              	.LBE4232:
 4141              	.LBE4231:
 4142              	.LBE4230:
 4143              	.LBE4229:
 4144              	.LBE4228:
 4145              	.LBE4227:
 4146              	.LBE4226:
 4147              	.LBE4225:
 4148              	.LBB4318:
 4149              	.LBB4319:
 4150              	.LBB4320:
 4151              		.loc 7 353 64 discriminator 2 view .LVU844
 4152 0078 4FF0410E 		mov	lr, #65
 4153              	.LBB4321:
 4154              	.LBB4322:
 4155              	.LBB4323:
 4156              	.LBB4324:
 4157              	.LBB4325:
 4158              	.LBB4326:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 440


 4159              	.LBB4327:
 4160              	.LBB4328:
 4161              	.LBB4329:
 4162              	.LBB4330:
 4163              	.LBB4331:
 4164              	.LBB4332:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 4165              		.loc 20 322 14 discriminator 2 view .LVU845
 4166 007c 4620     		movs	r0, #70
 4167              	.LBE4332:
 4168              	.LBE4331:
 4169              	.LBE4330:
 4170              	.LBE4329:
 4171              	.LBE4328:
 4172              	.LBE4327:
 4173              	.LBE4326:
 4174              	.LBE4325:
 4175              	.LBE4324:
 4176              	.LBE4323:
 4177              	.LBE4322:
 4178              	.LBE4321:
 4179              	.LBE4320:
 4180              	.LBE4319:
 4181              	.LBE4318:
 4182              	.LBB4411:
 4183              	.LBB4310:
 4184              	.LBB4302:
 4185              	.LBB4290:
 4186              	.LBB4284:
 4187              	.LBB4239:
 4188              	.LBB4237:
 4189              	.LBB4235:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 4190              		.loc 4 157 35 discriminator 2 view .LVU846
 4191 007e C4F838A0 		str	r10, [r4, #56]
 4192              	.LBE4235:
 4193              	.LBE4237:
 4194              	.LBE4239:
 4195              	.LBE4284:
 4196              	.LBE4290:
 4197              		.loc 7 353 64 discriminator 2 view .LVU847
 4198 0082 4FF03E0A 		mov	r10, #62
 4199              	.LBE4302:
 4200              	.LBE4310:
 4201              	.LBE4411:
 4202              	.LBB4412:
 4203              	.LBB4413:
 4204              	.LBB4414:
 4205 0086 4221     		movs	r1, #66
 4206              	.LBE4414:
 4207              	.LBE4413:
 4208              	.LBE4412:
 4209              	.LBB4519:
 4210              	.LBB4003:
 4211              	.LBB3996:
 4212              	.LBB3986:
 4213              	.LBB3978:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 441


 4214              	.LBB3924:
 4215              	.LBB3925:
 4216              	.LBB3926:
 4217              	.LBB3927:
 4218              	.LBB3928:
 4219              	.LBB3929:
 4220              	.LBB3930:
 4221              	.LBB3931:
 4222              	.LBB3932:
 4223              	.LBB3933:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 4224              		.loc 20 322 14 discriminator 2 view .LVU848
 4225 0088 4FF04309 		mov	r9, #67
 4226              	.LBE3933:
 4227              	.LBE3932:
 4228              	.LBE3931:
 4229              	.LBE3930:
 4230              	.LBE3929:
 4231              	.LBE3928:
 4232              	.LBE3927:
 4233              	.LBE3926:
 4234              	.LBE3925:
 4235              	.LBE3924:
 4236              	.LBE3978:
 4237              	.LBE3986:
 4238              	.LBE3996:
 4239              	.LBE4003:
 4240              	.LBE4519:
 4241              	.LBB4520:
 4242              	.LBB4311:
 4243              	.LBB4303:
 4244              		.loc 7 353 64 discriminator 2 view .LVU849
 4245 008c C4F850A0 		str	r10, [r4, #80]
 4246              	.LBE4303:
 4247              	.LBE4311:
 4248              	.LBE4520:
 4249              	.LBB4521:
 4250              	.LBB4522:
 4251              	.LBB4523:
 4252              	.LBB4524:
 4253              	.LBB4525:
 4254              	.LBB4526:
 4255              	.LBB4527:
 4256              	.LBB4528:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 4257              		.loc 4 157 35 discriminator 2 view .LVU850
 4258 0090 0DF18C0A 		add	r10, sp, #140
 4259              	.LBE4528:
 4260              	.LBE4527:
 4261              	.LBE4526:
 4262              	.LBE4525:
 4263              	.LBE4524:
 4264              	.LBE4523:
 4265              	.LBE4522:
 4266              	.LBE4521:
 4267              	.LBB4626:
 4268              	.LBB4312:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 442


 4269              	.LBB4304:
 4270              	.LBB4291:
 4271              	.LBB4285:
 4272              	.LBB4240:
 4273              	.LBB4241:
 4274              	.LBB4242:
 4275              	.LBB4243:
 4276              	.LBB4244:
 4277              	.LBB4245:
 4278              	.LBB4246:
 4279              	.LBB4247:
 4280              	.LBB4248:
 4281              	.LBB4249:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 4282              		.loc 20 322 14 discriminator 2 view .LVU851
 4283 0094 4FF04408 		mov	r8, #68
 4284              	.LBE4249:
 4285              	.LBE4248:
 4286              	.LBE4247:
 4287              	.LBE4246:
 4288              	.LBE4245:
 4289              	.LBE4244:
 4290              	.LBE4243:
 4291              	.LBE4242:
 4292              	.LBE4241:
 4293              	.LBE4240:
 4294              	.LBE4285:
 4295              	.LBE4291:
 4296              	.LBE4304:
 4297              	.LBE4312:
 4298              	.LBE4626:
 4299              	.LBB4627:
 4300              	.LBB4004:
 4301              	.LBB3997:
 4302              	.LBB3987:
 4303              	.LBB3979:
 4304              	.LBB3970:
 4305              	.LBB3921:
 4306              	.LBB3918:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 4307              		.loc 4 157 35 discriminator 2 view .LVU852
 4308 0098 2360     		str	r3, [r4]
 4309              	.LVL228:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 4310              		.loc 4 157 35 discriminator 2 view .LVU853
 4311              	.LBE3918:
 4312              	.LBE3921:
 4313              	.LBE3970:
 4314              	.LBB3971:
 4315              	.LBI3971:
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 4316              		.loc 20 351 7 is_stmt 1 discriminator 2 view .LVU854
 4317              	.LBE3971:
 4318              	.LBE3979:
 4319              	.LBE3987:
 4320              	.LBE3997:
 4321              	.LBE4004:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 443


 4322              	.LBE4627:
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 4323              		.loc 20 357 2 discriminator 2 view .LVU855
 4324              	.LBB4628:
 4325              	.LBB4005:
 4326              	.LBB3998:
 4327              	.LBB3988:
 4328              	.LBB3980:
 4329              	.LBB3972:
 4330              	.LBI3924:
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 4331              		.loc 4 263 9 discriminator 2 view .LVU856
 4332              	.LBB3966:
 4333              	.LBB3962:
 4334              	.LBI3926:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 4335              		.loc 4 243 9 discriminator 2 view .LVU857
 4336              	.LBB3958:
 4337              	.LBB3954:
 4338              	.LBI3928:
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 4339              		.loc 24 206 7 discriminator 2 view .LVU858
 4340              	.LBB3950:
 4341              	.LBB3940:
 4342              	.LBI3930:
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 4343              		.loc 4 396 7 discriminator 2 view .LVU859
 4344              	.LBB3938:
 4345              	.LBI3931:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 4346              		.loc 4 346 7 discriminator 2 view .LVU860
 4347              	.LBB3936:
 4348              	.LBI3932:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 4349              		.loc 20 321 7 discriminator 2 view .LVU861
 4350              	.LBB3934:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 4351              		.loc 20 322 9 discriminator 2 view .LVU862
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 4352              		.loc 20 322 9 is_stmt 0 discriminator 2 view .LVU863
 4353              	.LBE3934:
 4354              	.LBE3936:
 4355              	.LBE3938:
 4356              	.LBE3940:
 4357              	.LBB3941:
 4358              	.LBI3941:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 4359              		.loc 4 214 7 is_stmt 1 discriminator 2 view .LVU864
 4360              	.LBB3942:
 4361              	.LBI3942:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 4362              		.loc 4 182 7 discriminator 2 view .LVU865
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 4363              		.loc 4 182 7 is_stmt 0 discriminator 2 view .LVU866
 4364              	.LBE3942:
 4365              	.LBE3941:
 4366              	.LBE3950:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 444


 4367              	.LBE3954:
 4368              	.LBE3958:
 4369              	.LBE3962:
 4370              	.LBE3966:
 4371              	.LBE3972:
 4372              	.LBE3980:
 4373              	.LBE3988:
 4374              	.LBE3998:
 4375              	.LBE4005:
 4376              	.LBE4628:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 4377              		.loc 20 322 9 is_stmt 1 discriminator 2 view .LVU867
 4378              	.LBB4629:
 4379              	.LBB4619:
 4380              	.LBB4612:
 4381              	.LBB4600:
 4382              	.LBB4594:
 4383              	.LBB4535:
 4384              	.LBB4533:
 4385              	.LBB4531:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 4386              		.loc 4 157 35 is_stmt 0 discriminator 2 view .LVU868
 4387 009a C4F854A0 		str	r10, [r4, #84]
 4388              	.LBE4531:
 4389              	.LBE4533:
 4390              	.LBE4535:
 4391              	.LBB4536:
 4392              	.LBB4537:
 4393              	.LBB4538:
 4394              	.LBB4539:
 4395              	.LBB4540:
 4396              	.LBB4541:
 4397              	.LBB4542:
 4398              	.LBB4543:
 4399              	.LBB4544:
 4400              	.LBB4545:
 4401              	.LBB4546:
 4402              		.loc 20 395 49 discriminator 2 view .LVU869
 4403 009e 46F2452A 		movw	r10, #25157
 4404              	.LBE4546:
 4405              	.LBE4545:
 4406              	.LBE4544:
 4407              	.LBE4543:
 4408              	.LBE4542:
 4409              	.LBE4541:
 4410              	.LBE4540:
 4411              	.LBE4539:
 4412              	.LBE4538:
 4413              	.LBE4537:
 4414              	.LBE4536:
 4415              	.LBE4594:
 4416              	.LBE4600:
 4417              	.LBE4612:
 4418              	.LBE4619:
 4419              	.LBE4629:
 4420              	.LBB4630:
 4421              	.LBB4006:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 445


 4422              	.LBB3999:
 4423              	.LBB3989:
 4424              	.LBB3981:
 4425              	.LBB3973:
 4426              	.LBB3967:
 4427              	.LBB3963:
 4428              	.LBB3959:
 4429              	.LBB3955:
 4430              	.LBB3951:
 4431              	.LBB3947:
 4432              	.LBB3945:
 4433              	.LBB3943:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 4434              		.loc 4 183 26 discriminator 2 view .LVU870
 4435 00a2 0123     		movs	r3, #1
 4436              	.LBE3943:
 4437              	.LBE3945:
 4438              	.LBE3947:
 4439              	.LBE3951:
 4440              	.LBE3955:
 4441              	.LBE3959:
 4442              	.LBE3963:
 4443              	.LBE3967:
 4444              	.LBE3973:
 4445              	.LBE3981:
 4446              	.LBE3989:
 4447              		.loc 7 353 64 discriminator 2 view .LVU871
 4448 00a4 C4F818B0 		str	fp, [r4, #24]
 4449              	.LBE3999:
 4450              	.LBE4006:
 4451              	.LBE4630:
 4452              	.LBB4631:
 4453              	.LBB4620:
 4454              	.LBB4613:
 4455              	.LBB4601:
 4456              	.LBB4595:
 4457              	.LBB4587:
 4458              	.LBB4583:
 4459              	.LBB4579:
 4460              	.LBB4575:
 4461              	.LBB4571:
 4462              	.LBB4567:
 4463              	.LBB4555:
 4464              	.LBB4553:
 4465              	.LBB4551:
 4466              	.LBB4549:
 4467              	.LBB4547:
 4468              		.loc 20 395 49 discriminator 2 view .LVU872
 4469 00a8 ADF88CA0 		strh	r10, [sp, #140]	@ movhi
 4470              	.LBE4547:
 4471              	.LBE4549:
 4472              	.LBE4551:
 4473              	.LBE4553:
 4474              	.LBE4555:
 4475              	.LBE4567:
 4476              	.LBE4571:
 4477              	.LBE4575:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 446


 4478              	.LBE4579:
 4479              	.LBE4583:
 4480              	.LBE4587:
 4481              	.LBE4595:
 4482              	.LBE4601:
 4483              		.loc 7 353 64 discriminator 2 view .LVU873
 4484 00ac 4FF03F0A 		mov	r10, #63
 4485              	.LBE4613:
 4486              	.LBE4620:
 4487              	.LBE4631:
 4488              	.LBB4632:
 4489              	.LBB4123:
 4490              	.LBB4115:
 4491              	.LBB4101:
 4492              	.LBB4093:
 4493              	.LBB4083:
 4494              	.LBB4078:
 4495              	.LBB4073:
 4496              	.LBB4068:
 4497              	.LBB4063:
 4498              	.LBB4058:
 4499              	.LBB4040:
 4500              	.LBB4041:
 4501              	.LBB4042:
 4502              	.LBB4043:
 4503              	.LBB4044:
 4504              		.loc 20 395 49 discriminator 2 view .LVU874
 4505 00b0 46F2442B 		movw	fp, #25156
 4506              	.LBE4044:
 4507              	.LBE4043:
 4508              	.LBE4042:
 4509              	.LBE4041:
 4510              	.LBE4040:
 4511              	.LBE4058:
 4512              	.LBE4063:
 4513              	.LBE4068:
 4514              	.LBE4073:
 4515              	.LBE4078:
 4516              	.LBE4083:
 4517              	.LBE4093:
 4518              	.LBE4101:
 4519              	.LBE4115:
 4520              	.LBE4123:
 4521              	.LBE4632:
 4522              	.LBB4633:
 4523              	.LBB4216:
 4524              	.LBB4208:
 4525              	.LBB4196:
 4526              	.LBB4190:
 4527              	.LBB4174:
 4528              	.LBB4171:
 4529              	.LBB4168:
 4530              	.LBB4165:
 4531              	.LBB4162:
 4532              	.LBB4159:
 4533              	.LBB4152:
 4534              	.LBB4150:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 447


 4535              	.LBB4148:
 4536              	.LBB4146:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 4537              		.loc 20 322 14 discriminator 2 view .LVU875
 4538 00b4 A4F878C0 		strh	ip, [r4, #120]	@ movhi
 4539              	.LBE4146:
 4540              	.LBE4148:
 4541              	.LBE4150:
 4542              	.LBE4152:
 4543              	.LBE4159:
 4544              	.LBE4162:
 4545              	.LBE4165:
 4546              	.LBE4168:
 4547              	.LBE4171:
 4548              	.LBE4174:
 4549              	.LBE4190:
 4550              	.LBE4196:
 4551              	.LBE4208:
 4552              	.LBE4216:
 4553              	.LBE4633:
 4554              	.LBB4634:
 4555              	.LBB4621:
 4556              	.LBB4614:
 4557              		.loc 7 353 64 discriminator 2 view .LVU876
 4558 00b8 C4F86CA0 		str	r10, [r4, #108]
 4559              	.LBE4614:
 4560              	.LBE4621:
 4561              	.LBE4634:
 4562              	.LBB4635:
 4563              	.LBB4217:
 4564              	.LBB4209:
 4565              	.LBB4197:
 4566              	.LBB4191:
 4567              	.LBB4175:
 4568              	.LBB4176:
 4569              	.LBB4177:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 4570              		.loc 4 157 35 discriminator 2 view .LVU877
 4571 00bc 0DF1A80A 		add	r10, sp, #168
 4572              	.LBE4177:
 4573              	.LBE4176:
 4574              	.LBE4175:
 4575              	.LBE4191:
 4576              	.LBE4197:
 4577              	.LBE4209:
 4578              	.LBE4217:
 4579              	.LBE4635:
 4580              	.LBB4636:
 4581              	.LBB4403:
 4582              	.LBB4395:
 4583              		.loc 7 353 64 discriminator 2 view .LVU878
 4584 00c0 C4F8A4E0 		str	lr, [r4, #164]
 4585              	.LBE4395:
 4586              	.LBE4403:
 4587              	.LBE4636:
 4588              	.LBB4637:
 4589              	.LBB4218:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 448


 4590              	.LBB4210:
 4591              	.LBB4198:
 4592              	.LBB4192:
 4593              	.LBB4184:
 4594              	.LBB4182:
 4595              	.LBB4180:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 4596              		.loc 4 157 35 discriminator 2 view .LVU879
 4597 00c4 C4F870A0 		str	r10, [r4, #112]
 4598              	.LBE4180:
 4599              	.LBE4182:
 4600              	.LBE4184:
 4601              	.LBE4192:
 4602              	.LBE4198:
 4603              		.loc 7 353 64 discriminator 2 view .LVU880
 4604 00c8 4FF0400A 		mov	r10, #64
 4605              	.LBE4210:
 4606              	.LBE4218:
 4607              	.LBE4637:
 4608              	.LBB4638:
 4609              	.LBB4007:
 4610              	.LBB4000:
 4611              	.LBB3990:
 4612              	.LBB3982:
 4613              	.LBB3974:
 4614              	.LBB3968:
 4615              	.LBB3964:
 4616              	.LBB3960:
 4617              	.LBB3956:
 4618              	.LBB3952:
 4619              	.LBB3948:
 4620              	.LBB3946:
 4621              	.LBB3944:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 4622              		.loc 4 183 26 discriminator 2 view .LVU881
 4623 00cc 6360     		str	r3, [r4, #4]
 4624              	.LBE3944:
 4625              	.LBE3946:
 4626              	.LBE3948:
 4627              	.LBE3952:
 4628              	.LBE3956:
 4629              	.LBE3960:
 4630              	.LBE3964:
 4631              	.LBE3968:
 4632              	.LBE3974:
 4633              	.LBE3982:
 4634              	.LBE3990:
 4635              	.LBE4000:
 4636              	.LBE4007:
 4637              	.LBE4638:
 4638              	.LBB4639:
 4639              	.LBB4219:
 4640              	.LBB4211:
 4641              		.loc 7 353 64 discriminator 2 view .LVU882
 4642 00ce C4F888A0 		str	r10, [r4, #136]
 4643              	.LBE4211:
 4644              	.LBE4219:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 449


 4645              	.LBE4639:
 4646              	.LBB4640:
 4647              	.LBB4404:
 4648              	.LBB4396:
 4649              	.LBB4383:
 4650              	.LBB4377:
 4651              	.LBB4361:
 4652              	.LBB4362:
 4653              	.LBB4363:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 4654              		.loc 4 157 35 discriminator 2 view .LVU883
 4655 00d2 0DF1C40A 		add	r10, sp, #196
 4656              	.LBE4363:
 4657              	.LBE4362:
 4658              	.LBE4361:
 4659              	.LBE4377:
 4660              	.LBE4383:
 4661              	.LBE4396:
 4662              	.LBE4404:
 4663              	.LBE4640:
 4664              	.LBB4641:
 4665              	.LBB4313:
 4666              	.LBB4305:
 4667              	.LBB4292:
 4668              	.LBB4286:
 4669              	.LBB4278:
 4670              	.LBB4275:
 4671              	.LBB4272:
 4672              	.LBB4269:
 4673              	.LBB4266:
 4674              	.LBB4263:
 4675              	.LBB4256:
 4676              	.LBB4257:
 4677              	.LBB4258:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 4678              		.loc 4 183 26 discriminator 2 view .LVU884
 4679 00d6 E363     		str	r3, [r4, #60]
 4680              	.LBE4258:
 4681              	.LBE4257:
 4682              	.LBE4256:
 4683              	.LBE4263:
 4684              	.LBE4266:
 4685              	.LBE4269:
 4686              	.LBE4272:
 4687              	.LBE4275:
 4688              	.LBE4278:
 4689              	.LBE4286:
 4690              	.LBE4292:
 4691              	.LBE4305:
 4692              	.LBE4313:
 4693              	.LBE4641:
 4694              	.LBB4642:
 4695              	.LBB4405:
 4696              	.LBB4397:
 4697              	.LBB4384:
 4698              	.LBB4378:
 4699              	.LBB4370:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 450


 4700              	.LBB4368:
 4701              	.LBB4366:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 4702              		.loc 4 157 35 discriminator 2 view .LVU885
 4703 00d8 C4F88CA0 		str	r10, [r4, #140]
 4704              	.LBE4366:
 4705              	.LBE4368:
 4706              	.LBE4370:
 4707              	.LBE4378:
 4708              	.LBE4384:
 4709              	.LBE4397:
 4710              	.LBE4405:
 4711              	.LBE4642:
 4712              	.LBB4643:
 4713              	.LBB4511:
 4714              	.LBB4503:
 4715              	.LBB4415:
 4716              	.LBB4416:
 4717              	.LBB4417:
 4718              	.LBB4418:
 4719              	.LBB4419:
 4720 00dc 0DF1E00A 		add	r10, sp, #224
 4721              	.LBE4419:
 4722              	.LBE4418:
 4723              	.LBE4417:
 4724              	.LBE4416:
 4725              	.LBE4415:
 4726              	.LBE4503:
 4727              	.LBE4511:
 4728              	.LBE4643:
 4729              	.LBB4644:
 4730              	.LBB4220:
 4731              	.LBB4212:
 4732              	.LBB4199:
 4733              	.LBB4193:
 4734              	.LBB4185:
 4735              	.LBB4172:
 4736              	.LBB4169:
 4737              	.LBB4166:
 4738              	.LBB4163:
 4739              	.LBB4160:
 4740              	.LBB4153:
 4741              	.LBB4154:
 4742              	.LBB4155:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 4743              		.loc 4 183 26 discriminator 2 view .LVU886
 4744 00e0 6367     		str	r3, [r4, #116]
 4745              	.LBE4155:
 4746              	.LBE4154:
 4747              	.LBE4153:
 4748              	.LBE4160:
 4749              	.LBE4163:
 4750              	.LBE4166:
 4751              	.LBE4169:
 4752              	.LBE4172:
 4753              	.LBE4185:
 4754              	.LBE4193:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 451


 4755              	.LBE4199:
 4756              	.LBE4212:
 4757              	.LBE4220:
 4758              	.LBE4644:
 4759              	.LBB4645:
 4760              	.LBB4512:
 4761              	.LBB4504:
 4762              	.LBB4491:
 4763              	.LBB4485:
 4764              	.LBB4426:
 4765              	.LBB4424:
 4766              	.LBB4422:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 4767              		.loc 4 157 35 discriminator 2 view .LVU887
 4768 00e2 C4F8A8A0 		str	r10, [r4, #168]
 4769              	.LBE4422:
 4770              	.LBE4424:
 4771              	.LBE4426:
 4772              	.LBB4427:
 4773              	.LBB4428:
 4774              	.LBB4429:
 4775              	.LBB4430:
 4776              	.LBB4431:
 4777              	.LBB4432:
 4778              	.LBB4433:
 4779              	.LBB4434:
 4780              	.LBB4435:
 4781              	.LBB4436:
 4782              	.LBB4437:
 4783              		.loc 20 395 49 discriminator 2 view .LVU888
 4784 00e6 46F2472A 		movw	r10, #25159
 4785              	.LBE4437:
 4786              	.LBE4436:
 4787              	.LBE4435:
 4788              	.LBE4434:
 4789              	.LBE4433:
 4790              	.LBE4432:
 4791              	.LBE4431:
 4792              	.LBE4430:
 4793              	.LBE4429:
 4794              	.LBE4428:
 4795              	.LBE4427:
 4796              	.LBE4485:
 4797              	.LBE4491:
 4798              	.LBE4504:
 4799              	.LBE4512:
 4800              	.LBE4645:
 4801              	.LBB4646:
 4802              	.LBB4406:
 4803              	.LBB4398:
 4804              	.LBB4385:
 4805              	.LBB4379:
 4806              	.LBB4371:
 4807              	.LBB4358:
 4808              	.LBB4355:
 4809              	.LBB4352:
 4810              	.LBB4349:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 452


 4811              	.LBB4346:
 4812              	.LBB4339:
 4813              	.LBB4340:
 4814              	.LBB4341:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 4815              		.loc 4 183 26 discriminator 2 view .LVU889
 4816 00ea C4F89030 		str	r3, [r4, #144]
 4817              	.LBE4341:
 4818              	.LBE4340:
 4819              	.LBE4339:
 4820              	.LBE4346:
 4821              	.LBE4349:
 4822              	.LBE4352:
 4823              	.LBE4355:
 4824              	.LBE4358:
 4825              	.LBE4371:
 4826              	.LBE4379:
 4827              	.LBE4385:
 4828              	.LBE4398:
 4829              	.LBE4406:
 4830              	.LBE4646:
 4831              	.LBB4647:
 4832              	.LBB4513:
 4833              	.LBB4505:
 4834              	.LBB4492:
 4835              	.LBB4486:
 4836              	.LBB4478:
 4837              	.LBB4474:
 4838              	.LBB4470:
 4839              	.LBB4466:
 4840              	.LBB4462:
 4841              	.LBB4458:
 4842              	.LBB4446:
 4843              	.LBB4444:
 4844              	.LBB4442:
 4845              	.LBB4440:
 4846              	.LBB4438:
 4847              		.loc 20 395 49 discriminator 2 view .LVU890
 4848 00ee ADF8E0A0 		strh	r10, [sp, #224]	@ movhi
 4849              	.LBE4438:
 4850              	.LBE4440:
 4851              	.LBE4442:
 4852              	.LBE4444:
 4853              	.LBE4446:
 4854              	.LBE4458:
 4855              	.LBE4462:
 4856              	.LBE4466:
 4857              	.LBE4470:
 4858              	.LBE4474:
 4859              	.LBE4478:
 4860              	.LBE4486:
 4861              	.LBE4492:
 4862              	.LBE4505:
 4863              	.LBE4513:
 4864              	.LBE4647:
 4865              	.LBB4648:
 4866              	.LBB4649:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 453


 4867              	.LBB4650:
 4868              	.LBB4651:
 4869              	.LBB4652:
 4870              	.LBB4653:
 4871              	.LBB4654:
 4872              	.LBB4655:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 4873              		.loc 4 157 35 discriminator 2 view .LVU891
 4874 00f2 0DF1FC0A 		add	r10, sp, #252
 4875              	.LBE4655:
 4876              	.LBE4654:
 4877              	.LBE4653:
 4878              	.LBE4652:
 4879              	.LBE4651:
 4880              	.LBE4650:
 4881              	.LBE4649:
 4882              	.LBE4648:
 4883              	.LBB4711:
 4884              	.LBB4124:
 4885              	.LBB4116:
 4886              	.LBB4102:
 4887              	.LBB4094:
 4888              	.LBB4084:
 4889              	.LBB4079:
 4890              	.LBB4074:
 4891              	.LBB4069:
 4892              	.LBB4064:
 4893              	.LBB4059:
 4894              	.LBB4053:
 4895              	.LBB4034:
 4896              	.LBB4033:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 4897              		.loc 4 183 26 discriminator 2 view .LVU892
 4898 00f6 2262     		str	r2, [r4, #32]
 4899              	.LBE4033:
 4900              	.LBE4034:
 4901              	.LBE4053:
 4902              	.LBE4059:
 4903              	.LBE4064:
 4904              	.LBE4069:
 4905              	.LBE4074:
 4906              	.LBE4079:
 4907              	.LBE4084:
 4908              	.LBE4094:
 4909              	.LBE4102:
 4910              	.LBE4116:
 4911              	.LBE4124:
 4912              	.LBE4711:
 4913              	.LBB4712:
 4914              	.LBB4622:
 4915              	.LBB4615:
 4916              	.LBB4602:
 4917              	.LBB4596:
 4918              	.LBB4588:
 4919              	.LBB4584:
 4920              	.LBB4580:
 4921              	.LBB4576:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 454


 4922              	.LBB4572:
 4923              	.LBB4568:
 4924              	.LBB4556:
 4925              	.LBB4557:
 4926              	.LBB4558:
 4927 00f8 A265     		str	r2, [r4, #88]
 4928              	.LBE4558:
 4929              	.LBE4557:
 4930              	.LBE4556:
 4931              	.LBE4568:
 4932              	.LBE4572:
 4933              	.LBE4576:
 4934              	.LBE4580:
 4935              	.LBE4584:
 4936              	.LBE4588:
 4937              	.LBE4596:
 4938              	.LBE4602:
 4939              	.LBE4615:
 4940              	.LBE4622:
 4941              	.LBE4712:
 4942              	.LBB4713:
 4943              	.LBB4514:
 4944              	.LBB4506:
 4945              	.LBB4493:
 4946              	.LBB4487:
 4947              	.LBB4479:
 4948              	.LBB4475:
 4949              	.LBB4471:
 4950              	.LBB4467:
 4951              	.LBB4463:
 4952              	.LBB4459:
 4953              	.LBB4447:
 4954              	.LBB4448:
 4955              	.LBB4449:
 4956 00fa C4F8AC20 		str	r2, [r4, #172]
 4957              	.LBE4449:
 4958              	.LBE4448:
 4959              	.LBE4447:
 4960              	.LBE4459:
 4961              	.LBE4463:
 4962              	.LBE4467:
 4963              	.LBE4471:
 4964              	.LBE4475:
 4965              	.LBE4479:
 4966              	.LBE4487:
 4967              	.LBE4493:
 4968              	.LBE4506:
 4969              	.LBE4514:
 4970              	.LBE4713:
 4971              	.LBB4714:
 4972              	.LBB4407:
 4973              	.LBB4399:
 4974              	.LBB4386:
 4975              	.LBB4380:
 4976              	.LBB4372:
 4977              	.LBB4359:
 4978              	.LBB4356:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 455


 4979              	.LBB4353:
 4980              	.LBB4350:
 4981              	.LBB4347:
 4982              	.LBB4343:
 4983              	.LBB4337:
 4984              	.LBB4335:
 4985              	.LBB4333:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 4986              		.loc 20 322 14 discriminator 2 view .LVU893
 4987 00fe A4F89400 		strh	r0, [r4, #148]	@ movhi
 4988              	.LBE4333:
 4989              	.LBE4335:
 4990              	.LBE4337:
 4991              	.LBE4343:
 4992              	.LBE4347:
 4993              	.LBE4350:
 4994              	.LBE4353:
 4995              	.LBE4356:
 4996              	.LBE4359:
 4997              	.LBE4372:
 4998              	.LBE4380:
 4999              	.LBE4386:
 5000              	.LBE4399:
 5001              	.LBE4407:
 5002              	.LBE4714:
 5003              	.LBB4715:
 5004              	.LBB4515:
 5005              	.LBB4507:
 5006              		.loc 7 353 64 discriminator 2 view .LVU894
 5007 0102 C4F8C010 		str	r1, [r4, #192]
 5008              	.LBE4507:
 5009              	.LBE4515:
 5010              	.LBE4715:
 5011              	.LBB4716:
 5012              	.LBB4623:
 5013              	.LBB4616:
 5014              	.LBB4603:
 5015              	.LBB4597:
 5016              	.LBB4589:
 5017              	.LBB4585:
 5018              	.LBB4581:
 5019              	.LBB4577:
 5020              	.LBB4573:
 5021              	.LBB4569:
 5022              	.LBB4564:
 5023              	.LBB4559:
 5024              	.LBB4560:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 5025              		.loc 20 322 14 discriminator 2 view .LVU895
 5026 0106 84F85E50 		strb	r5, [r4, #94]
 5027              	.LBE4560:
 5028              	.LBE4559:
 5029              	.LBE4564:
 5030              	.LBE4569:
 5031              	.LBE4573:
 5032              	.LBE4577:
 5033              	.LBE4581:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 456


 5034              	.LBE4585:
 5035              	.LBE4589:
 5036              	.LBE4597:
 5037              	.LBE4603:
 5038              	.LBE4616:
 5039              	.LBE4623:
 5040              	.LBE4716:
 5041              	.LBB4717:
 5042              	.LBB4516:
 5043              	.LBB4508:
 5044              	.LBB4494:
 5045              	.LBB4488:
 5046              	.LBB4480:
 5047              	.LBB4476:
 5048              	.LBB4472:
 5049              	.LBB4468:
 5050              	.LBB4464:
 5051              	.LBB4460:
 5052              	.LBB4455:
 5053              	.LBB4450:
 5054              	.LBB4451:
 5055 010a 84F8B250 		strb	r5, [r4, #178]
 5056              	.LBE4451:
 5057              	.LBE4450:
 5058              	.LBE4455:
 5059              	.LBE4460:
 5060              	.LBE4464:
 5061              	.LBE4468:
 5062              	.LBE4472:
 5063              	.LBE4476:
 5064              	.LBE4480:
 5065              	.LBE4488:
 5066              	.LBE4494:
 5067              	.LBE4508:
 5068              	.LBE4516:
 5069              	.LBE4717:
 5070              	.LBB4718:
 5071              	.LBB4125:
 5072              	.LBB4117:
 5073              	.LBB4103:
 5074              	.LBB4095:
 5075              	.LBB4085:
 5076              	.LBB4080:
 5077              	.LBB4075:
 5078              	.LBB4070:
 5079              	.LBB4065:
 5080              	.LBB4060:
 5081              	.LBB4054:
 5082              	.LBB4035:
 5083              	.LBB4036:
 5084 010e 84F82650 		strb	r5, [r4, #38]
 5085              	.LBE4036:
 5086              	.LBE4035:
 5087              	.LBE4054:
 5088              	.LBE4060:
 5089              	.LBE4065:
 5090              	.LBE4070:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 457


 5091              	.LBE4075:
 5092              	.LBE4080:
 5093              	.LBE4085:
 5094              	.LBE4095:
 5095              	.LBE4103:
 5096              	.LBE4117:
 5097              	.LBE4125:
 5098              	.LBE4718:
 5099              	.LBB4719:
 5100              	.LBB4008:
 5101              	.LBB4001:
 5102              	.LBB3991:
 5103              	.LBB3983:
 5104              	.LBB3975:
 5105              	.LBB3969:
 5106              	.LBB3965:
 5107              	.LBB3961:
 5108              	.LBB3957:
 5109              	.LBB3953:
 5110              	.LBB3949:
 5111              	.LBB3939:
 5112              	.LBB3937:
 5113              	.LBB3935:
 5114 0112 A4F80890 		strh	r9, [r4, #8]	@ movhi
 5115              	.LVL229:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 5116              		.loc 20 322 14 discriminator 2 view .LVU896
 5117              	.LBE3935:
 5118              	.LBE3937:
 5119              	.LBE3939:
 5120              	.LBE3949:
 5121              	.LBE3953:
 5122              	.LBE3957:
 5123              	.LBE3961:
 5124              	.LBE3965:
 5125              	.LBE3969:
 5126              	.LBE3975:
 5127              	.LBE3983:
 5128              	.LBE3991:
 5129              	.LBB3992:
 5130              	.LBI3992:
 5131              		.loc 8 162 7 is_stmt 1 discriminator 2 view .LVU897
 5132              	.LBB3993:
 5133              	.LBI3993:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5134              		.loc 6 89 7 discriminator 2 view .LVU898
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5135              		.loc 6 89 7 is_stmt 0 discriminator 2 view .LVU899
 5136              	.LBE3993:
 5137              	.LBE3992:
 5138              	.LBB3994:
 5139              	.LBI3994:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 5140              		.loc 26 76 5 is_stmt 1 discriminator 2 view .LVU900
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 5141              		.loc 26 76 5 is_stmt 0 discriminator 2 view .LVU901
 5142              	.LBE3994:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 458


 5143              	.LBE4001:
 5144              	.LBE4008:
 5145              	.LBE4719:
 5146              	.LBB4720:
 5147              	.LBI4009:
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 5148              		.loc 7 352 12 is_stmt 1 discriminator 2 view .LVU902
 5149              	.LBB4126:
 5150              	.LBB4118:
 5151              	.LBB4104:
 5152              	.LBI4104:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 5153              		.loc 26 76 5 discriminator 2 view .LVU903
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 5154              		.loc 26 76 5 is_stmt 0 discriminator 2 view .LVU904
 5155              	.LBE4104:
 5156              	.LBB4105:
 5157              	.LBI4105:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 5158              		.loc 8 144 7 is_stmt 1 discriminator 2 view .LVU905
 5159              	.LBB4106:
 5160              	.LBI4106:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5161              		.loc 6 79 7 discriminator 2 view .LVU906
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5162              		.loc 6 79 7 is_stmt 0 discriminator 2 view .LVU907
 5163              	.LBE4106:
 5164              	.LBE4105:
 5165              	.LBB4107:
 5166              	.LBI4012:
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 5167              		.loc 4 525 7 is_stmt 1 discriminator 2 view .LVU908
 5168              	.LBB4096:
 5169              	.LBB4086:
 5170              	.LBI4086:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5171              		.loc 4 190 7 discriminator 2 view .LVU909
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5172              		.loc 4 190 7 is_stmt 0 discriminator 2 view .LVU910
 5173              	.LBE4086:
 5174              	.LBB4087:
 5175              	.LBI4014:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 5176              		.loc 4 156 2 is_stmt 1 discriminator 2 view .LVU911
 5177              	.LBB4022:
 5178              	.LBB4020:
 5179              	.LBB4017:
 5180              	.LBI4017:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 5181              		.loc 8 147 7 discriminator 2 view .LVU912
 5182              	.LBB4018:
 5183              	.LBI4018:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5184              		.loc 6 82 7 discriminator 2 view .LVU913
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5185              		.loc 6 82 7 is_stmt 0 discriminator 2 view .LVU914
 5186              	.LBE4018:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 459


 5187              	.LBE4017:
 5188              	.LBE4020:
 5189              	.LBE4022:
 5190              	.LBE4087:
 5191              	.LBB4088:
 5192              	.LBI4088:
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 5193              		.loc 20 351 7 is_stmt 1 discriminator 2 view .LVU915
 5194              	.LBE4088:
 5195              	.LBE4096:
 5196              	.LBE4107:
 5197              	.LBE4118:
 5198              	.LBE4126:
 5199              	.LBE4720:
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 5200              		.loc 20 357 2 discriminator 2 view .LVU916
 5201              	.LBB4721:
 5202              	.LBB4127:
 5203              	.LBB4119:
 5204              	.LBB4108:
 5205              	.LBB4097:
 5206              	.LBB4089:
 5207              	.LBI4024:
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 5208              		.loc 4 263 9 discriminator 2 view .LVU917
 5209              	.LBB4081:
 5210              	.LBB4076:
 5211              	.LBI4026:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 5212              		.loc 4 243 9 discriminator 2 view .LVU918
 5213              	.LBB4071:
 5214              	.LBB4066:
 5215              	.LBI4028:
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 5216              		.loc 24 206 7 discriminator 2 view .LVU919
 5217              	.LBB4061:
 5218              	.LBB4055:
 5219              	.LBI4040:
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 5220              		.loc 4 396 7 discriminator 2 view .LVU920
 5221              	.LBB4051:
 5222              	.LBI4041:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5223              		.loc 4 346 7 discriminator 2 view .LVU921
 5224              	.LBB4049:
 5225              	.LBI4042:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5226              		.loc 4 346 7 discriminator 2 view .LVU922
 5227              	.LBB4047:
 5228              	.LBI4043:
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 5229              		.loc 20 387 7 discriminator 2 view .LVU923
 5230              	.LBB4045:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 5231              		.loc 20 389 2 discriminator 2 view .LVU924
 5232              		.loc 20 395 2 discriminator 2 view .LVU925
 5233              	.LBE4045:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 460


 5234              	.LBE4047:
 5235              	.LBE4049:
 5236              	.LBE4051:
 5237              	.LBE4055:
 5238              	.LBE4061:
 5239              	.LBE4066:
 5240              	.LBE4071:
 5241              	.LBE4076:
 5242              	.LBE4081:
 5243              	.LBE4089:
 5244              	.LBE4097:
 5245              	.LBE4108:
 5246              	.LBE4119:
 5247              	.LBE4127:
 5248              	.LBE4721:
 5249              	.LBB4722:
 5250              	.LBB4314:
 5251              	.LBB4306:
 5252              	.LBB4293:
 5253              	.LBB4287:
 5254              	.LBB4279:
 5255              	.LBB4276:
 5256              	.LBB4273:
 5257              	.LBB4270:
 5258              	.LBB4267:
 5259              	.LBB4264:
 5260              	.LBB4260:
 5261              	.LBB4254:
 5262              	.LBB4252:
 5263              	.LBB4250:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 5264              		.loc 20 322 14 is_stmt 0 discriminator 2 view .LVU926
 5265 0116 A4F84080 		strh	r8, [r4, #64]	@ movhi
 5266              	.LBE4250:
 5267              	.LBE4252:
 5268              	.LBE4254:
 5269              	.LBE4260:
 5270              	.LBE4264:
 5271              	.LBE4267:
 5272              	.LBE4270:
 5273              	.LBE4273:
 5274              	.LBE4276:
 5275              	.LBE4279:
 5276              	.LBE4287:
 5277              	.LBE4293:
 5278              	.LBE4306:
 5279              	.LBE4314:
 5280              	.LBE4722:
 5281              	.LBB4723:
 5282              	.LBB4128:
 5283              	.LBB4120:
 5284              	.LBB4109:
 5285              	.LBB4098:
 5286              	.LBB4090:
 5287              	.LBB4082:
 5288              	.LBB4077:
 5289              	.LBB4072:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 461


 5290              	.LBB4067:
 5291              	.LBB4062:
 5292              	.LBB4056:
 5293              	.LBB4052:
 5294              	.LBB4050:
 5295              	.LBB4048:
 5296              	.LBB4046:
 5297              		.loc 20 395 49 discriminator 2 view .LVU927
 5298 011a ADF854B0 		strh	fp, [sp, #84]	@ movhi
 5299              	.LVL230:
 5300              		.loc 20 395 49 discriminator 2 view .LVU928
 5301              	.LBE4046:
 5302              	.LBE4048:
 5303              	.LBE4050:
 5304              	.LBE4052:
 5305              	.LBE4056:
 5306              	.LBB4057:
 5307              	.LBI4030:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5308              		.loc 4 214 7 is_stmt 1 discriminator 2 view .LVU929
 5309              	.LBB4038:
 5310              	.LBI4031:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 5311              		.loc 4 182 7 discriminator 2 view .LVU930
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 5312              		.loc 4 182 7 is_stmt 0 discriminator 2 view .LVU931
 5313              	.LBE4038:
 5314              	.LBB4039:
 5315              	.LBI4035:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 5316              		.loc 20 321 7 is_stmt 1 discriminator 2 view .LVU932
 5317              	.LBB4037:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 5318              		.loc 20 322 9 discriminator 2 view .LVU933
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 5319              		.loc 20 322 9 is_stmt 0 discriminator 2 view .LVU934
 5320              	.LBE4037:
 5321              	.LBE4039:
 5322              	.LBE4057:
 5323              	.LBE4062:
 5324              	.LBE4067:
 5325              	.LBE4072:
 5326              	.LBE4077:
 5327              	.LBE4082:
 5328              	.LBE4090:
 5329              	.LBE4098:
 5330              	.LBE4109:
 5331              	.LBB4110:
 5332              	.LBI4110:
 5333              		.loc 8 162 7 is_stmt 1 discriminator 2 view .LVU935
 5334              	.LBB4111:
 5335              	.LBI4111:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5336              		.loc 6 89 7 discriminator 2 view .LVU936
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5337              		.loc 6 89 7 is_stmt 0 discriminator 2 view .LVU937
 5338              	.LBE4111:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 462


 5339              	.LBE4110:
 5340              	.LBB4112:
 5341              	.LBI4112:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 5342              		.loc 26 76 5 is_stmt 1 discriminator 2 view .LVU938
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 5343              		.loc 26 76 5 is_stmt 0 discriminator 2 view .LVU939
 5344              	.LBE4112:
 5345              	.LBE4120:
 5346              	.LBE4128:
 5347              	.LBE4723:
 5348              	.LBB4724:
 5349              	.LBI4225:
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 5350              		.loc 7 352 12 is_stmt 1 discriminator 2 view .LVU940
 5351              	.LBB4315:
 5352              	.LBB4307:
 5353              	.LBB4294:
 5354              	.LBI4294:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 5355              		.loc 26 76 5 discriminator 2 view .LVU941
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 5356              		.loc 26 76 5 is_stmt 0 discriminator 2 view .LVU942
 5357              	.LBE4294:
 5358              	.LBB4295:
 5359              	.LBI4295:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 5360              		.loc 8 144 7 is_stmt 1 discriminator 2 view .LVU943
 5361              	.LBB4296:
 5362              	.LBI4296:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5363              		.loc 6 79 7 discriminator 2 view .LVU944
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5364              		.loc 6 79 7 is_stmt 0 discriminator 2 view .LVU945
 5365              	.LBE4296:
 5366              	.LBE4295:
 5367              	.LBB4297:
 5368              	.LBI4228:
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 5369              		.loc 4 525 7 is_stmt 1 discriminator 2 view .LVU946
 5370              	.LBB4288:
 5371              	.LBB4280:
 5372              	.LBI4280:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5373              		.loc 4 190 7 discriminator 2 view .LVU947
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5374              		.loc 4 190 7 is_stmt 0 discriminator 2 view .LVU948
 5375              	.LBE4280:
 5376              	.LBB4281:
 5377              	.LBI4230:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 5378              		.loc 4 156 2 is_stmt 1 discriminator 2 view .LVU949
 5379              	.LBB4238:
 5380              	.LBB4236:
 5381              	.LBB4233:
 5382              	.LBI4233:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 463


 5383              		.loc 8 147 7 discriminator 2 view .LVU950
 5384              	.LBB4234:
 5385              	.LBI4234:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5386              		.loc 6 82 7 discriminator 2 view .LVU951
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5387              		.loc 6 82 7 is_stmt 0 discriminator 2 view .LVU952
 5388              	.LBE4234:
 5389              	.LBE4233:
 5390              	.LBE4236:
 5391              	.LBE4238:
 5392              	.LBE4281:
 5393              	.LBB4282:
 5394              	.LBI4282:
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 5395              		.loc 20 351 7 is_stmt 1 discriminator 2 view .LVU953
 5396              	.LBE4282:
 5397              	.LBE4288:
 5398              	.LBE4297:
 5399              	.LBE4307:
 5400              	.LBE4315:
 5401              	.LBE4724:
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 5402              		.loc 20 357 2 discriminator 2 view .LVU954
 5403              	.LBB4725:
 5404              	.LBB4316:
 5405              	.LBB4308:
 5406              	.LBB4298:
 5407              	.LBB4289:
 5408              	.LBB4283:
 5409              	.LBI4240:
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 5410              		.loc 4 263 9 discriminator 2 view .LVU955
 5411              	.LBB4277:
 5412              	.LBB4274:
 5413              	.LBI4242:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 5414              		.loc 4 243 9 discriminator 2 view .LVU956
 5415              	.LBB4271:
 5416              	.LBB4268:
 5417              	.LBI4244:
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 5418              		.loc 24 206 7 discriminator 2 view .LVU957
 5419              	.LBB4265:
 5420              	.LBB4261:
 5421              	.LBI4246:
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 5422              		.loc 4 396 7 discriminator 2 view .LVU958
 5423              	.LBB4255:
 5424              	.LBI4247:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5425              		.loc 4 346 7 discriminator 2 view .LVU959
 5426              	.LBB4253:
 5427              	.LBI4248:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 5428              		.loc 20 321 7 discriminator 2 view .LVU960
 5429              	.LBB4251:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 464


 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 5430              		.loc 20 322 9 discriminator 2 view .LVU961
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 5431              		.loc 20 322 9 is_stmt 0 discriminator 2 view .LVU962
 5432              	.LBE4251:
 5433              	.LBE4253:
 5434              	.LBE4255:
 5435              	.LBE4261:
 5436              	.LBB4262:
 5437              	.LBI4256:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5438              		.loc 4 214 7 is_stmt 1 discriminator 2 view .LVU963
 5439              	.LBB4259:
 5440              	.LBI4257:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 5441              		.loc 4 182 7 discriminator 2 view .LVU964
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 5442              		.loc 4 182 7 is_stmt 0 discriminator 2 view .LVU965
 5443              	.LBE4259:
 5444              	.LBE4262:
 5445              	.LBE4265:
 5446              	.LBE4268:
 5447              	.LBE4271:
 5448              	.LBE4274:
 5449              	.LBE4277:
 5450              	.LBE4283:
 5451              	.LBE4289:
 5452              	.LBE4298:
 5453              	.LBE4308:
 5454              	.LBE4316:
 5455              	.LBE4725:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 5456              		.loc 20 322 9 is_stmt 1 discriminator 2 view .LVU966
 5457              	.LBB4726:
 5458              	.LBB4317:
 5459              	.LBB4309:
 5460              	.LBB4299:
 5461              	.LBI4299:
 5462              		.loc 8 162 7 discriminator 2 view .LVU967
 5463              	.LBB4300:
 5464              	.LBI4300:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5465              		.loc 6 89 7 discriminator 2 view .LVU968
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5466              		.loc 6 89 7 is_stmt 0 discriminator 2 view .LVU969
 5467              	.LBE4300:
 5468              	.LBE4299:
 5469              	.LBB4301:
 5470              	.LBI4301:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 5471              		.loc 26 76 5 is_stmt 1 discriminator 2 view .LVU970
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 5472              		.loc 26 76 5 is_stmt 0 discriminator 2 view .LVU971
 5473              	.LBE4301:
 5474              	.LBE4309:
 5475              	.LBE4317:
 5476              	.LBE4726:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 465


 5477              	.LBB4727:
 5478              	.LBI4521:
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 5479              		.loc 7 352 12 is_stmt 1 discriminator 2 view .LVU972
 5480              	.LBB4624:
 5481              	.LBB4617:
 5482              	.LBB4604:
 5483              	.LBI4604:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 5484              		.loc 26 76 5 discriminator 2 view .LVU973
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 5485              		.loc 26 76 5 is_stmt 0 discriminator 2 view .LVU974
 5486              	.LBE4604:
 5487              	.LBB4605:
 5488              	.LBI4605:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 5489              		.loc 8 144 7 is_stmt 1 discriminator 2 view .LVU975
 5490              	.LBB4606:
 5491              	.LBI4606:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5492              		.loc 6 79 7 discriminator 2 view .LVU976
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5493              		.loc 6 79 7 is_stmt 0 discriminator 2 view .LVU977
 5494              	.LBE4606:
 5495              	.LBE4605:
 5496              	.LBB4607:
 5497              	.LBI4524:
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 5498              		.loc 4 525 7 is_stmt 1 discriminator 2 view .LVU978
 5499              	.LBB4598:
 5500              	.LBB4590:
 5501              	.LBI4590:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5502              		.loc 4 190 7 discriminator 2 view .LVU979
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5503              		.loc 4 190 7 is_stmt 0 discriminator 2 view .LVU980
 5504              	.LBE4590:
 5505              	.LBB4591:
 5506              	.LBI4526:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 5507              		.loc 4 156 2 is_stmt 1 discriminator 2 view .LVU981
 5508              	.LBB4534:
 5509              	.LBB4532:
 5510              	.LBB4529:
 5511              	.LBI4529:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 5512              		.loc 8 147 7 discriminator 2 view .LVU982
 5513              	.LBB4530:
 5514              	.LBI4530:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5515              		.loc 6 82 7 discriminator 2 view .LVU983
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5516              		.loc 6 82 7 is_stmt 0 discriminator 2 view .LVU984
 5517              	.LBE4530:
 5518              	.LBE4529:
 5519              	.LBE4532:
 5520              	.LBE4534:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 466


 5521              	.LBE4591:
 5522              	.LBB4592:
 5523              	.LBI4592:
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 5524              		.loc 20 351 7 is_stmt 1 discriminator 2 view .LVU985
 5525              	.LBE4592:
 5526              	.LBE4598:
 5527              	.LBE4607:
 5528              	.LBE4617:
 5529              	.LBE4624:
 5530              	.LBE4727:
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 5531              		.loc 20 357 2 discriminator 2 view .LVU986
 5532              	.LBB4728:
 5533              	.LBB4625:
 5534              	.LBB4618:
 5535              	.LBB4608:
 5536              	.LBB4599:
 5537              	.LBB4593:
 5538              	.LBI4536:
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 5539              		.loc 4 263 9 discriminator 2 view .LVU987
 5540              	.LBB4586:
 5541              	.LBB4582:
 5542              	.LBI4538:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 5543              		.loc 4 243 9 discriminator 2 view .LVU988
 5544              	.LBB4578:
 5545              	.LBB4574:
 5546              	.LBI4540:
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 5547              		.loc 24 206 7 discriminator 2 view .LVU989
 5548              	.LBB4570:
 5549              	.LBB4565:
 5550              	.LBI4542:
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 5551              		.loc 4 396 7 discriminator 2 view .LVU990
 5552              	.LBB4554:
 5553              	.LBI4543:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5554              		.loc 4 346 7 discriminator 2 view .LVU991
 5555              	.LBB4552:
 5556              	.LBI4544:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5557              		.loc 4 346 7 discriminator 2 view .LVU992
 5558              	.LBB4550:
 5559              	.LBI4545:
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 5560              		.loc 20 387 7 discriminator 2 view .LVU993
 5561              	.LBB4548:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 5562              		.loc 20 389 2 discriminator 2 view .LVU994
 5563              		.loc 20 395 2 discriminator 2 view .LVU995
 5564              		.loc 20 395 2 is_stmt 0 discriminator 2 view .LVU996
 5565              	.LBE4548:
 5566              	.LBE4550:
 5567              	.LBE4552:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 467


 5568              	.LBE4554:
 5569              	.LBE4565:
 5570              	.LBB4566:
 5571              	.LBI4556:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5572              		.loc 4 214 7 is_stmt 1 discriminator 2 view .LVU997
 5573              	.LBB4562:
 5574              	.LBI4557:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 5575              		.loc 4 182 7 discriminator 2 view .LVU998
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 5576              		.loc 4 182 7 is_stmt 0 discriminator 2 view .LVU999
 5577              	.LBE4562:
 5578              	.LBB4563:
 5579              	.LBI4559:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 5580              		.loc 20 321 7 is_stmt 1 discriminator 2 view .LVU1000
 5581              	.LBB4561:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 5582              		.loc 20 322 9 discriminator 2 view .LVU1001
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 5583              		.loc 20 322 9 is_stmt 0 discriminator 2 view .LVU1002
 5584              	.LBE4561:
 5585              	.LBE4563:
 5586              	.LBE4566:
 5587              	.LBE4570:
 5588              	.LBE4574:
 5589              	.LBE4578:
 5590              	.LBE4582:
 5591              	.LBE4586:
 5592              	.LBE4593:
 5593              	.LBE4599:
 5594              	.LBE4608:
 5595              	.LBB4609:
 5596              	.LBI4609:
 5597              		.loc 8 162 7 is_stmt 1 discriminator 2 view .LVU1003
 5598              	.LBB4610:
 5599              	.LBI4610:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5600              		.loc 6 89 7 discriminator 2 view .LVU1004
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5601              		.loc 6 89 7 is_stmt 0 discriminator 2 view .LVU1005
 5602              	.LBE4610:
 5603              	.LBE4609:
 5604              	.LBB4611:
 5605              	.LBI4611:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 5606              		.loc 26 76 5 is_stmt 1 discriminator 2 view .LVU1006
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 5607              		.loc 26 76 5 is_stmt 0 discriminator 2 view .LVU1007
 5608              	.LBE4611:
 5609              	.LBE4618:
 5610              	.LBE4625:
 5611              	.LBE4728:
 5612              	.LBB4729:
 5613              	.LBI4131:
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 468


 5614              		.loc 7 352 12 is_stmt 1 discriminator 2 view .LVU1008
 5615              	.LBB4221:
 5616              	.LBB4213:
 5617              	.LBB4200:
 5618              	.LBI4200:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 5619              		.loc 26 76 5 discriminator 2 view .LVU1009
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 5620              		.loc 26 76 5 is_stmt 0 discriminator 2 view .LVU1010
 5621              	.LBE4200:
 5622              	.LBB4201:
 5623              	.LBI4201:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 5624              		.loc 8 144 7 is_stmt 1 discriminator 2 view .LVU1011
 5625              	.LBB4202:
 5626              	.LBI4202:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5627              		.loc 6 79 7 discriminator 2 view .LVU1012
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5628              		.loc 6 79 7 is_stmt 0 discriminator 2 view .LVU1013
 5629              	.LBE4202:
 5630              	.LBE4201:
 5631              	.LBB4203:
 5632              	.LBI4134:
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 5633              		.loc 4 525 7 is_stmt 1 discriminator 2 view .LVU1014
 5634              	.LBB4194:
 5635              	.LBB4186:
 5636              	.LBI4186:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5637              		.loc 4 190 7 discriminator 2 view .LVU1015
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5638              		.loc 4 190 7 is_stmt 0 discriminator 2 view .LVU1016
 5639              	.LBE4186:
 5640              	.LBB4187:
 5641              	.LBI4175:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 5642              		.loc 4 156 2 is_stmt 1 discriminator 2 view .LVU1017
 5643              	.LBB4183:
 5644              	.LBB4181:
 5645              	.LBB4178:
 5646              	.LBI4178:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 5647              		.loc 8 147 7 discriminator 2 view .LVU1018
 5648              	.LBB4179:
 5649              	.LBI4179:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5650              		.loc 6 82 7 discriminator 2 view .LVU1019
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5651              		.loc 6 82 7 is_stmt 0 discriminator 2 view .LVU1020
 5652              	.LBE4179:
 5653              	.LBE4178:
 5654              	.LBE4181:
 5655              	.LBE4183:
 5656              	.LBE4187:
 5657              	.LBB4188:
 5658              	.LBI4188:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 469


 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 5659              		.loc 20 351 7 is_stmt 1 discriminator 2 view .LVU1021
 5660              	.LBE4188:
 5661              	.LBE4194:
 5662              	.LBE4203:
 5663              	.LBE4213:
 5664              	.LBE4221:
 5665              	.LBE4729:
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 5666              		.loc 20 357 2 discriminator 2 view .LVU1022
 5667              	.LBB4730:
 5668              	.LBB4222:
 5669              	.LBB4214:
 5670              	.LBB4204:
 5671              	.LBB4195:
 5672              	.LBB4189:
 5673              	.LBI4136:
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 5674              		.loc 4 263 9 discriminator 2 view .LVU1023
 5675              	.LBB4173:
 5676              	.LBB4170:
 5677              	.LBI4138:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 5678              		.loc 4 243 9 discriminator 2 view .LVU1024
 5679              	.LBB4167:
 5680              	.LBB4164:
 5681              	.LBI4140:
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 5682              		.loc 24 206 7 discriminator 2 view .LVU1025
 5683              	.LBB4161:
 5684              	.LBB4157:
 5685              	.LBI4142:
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 5686              		.loc 4 396 7 discriminator 2 view .LVU1026
 5687              	.LBB4151:
 5688              	.LBI4143:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5689              		.loc 4 346 7 discriminator 2 view .LVU1027
 5690              	.LBB4149:
 5691              	.LBI4144:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 5692              		.loc 20 321 7 discriminator 2 view .LVU1028
 5693              	.LBB4147:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 5694              		.loc 20 322 9 discriminator 2 view .LVU1029
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 5695              		.loc 20 322 9 is_stmt 0 discriminator 2 view .LVU1030
 5696              	.LBE4147:
 5697              	.LBE4149:
 5698              	.LBE4151:
 5699              	.LBE4157:
 5700              	.LBB4158:
 5701              	.LBI4153:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5702              		.loc 4 214 7 is_stmt 1 discriminator 2 view .LVU1031
 5703              	.LBB4156:
 5704              	.LBI4154:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 470


 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 5705              		.loc 4 182 7 discriminator 2 view .LVU1032
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 5706              		.loc 4 182 7 is_stmt 0 discriminator 2 view .LVU1033
 5707              	.LBE4156:
 5708              	.LBE4158:
 5709              	.LBE4161:
 5710              	.LBE4164:
 5711              	.LBE4167:
 5712              	.LBE4170:
 5713              	.LBE4173:
 5714              	.LBE4189:
 5715              	.LBE4195:
 5716              	.LBE4204:
 5717              	.LBE4214:
 5718              	.LBE4222:
 5719              	.LBE4730:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 5720              		.loc 20 322 9 is_stmt 1 discriminator 2 view .LVU1034
 5721              	.LBB4731:
 5722              	.LBB4223:
 5723              	.LBB4215:
 5724              	.LBB4205:
 5725              	.LBI4205:
 5726              		.loc 8 162 7 discriminator 2 view .LVU1035
 5727              	.LBB4206:
 5728              	.LBI4206:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5729              		.loc 6 89 7 discriminator 2 view .LVU1036
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5730              		.loc 6 89 7 is_stmt 0 discriminator 2 view .LVU1037
 5731              	.LBE4206:
 5732              	.LBE4205:
 5733              	.LBB4207:
 5734              	.LBI4207:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 5735              		.loc 26 76 5 is_stmt 1 discriminator 2 view .LVU1038
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 5736              		.loc 26 76 5 is_stmt 0 discriminator 2 view .LVU1039
 5737              	.LBE4207:
 5738              	.LBE4215:
 5739              	.LBE4223:
 5740              	.LBE4731:
 5741              	.LBB4732:
 5742              	.LBI4318:
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 5743              		.loc 7 352 12 is_stmt 1 discriminator 2 view .LVU1040
 5744              	.LBB4408:
 5745              	.LBB4400:
 5746              	.LBB4387:
 5747              	.LBI4387:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 5748              		.loc 26 76 5 discriminator 2 view .LVU1041
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 5749              		.loc 26 76 5 is_stmt 0 discriminator 2 view .LVU1042
 5750              	.LBE4387:
 5751              	.LBB4388:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 471


 5752              	.LBI4388:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 5753              		.loc 8 144 7 is_stmt 1 discriminator 2 view .LVU1043
 5754              	.LBB4389:
 5755              	.LBI4389:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5756              		.loc 6 79 7 discriminator 2 view .LVU1044
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5757              		.loc 6 79 7 is_stmt 0 discriminator 2 view .LVU1045
 5758              	.LBE4389:
 5759              	.LBE4388:
 5760              	.LBB4390:
 5761              	.LBI4321:
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 5762              		.loc 4 525 7 is_stmt 1 discriminator 2 view .LVU1046
 5763              	.LBB4381:
 5764              	.LBB4373:
 5765              	.LBI4373:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5766              		.loc 4 190 7 discriminator 2 view .LVU1047
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5767              		.loc 4 190 7 is_stmt 0 discriminator 2 view .LVU1048
 5768              	.LBE4373:
 5769              	.LBB4374:
 5770              	.LBI4361:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 5771              		.loc 4 156 2 is_stmt 1 discriminator 2 view .LVU1049
 5772              	.LBB4369:
 5773              	.LBB4367:
 5774              	.LBB4364:
 5775              	.LBI4364:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 5776              		.loc 8 147 7 discriminator 2 view .LVU1050
 5777              	.LBB4365:
 5778              	.LBI4365:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5779              		.loc 6 82 7 discriminator 2 view .LVU1051
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5780              		.loc 6 82 7 is_stmt 0 discriminator 2 view .LVU1052
 5781              	.LBE4365:
 5782              	.LBE4364:
 5783              	.LBE4367:
 5784              	.LBE4369:
 5785              	.LBE4374:
 5786              	.LBB4375:
 5787              	.LBI4375:
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 5788              		.loc 20 351 7 is_stmt 1 discriminator 2 view .LVU1053
 5789              	.LBE4375:
 5790              	.LBE4381:
 5791              	.LBE4390:
 5792              	.LBE4400:
 5793              	.LBE4408:
 5794              	.LBE4732:
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 5795              		.loc 20 357 2 discriminator 2 view .LVU1054
 5796              	.LBB4733:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 472


 5797              	.LBB4409:
 5798              	.LBB4401:
 5799              	.LBB4391:
 5800              	.LBB4382:
 5801              	.LBB4376:
 5802              	.LBI4323:
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 5803              		.loc 4 263 9 discriminator 2 view .LVU1055
 5804              	.LBB4360:
 5805              	.LBB4357:
 5806              	.LBI4325:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 5807              		.loc 4 243 9 discriminator 2 view .LVU1056
 5808              	.LBB4354:
 5809              	.LBB4351:
 5810              	.LBI4327:
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 5811              		.loc 24 206 7 discriminator 2 view .LVU1057
 5812              	.LBB4348:
 5813              	.LBB4344:
 5814              	.LBI4329:
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 5815              		.loc 4 396 7 discriminator 2 view .LVU1058
 5816              	.LBB4338:
 5817              	.LBI4330:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5818              		.loc 4 346 7 discriminator 2 view .LVU1059
 5819              	.LBB4336:
 5820              	.LBI4331:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 5821              		.loc 20 321 7 discriminator 2 view .LVU1060
 5822              	.LBB4334:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 5823              		.loc 20 322 9 discriminator 2 view .LVU1061
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 5824              		.loc 20 322 9 is_stmt 0 discriminator 2 view .LVU1062
 5825              	.LBE4334:
 5826              	.LBE4336:
 5827              	.LBE4338:
 5828              	.LBE4344:
 5829              	.LBB4345:
 5830              	.LBI4339:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5831              		.loc 4 214 7 is_stmt 1 discriminator 2 view .LVU1063
 5832              	.LBB4342:
 5833              	.LBI4340:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 5834              		.loc 4 182 7 discriminator 2 view .LVU1064
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 5835              		.loc 4 182 7 is_stmt 0 discriminator 2 view .LVU1065
 5836              	.LBE4342:
 5837              	.LBE4345:
 5838              	.LBE4348:
 5839              	.LBE4351:
 5840              	.LBE4354:
 5841              	.LBE4357:
 5842              	.LBE4360:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 473


 5843              	.LBE4376:
 5844              	.LBE4382:
 5845              	.LBE4391:
 5846              	.LBE4401:
 5847              	.LBE4409:
 5848              	.LBE4733:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 5849              		.loc 20 322 9 is_stmt 1 discriminator 2 view .LVU1066
 5850              	.LBB4734:
 5851              	.LBB4410:
 5852              	.LBB4402:
 5853              	.LBB4392:
 5854              	.LBI4392:
 5855              		.loc 8 162 7 discriminator 2 view .LVU1067
 5856              	.LBB4393:
 5857              	.LBI4393:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5858              		.loc 6 89 7 discriminator 2 view .LVU1068
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5859              		.loc 6 89 7 is_stmt 0 discriminator 2 view .LVU1069
 5860              	.LBE4393:
 5861              	.LBE4392:
 5862              	.LBB4394:
 5863              	.LBI4394:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 5864              		.loc 26 76 5 is_stmt 1 discriminator 2 view .LVU1070
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 5865              		.loc 26 76 5 is_stmt 0 discriminator 2 view .LVU1071
 5866              	.LBE4394:
 5867              	.LBE4402:
 5868              	.LBE4410:
 5869              	.LBE4734:
 5870              	.LBB4735:
 5871              	.LBI4412:
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 5872              		.loc 7 352 12 is_stmt 1 discriminator 2 view .LVU1072
 5873              	.LBB4517:
 5874              	.LBB4509:
 5875              	.LBB4495:
 5876              	.LBI4495:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 5877              		.loc 26 76 5 discriminator 2 view .LVU1073
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 5878              		.loc 26 76 5 is_stmt 0 discriminator 2 view .LVU1074
 5879              	.LBE4495:
 5880              	.LBB4496:
 5881              	.LBI4496:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 5882              		.loc 8 144 7 is_stmt 1 discriminator 2 view .LVU1075
 5883              	.LBB4497:
 5884              	.LBI4497:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5885              		.loc 6 79 7 discriminator 2 view .LVU1076
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5886              		.loc 6 79 7 is_stmt 0 discriminator 2 view .LVU1077
 5887              	.LBE4497:
 5888              	.LBE4496:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 474


 5889              	.LBB4498:
 5890              	.LBI4415:
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 5891              		.loc 4 525 7 is_stmt 1 discriminator 2 view .LVU1078
 5892              	.LBB4489:
 5893              	.LBB4481:
 5894              	.LBI4481:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5895              		.loc 4 190 7 discriminator 2 view .LVU1079
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5896              		.loc 4 190 7 is_stmt 0 discriminator 2 view .LVU1080
 5897              	.LBE4481:
 5898              	.LBB4482:
 5899              	.LBI4417:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 5900              		.loc 4 156 2 is_stmt 1 discriminator 2 view .LVU1081
 5901              	.LBB4425:
 5902              	.LBB4423:
 5903              	.LBB4420:
 5904              	.LBI4420:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 5905              		.loc 8 147 7 discriminator 2 view .LVU1082
 5906              	.LBB4421:
 5907              	.LBI4421:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5908              		.loc 6 82 7 discriminator 2 view .LVU1083
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5909              		.loc 6 82 7 is_stmt 0 discriminator 2 view .LVU1084
 5910              	.LBE4421:
 5911              	.LBE4420:
 5912              	.LBE4423:
 5913              	.LBE4425:
 5914              	.LBE4482:
 5915              	.LBB4483:
 5916              	.LBI4483:
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 5917              		.loc 20 351 7 is_stmt 1 discriminator 2 view .LVU1085
 5918              	.LBE4483:
 5919              	.LBE4489:
 5920              	.LBE4498:
 5921              	.LBE4509:
 5922              	.LBE4517:
 5923              	.LBE4735:
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 5924              		.loc 20 357 2 discriminator 2 view .LVU1086
 5925              	.LBB4736:
 5926              	.LBB4518:
 5927              	.LBB4510:
 5928              	.LBB4499:
 5929              	.LBB4490:
 5930              	.LBB4484:
 5931              	.LBI4427:
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 5932              		.loc 4 263 9 discriminator 2 view .LVU1087
 5933              	.LBB4477:
 5934              	.LBB4473:
 5935              	.LBI4429:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 475


 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 5936              		.loc 4 243 9 discriminator 2 view .LVU1088
 5937              	.LBB4469:
 5938              	.LBB4465:
 5939              	.LBI4431:
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 5940              		.loc 24 206 7 discriminator 2 view .LVU1089
 5941              	.LBB4461:
 5942              	.LBB4456:
 5943              	.LBI4433:
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 5944              		.loc 4 396 7 discriminator 2 view .LVU1090
 5945              	.LBB4445:
 5946              	.LBI4434:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5947              		.loc 4 346 7 discriminator 2 view .LVU1091
 5948              	.LBB4443:
 5949              	.LBI4435:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5950              		.loc 4 346 7 discriminator 2 view .LVU1092
 5951              	.LBB4441:
 5952              	.LBI4436:
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 5953              		.loc 20 387 7 discriminator 2 view .LVU1093
 5954              	.LBB4439:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 5955              		.loc 20 389 2 discriminator 2 view .LVU1094
 5956              		.loc 20 395 2 discriminator 2 view .LVU1095
 5957              		.loc 20 395 2 is_stmt 0 discriminator 2 view .LVU1096
 5958              	.LBE4439:
 5959              	.LBE4441:
 5960              	.LBE4443:
 5961              	.LBE4445:
 5962              	.LBE4456:
 5963              	.LBB4457:
 5964              	.LBI4447:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5965              		.loc 4 214 7 is_stmt 1 discriminator 2 view .LVU1097
 5966              	.LBB4453:
 5967              	.LBI4448:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 5968              		.loc 4 182 7 discriminator 2 view .LVU1098
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 5969              		.loc 4 182 7 is_stmt 0 discriminator 2 view .LVU1099
 5970              	.LBE4453:
 5971              	.LBB4454:
 5972              	.LBI4450:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 5973              		.loc 20 321 7 is_stmt 1 discriminator 2 view .LVU1100
 5974              	.LBB4452:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 5975              		.loc 20 322 9 discriminator 2 view .LVU1101
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 5976              		.loc 20 322 9 is_stmt 0 discriminator 2 view .LVU1102
 5977              	.LBE4452:
 5978              	.LBE4454:
 5979              	.LBE4457:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 476


 5980              	.LBE4461:
 5981              	.LBE4465:
 5982              	.LBE4469:
 5983              	.LBE4473:
 5984              	.LBE4477:
 5985              	.LBE4484:
 5986              	.LBE4490:
 5987              	.LBE4499:
 5988              	.LBB4500:
 5989              	.LBI4500:
 5990              		.loc 8 162 7 is_stmt 1 discriminator 2 view .LVU1103
 5991              	.LBB4501:
 5992              	.LBI4501:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5993              		.loc 6 89 7 discriminator 2 view .LVU1104
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5994              		.loc 6 89 7 is_stmt 0 discriminator 2 view .LVU1105
 5995              	.LBE4501:
 5996              	.LBE4500:
 5997              	.LBB4502:
 5998              	.LBI4502:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 5999              		.loc 26 76 5 is_stmt 1 discriminator 2 view .LVU1106
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 6000              		.loc 26 76 5 is_stmt 0 discriminator 2 view .LVU1107
 6001              	.LBE4502:
 6002              	.LBE4510:
 6003              	.LBE4518:
 6004              	.LBE4736:
 6005              	.LBB4737:
 6006              	.LBI4648:
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 6007              		.loc 7 352 12 is_stmt 1 discriminator 2 view .LVU1108
 6008              	.LBB4707:
 6009              	.LBB4703:
 6010              	.LBB4694:
 6011              	.LBI4694:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 6012              		.loc 26 76 5 discriminator 2 view .LVU1109
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 6013              		.loc 26 76 5 is_stmt 0 discriminator 2 view .LVU1110
 6014              	.LBE4694:
 6015              	.LBB4695:
 6016              	.LBI4695:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 6017              		.loc 8 144 7 is_stmt 1 discriminator 2 view .LVU1111
 6018              	.LBB4696:
 6019              	.LBI4696:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6020              		.loc 6 79 7 discriminator 2 view .LVU1112
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6021              		.loc 6 79 7 is_stmt 0 discriminator 2 view .LVU1113
 6022              	.LBE4696:
 6023              	.LBE4695:
 6024              	.LBB4697:
 6025              	.LBI4651:
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 477


 6026              		.loc 4 525 7 is_stmt 1 discriminator 2 view .LVU1114
 6027              	.LBB4691:
 6028              	.LBB4660:
 6029              	.LBI4660:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6030              		.loc 4 190 7 discriminator 2 view .LVU1115
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6031              		.loc 4 190 7 is_stmt 0 discriminator 2 view .LVU1116
 6032              	.LBE4660:
 6033              	.LBB4661:
 6034              	.LBI4653:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 6035              		.loc 4 156 2 is_stmt 1 discriminator 2 view .LVU1117
 6036              	.LBB4659:
 6037              	.LBB4658:
 6038              	.LBB4656:
 6039              	.LBI4656:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 6040              		.loc 8 147 7 discriminator 2 view .LVU1118
 6041              	.LBB4657:
 6042              	.LBI4657:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6043              		.loc 6 82 7 discriminator 2 view .LVU1119
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6044              		.loc 6 82 7 is_stmt 0 discriminator 2 view .LVU1120
 6045              	.LBE4657:
 6046              	.LBE4656:
 6047              	.LBE4658:
 6048              	.LBE4659:
 6049              	.LBE4661:
 6050              	.LBB4662:
 6051              	.LBB4663:
 6052              	.LBB4664:
 6053              	.LBB4665:
 6054              	.LBB4666:
 6055              	.LBB4667:
 6056              	.LBB4668:
 6057              	.LBB4669:
 6058              	.LBB4670:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6059              		.loc 4 183 26 discriminator 2 view .LVU1121
 6060 011e C4E931A3 		strd	r10, r3, [r4, #196]
 6061              	.LBE4670:
 6062              	.LBE4669:
 6063              	.LBE4668:
 6064              	.LBE4667:
 6065              	.LBE4666:
 6066              	.LBE4665:
 6067              	.LBE4664:
 6068              	.LBE4663:
 6069              	.LBE4662:
 6070              	.LBE4691:
 6071              	.LBE4697:
 6072              	.LBE4703:
 6073              	.LBE4707:
 6074              	.LBE4737:
 6075              	.LBB4738:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 478


 6076              	.LBB4739:
 6077              	.LBB4740:
 6078              	.LBB4741:
 6079              	.LBB4742:
 6080              	.LBB4743:
 6081              	.LBB4744:
 6082              	.LBB4745:
 6083              	.LBB4746:
 6084              	.LBB4747:
 6085              	.LBB4748:
 6086              	.LBB4749:
 6087              	.LBB4750:
 6088              	.LBB4751:
 6089 0122 C4F8E420 		str	r2, [r4, #228]
 6090              	.LBE4751:
 6091              	.LBE4750:
 6092              	.LBE4749:
 6093              	.LBE4748:
 6094              	.LBE4747:
 6095              	.LBE4746:
 6096              	.LBE4745:
 6097              	.LBE4744:
 6098              	.LBE4743:
 6099              	.LBE4742:
 6100              	.LBE4741:
 6101              	.LBE4740:
 6102              	.LBE4739:
 6103              	.LBE4738:
 6104              	.LBB4810:
 6105              	.LBB4811:
 6106              	.LBB4812:
 6107              	.LBB4813:
 6108              	.LBB4814:
 6109              	.LBB4815:
 6110              	.LBB4816:
 6111              	.LBB4817:
 6112              	.LBB4818:
 6113              	.LBB4819:
 6114              	.LBB4820:
 6115              	.LBB4821:
 6116              	.LBB4822:
 6117              	.LBB4823:
 6118 0126 C4F81C21 		str	r2, [r4, #284]
 6119              	.LBE4823:
 6120              	.LBE4822:
 6121              	.LBE4821:
 6122              	.LBE4820:
 6123              	.LBE4819:
 6124              	.LBE4818:
 6125              	.LBE4817:
 6126              	.LBE4816:
 6127              	.LBE4815:
 6128              	.LBE4814:
 6129              	.LBE4813:
 6130              	.LBE4812:
 6131              	.LBE4811:
 6132              	.LBE4810:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 479


 6133              	.LBB4875:
 6134              	.LBB4876:
 6135              	.LBB4877:
 6136              	.LBB4878:
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { }
 6137              		.loc 2 504 26 discriminator 2 view .LVU1122
 6138 012a 08AA     		add	r2, sp, #32
 6139              	.LBE4878:
 6140              	.LBE4877:
 6141              	.LBE4876:
 6142              	.LBE4875:
 6143              	.LBB4890:
 6144              	.LBB4891:
 6145              	.LBB4892:
 6146              	.LBB4893:
 6147              	.LBB4894:
 6148              	.LBB4895:
 6149              	.LBB4896:
 6150              	.LBB4897:
 6151              	.LBB4898:
 6152              	.LBB4899:
 6153              	.LBB4900:
 6154              	.LBB4901:
 6155              	.LBB4902:
 6156              	.LBB4903:
 6157              	.LBB4904:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 6158              		.loc 20 322 14 discriminator 2 view .LVU1123
 6159 012c A4F804E1 		strh	lr, [r4, #260]	@ movhi
 6160              	.LBE4904:
 6161              	.LBE4903:
 6162              	.LBE4902:
 6163              	.LBE4901:
 6164              	.LBE4900:
 6165              	.LBE4899:
 6166              	.LBE4898:
 6167              	.LBE4897:
 6168              	.LBE4896:
 6169              	.LBE4895:
 6170              	.LBE4894:
 6171              	.LBE4893:
 6172              		.loc 7 353 64 discriminator 2 view .LVU1124
 6173 0130 C4F814C1 		str	ip, [r4, #276]
 6174              	.LBE4892:
 6175              	.LBE4891:
 6176              	.LBE4890:
 6177              	.LBB4953:
 6178              	.LBB4871:
 6179              	.LBB4867:
 6180 0134 C4F83001 		str	r0, [r4, #304]
 6181              	.LBE4867:
 6182              	.LBE4871:
 6183              	.LBE4953:
 6184              	.LBB4954:
 6185              	.LBB4955:
 6186              	.LBB4956:
 6187              	.LBB4957:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 480


 6188              	.LBB4958:
 6189              	.LBB4959:
 6190              	.LBB4960:
 6191              	.LBB4961:
 6192              	.LBB4962:
 6193              	.LBB4963:
 6194              	.LBB4964:
 6195              	.LBB4965:
 6196              	.LBB4966:
 6197              	.LBB4967:
 6198              	.LBB4968:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 6199              		.loc 20 322 14 discriminator 2 view .LVU1125
 6200 0138 A4F83C11 		strh	r1, [r4, #316]	@ movhi
 6201              	.LBE4968:
 6202              	.LBE4967:
 6203              	.LBE4966:
 6204              	.LBE4965:
 6205              	.LBE4964:
 6206              	.LBE4963:
 6207              	.LBE4962:
 6208              	.LBE4961:
 6209              	.LBE4960:
 6210              	.LBE4959:
 6211              	.LBE4958:
 6212              	.LBE4957:
 6213              	.LBE4956:
 6214              	.LBE4955:
 6215              	.LBE4954:
 6216              	.LBB5019:
 6217              	.LBB4708:
 6218              	.LBB4704:
 6219              	.LBB4698:
 6220              	.LBB4692:
 6221              	.LBB4689:
 6222              	.LBB4687:
 6223              	.LBB4685:
 6224              	.LBB4683:
 6225              	.LBB4681:
 6226              	.LBB4679:
 6227              	.LBB4671:
 6228              	.LBB4672:
 6229              	.LBB4673:
 6230              	.LBB4674:
 6231 013c 4721     		movs	r1, #71
 6232              	.LBE4674:
 6233              	.LBE4673:
 6234              	.LBE4672:
 6235              	.LBE4671:
 6236              	.LBE4679:
 6237              	.LBE4681:
 6238              	.LBE4683:
 6239              	.LBE4685:
 6240              	.LBE4687:
 6241              	.LBE4689:
 6242              	.LBE4692:
 6243              	.LBE4698:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 481


 6244              	.LBE4704:
 6245              	.LBE4708:
 6246              	.LBE5019:
 6247              	.LBB5020:
 6248              	.LBB4805:
 6249              	.LBB4800:
 6250              	.LBB4790:
 6251              	.LBB4786:
 6252              	.LBB4774:
 6253              	.LBB4772:
 6254              	.LBB4770:
 6255              	.LBB4768:
 6256              	.LBB4766:
 6257              	.LBB4764:
 6258              	.LBB4757:
 6259              	.LBB4752:
 6260              	.LBB4753:
 6261 013e 84F8EA50 		strb	r5, [r4, #234]
 6262              	.LBE4753:
 6263              	.LBE4752:
 6264              	.LBE4757:
 6265              	.LBE4764:
 6266              	.LBE4766:
 6267              	.LBE4768:
 6268              	.LBE4770:
 6269              	.LBE4772:
 6270              	.LBE4774:
 6271              	.LBE4786:
 6272              	.LBE4790:
 6273              	.LBE4800:
 6274              	.LBE4805:
 6275              	.LBE5020:
 6276              	.LBB5021:
 6277              	.LBB4949:
 6278              	.LBB4945:
 6279              	.LBB4936:
 6280              	.LBB4933:
 6281              	.LBB4924:
 6282              	.LBB4922:
 6283              	.LBB4920:
 6284              	.LBB4918:
 6285              	.LBB4916:
 6286              	.LBB4914:
 6287              	.LBB4908:
 6288              	.LBB4909:
 6289              	.LBB4910:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6290              		.loc 4 183 26 discriminator 2 view .LVU1126
 6291 0142 C4F80031 		str	r3, [r4, #256]
 6292              	.LBE4910:
 6293              	.LBE4909:
 6294              	.LBE4908:
 6295              	.LBE4914:
 6296              	.LBE4916:
 6297              	.LBE4918:
 6298              	.LBE4920:
 6299              	.LBE4922:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 482


 6300              	.LBE4924:
 6301              	.LBE4933:
 6302              	.LBE4936:
 6303              	.LBE4945:
 6304              	.LBE4949:
 6305              	.LBE5021:
 6306              	.LBB5022:
 6307              	.LBB5014:
 6308              	.LBB5009:
 6309              	.LBB5000:
 6310              	.LBB4997:
 6311              	.LBB4988:
 6312              	.LBB4986:
 6313              	.LBB4984:
 6314              	.LBB4982:
 6315              	.LBB4980:
 6316              	.LBB4978:
 6317              	.LBB4972:
 6318              	.LBB4973:
 6319              	.LBB4974:
 6320 0146 C4F83831 		str	r3, [r4, #312]
 6321              	.LBE4974:
 6322              	.LBE4973:
 6323              	.LBE4972:
 6324              	.LBE4978:
 6325              	.LBE4980:
 6326              	.LBE4982:
 6327              	.LBE4984:
 6328              	.LBE4986:
 6329              	.LBE4988:
 6330              	.LBE4997:
 6331              	.LBE5000:
 6332              	.LBE5009:
 6333              	.LBE5014:
 6334              	.LBE5022:
 6335              	.LBB5023:
 6336              	.LBB4887:
 6337              	.LBB4884:
 6338              	.LBB4881:
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { }
 6339              		.loc 2 504 26 discriminator 2 view .LVU1127
 6340 014a 2B46     		mov	r3, r5
 6341              	.LBE4881:
 6342              	.LBE4884:
 6343              	.LBE4887:
 6344              	.LBE5023:
 6345              	.LBB5024:
 6346              	.LBB4872:
 6347              	.LBB4868:
 6348              	.LBB4858:
 6349              	.LBB4855:
 6350              	.LBB4846:
 6351              	.LBB4844:
 6352              	.LBB4842:
 6353              	.LBB4840:
 6354              	.LBB4838:
 6355              	.LBB4836:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 483


 6356              	.LBB4829:
 6357              	.LBB4824:
 6358              	.LBB4825:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 6359              		.loc 20 322 14 discriminator 2 view .LVU1128
 6360 014c 84F82251 		strb	r5, [r4, #290]
 6361              	.LBE4825:
 6362              	.LBE4824:
 6363              	.LBE4829:
 6364              	.LBE4836:
 6365              	.LBE4838:
 6366              	.LBE4840:
 6367              	.LBE4842:
 6368              	.LBE4844:
 6369              	.LBE4846:
 6370              	.LBE4855:
 6371              	.LBE4858:
 6372              	.LBE4868:
 6373              	.LBE4872:
 6374              	.LBE5024:
  19:utils.h       ****     return fourth_octave.at(note);
 6375              		.loc 27 19 5 discriminator 2 view .LVU1129
 6376 0150 60AD     		add	r5, sp, #384
 6377              	.LBB5025:
 6378              	.LBB4709:
 6379              	.LBB4705:
 6380              		.loc 7 353 64 discriminator 2 view .LVU1130
 6381 0152 C4F8DC90 		str	r9, [r4, #220]
 6382              	.LBE4705:
 6383              	.LBE4709:
 6384              	.LBE5025:
 6385              	.LBB5026:
 6386              	.LBB4806:
 6387              	.LBB4801:
 6388 0156 C4F8F880 		str	r8, [r4, #248]
 6389              	.LBE4801:
 6390              	.LBE4806:
 6391              	.LBE5026:
 6392              	.LBB5027:
 6393              	.LBB4888:
 6394              	.LBB4885:
 6395              	.LBB4882:
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { }
 6396              		.loc 2 504 26 discriminator 2 view .LVU1131
 6397 015a 0592     		str	r2, [sp, #20]
 6398 015c 09AA     		add	r2, sp, #36
 6399 015e 2048     		ldr	r0, .L174+4
 6400 0160 0492     		str	r2, [sp, #16]
 6401 0162 07AA     		add	r2, sp, #28
 6402 0164 0392     		str	r2, [sp, #12]
 6403 0166 0AAA     		add	r2, sp, #40
 6404 0168 0292     		str	r2, [sp, #8]
 6405 016a 0BAA     		add	r2, sp, #44
 6406 016c 0192     		str	r2, [sp, #4]
 6407 016e 06AA     		add	r2, sp, #24
 6408 0170 0092     		str	r2, [sp]
 6409 0172 60AA     		add	r2, sp, #384
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 484


 6410              	.LBE4882:
 6411              	.LBE4885:
 6412              	.LBE4888:
 6413              	.LBE5027:
 6414              	.LBB5028:
 6415              	.LBB4710:
 6416              	.LBB4706:
 6417              	.LBB4699:
 6418              	.LBB4693:
 6419              	.LBB4690:
 6420              	.LBB4688:
 6421              	.LBB4686:
 6422              	.LBB4684:
 6423              	.LBB4682:
 6424              	.LBB4680:
 6425              	.LBB4678:
 6426              	.LBB4677:
 6427              	.LBB4676:
 6428              	.LBB4675:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 6429              		.loc 20 322 14 discriminator 2 view .LVU1132
 6430 0174 A4F8CC10 		strh	r1, [r4, #204]	@ movhi
 6431              	.LVL231:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 6432              		.loc 20 322 14 discriminator 2 view .LVU1133
 6433              	.LBE4675:
 6434              	.LBE4676:
 6435              	.LBE4677:
 6436              	.LBE4678:
 6437              	.LBE4680:
 6438              	.LBE4682:
 6439              	.LBE4684:
 6440              	.LBE4686:
 6441              	.LBE4688:
 6442              	.LBE4690:
 6443              	.LBE4693:
 6444              	.LBE4699:
 6445              	.LBB4700:
 6446              	.LBI4700:
 6447              		.loc 8 162 7 is_stmt 1 discriminator 2 view .LVU1134
 6448              	.LBB4701:
 6449              	.LBI4701:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6450              		.loc 6 89 7 discriminator 2 view .LVU1135
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6451              		.loc 6 89 7 is_stmt 0 discriminator 2 view .LVU1136
 6452              	.LBE4701:
 6453              	.LBE4700:
 6454              	.LBB4702:
 6455              	.LBI4702:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 6456              		.loc 26 76 5 is_stmt 1 discriminator 2 view .LVU1137
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 6457              		.loc 26 76 5 is_stmt 0 discriminator 2 view .LVU1138
 6458              	.LBE4702:
 6459              	.LBE4706:
 6460              	.LBE4710:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 485


 6461              	.LBE5028:
 6462              	.LBB5029:
 6463              	.LBI4738:
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 6464              		.loc 7 352 12 is_stmt 1 discriminator 2 view .LVU1139
 6465              	.LBB4807:
 6466              	.LBB4802:
 6467              	.LBB4791:
 6468              	.LBI4791:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 6469              		.loc 26 76 5 discriminator 2 view .LVU1140
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 6470              		.loc 26 76 5 is_stmt 0 discriminator 2 view .LVU1141
 6471              	.LBE4791:
 6472              	.LBB4792:
 6473              	.LBI4792:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 6474              		.loc 8 144 7 is_stmt 1 discriminator 2 view .LVU1142
 6475              	.LBB4793:
 6476              	.LBI4793:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6477              		.loc 6 79 7 discriminator 2 view .LVU1143
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6478              		.loc 6 79 7 is_stmt 0 discriminator 2 view .LVU1144
 6479              	.LBE4793:
 6480              	.LBE4792:
 6481              	.LBB4794:
 6482              	.LBI4741:
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 6483              		.loc 4 525 7 is_stmt 1 discriminator 2 view .LVU1145
 6484              	.LBB4787:
 6485              	.LBB4775:
 6486              	.LBI4775:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6487              		.loc 4 190 7 discriminator 2 view .LVU1146
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6488              		.loc 4 190 7 is_stmt 0 discriminator 2 view .LVU1147
 6489              	.LBE4775:
 6490              	.LBB4776:
 6491              	.LBI4776:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 6492              		.loc 4 156 2 is_stmt 1 discriminator 2 view .LVU1148
 6493              	.LBB4777:
 6494              	.LBB4778:
 6495              	.LBB4779:
 6496              	.LBI4779:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 6497              		.loc 8 147 7 discriminator 2 view .LVU1149
 6498              	.LBB4780:
 6499              	.LBI4780:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6500              		.loc 6 82 7 discriminator 2 view .LVU1150
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6501              		.loc 6 82 7 is_stmt 0 discriminator 2 view .LVU1151
 6502              	.LBE4780:
 6503              	.LBE4779:
 6504              	.LBE4778:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 486


 6505              	.LBE4777:
 6506              	.LBE4776:
 6507              	.LBE4787:
 6508              	.LBE4794:
 6509              	.LBE4802:
 6510              	.LBE4807:
 6511              	.LBE5029:
 6512              	.LBB5030:
 6513              	.LBB5015:
 6514              	.LBB5010:
 6515              		.loc 7 353 64 discriminator 2 view .LVU1152
 6516 0178 C4F84C11 		str	r1, [r4, #332]
 6517              	.LBE5010:
 6518              	.LBE5015:
 6519              	.LBE5030:
 6520              	.LBB5031:
 6521              	.LBB4808:
 6522              	.LBB4803:
 6523              	.LBB4795:
 6524              	.LBB4788:
 6525              	.LBB4783:
 6526              	.LBB4782:
 6527              	.LBB4781:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6528              		.loc 4 157 35 discriminator 2 view .LVU1153
 6529 017c 46A9     		add	r1, sp, #280
 6530              	.LVL232:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6531              		.loc 4 157 35 discriminator 2 view .LVU1154
 6532 017e C4F8E010 		str	r1, [r4, #224]
 6533              	.LVL233:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6534              		.loc 4 157 35 discriminator 2 view .LVU1155
 6535              	.LBE4781:
 6536              	.LBE4782:
 6537              	.LBE4783:
 6538              	.LBB4784:
 6539              	.LBI4784:
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 6540              		.loc 20 351 7 is_stmt 1 discriminator 2 view .LVU1156
 6541              	.LBE4784:
 6542              	.LBE4788:
 6543              	.LBE4795:
 6544              	.LBE4803:
 6545              	.LBE4808:
 6546              	.LBE5031:
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 6547              		.loc 20 357 2 discriminator 2 view .LVU1157
 6548              	.LBB5032:
 6549              	.LBB4809:
 6550              	.LBB4804:
 6551              	.LBB4796:
 6552              	.LBB4789:
 6553              	.LBB4785:
 6554              	.LBI4743:
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 6555              		.loc 4 263 9 discriminator 2 view .LVU1158
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 487


 6556              	.LBB4773:
 6557              	.LBB4771:
 6558              	.LBI4745:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 6559              		.loc 4 243 9 discriminator 2 view .LVU1159
 6560              	.LBB4769:
 6561              	.LBB4767:
 6562              	.LBI4747:
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 6563              		.loc 24 206 7 discriminator 2 view .LVU1160
 6564              	.LBB4765:
 6565              	.LBB4758:
 6566              	.LBI4758:
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 6567              		.loc 4 396 7 discriminator 2 view .LVU1161
 6568              	.LBB4759:
 6569              	.LBI4759:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6570              		.loc 4 346 7 discriminator 2 view .LVU1162
 6571              	.LBB4760:
 6572              	.LBI4760:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6573              		.loc 4 346 7 discriminator 2 view .LVU1163
 6574              	.LBB4761:
 6575              	.LBI4761:
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 6576              		.loc 20 387 7 discriminator 2 view .LVU1164
 6577              	.LBB4762:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 6578              		.loc 20 389 2 discriminator 2 view .LVU1165
 6579              		.loc 20 395 2 discriminator 2 view .LVU1166
 6580              		.loc 20 395 49 is_stmt 0 discriminator 2 view .LVU1167
 6581 0182 46F24121 		movw	r1, #25153
 6582              	.LVL234:
 6583              		.loc 20 395 49 discriminator 2 view .LVU1168
 6584 0186 ADF81811 		strh	r1, [sp, #280]	@ movhi
 6585              	.LVL235:
 6586              		.loc 20 395 49 discriminator 2 view .LVU1169
 6587              	.LBE4762:
 6588              	.LBE4761:
 6589              	.LBE4760:
 6590              	.LBE4759:
 6591              	.LBE4758:
 6592              	.LBB4763:
 6593              	.LBI4749:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6594              		.loc 4 214 7 is_stmt 1 discriminator 2 view .LVU1170
 6595              	.LBB4755:
 6596              	.LBI4750:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 6597              		.loc 4 182 7 discriminator 2 view .LVU1171
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 6598              		.loc 4 182 7 is_stmt 0 discriminator 2 view .LVU1172
 6599              	.LBE4755:
 6600              	.LBB4756:
 6601              	.LBI4752:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 488


 6602              		.loc 20 321 7 is_stmt 1 discriminator 2 view .LVU1173
 6603              	.LBB4754:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 6604              		.loc 20 322 9 discriminator 2 view .LVU1174
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 6605              		.loc 20 322 9 is_stmt 0 discriminator 2 view .LVU1175
 6606              	.LBE4754:
 6607              	.LBE4756:
 6608              	.LBE4763:
 6609              	.LBE4765:
 6610              	.LBE4767:
 6611              	.LBE4769:
 6612              	.LBE4771:
 6613              	.LBE4773:
 6614              	.LBE4785:
 6615              	.LBE4789:
 6616              	.LBE4796:
 6617              	.LBB4797:
 6618              	.LBI4797:
 6619              		.loc 8 162 7 is_stmt 1 discriminator 2 view .LVU1176
 6620              	.LBB4798:
 6621              	.LBI4798:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6622              		.loc 6 89 7 discriminator 2 view .LVU1177
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6623              		.loc 6 89 7 is_stmt 0 discriminator 2 view .LVU1178
 6624              	.LBE4798:
 6625              	.LBE4797:
 6626              	.LBB4799:
 6627              	.LBI4799:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 6628              		.loc 26 76 5 is_stmt 1 discriminator 2 view .LVU1179
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 6629              		.loc 26 76 5 is_stmt 0 discriminator 2 view .LVU1180
 6630              	.LBE4799:
 6631              	.LBE4804:
 6632              	.LBE4809:
 6633              	.LBE5032:
 6634              	.LBB5033:
 6635              	.LBI4890:
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 6636              		.loc 7 352 12 is_stmt 1 discriminator 2 view .LVU1181
 6637              	.LBB4950:
 6638              	.LBB4946:
 6639              	.LBB4937:
 6640              	.LBI4937:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 6641              		.loc 26 76 5 discriminator 2 view .LVU1182
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 6642              		.loc 26 76 5 is_stmt 0 discriminator 2 view .LVU1183
 6643              	.LBE4937:
 6644              	.LBB4938:
 6645              	.LBI4938:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 6646              		.loc 8 144 7 is_stmt 1 discriminator 2 view .LVU1184
 6647              	.LBB4939:
 6648              	.LBI4939:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 489


  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6649              		.loc 6 79 7 discriminator 2 view .LVU1185
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6650              		.loc 6 79 7 is_stmt 0 discriminator 2 view .LVU1186
 6651              	.LBE4939:
 6652              	.LBE4938:
 6653              	.LBB4940:
 6654              	.LBI4893:
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 6655              		.loc 4 525 7 is_stmt 1 discriminator 2 view .LVU1187
 6656              	.LBB4934:
 6657              	.LBB4925:
 6658              	.LBI4925:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6659              		.loc 4 190 7 discriminator 2 view .LVU1188
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6660              		.loc 4 190 7 is_stmt 0 discriminator 2 view .LVU1189
 6661              	.LBE4925:
 6662              	.LBB4926:
 6663              	.LBI4926:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 6664              		.loc 4 156 2 is_stmt 1 discriminator 2 view .LVU1190
 6665              	.LBB4927:
 6666              	.LBB4928:
 6667              	.LBB4929:
 6668              	.LBI4929:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 6669              		.loc 8 147 7 discriminator 2 view .LVU1191
 6670              	.LBB4930:
 6671              	.LBI4930:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6672              		.loc 6 82 7 discriminator 2 view .LVU1192
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6673              		.loc 6 82 7 is_stmt 0 discriminator 2 view .LVU1193
 6674              	.LBE4930:
 6675              	.LBE4929:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6676              		.loc 4 157 35 discriminator 2 view .LVU1194
 6677 018a 4DA9     		add	r1, sp, #308
 6678              	.LVL236:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6679              		.loc 4 157 35 discriminator 2 view .LVU1195
 6680 018c C4F8FC10 		str	r1, [r4, #252]
 6681              	.LVL237:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6682              		.loc 4 157 35 discriminator 2 view .LVU1196
 6683              	.LBE4928:
 6684              	.LBE4927:
 6685              	.LBE4926:
 6686              	.LBB4931:
 6687              	.LBI4931:
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 6688              		.loc 20 351 7 is_stmt 1 discriminator 2 view .LVU1197
 6689              	.LBE4931:
 6690              	.LBE4934:
 6691              	.LBE4940:
 6692              	.LBE4946:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 490


 6693              	.LBE4950:
 6694              	.LBE5033:
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 6695              		.loc 20 357 2 discriminator 2 view .LVU1198
 6696              	.LBB5034:
 6697              	.LBB4951:
 6698              	.LBB4947:
 6699              	.LBB4941:
 6700              	.LBB4935:
 6701              	.LBB4932:
 6702              	.LBI4895:
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 6703              		.loc 4 263 9 discriminator 2 view .LVU1199
 6704              	.LBB4923:
 6705              	.LBB4921:
 6706              	.LBI4897:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 6707              		.loc 4 243 9 discriminator 2 view .LVU1200
 6708              	.LBB4919:
 6709              	.LBB4917:
 6710              	.LBI4899:
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 6711              		.loc 24 206 7 discriminator 2 view .LVU1201
 6712              	.LBB4915:
 6713              	.LBB4912:
 6714              	.LBI4901:
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 6715              		.loc 4 396 7 discriminator 2 view .LVU1202
 6716              	.LBB4907:
 6717              	.LBI4902:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6718              		.loc 4 346 7 discriminator 2 view .LVU1203
 6719              	.LBB4906:
 6720              	.LBI4903:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 6721              		.loc 20 321 7 discriminator 2 view .LVU1204
 6722              	.LBB4905:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 6723              		.loc 20 322 9 discriminator 2 view .LVU1205
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 6724              		.loc 20 322 9 is_stmt 0 discriminator 2 view .LVU1206
 6725              	.LBE4905:
 6726              	.LBE4906:
 6727              	.LBE4907:
 6728              	.LBE4912:
 6729              	.LBB4913:
 6730              	.LBI4908:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6731              		.loc 4 214 7 is_stmt 1 discriminator 2 view .LVU1207
 6732              	.LBB4911:
 6733              	.LBI4909:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 6734              		.loc 4 182 7 discriminator 2 view .LVU1208
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 6735              		.loc 4 182 7 is_stmt 0 discriminator 2 view .LVU1209
 6736              	.LBE4911:
 6737              	.LBE4913:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 491


 6738              	.LBE4915:
 6739              	.LBE4917:
 6740              	.LBE4919:
 6741              	.LBE4921:
 6742              	.LBE4923:
 6743              	.LBE4932:
 6744              	.LBE4935:
 6745              	.LBE4941:
 6746              	.LBE4947:
 6747              	.LBE4951:
 6748              	.LBE5034:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 6749              		.loc 20 322 9 is_stmt 1 discriminator 2 view .LVU1210
 6750              	.LBB5035:
 6751              	.LBB4952:
 6752              	.LBB4948:
 6753              	.LBB4942:
 6754              	.LBI4942:
 6755              		.loc 8 162 7 discriminator 2 view .LVU1211
 6756              	.LBB4943:
 6757              	.LBI4943:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6758              		.loc 6 89 7 discriminator 2 view .LVU1212
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6759              		.loc 6 89 7 is_stmt 0 discriminator 2 view .LVU1213
 6760              	.LBE4943:
 6761              	.LBE4942:
 6762              	.LBB4944:
 6763              	.LBI4944:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 6764              		.loc 26 76 5 is_stmt 1 discriminator 2 view .LVU1214
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 6765              		.loc 26 76 5 is_stmt 0 discriminator 2 view .LVU1215
 6766              	.LBE4944:
 6767              	.LBE4948:
 6768              	.LBE4952:
 6769              	.LBE5035:
 6770              	.LBB5036:
 6771              	.LBI4810:
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 6772              		.loc 7 352 12 is_stmt 1 discriminator 2 view .LVU1216
 6773              	.LBB4873:
 6774              	.LBB4869:
 6775              	.LBB4859:
 6776              	.LBI4859:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 6777              		.loc 26 76 5 discriminator 2 view .LVU1217
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 6778              		.loc 26 76 5 is_stmt 0 discriminator 2 view .LVU1218
 6779              	.LBE4859:
 6780              	.LBB4860:
 6781              	.LBI4860:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 6782              		.loc 8 144 7 is_stmt 1 discriminator 2 view .LVU1219
 6783              	.LBB4861:
 6784              	.LBI4861:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 492


 6785              		.loc 6 79 7 discriminator 2 view .LVU1220
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6786              		.loc 6 79 7 is_stmt 0 discriminator 2 view .LVU1221
 6787              	.LBE4861:
 6788              	.LBE4860:
 6789              	.LBB4862:
 6790              	.LBI4813:
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 6791              		.loc 4 525 7 is_stmt 1 discriminator 2 view .LVU1222
 6792              	.LBB4856:
 6793              	.LBB4847:
 6794              	.LBI4847:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6795              		.loc 4 190 7 discriminator 2 view .LVU1223
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6796              		.loc 4 190 7 is_stmt 0 discriminator 2 view .LVU1224
 6797              	.LBE4847:
 6798              	.LBB4848:
 6799              	.LBI4848:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 6800              		.loc 4 156 2 is_stmt 1 discriminator 2 view .LVU1225
 6801              	.LBB4849:
 6802              	.LBB4850:
 6803              	.LBB4851:
 6804              	.LBI4851:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 6805              		.loc 8 147 7 discriminator 2 view .LVU1226
 6806              	.LBB4852:
 6807              	.LBI4852:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6808              		.loc 6 82 7 discriminator 2 view .LVU1227
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6809              		.loc 6 82 7 is_stmt 0 discriminator 2 view .LVU1228
 6810              	.LBE4852:
 6811              	.LBE4851:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6812              		.loc 4 157 35 discriminator 2 view .LVU1229
 6813 0190 54A9     		add	r1, sp, #336
 6814              	.LVL238:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6815              		.loc 4 157 35 discriminator 2 view .LVU1230
 6816 0192 C4F81811 		str	r1, [r4, #280]
 6817              	.LVL239:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6818              		.loc 4 157 35 discriminator 2 view .LVU1231
 6819              	.LBE4850:
 6820              	.LBE4849:
 6821              	.LBE4848:
 6822              	.LBB4853:
 6823              	.LBI4853:
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 6824              		.loc 20 351 7 is_stmt 1 discriminator 2 view .LVU1232
 6825              	.LBE4853:
 6826              	.LBE4856:
 6827              	.LBE4862:
 6828              	.LBE4869:
 6829              	.LBE4873:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 493


 6830              	.LBE5036:
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 6831              		.loc 20 357 2 discriminator 2 view .LVU1233
 6832              	.LBB5037:
 6833              	.LBB4874:
 6834              	.LBB4870:
 6835              	.LBB4863:
 6836              	.LBB4857:
 6837              	.LBB4854:
 6838              	.LBI4815:
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 6839              		.loc 4 263 9 discriminator 2 view .LVU1234
 6840              	.LBB4845:
 6841              	.LBB4843:
 6842              	.LBI4817:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 6843              		.loc 4 243 9 discriminator 2 view .LVU1235
 6844              	.LBB4841:
 6845              	.LBB4839:
 6846              	.LBI4819:
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 6847              		.loc 24 206 7 discriminator 2 view .LVU1236
 6848              	.LBB4837:
 6849              	.LBB4830:
 6850              	.LBI4830:
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 6851              		.loc 4 396 7 discriminator 2 view .LVU1237
 6852              	.LBB4831:
 6853              	.LBI4831:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6854              		.loc 4 346 7 discriminator 2 view .LVU1238
 6855              	.LBB4832:
 6856              	.LBI4832:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6857              		.loc 4 346 7 discriminator 2 view .LVU1239
 6858              	.LBB4833:
 6859              	.LBI4833:
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 6860              		.loc 20 387 7 discriminator 2 view .LVU1240
 6861              	.LBB4834:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 6862              		.loc 20 389 2 discriminator 2 view .LVU1241
 6863              		.loc 20 395 2 discriminator 2 view .LVU1242
 6864              		.loc 20 395 49 is_stmt 0 discriminator 2 view .LVU1243
 6865 0196 46F24221 		movw	r1, #25154
 6866              	.LVL240:
 6867              		.loc 20 395 49 discriminator 2 view .LVU1244
 6868 019a ADF85011 		strh	r1, [sp, #336]	@ movhi
 6869              	.LVL241:
 6870              		.loc 20 395 49 discriminator 2 view .LVU1245
 6871              	.LBE4834:
 6872              	.LBE4833:
 6873              	.LBE4832:
 6874              	.LBE4831:
 6875              	.LBE4830:
 6876              	.LBB4835:
 6877              	.LBI4821:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 494


 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6878              		.loc 4 214 7 is_stmt 1 discriminator 2 view .LVU1246
 6879              	.LBB4827:
 6880              	.LBI4822:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 6881              		.loc 4 182 7 discriminator 2 view .LVU1247
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 6882              		.loc 4 182 7 is_stmt 0 discriminator 2 view .LVU1248
 6883              	.LBE4827:
 6884              	.LBB4828:
 6885              	.LBI4824:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 6886              		.loc 20 321 7 is_stmt 1 discriminator 2 view .LVU1249
 6887              	.LBB4826:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 6888              		.loc 20 322 9 discriminator 2 view .LVU1250
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 6889              		.loc 20 322 9 is_stmt 0 discriminator 2 view .LVU1251
 6890              	.LBE4826:
 6891              	.LBE4828:
 6892              	.LBE4835:
 6893              	.LBE4837:
 6894              	.LBE4839:
 6895              	.LBE4841:
 6896              	.LBE4843:
 6897              	.LBE4845:
 6898              	.LBE4854:
 6899              	.LBE4857:
 6900              	.LBE4863:
 6901              	.LBB4864:
 6902              	.LBI4864:
 6903              		.loc 8 162 7 is_stmt 1 discriminator 2 view .LVU1252
 6904              	.LBB4865:
 6905              	.LBI4865:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6906              		.loc 6 89 7 discriminator 2 view .LVU1253
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6907              		.loc 6 89 7 is_stmt 0 discriminator 2 view .LVU1254
 6908              	.LBE4865:
 6909              	.LBE4864:
 6910              	.LBB4866:
 6911              	.LBI4866:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 6912              		.loc 26 76 5 is_stmt 1 discriminator 2 view .LVU1255
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 6913              		.loc 26 76 5 is_stmt 0 discriminator 2 view .LVU1256
 6914              	.LBE4866:
 6915              	.LBE4870:
 6916              	.LBE4874:
 6917              	.LBE5037:
 6918              	.LBB5038:
 6919              	.LBI4954:
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 6920              		.loc 7 352 12 is_stmt 1 discriminator 2 view .LVU1257
 6921              	.LBB5016:
 6922              	.LBB5011:
 6923              	.LBB5001:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 495


 6924              	.LBI5001:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 6925              		.loc 26 76 5 discriminator 2 view .LVU1258
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 6926              		.loc 26 76 5 is_stmt 0 discriminator 2 view .LVU1259
 6927              	.LBE5001:
 6928              	.LBB5002:
 6929              	.LBI5002:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 6930              		.loc 8 144 7 is_stmt 1 discriminator 2 view .LVU1260
 6931              	.LBB5003:
 6932              	.LBI5003:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6933              		.loc 6 79 7 discriminator 2 view .LVU1261
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6934              		.loc 6 79 7 is_stmt 0 discriminator 2 view .LVU1262
 6935              	.LBE5003:
 6936              	.LBE5002:
 6937              	.LBB5004:
 6938              	.LBI4957:
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 6939              		.loc 4 525 7 is_stmt 1 discriminator 2 view .LVU1263
 6940              	.LBB4998:
 6941              	.LBB4989:
 6942              	.LBI4989:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6943              		.loc 4 190 7 discriminator 2 view .LVU1264
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6944              		.loc 4 190 7 is_stmt 0 discriminator 2 view .LVU1265
 6945              	.LBE4989:
 6946              	.LBB4990:
 6947              	.LBI4990:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 6948              		.loc 4 156 2 is_stmt 1 discriminator 2 view .LVU1266
 6949              	.LBB4991:
 6950              	.LBB4992:
 6951              	.LBB4993:
 6952              	.LBI4993:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 6953              		.loc 8 147 7 discriminator 2 view .LVU1267
 6954              	.LBB4994:
 6955              	.LBI4994:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6956              		.loc 6 82 7 discriminator 2 view .LVU1268
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6957              		.loc 6 82 7 is_stmt 0 discriminator 2 view .LVU1269
 6958              	.LBE4994:
 6959              	.LBE4993:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6960              		.loc 4 157 35 discriminator 2 view .LVU1270
 6961 019e 5BA9     		add	r1, sp, #364
 6962              	.LVL242:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6963              		.loc 4 157 35 discriminator 2 view .LVU1271
 6964 01a0 C4F83411 		str	r1, [r4, #308]
 6965              	.LVL243:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 496


 6966              		.loc 4 157 35 discriminator 2 view .LVU1272
 6967              	.LBE4992:
 6968              	.LBE4991:
 6969              	.LBE4990:
 6970              	.LBB4995:
 6971              	.LBI4995:
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 6972              		.loc 20 351 7 is_stmt 1 discriminator 2 view .LVU1273
 6973              	.LBE4995:
 6974              	.LBE4998:
 6975              	.LBE5004:
 6976              	.LBE5011:
 6977              	.LBE5016:
 6978              	.LBE5038:
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 6979              		.loc 20 357 2 discriminator 2 view .LVU1274
 6980              	.LBB5039:
 6981              	.LBB5017:
 6982              	.LBB5012:
 6983              	.LBB5005:
 6984              	.LBB4999:
 6985              	.LBB4996:
 6986              	.LBI4959:
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 6987              		.loc 4 263 9 discriminator 2 view .LVU1275
 6988              	.LBB4987:
 6989              	.LBB4985:
 6990              	.LBI4961:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 6991              		.loc 4 243 9 discriminator 2 view .LVU1276
 6992              	.LBB4983:
 6993              	.LBB4981:
 6994              	.LBI4963:
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 6995              		.loc 24 206 7 discriminator 2 view .LVU1277
 6996              	.LBB4979:
 6997              	.LBB4976:
 6998              	.LBI4965:
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 6999              		.loc 4 396 7 discriminator 2 view .LVU1278
 7000              	.LBB4971:
 7001              	.LBI4966:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7002              		.loc 4 346 7 discriminator 2 view .LVU1279
 7003              	.LBB4970:
 7004              	.LBI4967:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 7005              		.loc 20 321 7 discriminator 2 view .LVU1280
 7006              	.LBB4969:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 7007              		.loc 20 322 9 discriminator 2 view .LVU1281
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 7008              		.loc 20 322 9 is_stmt 0 discriminator 2 view .LVU1282
 7009              	.LBE4969:
 7010              	.LBE4970:
 7011              	.LBE4971:
 7012              	.LBE4976:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 497


 7013              	.LBB4977:
 7014              	.LBI4972:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7015              		.loc 4 214 7 is_stmt 1 discriminator 2 view .LVU1283
 7016              	.LBB4975:
 7017              	.LBI4973:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 7018              		.loc 4 182 7 discriminator 2 view .LVU1284
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 7019              		.loc 4 182 7 is_stmt 0 discriminator 2 view .LVU1285
 7020              	.LBE4975:
 7021              	.LBE4977:
 7022              	.LBE4979:
 7023              	.LBE4981:
 7024              	.LBE4983:
 7025              	.LBE4985:
 7026              	.LBE4987:
 7027              	.LBE4996:
 7028              	.LBE4999:
 7029              	.LBE5005:
 7030              	.LBE5012:
 7031              	.LBE5017:
 7032              	.LBE5039:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 7033              		.loc 20 322 9 is_stmt 1 discriminator 2 view .LVU1286
 7034              	.LBB5040:
 7035              	.LBB5018:
 7036              	.LBB5013:
 7037              	.LBB5006:
 7038              	.LBI5006:
 7039              		.loc 8 162 7 discriminator 2 view .LVU1287
 7040              	.LBB5007:
 7041              	.LBI5007:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7042              		.loc 6 89 7 discriminator 2 view .LVU1288
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7043              		.loc 6 89 7 is_stmt 0 discriminator 2 view .LVU1289
 7044              	.LBE5007:
 7045              	.LBE5006:
 7046              	.LBB5008:
 7047              	.LBI5008:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 7048              		.loc 26 76 5 is_stmt 1 discriminator 2 view .LVU1290
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 7049              		.loc 26 76 5 is_stmt 0 discriminator 2 view .LVU1291
 7050              	.LBE5008:
 7051              	.LBE5013:
 7052              	.LBE5018:
 7053              	.LBE5040:
 7054              	.LBB5041:
 7055              	.LBI5041:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 7056              		.loc 8 144 7 is_stmt 1 discriminator 2 view .LVU1292
 7057              	.LBB5042:
 7058              	.LBI5042:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7059              		.loc 6 79 7 discriminator 2 view .LVU1293
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 498


  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7060              		.loc 6 79 7 is_stmt 0 discriminator 2 view .LVU1294
 7061              	.LBE5042:
 7062              	.LBE5041:
 7063              	.LBB5043:
 7064              	.LBI4875:
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    size_type __n = 0,
 7065              		.loc 1 226 7 is_stmt 1 discriminator 2 view .LVU1295
 7066              	.LBB4889:
 7067              	.LBI4876:
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 size_type __bkt_count_hint = 0,
 7068              		.loc 2 497 7 discriminator 2 view .LVU1296
 7069              	.LBB4886:
 7070              	.LBB4883:
 7071              	.LBB4879:
 7072              	.LBI4879:
 7073              		.file 28 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\initializer_list
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // std::initializer_list support -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // Copyright (C) 2008-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // This file is part of GCC.
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** //
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // GCC is free software; you can redistribute it and/or modify
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // it under the terms of the GNU General Public License as published by
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // the Free Software Foundation; either version 3, or (at your option)
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // any later version.
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** //
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // GCC is distributed in the hope that it will be useful,
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // GNU General Public License for more details.
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** //
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // Under Section 7 of GPL version 3, you are granted additional
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // permissions described in the GCC Runtime Library Exception, version
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // 3.1, as published by the Free Software Foundation.
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // You should have received a copy of the GNU General Public License and
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // a copy of the GCC Runtime Library Exception along with this program;
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // <http://www.gnu.org/licenses/>.
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** /** @file initializer_list
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****  *  This is a Standard C++ Library header.
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****  */
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** #ifndef _INITIALIZER_LIST
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** #define _INITIALIZER_LIST
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** #pragma GCC system_header
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** #if __cplusplus < 201103L
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** # include <bits/c++0x_warning.h>
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** #else // C++0x
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** #pragma GCC visibility push(default)
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 499


  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** #include <bits/c++config.h>
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** namespace std
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** {
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****   /// initializer_list
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****   template<class _E>
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****     class initializer_list
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****     {
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****     public:
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef _E 		value_type;
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef const _E& 	reference;
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef const _E& 	const_reference;
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef size_t 		size_type;
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef const _E* 	iterator;
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef const _E* 	const_iterator;
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****     private:
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       iterator			_M_array;
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       size_type			_M_len;
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       // The compiler can call a private constructor.
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       constexpr initializer_list(const_iterator __a, size_type __l)
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       : _M_array(__a), _M_len(__l) { }
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****     public:
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       constexpr initializer_list() noexcept
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       : _M_array(0), _M_len(0) { }
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       // Number of elements.
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       constexpr size_type
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       size() const noexcept { return _M_len; }
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       // First element.
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       constexpr const_iterator
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       begin() const noexcept { return _M_array; }
 7074              		.loc 28 75 7 discriminator 2 view .LVU1297
 7075              		.loc 28 75 7 is_stmt 0 discriminator 2 view .LVU1298
 7076              	.LBE4879:
 7077              	.LBB4880:
 7078              	.LBI4880:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       // One past the last element.
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       constexpr const_iterator
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       end() const noexcept { return begin() + size(); }
 7079              		.loc 28 79 7 is_stmt 1 discriminator 2 view .LVU1299
 7080              		.loc 28 79 7 is_stmt 0 discriminator 2 view .LVU1300
 7081              	.LBE4880:
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { }
 7082              		.loc 2 504 26 discriminator 2 view .LVU1301
 7083 01a4 2146     		mov	r1, r4
 7084 01a6 FFF7FEFF 		bl	_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESaIS8_ENSt8
 7085              	.LVL244:
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { }
 7086              		.loc 2 504 26 discriminator 2 view .LVU1302
 7087              	.LBE4883:
 7088              	.LBE4886:
 7089              	.LBE4889:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 500


 7090              	.LBE5043:
  19:utils.h       ****     return fourth_octave.at(note);
 7091              		.loc 27 19 5 discriminator 2 view .LVU1303
 7092 01aa 3846     		mov	r0, r7
 7093 01ac FFF7FEFF 		bl	__cxa_guard_release
 7094              	.LVL245:
 7095 01b0 0D4A     		ldr	r2, .L174+12
 7096 01b2 0E49     		ldr	r1, .L174+16
 7097 01b4 0A48     		ldr	r0, .L174+4
 7098 01b6 FFF7FEFF 		bl	__aeabi_atexit
 7099              	.LVL246:
 7100              	.LBB5044:
 7101              	.LBI5044:
 7102              		.loc 8 162 7 is_stmt 1 discriminator 2 view .LVU1304
 7103              	.LBB5045:
 7104              	.LBI5045:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7105              		.loc 6 89 7 discriminator 2 view .LVU1305
 7106              	.L162:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7107              		.loc 6 89 7 is_stmt 0 discriminator 2 view .LVU1306
 7108              	.LBE5045:
 7109              	.LBE5044:
  19:utils.h       ****     return fourth_octave.at(note);
 7110              		.loc 27 19 5 discriminator 5 view .LVU1307
 7111 01ba 1C3D     		subs	r5, r5, #28
 7112              	.LVL247:
 7113              	.LBB5046:
 7114              	.LBI5046:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     : private __pair_base<_T1, _T2>
 7115              		.loc 7 211 12 is_stmt 1 discriminator 5 view .LVU1308
 7116              	.LBB5047:
 7117              	.LBI5047:
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 7118              		.loc 4 657 7 discriminator 5 view .LVU1309
 7119              	.LBB5048:
 7120              	.LBI5048:
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7121              		.loc 4 229 7 discriminator 5 view .LVU1310
 7122              	.LBB5049:
 7123              	.LBB5050:
 7124              	.LBI5050:
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 7125              		.loc 4 221 7 discriminator 5 view .LVU1311
 7126              	.LBB5051:
 7127              	.LBI5051:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 7128              		.loc 4 186 7 discriminator 5 view .LVU1312
 7129              	.LBB5052:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 7130              		.loc 4 187 28 is_stmt 0 discriminator 5 view .LVU1313
 7131 01bc 2B46     		mov	r3, r5
 7132 01be 53F8080B 		ldr	r0, [r3], #8
 7133              	.LVL248:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 7134              		.loc 4 187 28 discriminator 5 view .LVU1314
 7135              	.LBE5052:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 501


 7136              	.LBE5051:
 7137              	.LBE5050:
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 7138              		.loc 4 231 2 discriminator 5 view .LVU1315
 7139 01c2 9842     		cmp	r0, r3
 7140 01c4 03D0     		beq	.L161
 7141              	.LVL249:
 7142              	.LBB5053:
 7143              	.LBI5053:
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 7144              		.loc 4 236 7 is_stmt 1 view .LVU1316
 7145              	.LBB5054:
 7146              	.LBB5055:
 7147              	.LBI5055:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 7148              		.loc 5 491 7 view .LVU1317
 7149              	.LBB5056:
 7150              	.LBI5056:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 7151              		.loc 6 120 7 view .LVU1318
 7152              	.LBE5056:
 7153              	.LBE5055:
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 7154              		.loc 4 237 34 is_stmt 0 view .LVU1319
 7155 01c6 A968     		ldr	r1, [r5, #8]
 7156              	.LBB5059:
 7157              	.LBB5058:
 7158              	.LBB5057:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7159              		.loc 6 133 19 view .LVU1320
 7160 01c8 0131     		adds	r1, r1, #1
 7161              	.LVL250:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7162              		.loc 6 133 19 view .LVU1321
 7163 01ca FFF7FEFF 		bl	_ZdlPvj
 7164              	.LVL251:
 7165              	.L161:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7166              		.loc 6 133 19 view .LVU1322
 7167              	.LBE5057:
 7168              	.LBE5058:
 7169              	.LBE5059:
 7170              	.LBE5054:
 7171              	.LBE5053:
 7172              	.LBE5049:
 7173              	.LBE5048:
 7174              	.LBB5060:
 7175              	.LBI5060:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7176              		.loc 4 150 14 is_stmt 1 view .LVU1323
 7177              	.LBB5061:
 7178              	.LBI5061:
 7179              		.loc 8 162 7 view .LVU1324
 7180              	.LBB5062:
 7181              	.LBI5062:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7182              		.loc 6 89 7 view .LVU1325
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 502


  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7183              		.loc 6 89 7 is_stmt 0 view .LVU1326
 7184              	.LBE5062:
 7185              	.LBE5061:
 7186              	.LBE5060:
 7187              	.LBE5047:
 7188              	.LBE5046:
  19:utils.h       ****     return fourth_octave.at(note);
 7189              		.loc 27 19 5 view .LVU1327
 7190 01ce A542     		cmp	r5, r4
 7191 01d0 F3D1     		bne	.L162
 7192 01d2 20E7     		b	.L159
 7193              	.LVL252:
 7194              	.L163:
 7195              	.LBB5063:
 7196              	.LBB3900:
 7197              	.LBB3898:
 785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return __p->_M_v().second;
 7198              		.loc 3 785 22 view .LVU1328
 7199 01d4 0648     		ldr	r0, .L174+20
 7200 01d6 FFF7FEFF 		bl	_ZSt20__throw_out_of_rangePKc
 7201              	.LVL253:
 7202              	.L175:
 7203 01da 00BF     		.align	2
 7204              	.L174:
 7205 01dc 00000000 		.word	_ZGVZ17note_name_to_midiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE13fourth_octa
 7206 01e0 00000000 		.word	_ZZ17note_name_to_midiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE13fourth_octave
 7207 01e4 07690FC7 		.word	-955291385
 7208 01e8 00000000 		.word	__dso_handle
 7209 01ec 00000000 		.word	_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4hashIS5_ESt8equ
 7210 01f0 00000000 		.word	.LC2
 7211              	.LBE3898:
 7212              	.LBE3900:
 7213              	.LBE5063:
 7214              		.cfi_endproc
 7215              	.LFE4171:
 7217              		.section	.text._Z13chord_to_midi5Chord,"axG",%progbits,_Z13chord_to_midi5Chord,comdat
 7218              		.align	1
 7219              		.p2align 2,,3
 7220              		.weak	_Z13chord_to_midi5Chord
 7221              		.syntax unified
 7222              		.thumb
 7223              		.thumb_func
 7224              		.fpu fpv5-d16
 7226              	_Z13chord_to_midi5Chord:
 7227              	.LVL254:
 7228              	.LFB4202:
  22:utils.h       **** 
  23:utils.h       **** inline std::vector<int> chord_to_midi(Chord chord) {
 7229              		.loc 27 23 52 is_stmt 1 view -0
 7230              		.cfi_startproc
 7231              		@ args = 0, pretend = 0, frame = 8
 7232              		@ frame_needed = 0, uses_anonymous_args = 0
  24:utils.h       ****     std::vector<int> midi_notes;
 7233              		.loc 27 24 5 view .LVU1330
  23:utils.h       ****     std::vector<int> midi_notes;
 7234              		.loc 27 23 52 is_stmt 0 view .LVU1331
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 503


 7235 0000 30B5     		push	{r4, r5, lr}
 7236              		.cfi_def_cfa_offset 12
 7237              		.cfi_offset 4, -12
 7238              		.cfi_offset 5, -8
 7239              		.cfi_offset 14, -4
 7240              	.LBB5278:
 7241              	.LBB5279:
 7242              	.LBB5280:
 7243              	.LBB5281:
 7244              	.LBB5282:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 7245              		.loc 14 98 47 view .LVU1332
 7246 0002 0023     		movs	r3, #0
 7247              	.LBE5282:
 7248              	.LBE5281:
 7249              	.LBE5280:
 7250              	.LBE5279:
 7251              	.LBE5278:
  23:utils.h       ****     std::vector<int> midi_notes;
 7252              		.loc 27 23 52 view .LVU1333
 7253 0004 0446     		mov	r4, r0
 7254              	.LVL255:
 7255              	.LBB5296:
 7256              	.LBI5278:
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 7257              		.loc 14 487 7 is_stmt 1 view .LVU1334
 7258              	.LBB5293:
 7259              	.LBI5279:
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 7260              		.loc 14 288 7 view .LVU1335
 7261              	.LBB5290:
 7262              	.LBI5280:
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    is_nothrow_default_constructible<_Tp_alloc_type>::value)
 7263              		.loc 14 131 2 view .LVU1336
 7264              	.LBB5285:
 7265              	.LBI5285:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 7266              		.loc 8 144 7 view .LVU1337
 7267              	.LBB5286:
 7268              	.LBI5286:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7269              		.loc 6 79 7 view .LVU1338
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7270              		.loc 6 79 7 is_stmt 0 view .LVU1339
 7271              	.LBE5286:
 7272              	.LBE5285:
 7273              	.LBB5287:
 7274              	.LBI5281:
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 7275              		.loc 14 97 2 is_stmt 1 view .LVU1340
 7276              	.LBE5287:
 7277              	.LBE5290:
 7278              	.LBE5293:
 7279              	.LBE5296:
  23:utils.h       ****     std::vector<int> midi_notes;
 7280              		.loc 27 23 52 is_stmt 0 view .LVU1341
 7281 0006 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 504


 7282              		.cfi_def_cfa_offset 24
  23:utils.h       ****     std::vector<int> midi_notes;
 7283              		.loc 27 23 52 view .LVU1342
 7284 0008 0D46     		mov	r5, r1
 7285              	.LBB5297:
 7286              	.LBB5294:
 7287              	.LBB5291:
 7288              	.LBB5288:
 7289              	.LBB5283:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 7290              		.loc 14 98 47 view .LVU1343
 7291 000a 0360     		str	r3, [r0]
 7292              	.LBE5283:
 7293              	.LBE5288:
 7294              	.LBE5291:
 7295              	.LBE5294:
 7296              	.LBE5297:
  25:utils.h       ****     // Push root
  26:utils.h       ****     midi_notes.push_back(note_name_to_midi(chord.root));
 7297              		.loc 27 26 43 view .LVU1344
 7298 000c 0846     		mov	r0, r1
 7299              	.LVL256:
 7300              	.LBB5298:
 7301              	.LBB5295:
 7302              	.LBB5292:
 7303              	.LBB5289:
 7304              	.LBB5284:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 7305              		.loc 14 98 47 view .LVU1345
 7306 000e C4E90133 		strd	r3, r3, [r4, #4]
 7307              	.LVL257:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 7308              		.loc 14 98 47 view .LVU1346
 7309              	.LBE5284:
 7310              	.LBE5289:
 7311              	.LBE5292:
 7312              	.LBE5295:
 7313              	.LBE5298:
 7314              		.loc 27 26 5 is_stmt 1 view .LVU1347
 7315              		.loc 27 26 43 is_stmt 0 view .LVU1348
 7316 0012 FFF7FEFF 		bl	_Z17note_name_to_midiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 7317              	.LVL258:
 7318              		.loc 27 26 43 view .LVU1349
 7319 0016 0190     		str	r0, [sp, #4]
 7320              	.LVL259:
 7321              	.LBB5299:
 7322              	.LBI5299:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 7323              		.loc 14 1203 7 is_stmt 1 view .LVU1350
 7324              	.LBB5300:
 7325              	.LBI5300:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 7326              		.loc 16 109 7 view .LVU1351
 7327              	.LBB5301:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7328              		.loc 16 112 2 is_stmt 0 view .LVU1352
 7329 0018 D4E90113 		ldrd	r1, r3, [r4, #4]
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 505


 7330 001c 9942     		cmp	r1, r3
 7331 001e 00F0F580 		beq	.L177
 7332              	.LVL260:
 7333              	.LBB5302:
 7334              	.LBI5302:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 7335              		.loc 5 507 2 is_stmt 1 view .LVU1353
 7336              	.LBB5303:
 7337              	.LBI5303:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 7338              		.loc 6 148 2 view .LVU1354
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 7339              		.loc 6 148 2 is_stmt 0 view .LVU1355
 7340              	.LBE5303:
 7341              	.LBE5302:
 7342              	.LBE5301:
 7343              	.LBE5300:
 7344              	.LBE5299:
 7345              		.loc 17 175 3 is_stmt 1 view .LVU1356
 7346              	.LBB5313:
 7347              	.LBB5311:
 7348              	.LBB5309:
 7349              	.LBB5306:
 7350              	.LBB5305:
 7351              	.LBB5304:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7352              		.loc 6 150 4 is_stmt 0 view .LVU1357
 7353 0022 41F8040B 		str	r0, [r1], #4
 7354              	.LVL261:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7355              		.loc 6 150 4 view .LVU1358
 7356              	.LBE5304:
 7357              	.LBE5305:
 7358              	.LBE5306:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 7359              		.loc 16 117 6 view .LVU1359
 7360 0026 6160     		str	r1, [r4, #4]
 7361              	.L178:
 7362              	.LVL262:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 7363              		.loc 16 117 6 view .LVU1360
 7364              	.LBE5309:
 7365              	.LBE5311:
 7366              	.LBE5313:
  27:utils.h       **** 
  28:utils.h       ****     // Push third and fifth
  29:utils.h       ****     switch (chord.quality) {
 7367              		.loc 27 29 5 is_stmt 1 view .LVU1361
 7368              		.loc 27 29 19 is_stmt 0 view .LVU1362
 7369 0028 2B7E     		ldrb	r3, [r5, #24]	@ zero_extendqisi2
 7370 002a 032B     		cmp	r3, #3
 7371 002c 1BD8     		bhi	.L179
 7372 002e DFE803F0 		tbb	[pc, r3]
 7373              	.L181:
 7374 0032 B1       		.byte	(.L184-.L181)/2
 7375 0033 02       		.byte	(.L183-.L181)/2
 7376 0034 9D       		.byte	(.L182-.L181)/2
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 506


 7377 0035 85       		.byte	(.L180-.L181)/2
 7378              		.p2align 1
 7379              	.L183:
  30:utils.h       ****         case MAJOR:
  31:utils.h       ****             midi_notes.push_back(midi_notes[0] + 4);
  32:utils.h       ****             midi_notes.push_back(midi_notes[0] + 7);
  33:utils.h       ****             break;
  34:utils.h       ****         case MINOR:
 7380              		.loc 27 34 9 is_stmt 1 view .LVU1363
  35:utils.h       ****             midi_notes.push_back(midi_notes[0] + 3);
 7381              		.loc 27 35 13 view .LVU1364
 7382              	.LVL263:
 7383              	.LBB5314:
 7384              	.LBI5314:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 7385              		.loc 14 1043 7 view .LVU1365
 7386              	.LBE5314:
 7387              	.LBB5315:
 7388              	.LBB5316:
 7389              	.LBB5317:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7390              		.loc 16 112 20 is_stmt 0 view .LVU1366
 7391 0036 D4E90003 		ldrd	r0, r3, [r4]
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7392              		.loc 16 112 47 view .LVU1367
 7393 003a A168     		ldr	r1, [r4, #8]
 7394              	.LBE5317:
 7395              	.LBE5316:
 7396              	.LBE5315:
 7397              		.loc 27 35 48 view .LVU1368
 7398 003c 0268     		ldr	r2, [r0]
 7399              	.LBB5333:
 7400              	.LBB5329:
 7401              	.LBB5325:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7402              		.loc 16 112 2 view .LVU1369
 7403 003e 8B42     		cmp	r3, r1
 7404              	.LBE5325:
 7405              	.LBE5329:
 7406              	.LBE5333:
 7407              		.loc 27 35 48 view .LVU1370
 7408 0040 02F10302 		add	r2, r2, #3
 7409 0044 0192     		str	r2, [sp, #4]
 7410              	.LVL264:
 7411              	.LBB5334:
 7412              	.LBI5315:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 7413              		.loc 14 1203 7 is_stmt 1 view .LVU1371
 7414              	.LBB5330:
 7415              	.LBI5316:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 7416              		.loc 16 109 7 view .LVU1372
 7417              	.LBB5326:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7418              		.loc 16 112 2 is_stmt 0 view .LVU1373
 7419 0046 00F0AF80 		beq	.L189
 7420              	.LVL265:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 507


 7421              	.L235:
 7422              	.LBB5318:
 7423              	.LBI5318:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 7424              		.loc 5 507 2 is_stmt 1 view .LVU1374
 7425              	.LBB5319:
 7426              	.LBI5319:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 7427              		.loc 6 148 2 view .LVU1375
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 7428              		.loc 6 148 2 is_stmt 0 view .LVU1376
 7429              	.LBE5319:
 7430              	.LBE5318:
 7431              	.LBE5326:
 7432              	.LBE5330:
 7433              	.LBE5334:
 7434              		.loc 17 175 3 is_stmt 1 view .LVU1377
 7435              	.LBB5335:
 7436              	.LBB5331:
 7437              	.LBB5327:
 7438              	.LBB5322:
 7439              	.LBB5321:
 7440              	.LBB5320:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7441              		.loc 6 150 4 is_stmt 0 view .LVU1378
 7442 004a 43F8042B 		str	r2, [r3], #4
 7443              	.LVL266:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7444              		.loc 6 150 4 view .LVU1379
 7445              	.LBE5320:
 7446              	.LBE5321:
 7447              	.LBE5322:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 7448              		.loc 16 117 6 view .LVU1380
 7449 004e 6360     		str	r3, [r4, #4]
 7450              	.L190:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 7451              		.loc 16 117 6 view .LVU1381
 7452              	.LBE5327:
 7453              	.LBE5331:
 7454              	.LBE5335:
  36:utils.h       ****             midi_notes.push_back(midi_notes[0] + 7);
 7455              		.loc 27 36 13 is_stmt 1 view .LVU1382
 7456              	.LVL267:
 7457              	.LBB5336:
 7458              	.LBI5336:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 7459              		.loc 14 1043 7 view .LVU1383
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 7460              		.loc 14 1043 7 is_stmt 0 view .LVU1384
 7461              	.LBE5336:
 7462              		.loc 27 36 48 view .LVU1385
 7463 0050 0268     		ldr	r2, [r0]
 7464              	.LBB5337:
 7465              	.LBB5338:
 7466              	.LBB5339:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 508


 7467              		.loc 16 112 2 view .LVU1386
 7468 0052 9942     		cmp	r1, r3
 7469              	.LBE5339:
 7470              	.LBE5338:
 7471              	.LBE5337:
 7472              		.loc 27 36 48 view .LVU1387
 7473 0054 02F10702 		add	r2, r2, #7
 7474 0058 0192     		str	r2, [sp, #4]
 7475              	.LVL268:
 7476              	.LBB5344:
 7477              	.LBI5337:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 7478              		.loc 14 1203 7 is_stmt 1 view .LVU1388
 7479              	.LBB5342:
 7480              	.LBI5338:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 7481              		.loc 16 109 7 view .LVU1389
 7482              	.LBB5340:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7483              		.loc 16 112 2 is_stmt 0 view .LVU1390
 7484 005a 00F08280 		beq	.L199
 7485              	.LVL269:
 7486              	.L233:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7487              		.loc 16 112 2 view .LVU1391
 7488              	.LBE5340:
 7489              	.LBE5342:
 7490              	.LBE5344:
 7491              	.LBB5345:
 7492              	.LBB5346:
 7493              	.LBB5347:
 7494              	.LBB5348:
 7495              	.LBI5348:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 7496              		.loc 5 507 2 is_stmt 1 view .LVU1392
 7497              	.LBB5349:
 7498              	.LBI5349:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 7499              		.loc 6 148 2 view .LVU1393
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 7500              		.loc 6 148 2 is_stmt 0 view .LVU1394
 7501              	.LBE5349:
 7502              	.LBE5348:
 7503              	.LBE5347:
 7504              	.LBE5346:
 7505              	.LBE5345:
 7506              		.loc 17 175 3 is_stmt 1 view .LVU1395
 7507              	.LBB5363:
 7508              	.LBB5359:
 7509              	.LBB5355:
 7510              	.LBB5352:
 7511              	.LBB5351:
 7512              	.LBB5350:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7513              		.loc 6 150 4 is_stmt 0 view .LVU1396
 7514 005e 43F8042B 		str	r2, [r3], #4
 7515              	.LVL270:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 509


 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7516              		.loc 6 150 4 view .LVU1397
 7517              	.LBE5350:
 7518              	.LBE5351:
 7519              	.LBE5352:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 7520              		.loc 16 117 6 view .LVU1398
 7521 0062 6360     		str	r3, [r4, #4]
 7522              	.L200:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 7523              		.loc 16 117 6 view .LVU1399
 7524              	.LBE5355:
 7525              	.LBE5359:
 7526              	.LBE5363:
  37:utils.h       ****             break;
  38:utils.h       ****         case AUGMENTED:
  39:utils.h       ****             midi_notes.push_back(midi_notes[0] + 4);
  40:utils.h       ****             midi_notes.push_back(midi_notes[0] + 8);
  41:utils.h       ****             break;
  42:utils.h       ****         case DIMINISHED:
  43:utils.h       ****             midi_notes.push_back(midi_notes[0] + 3);
  44:utils.h       ****             midi_notes.push_back(midi_notes[0] + 6);
  45:utils.h       ****             break;
 7527              		.loc 27 45 13 is_stmt 1 view .LVU1400
  46:utils.h       ****     }
  47:utils.h       ****     
  48:utils.h       ****     bool major = (chord.quality == ChordQuality::MAJOR 
 7528              		.loc 27 48 25 is_stmt 0 view .LVU1401
 7529 0064 2B7E     		ldrb	r3, [r5, #24]	@ zero_extendqisi2
 7530              	.L179:
 7531              		.loc 27 48 5 is_stmt 1 view .LVU1402
 7532 0066 6A7E     		ldrb	r2, [r5, #25]	@ zero_extendqisi2
  49:utils.h       ****         || chord.quality == ChordQuality::AUGMENTED);
 7533              		.loc 27 49 9 is_stmt 0 view .LVU1403
 7534 0068 03F0FD03 		and	r3, r3, #253
 7535              	.LVL271:
  50:utils.h       ****     switch (chord.extension) {
 7536              		.loc 27 50 5 is_stmt 1 view .LVU1404
 7537 006c 013A     		subs	r2, r2, #1
 7538 006e 032A     		cmp	r2, #3
 7539 0070 1BD8     		bhi	.L176
 7540 0072 DFE802F0 		tbb	[pc, r2]
 7541              	.L203:
 7542 0076 53       		.byte	(.L206-.L203)/2
 7543 0077 42       		.byte	(.L205-.L203)/2
 7544 0078 02       		.byte	(.L204-.L203)/2
 7545 0079 1D       		.byte	(.L202-.L203)/2
 7546              		.p2align 1
 7547              	.L204:
  51:utils.h       ****         case TRIAD:
  52:utils.h       ****             break;
  53:utils.h       ****             
  54:utils.h       ****         case SIXTH:
  55:utils.h       ****             midi_notes.push_back(midi_notes[0] + 9); // major 6th
  56:utils.h       ****             break;
  57:utils.h       **** 
  58:utils.h       ****         case SEVENTH:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 510


  59:utils.h       ****             major ? midi_notes.push_back(midi_notes[0] + 11) // maj7
  60:utils.h       ****                 : midi_notes.push_back(midi_notes[0] + 10); // b7
  61:utils.h       ****             break;
  62:utils.h       **** 
  63:utils.h       ****         case NINTH:
 7548              		.loc 27 63 9 view .LVU1405
  64:utils.h       ****             major ? midi_notes.push_back(midi_notes[0] + 11) // maj7
 7549              		.loc 27 64 13 view .LVU1406
 7550              	.LBB5364:
 7551              	.LBB5365:
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 7552              		.loc 14 1046 25 is_stmt 0 view .LVU1407
 7553 007a 2268     		ldr	r2, [r4]
 7554              	.LBE5365:
 7555              	.LBE5364:
 7556              		.loc 27 64 19 view .LVU1408
 7557 007c 002B     		cmp	r3, #0
 7558 007e 00F0A580 		beq	.L236
 7559              	.LVL272:
 7560              	.LBB5366:
 7561              	.LBI5366:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 7562              		.loc 14 1043 7 is_stmt 1 view .LVU1409
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 7563              		.loc 14 1043 7 is_stmt 0 view .LVU1410
 7564              	.LBE5366:
  65:utils.h       ****                 : midi_notes.push_back(midi_notes[0] + 10); // b7
 7565              		.loc 27 65 54 view .LVU1411
 7566 0082 1068     		ldr	r0, [r2]
 7567              	.LBB5367:
 7568              	.LBB5368:
 7569              	.LBB5369:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7570              		.loc 16 112 47 view .LVU1412
 7571 0084 D4E90131 		ldrd	r3, r1, [r4, #4]
 7572              	.LVL273:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7573              		.loc 16 112 47 view .LVU1413
 7574              	.LBE5369:
 7575              	.LBE5368:
 7576              	.LBE5367:
 7577              		.loc 27 65 54 view .LVU1414
 7578 0088 0A30     		adds	r0, r0, #10
 7579              	.LBB5385:
 7580              	.LBB5381:
 7581              	.LBB5377:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7582              		.loc 16 112 2 view .LVU1415
 7583 008a 8B42     		cmp	r3, r1
 7584              	.LBE5377:
 7585              	.LBE5381:
 7586              	.LBE5385:
 7587              		.loc 27 65 54 view .LVU1416
 7588 008c 0190     		str	r0, [sp, #4]
 7589              	.LVL274:
 7590              	.LBB5386:
 7591              	.LBI5367:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 511


1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 7592              		.loc 14 1203 7 is_stmt 1 view .LVU1417
 7593              	.LBB5382:
 7594              	.LBI5368:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 7595              		.loc 16 109 7 view .LVU1418
 7596              	.LBB5378:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7597              		.loc 16 112 2 is_stmt 0 view .LVU1419
 7598 008e 00F0A580 		beq	.L216
 7599              	.LVL275:
 7600              	.L228:
 7601              	.LBB5370:
 7602              	.LBI5370:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 7603              		.loc 5 507 2 is_stmt 1 view .LVU1420
 7604              	.LBB5371:
 7605              	.LBI5371:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 7606              		.loc 6 148 2 view .LVU1421
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 7607              		.loc 6 148 2 is_stmt 0 view .LVU1422
 7608              	.LBE5371:
 7609              	.LBE5370:
 7610              	.LBE5378:
 7611              	.LBE5382:
 7612              	.LBE5386:
 7613              		.loc 17 175 3 is_stmt 1 view .LVU1423
 7614              	.LBB5387:
 7615              	.LBB5383:
 7616              	.LBB5379:
 7617              	.LBB5374:
 7618              	.LBB5373:
 7619              	.LBB5372:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7620              		.loc 6 150 4 is_stmt 0 view .LVU1424
 7621 0092 43F8040B 		str	r0, [r3], #4
 7622              	.LVL276:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7623              		.loc 6 150 4 view .LVU1425
 7624              	.LBE5372:
 7625              	.LBE5373:
 7626              	.LBE5374:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 7627              		.loc 16 117 6 view .LVU1426
 7628 0096 6360     		str	r3, [r4, #4]
 7629              	.L215:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 7630              		.loc 16 117 6 view .LVU1427
 7631              	.LBE5379:
 7632              	.LBE5383:
 7633              	.LBE5387:
  66:utils.h       ****             midi_notes.push_back(midi_notes[0] + 14); // major 9th
 7634              		.loc 27 66 13 is_stmt 1 discriminator 1 view .LVU1428
 7635              	.LVL277:
 7636              	.LBB5388:
 7637              	.LBI5388:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 512


1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 7638              		.loc 14 1043 7 discriminator 1 view .LVU1429
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 7639              		.loc 14 1043 7 is_stmt 0 discriminator 1 view .LVU1430
 7640              	.LBE5388:
 7641              		.loc 27 66 48 discriminator 1 view .LVU1431
 7642 0098 1268     		ldr	r2, [r2]
 7643              	.LBB5389:
 7644              	.LBB5390:
 7645              	.LBB5391:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7646              		.loc 16 112 2 discriminator 1 view .LVU1432
 7647 009a 9942     		cmp	r1, r3
 7648              	.LBE5391:
 7649              	.LBE5390:
 7650              	.LBE5389:
 7651              		.loc 27 66 48 discriminator 1 view .LVU1433
 7652 009c 02F10E02 		add	r2, r2, #14
 7653 00a0 0192     		str	r2, [sp, #4]
 7654              	.LVL278:
 7655              	.LBB5400:
 7656              	.LBI5389:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 7657              		.loc 14 1203 7 is_stmt 1 discriminator 1 view .LVU1434
 7658              	.LBB5397:
 7659              	.LBI5390:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 7660              		.loc 16 109 7 discriminator 1 view .LVU1435
 7661              	.LBB5394:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7662              		.loc 16 112 2 is_stmt 0 discriminator 1 view .LVU1436
 7663 00a2 44D0     		beq	.L217
 7664              	.LVL279:
 7665              	.L231:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7666              		.loc 16 112 2 discriminator 1 view .LVU1437
 7667              	.LBE5394:
 7668              	.LBE5397:
 7669              	.LBE5400:
 7670              	.LBB5401:
 7671              	.LBB5402:
 7672              	.LBB5403:
 7673              	.LBB5404:
 7674              	.LBI5404:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 7675              		.loc 5 507 2 is_stmt 1 view .LVU1438
 7676              	.LBB5405:
 7677              	.LBI5405:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 7678              		.loc 6 148 2 view .LVU1439
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 7679              		.loc 6 148 2 is_stmt 0 view .LVU1440
 7680              	.LBE5405:
 7681              	.LBE5404:
 7682              	.LBE5403:
 7683              	.LBE5402:
 7684              	.LBE5401:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 513


 7685              		.loc 17 175 3 is_stmt 1 view .LVU1441
 7686              	.LBB5419:
 7687              	.LBB5415:
 7688              	.LBB5411:
 7689              	.LBB5408:
 7690              	.LBB5407:
 7691              	.LBB5406:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7692              		.loc 6 150 4 is_stmt 0 view .LVU1442
 7693 00a4 43F8042B 		str	r2, [r3], #4
 7694              	.LVL280:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7695              		.loc 6 150 4 view .LVU1443
 7696              	.LBE5406:
 7697              	.LBE5407:
 7698              	.LBE5408:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 7699              		.loc 16 117 6 view .LVU1444
 7700 00a8 6360     		str	r3, [r4, #4]
 7701              	.L176:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 7702              		.loc 16 117 6 view .LVU1445
 7703              	.LBE5411:
 7704              	.LBE5415:
 7705              	.LBE5419:
  67:utils.h       ****             break;
  68:utils.h       **** 
  69:utils.h       ****         case ELEVENTH:
  70:utils.h       ****             major ? midi_notes.push_back(midi_notes[0] + 11) // maj7
  71:utils.h       ****                 : midi_notes.push_back(midi_notes[0] + 10); // b7
  72:utils.h       ****             midi_notes.push_back(midi_notes[0] + 14); // major 9th
  73:utils.h       ****             midi_notes.push_back(midi_notes[0] + 18); // #11th
  74:utils.h       ****             break;
  75:utils.h       ****     }
  76:utils.h       ****     return midi_notes;
  77:utils.h       **** }
 7706              		.loc 27 77 1 view .LVU1446
 7707 00aa 2046     		mov	r0, r4
 7708 00ac 03B0     		add	sp, sp, #12
 7709              		.cfi_remember_state
 7710              		.cfi_def_cfa_offset 12
 7711              		@ sp needed
 7712 00ae 30BD     		pop	{r4, r5, pc}
 7713              	.LVL281:
 7714              	.L202:
 7715              		.cfi_restore_state
  69:utils.h       ****             major ? midi_notes.push_back(midi_notes[0] + 11) // maj7
 7716              		.loc 27 69 9 is_stmt 1 view .LVU1447
  70:utils.h       ****                 : midi_notes.push_back(midi_notes[0] + 10); // b7
 7717              		.loc 27 70 13 view .LVU1448
 7718              	.LBB5420:
 7719              	.LBB5421:
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 7720              		.loc 14 1046 25 is_stmt 0 view .LVU1449
 7721 00b0 2068     		ldr	r0, [r4]
 7722              	.LBE5421:
 7723              	.LBE5420:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 514


  70:utils.h       ****                 : midi_notes.push_back(midi_notes[0] + 10); // b7
 7724              		.loc 27 70 19 view .LVU1450
 7725 00b2 002B     		cmp	r3, #0
 7726 00b4 00F09A80 		beq	.L237
 7727              	.LVL282:
 7728              	.LBB5422:
 7729              	.LBI5422:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 7730              		.loc 14 1043 7 is_stmt 1 view .LVU1451
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 7731              		.loc 14 1043 7 is_stmt 0 view .LVU1452
 7732              	.LBE5422:
  71:utils.h       ****             midi_notes.push_back(midi_notes[0] + 14); // major 9th
 7733              		.loc 27 71 54 view .LVU1453
 7734 00b8 0268     		ldr	r2, [r0]
 7735              	.LBB5423:
 7736              	.LBB5424:
 7737              	.LBB5425:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7738              		.loc 16 112 47 view .LVU1454
 7739 00ba D4E90131 		ldrd	r3, r1, [r4, #4]
 7740              	.LVL283:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7741              		.loc 16 112 47 view .LVU1455
 7742              	.LBE5425:
 7743              	.LBE5424:
 7744              	.LBE5423:
  71:utils.h       ****             midi_notes.push_back(midi_notes[0] + 14); // major 9th
 7745              		.loc 27 71 54 view .LVU1456
 7746 00be 0A32     		adds	r2, r2, #10
 7747              	.LBB5441:
 7748              	.LBB5437:
 7749              	.LBB5433:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7750              		.loc 16 112 2 view .LVU1457
 7751 00c0 8B42     		cmp	r3, r1
 7752              	.LBE5433:
 7753              	.LBE5437:
 7754              	.LBE5441:
  71:utils.h       ****             midi_notes.push_back(midi_notes[0] + 14); // major 9th
 7755              		.loc 27 71 54 view .LVU1458
 7756 00c2 0192     		str	r2, [sp, #4]
 7757              	.LVL284:
 7758              	.LBB5442:
 7759              	.LBI5423:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 7760              		.loc 14 1203 7 is_stmt 1 view .LVU1459
 7761              	.LBB5438:
 7762              	.LBI5424:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 7763              		.loc 16 109 7 view .LVU1460
 7764              	.LBB5434:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7765              		.loc 16 112 2 is_stmt 0 view .LVU1461
 7766 00c4 00F09A80 		beq	.L222
 7767              	.LVL285:
 7768              	.L229:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 515


 7769              	.LBB5426:
 7770              	.LBI5426:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 7771              		.loc 5 507 2 is_stmt 1 view .LVU1462
 7772              	.LBB5427:
 7773              	.LBI5427:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 7774              		.loc 6 148 2 view .LVU1463
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 7775              		.loc 6 148 2 is_stmt 0 view .LVU1464
 7776              	.LBE5427:
 7777              	.LBE5426:
 7778              	.LBE5434:
 7779              	.LBE5438:
 7780              	.LBE5442:
 7781              		.loc 17 175 3 is_stmt 1 view .LVU1465
 7782              	.LBB5443:
 7783              	.LBB5439:
 7784              	.LBB5435:
 7785              	.LBB5430:
 7786              	.LBB5429:
 7787              	.LBB5428:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7788              		.loc 6 150 4 is_stmt 0 view .LVU1466
 7789 00c8 43F8042B 		str	r2, [r3], #4
 7790              	.LVL286:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7791              		.loc 6 150 4 view .LVU1467
 7792              	.LBE5428:
 7793              	.LBE5429:
 7794              	.LBE5430:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 7795              		.loc 16 117 6 view .LVU1468
 7796 00cc 6360     		str	r3, [r4, #4]
 7797              	.L221:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 7798              		.loc 16 117 6 view .LVU1469
 7799              	.LBE5435:
 7800              	.LBE5439:
 7801              	.LBE5443:
  72:utils.h       ****             midi_notes.push_back(midi_notes[0] + 18); // #11th
 7802              		.loc 27 72 13 is_stmt 1 discriminator 1 view .LVU1470
 7803              	.LVL287:
 7804              	.LBB5444:
 7805              	.LBI5444:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 7806              		.loc 14 1043 7 discriminator 1 view .LVU1471
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 7807              		.loc 14 1043 7 is_stmt 0 discriminator 1 view .LVU1472
 7808              	.LBE5444:
  72:utils.h       ****             midi_notes.push_back(midi_notes[0] + 18); // #11th
 7809              		.loc 27 72 48 discriminator 1 view .LVU1473
 7810 00ce 0268     		ldr	r2, [r0]
 7811              	.LBB5445:
 7812              	.LBB5446:
 7813              	.LBB5447:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 516


 7814              		.loc 16 112 2 discriminator 1 view .LVU1474
 7815 00d0 9942     		cmp	r1, r3
 7816              	.LBE5447:
 7817              	.LBE5446:
 7818              	.LBE5445:
  72:utils.h       ****             midi_notes.push_back(midi_notes[0] + 18); // #11th
 7819              		.loc 27 72 48 discriminator 1 view .LVU1475
 7820 00d2 02F10E02 		add	r2, r2, #14
 7821 00d6 0192     		str	r2, [sp, #4]
 7822              	.LVL288:
 7823              	.LBB5463:
 7824              	.LBI5445:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 7825              		.loc 14 1203 7 is_stmt 1 discriminator 1 view .LVU1476
 7826              	.LBB5459:
 7827              	.LBI5446:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 7828              		.loc 16 109 7 discriminator 1 view .LVU1477
 7829              	.LBB5455:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7830              		.loc 16 112 2 is_stmt 0 discriminator 1 view .LVU1478
 7831 00d8 00F0AD80 		beq	.L223
 7832              	.LVL289:
 7833              	.LBB5448:
 7834              	.LBI5448:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 7835              		.loc 5 507 2 is_stmt 1 view .LVU1479
 7836              	.LBB5449:
 7837              	.LBI5449:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 7838              		.loc 6 148 2 view .LVU1480
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 7839              		.loc 6 148 2 is_stmt 0 view .LVU1481
 7840              	.LBE5449:
 7841              	.LBE5448:
 7842              	.LBE5455:
 7843              	.LBE5459:
 7844              	.LBE5463:
 7845              		.loc 17 175 3 is_stmt 1 view .LVU1482
 7846              	.LBB5464:
 7847              	.LBB5460:
 7848              	.LBB5456:
 7849              	.LBB5452:
 7850              	.LBB5451:
 7851              	.LBB5450:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7852              		.loc 6 150 4 is_stmt 0 view .LVU1483
 7853 00dc 43F8042B 		str	r2, [r3], #4
 7854              	.LVL290:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7855              		.loc 6 150 4 view .LVU1484
 7856              	.LBE5450:
 7857              	.LBE5451:
 7858              	.LBE5452:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 7859              		.loc 16 117 6 view .LVU1485
 7860 00e0 6360     		str	r3, [r4, #4]
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 517


 7861              	.L224:
 7862              	.LVL291:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 7863              		.loc 16 117 6 view .LVU1486
 7864              	.LBE5456:
 7865              	.LBE5460:
 7866              	.LBE5464:
  73:utils.h       ****             break;
 7867              		.loc 27 73 13 is_stmt 1 view .LVU1487
 7868              	.LBB5465:
 7869              	.LBI5465:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 7870              		.loc 14 1043 7 view .LVU1488
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 7871              		.loc 14 1043 7 is_stmt 0 view .LVU1489
 7872              	.LBE5465:
  73:utils.h       ****             break;
 7873              		.loc 27 73 48 view .LVU1490
 7874 00e2 0268     		ldr	r2, [r0]
 7875              	.LBB5466:
 7876              	.LBB5416:
 7877              	.LBB5412:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7878              		.loc 16 112 2 view .LVU1491
 7879 00e4 8B42     		cmp	r3, r1
 7880              	.LBE5412:
 7881              	.LBE5416:
 7882              	.LBE5466:
  73:utils.h       ****             break;
 7883              		.loc 27 73 48 view .LVU1492
 7884 00e6 02F11202 		add	r2, r2, #18
 7885 00ea 0192     		str	r2, [sp, #4]
 7886              	.LVL292:
 7887              	.LBB5467:
 7888              	.LBI5401:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 7889              		.loc 14 1203 7 is_stmt 1 view .LVU1493
 7890              	.LBB5417:
 7891              	.LBI5402:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 7892              		.loc 16 109 7 view .LVU1494
 7893              	.LBB5413:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7894              		.loc 16 112 2 is_stmt 0 view .LVU1495
 7895 00ec DAD1     		bne	.L231
 7896              	.LVL293:
 7897              	.LBB5409:
 7898              	.LBI5409:
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 7899              		.loc 14 829 7 is_stmt 1 view .LVU1496
 7900              	.LBB5410:
 7901              	.LBI5410:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 7902              		.loc 13 978 7 view .LVU1497
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 7903              		.loc 13 978 7 is_stmt 0 view .LVU1498
 7904              	.LBE5410:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 518


 7905              	.LBE5409:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 7906              		.loc 16 121 21 view .LVU1499
 7907 00ee 01AA     		add	r2, sp, #4
 7908              	.LVL294:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 7909              		.loc 16 121 21 view .LVU1500
 7910 00f0 1946     		mov	r1, r3
 7911 00f2 2046     		mov	r0, r4
 7912 00f4 FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_
 7913              	.LVL295:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 7914              		.loc 16 121 21 view .LVU1501
 7915              	.LBE5413:
 7916              	.LBE5417:
 7917              	.LBE5467:
  74:utils.h       ****     }
 7918              		.loc 27 74 13 is_stmt 1 view .LVU1502
  76:utils.h       **** }
 7919              		.loc 27 76 5 view .LVU1503
  76:utils.h       **** }
 7920              		.loc 27 76 12 is_stmt 0 view .LVU1504
 7921 00f8 D7E7     		b	.L176
 7922              	.LVL296:
 7923              	.L205:
  58:utils.h       ****             major ? midi_notes.push_back(midi_notes[0] + 11) // maj7
 7924              		.loc 27 58 9 is_stmt 1 view .LVU1505
  59:utils.h       ****                 : midi_notes.push_back(midi_notes[0] + 10); // b7
 7925              		.loc 27 59 13 view .LVU1506
  59:utils.h       ****                 : midi_notes.push_back(midi_notes[0] + 10); // b7
 7926              		.loc 27 59 19 is_stmt 0 view .LVU1507
 7927 00fa 002B     		cmp	r3, #0
 7928 00fc 5CD1     		bne	.L209
 7929              	.LVL297:
 7930              	.LBB5468:
 7931              	.LBI5468:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 7932              		.loc 14 1043 7 is_stmt 1 view .LVU1508
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 7933              		.loc 14 1043 7 is_stmt 0 view .LVU1509
 7934              	.LBE5468:
 7935              	.LBB5469:
 7936              	.LBB5470:
 7937              	.LBB5471:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7938              		.loc 16 112 2 view .LVU1510
 7939 00fe A268     		ldr	r2, [r4, #8]
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7940              		.loc 16 112 20 view .LVU1511
 7941 0100 D4E90031 		ldrd	r3, r1, [r4]
 7942              	.LVL298:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7943              		.loc 16 112 20 view .LVU1512
 7944              	.LBE5471:
 7945              	.LBE5470:
 7946              	.LBE5469:
  59:utils.h       ****                 : midi_notes.push_back(midi_notes[0] + 10); // b7
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 519


 7947              		.loc 27 59 56 view .LVU1513
 7948 0104 1B68     		ldr	r3, [r3]
 7949              	.LBB5476:
 7950              	.LBB5474:
 7951              	.LBB5472:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7952              		.loc 16 112 2 view .LVU1514
 7953 0106 9142     		cmp	r1, r2
 7954              	.LBE5472:
 7955              	.LBE5474:
 7956              	.LBE5476:
  59:utils.h       ****                 : midi_notes.push_back(midi_notes[0] + 10); // b7
 7957              		.loc 27 59 56 view .LVU1515
 7958 0108 03F10B03 		add	r3, r3, #11
 7959 010c 0193     		str	r3, [sp, #4]
 7960              	.LVL299:
 7961              	.LBB5477:
 7962              	.LBI5469:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 7963              		.loc 14 1203 7 is_stmt 1 view .LVU1516
 7964              	.LBB5475:
 7965              	.LBI5470:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 7966              		.loc 16 109 7 view .LVU1517
 7967              	.LBB5473:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7968              		.loc 16 112 2 is_stmt 0 view .LVU1518
 7969 010e 0ED0     		beq	.L217
 7970              	.LVL300:
 7971              	.L232:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7972              		.loc 16 112 2 view .LVU1519
 7973              	.LBE5473:
 7974              	.LBE5475:
 7975              	.LBE5477:
 7976              	.LBB5478:
 7977              	.LBB5479:
 7978              	.LBB5480:
 7979              	.LBB5481:
 7980              	.LBI5481:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 7981              		.loc 5 507 2 is_stmt 1 view .LVU1520
 7982              	.LBB5482:
 7983              	.LBI5482:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 7984              		.loc 6 148 2 view .LVU1521
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 7985              		.loc 6 148 2 is_stmt 0 view .LVU1522
 7986              	.LBE5482:
 7987              	.LBE5481:
 7988              	.LBE5480:
 7989              	.LBE5479:
 7990              	.LBE5478:
 7991              		.loc 17 175 3 is_stmt 1 view .LVU1523
 7992              		.loc 27 77 1 is_stmt 0 view .LVU1524
 7993 0110 2046     		mov	r0, r4
 7994              	.LBB5494:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 520


 7995              	.LBB5490:
 7996              	.LBB5486:
 7997              	.LBB5485:
 7998              	.LBB5484:
 7999              	.LBB5483:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8000              		.loc 6 150 4 view .LVU1525
 8001 0112 41F8043B 		str	r3, [r1], #4
 8002              	.LVL301:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8003              		.loc 6 150 4 view .LVU1526
 8004              	.LBE5483:
 8005              	.LBE5484:
 8006              	.LBE5485:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 8007              		.loc 16 117 6 view .LVU1527
 8008 0116 6160     		str	r1, [r4, #4]
 8009              	.LBE5486:
 8010              	.LBE5490:
 8011              	.LBE5494:
 8012              		.loc 27 77 1 view .LVU1528
 8013 0118 03B0     		add	sp, sp, #12
 8014              		.cfi_remember_state
 8015              		.cfi_def_cfa_offset 12
 8016              		@ sp needed
 8017 011a 30BD     		pop	{r4, r5, pc}
 8018              	.LVL302:
 8019              	.L206:
 8020              		.cfi_restore_state
  54:utils.h       ****             midi_notes.push_back(midi_notes[0] + 9); // major 6th
 8021              		.loc 27 54 9 is_stmt 1 view .LVU1529
  55:utils.h       ****             break;
 8022              		.loc 27 55 13 view .LVU1530
 8023              	.LBB5495:
 8024              	.LBI5495:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8025              		.loc 14 1043 7 view .LVU1531
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8026              		.loc 14 1043 7 is_stmt 0 view .LVU1532
 8027              	.LBE5495:
 8028              	.LBB5496:
 8029              	.LBB5497:
 8030              	.LBB5498:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8031              		.loc 16 112 20 view .LVU1533
 8032 011c D4E90031 		ldrd	r3, r1, [r4]
 8033              	.LVL303:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8034              		.loc 16 112 2 view .LVU1534
 8035 0120 A268     		ldr	r2, [r4, #8]
 8036              	.LBE5498:
 8037              	.LBE5497:
 8038              	.LBE5496:
  55:utils.h       ****             break;
 8039              		.loc 27 55 48 view .LVU1535
 8040 0122 1B68     		ldr	r3, [r3]
 8041              	.LBB5503:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 521


 8042              	.LBB5501:
 8043              	.LBB5499:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8044              		.loc 16 112 2 view .LVU1536
 8045 0124 9142     		cmp	r1, r2
 8046              	.LBE5499:
 8047              	.LBE5501:
 8048              	.LBE5503:
  55:utils.h       ****             break;
 8049              		.loc 27 55 48 view .LVU1537
 8050 0126 03F10903 		add	r3, r3, #9
 8051 012a 0193     		str	r3, [sp, #4]
 8052              	.LVL304:
 8053              	.LBB5504:
 8054              	.LBI5496:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 8055              		.loc 14 1203 7 is_stmt 1 view .LVU1538
 8056              	.LBB5502:
 8057              	.LBI5497:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 8058              		.loc 16 109 7 view .LVU1539
 8059              	.LBB5500:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8060              		.loc 16 112 2 is_stmt 0 view .LVU1540
 8061 012c F0D1     		bne	.L232
 8062              	.LVL305:
 8063              	.L217:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8064              		.loc 16 112 2 view .LVU1541
 8065              	.LBE5500:
 8066              	.LBE5502:
 8067              	.LBE5504:
 8068              	.LBB5505:
 8069              	.LBB5398:
 8070              	.LBB5395:
 8071              	.LBB5392:
 8072              	.LBI5392:
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 8073              		.loc 14 829 7 is_stmt 1 view .LVU1542
 8074              	.LBB5393:
 8075              	.LBI5393:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 8076              		.loc 13 978 7 view .LVU1543
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 8077              		.loc 13 978 7 is_stmt 0 view .LVU1544
 8078              	.LBE5393:
 8079              	.LBE5392:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 8080              		.loc 16 121 21 view .LVU1545
 8081 012e 2046     		mov	r0, r4
 8082 0130 01AA     		add	r2, sp, #4
 8083 0132 FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_
 8084              	.LVL306:
 8085              	.LBE5395:
 8086              	.LBE5398:
 8087              	.LBE5505:
  67:utils.h       **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 522


 8088              		.loc 27 67 13 is_stmt 1 view .LVU1546
 8089              		.loc 27 77 1 is_stmt 0 view .LVU1547
 8090 0136 2046     		mov	r0, r4
 8091 0138 03B0     		add	sp, sp, #12
 8092              		.cfi_remember_state
 8093              		.cfi_def_cfa_offset 12
 8094              		@ sp needed
 8095 013a 30BD     		pop	{r4, r5, pc}
 8096              	.LVL307:
 8097              	.L180:
 8098              		.cfi_restore_state
  42:utils.h       ****             midi_notes.push_back(midi_notes[0] + 3);
 8099              		.loc 27 42 9 is_stmt 1 view .LVU1548
  43:utils.h       ****             midi_notes.push_back(midi_notes[0] + 6);
 8100              		.loc 27 43 13 view .LVU1549
 8101              	.LBB5506:
 8102              	.LBI5506:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8103              		.loc 14 1043 7 view .LVU1550
 8104              	.LBE5506:
 8105              	.LBB5507:
 8106              	.LBB5508:
 8107              	.LBB5509:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8108              		.loc 16 112 20 is_stmt 0 view .LVU1551
 8109 013c D4E90003 		ldrd	r0, r3, [r4]
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8110              		.loc 16 112 47 view .LVU1552
 8111 0140 A168     		ldr	r1, [r4, #8]
 8112              	.LBE5509:
 8113              	.LBE5508:
 8114              	.LBE5507:
  43:utils.h       ****             midi_notes.push_back(midi_notes[0] + 6);
 8115              		.loc 27 43 48 view .LVU1553
 8116 0142 0268     		ldr	r2, [r0]
 8117              	.LBB5525:
 8118              	.LBB5521:
 8119              	.LBB5517:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8120              		.loc 16 112 2 view .LVU1554
 8121 0144 8B42     		cmp	r3, r1
 8122              	.LBE5517:
 8123              	.LBE5521:
 8124              	.LBE5525:
  43:utils.h       ****             midi_notes.push_back(midi_notes[0] + 6);
 8125              		.loc 27 43 48 view .LVU1555
 8126 0146 02F10302 		add	r2, r2, #3
 8127 014a 0192     		str	r2, [sp, #4]
 8128              	.LVL308:
 8129              	.LBB5526:
 8130              	.LBI5507:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 8131              		.loc 14 1203 7 is_stmt 1 view .LVU1556
 8132              	.LBB5522:
 8133              	.LBI5508:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 8134              		.loc 16 109 7 view .LVU1557
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 523


 8135              	.LBB5518:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8136              		.loc 16 112 2 is_stmt 0 view .LVU1558
 8137 014c 6BD0     		beq	.L197
 8138              	.LVL309:
 8139              	.LBB5510:
 8140              	.LBI5510:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 8141              		.loc 5 507 2 is_stmt 1 view .LVU1559
 8142              	.LBB5511:
 8143              	.LBI5511:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 8144              		.loc 6 148 2 view .LVU1560
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 8145              		.loc 6 148 2 is_stmt 0 view .LVU1561
 8146              	.LBE5511:
 8147              	.LBE5510:
 8148              	.LBE5518:
 8149              	.LBE5522:
 8150              	.LBE5526:
 8151              		.loc 17 175 3 is_stmt 1 view .LVU1562
 8152              	.LBB5527:
 8153              	.LBB5523:
 8154              	.LBB5519:
 8155              	.LBB5514:
 8156              	.LBB5513:
 8157              	.LBB5512:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8158              		.loc 6 150 4 is_stmt 0 view .LVU1563
 8159 014e 43F8042B 		str	r2, [r3], #4
 8160              	.LVL310:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8161              		.loc 6 150 4 view .LVU1564
 8162              	.LBE5512:
 8163              	.LBE5513:
 8164              	.LBE5514:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 8165              		.loc 16 117 6 view .LVU1565
 8166 0152 6360     		str	r3, [r4, #4]
 8167              	.L198:
 8168              	.LVL311:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 8169              		.loc 16 117 6 view .LVU1566
 8170              	.LBE5519:
 8171              	.LBE5523:
 8172              	.LBE5527:
  44:utils.h       ****             break;
 8173              		.loc 27 44 13 is_stmt 1 view .LVU1567
 8174              	.LBB5528:
 8175              	.LBI5528:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8176              		.loc 14 1043 7 view .LVU1568
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8177              		.loc 14 1043 7 is_stmt 0 view .LVU1569
 8178              	.LBE5528:
  44:utils.h       ****             break;
 8179              		.loc 27 44 48 view .LVU1570
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 524


 8180 0154 0268     		ldr	r2, [r0]
 8181              	.LBB5529:
 8182              	.LBB5360:
 8183              	.LBB5356:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8184              		.loc 16 112 2 view .LVU1571
 8185 0156 9942     		cmp	r1, r3
 8186              	.LBE5356:
 8187              	.LBE5360:
 8188              	.LBE5529:
  44:utils.h       ****             break;
 8189              		.loc 27 44 48 view .LVU1572
 8190 0158 02F10602 		add	r2, r2, #6
 8191 015c 0192     		str	r2, [sp, #4]
 8192              	.LVL312:
 8193              	.LBB5530:
 8194              	.LBI5345:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 8195              		.loc 14 1203 7 is_stmt 1 view .LVU1573
 8196              	.LBB5361:
 8197              	.LBI5346:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 8198              		.loc 16 109 7 view .LVU1574
 8199              	.LBB5357:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8200              		.loc 16 112 2 is_stmt 0 view .LVU1575
 8201 015e 7FF47EAF 		bne	.L233
 8202              	.LVL313:
 8203              	.L199:
 8204              	.LBB5353:
 8205              	.LBI5353:
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 8206              		.loc 14 829 7 is_stmt 1 view .LVU1576
 8207              	.LBB5354:
 8208              	.LBI5354:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 8209              		.loc 13 978 7 view .LVU1577
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 8210              		.loc 13 978 7 is_stmt 0 view .LVU1578
 8211              	.LBE5354:
 8212              	.LBE5353:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 8213              		.loc 16 121 21 view .LVU1579
 8214 0162 01AA     		add	r2, sp, #4
 8215 0164 2046     		mov	r0, r4
 8216 0166 FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_
 8217              	.LVL314:
 8218 016a 7BE7     		b	.L200
 8219              	.L182:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 8220              		.loc 16 121 21 view .LVU1580
 8221              	.LBE5357:
 8222              	.LBE5361:
 8223              	.LBE5530:
  38:utils.h       ****             midi_notes.push_back(midi_notes[0] + 4);
 8224              		.loc 27 38 9 is_stmt 1 view .LVU1581
  39:utils.h       ****             midi_notes.push_back(midi_notes[0] + 8);
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 525


 8225              		.loc 27 39 13 view .LVU1582
 8226              	.LVL315:
 8227              	.LBB5531:
 8228              	.LBI5531:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8229              		.loc 14 1043 7 view .LVU1583
 8230              	.LBE5531:
 8231              	.LBB5532:
 8232              	.LBB5533:
 8233              	.LBB5534:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8234              		.loc 16 112 20 is_stmt 0 view .LVU1584
 8235 016c D4E90003 		ldrd	r0, r3, [r4]
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8236              		.loc 16 112 47 view .LVU1585
 8237 0170 A168     		ldr	r1, [r4, #8]
 8238              	.LBE5534:
 8239              	.LBE5533:
 8240              	.LBE5532:
  39:utils.h       ****             midi_notes.push_back(midi_notes[0] + 8);
 8241              		.loc 27 39 48 view .LVU1586
 8242 0172 0268     		ldr	r2, [r0]
 8243              	.LBB5550:
 8244              	.LBB5546:
 8245              	.LBB5542:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8246              		.loc 16 112 2 view .LVU1587
 8247 0174 8B42     		cmp	r3, r1
 8248              	.LBE5542:
 8249              	.LBE5546:
 8250              	.LBE5550:
  39:utils.h       ****             midi_notes.push_back(midi_notes[0] + 8);
 8251              		.loc 27 39 48 view .LVU1588
 8252 0176 02F10402 		add	r2, r2, #4
 8253 017a 0192     		str	r2, [sp, #4]
 8254              	.LVL316:
 8255              	.LBB5551:
 8256              	.LBI5532:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 8257              		.loc 14 1203 7 is_stmt 1 view .LVU1589
 8258              	.LBB5547:
 8259              	.LBI5533:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 8260              		.loc 16 109 7 view .LVU1590
 8261              	.LBB5543:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8262              		.loc 16 112 2 is_stmt 0 view .LVU1591
 8263 017c 4BD0     		beq	.L193
 8264              	.LVL317:
 8265              	.LBB5535:
 8266              	.LBI5535:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 8267              		.loc 5 507 2 is_stmt 1 view .LVU1592
 8268              	.LBB5536:
 8269              	.LBI5536:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 8270              		.loc 6 148 2 view .LVU1593
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 526


 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 8271              		.loc 6 148 2 is_stmt 0 view .LVU1594
 8272              	.LBE5536:
 8273              	.LBE5535:
 8274              	.LBE5543:
 8275              	.LBE5547:
 8276              	.LBE5551:
 8277              		.loc 17 175 3 is_stmt 1 view .LVU1595
 8278              	.LBB5552:
 8279              	.LBB5548:
 8280              	.LBB5544:
 8281              	.LBB5539:
 8282              	.LBB5538:
 8283              	.LBB5537:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8284              		.loc 6 150 4 is_stmt 0 view .LVU1596
 8285 017e 43F8042B 		str	r2, [r3], #4
 8286              	.LVL318:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8287              		.loc 6 150 4 view .LVU1597
 8288              	.LBE5537:
 8289              	.LBE5538:
 8290              	.LBE5539:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 8291              		.loc 16 117 6 view .LVU1598
 8292 0182 6360     		str	r3, [r4, #4]
 8293              	.L194:
 8294              	.LVL319:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 8295              		.loc 16 117 6 view .LVU1599
 8296              	.LBE5544:
 8297              	.LBE5548:
 8298              	.LBE5552:
  40:utils.h       ****             break;
 8299              		.loc 27 40 13 is_stmt 1 view .LVU1600
 8300              	.LBB5553:
 8301              	.LBI5553:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8302              		.loc 14 1043 7 view .LVU1601
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8303              		.loc 14 1043 7 is_stmt 0 view .LVU1602
 8304              	.LBE5553:
  40:utils.h       ****             break;
 8305              		.loc 27 40 48 view .LVU1603
 8306 0184 0268     		ldr	r2, [r0]
 8307              	.LBB5554:
 8308              	.LBB5555:
 8309              	.LBB5556:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8310              		.loc 16 112 2 view .LVU1604
 8311 0186 9942     		cmp	r1, r3
 8312              	.LBE5556:
 8313              	.LBE5555:
 8314              	.LBE5554:
  40:utils.h       ****             break;
 8315              		.loc 27 40 48 view .LVU1605
 8316 0188 02F10802 		add	r2, r2, #8
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 527


 8317 018c 0192     		str	r2, [sp, #4]
 8318              	.LVL320:
 8319              	.LBB5561:
 8320              	.LBI5554:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 8321              		.loc 14 1203 7 is_stmt 1 view .LVU1606
 8322              	.LBB5559:
 8323              	.LBI5555:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 8324              		.loc 16 109 7 view .LVU1607
 8325              	.LBB5557:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8326              		.loc 16 112 2 is_stmt 0 view .LVU1608
 8327 018e 7FF466AF 		bne	.L233
 8328 0192 E6E7     		b	.L199
 8329              	.LVL321:
 8330              	.L184:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8331              		.loc 16 112 2 view .LVU1609
 8332              	.LBE5557:
 8333              	.LBE5559:
 8334              	.LBE5561:
  30:utils.h       ****             midi_notes.push_back(midi_notes[0] + 4);
 8335              		.loc 27 30 9 is_stmt 1 view .LVU1610
  31:utils.h       ****             midi_notes.push_back(midi_notes[0] + 7);
 8336              		.loc 27 31 13 view .LVU1611
 8337              	.LBB5562:
 8338              	.LBI5562:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8339              		.loc 14 1043 7 view .LVU1612
 8340              	.LBE5562:
 8341              	.LBB5563:
 8342              	.LBB5564:
 8343              	.LBB5565:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8344              		.loc 16 112 20 is_stmt 0 view .LVU1613
 8345 0194 D4E90003 		ldrd	r0, r3, [r4]
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8346              		.loc 16 112 47 view .LVU1614
 8347 0198 A168     		ldr	r1, [r4, #8]
 8348              	.LBE5565:
 8349              	.LBE5564:
 8350              	.LBE5563:
  31:utils.h       ****             midi_notes.push_back(midi_notes[0] + 7);
 8351              		.loc 27 31 48 view .LVU1615
 8352 019a 0268     		ldr	r2, [r0]
 8353              	.LBB5570:
 8354              	.LBB5568:
 8355              	.LBB5566:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8356              		.loc 16 112 2 view .LVU1616
 8357 019c 8B42     		cmp	r3, r1
 8358              	.LBE5566:
 8359              	.LBE5568:
 8360              	.LBE5570:
  31:utils.h       ****             midi_notes.push_back(midi_notes[0] + 7);
 8361              		.loc 27 31 48 view .LVU1617
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 528


 8362 019e 02F10402 		add	r2, r2, #4
 8363 01a2 0192     		str	r2, [sp, #4]
 8364              	.LVL322:
 8365              	.LBB5571:
 8366              	.LBI5563:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 8367              		.loc 14 1203 7 is_stmt 1 view .LVU1618
 8368              	.LBB5569:
 8369              	.LBI5564:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 8370              		.loc 16 109 7 view .LVU1619
 8371              	.LBB5567:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8372              		.loc 16 112 2 is_stmt 0 view .LVU1620
 8373 01a4 7FF451AF 		bne	.L235
 8374              	.LVL323:
 8375              	.L189:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8376              		.loc 16 112 2 view .LVU1621
 8377              	.LBE5567:
 8378              	.LBE5569:
 8379              	.LBE5571:
 8380              	.LBB5572:
 8381              	.LBB5332:
 8382              	.LBB5328:
 8383              	.LBB5323:
 8384              	.LBI5323:
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 8385              		.loc 14 829 7 is_stmt 1 view .LVU1622
 8386              	.LBB5324:
 8387              	.LBI5324:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 8388              		.loc 13 978 7 view .LVU1623
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 8389              		.loc 13 978 7 is_stmt 0 view .LVU1624
 8390              	.LBE5324:
 8391              	.LBE5323:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 8392              		.loc 16 121 21 view .LVU1625
 8393 01a8 2046     		mov	r0, r4
 8394 01aa 01AA     		add	r2, sp, #4
 8395 01ac FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_
 8396              	.LVL324:
 8397              	.LBE5328:
 8398              	.LBE5332:
 8399              	.LBE5572:
 8400              	.LBB5573:
 8401              	.LBB5343:
 8402              	.LBB5341:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8403              		.loc 16 112 47 view .LVU1626
 8404 01b0 A168     		ldr	r1, [r4, #8]
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8405              		.loc 16 112 20 view .LVU1627
 8406 01b2 D4E90003 		ldrd	r0, r3, [r4]
 8407 01b6 4BE7     		b	.L190
 8408              	.LVL325:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 529


 8409              	.L209:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8410              		.loc 16 112 20 view .LVU1628
 8411              	.LBE5341:
 8412              	.LBE5343:
 8413              	.LBE5573:
 8414              	.LBB5574:
 8415              	.LBI5574:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8416              		.loc 14 1043 7 is_stmt 1 view .LVU1629
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8417              		.loc 14 1043 7 is_stmt 0 view .LVU1630
 8418              	.LBE5574:
 8419              	.LBB5575:
 8420              	.LBB5491:
 8421              	.LBB5487:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8422              		.loc 16 112 20 view .LVU1631
 8423 01b8 D4E90031 		ldrd	r3, r1, [r4]
 8424              	.LVL326:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8425              		.loc 16 112 2 view .LVU1632
 8426 01bc A268     		ldr	r2, [r4, #8]
 8427              	.LBE5487:
 8428              	.LBE5491:
 8429              	.LBE5575:
  60:utils.h       ****             break;
 8430              		.loc 27 60 54 view .LVU1633
 8431 01be 1B68     		ldr	r3, [r3]
 8432              	.LBB5576:
 8433              	.LBB5492:
 8434              	.LBB5488:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8435              		.loc 16 112 2 view .LVU1634
 8436 01c0 9142     		cmp	r1, r2
 8437              	.LBE5488:
 8438              	.LBE5492:
 8439              	.LBE5576:
  60:utils.h       ****             break;
 8440              		.loc 27 60 54 view .LVU1635
 8441 01c2 03F10A03 		add	r3, r3, #10
 8442 01c6 0193     		str	r3, [sp, #4]
 8443              	.LVL327:
 8444              	.LBB5577:
 8445              	.LBI5478:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 8446              		.loc 14 1203 7 is_stmt 1 view .LVU1636
 8447              	.LBB5493:
 8448              	.LBI5479:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 8449              		.loc 16 109 7 view .LVU1637
 8450              	.LBB5489:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8451              		.loc 16 112 2 is_stmt 0 view .LVU1638
 8452 01c8 A2D1     		bne	.L232
 8453 01ca B0E7     		b	.L217
 8454              	.LVL328:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 530


 8455              	.L236:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8456              		.loc 16 112 2 view .LVU1639
 8457              	.LBE5489:
 8458              	.LBE5493:
 8459              	.LBE5577:
 8460              	.LBB5578:
 8461              	.LBI5364:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8462              		.loc 14 1043 7 is_stmt 1 view .LVU1640
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8463              		.loc 14 1043 7 is_stmt 0 view .LVU1641
 8464              	.LBE5578:
  64:utils.h       ****                 : midi_notes.push_back(midi_notes[0] + 10); // b7
 8465              		.loc 27 64 56 view .LVU1642
 8466 01cc 1068     		ldr	r0, [r2]
 8467              	.LBB5579:
 8468              	.LBB5580:
 8469              	.LBB5581:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8470              		.loc 16 112 47 view .LVU1643
 8471 01ce D4E90131 		ldrd	r3, r1, [r4, #4]
 8472              	.LVL329:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8473              		.loc 16 112 47 view .LVU1644
 8474              	.LBE5581:
 8475              	.LBE5580:
 8476              	.LBE5579:
  64:utils.h       ****                 : midi_notes.push_back(midi_notes[0] + 10); // b7
 8477              		.loc 27 64 56 view .LVU1645
 8478 01d2 0B30     		adds	r0, r0, #11
 8479              	.LBB5586:
 8480              	.LBB5584:
 8481              	.LBB5582:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8482              		.loc 16 112 2 view .LVU1646
 8483 01d4 8B42     		cmp	r3, r1
 8484              	.LBE5582:
 8485              	.LBE5584:
 8486              	.LBE5586:
  64:utils.h       ****                 : midi_notes.push_back(midi_notes[0] + 10); // b7
 8487              		.loc 27 64 56 view .LVU1647
 8488 01d6 0190     		str	r0, [sp, #4]
 8489              	.LVL330:
 8490              	.LBB5587:
 8491              	.LBI5579:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 8492              		.loc 14 1203 7 is_stmt 1 view .LVU1648
 8493              	.LBB5585:
 8494              	.LBI5580:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 8495              		.loc 16 109 7 view .LVU1649
 8496              	.LBB5583:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8497              		.loc 16 112 2 is_stmt 0 view .LVU1650
 8498 01d8 7FF45BAF 		bne	.L228
 8499              	.LVL331:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 531


 8500              	.L216:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8501              		.loc 16 112 2 view .LVU1651
 8502              	.LBE5583:
 8503              	.LBE5585:
 8504              	.LBE5587:
 8505              	.LBB5588:
 8506              	.LBB5384:
 8507              	.LBB5380:
 8508              	.LBB5375:
 8509              	.LBI5375:
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 8510              		.loc 14 829 7 is_stmt 1 view .LVU1652
 8511              	.LBB5376:
 8512              	.LBI5376:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 8513              		.loc 13 978 7 view .LVU1653
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 8514              		.loc 13 978 7 is_stmt 0 view .LVU1654
 8515              	.LBE5376:
 8516              	.LBE5375:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 8517              		.loc 16 121 21 view .LVU1655
 8518 01dc 01AA     		add	r2, sp, #4
 8519 01de 2046     		mov	r0, r4
 8520 01e0 FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_
 8521              	.LVL332:
 8522              	.LBE5380:
 8523              	.LBE5384:
 8524              	.LBE5588:
 8525              	.LBB5589:
 8526              	.LBB5399:
 8527              	.LBB5396:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8528              		.loc 16 112 47 view .LVU1656
 8529 01e4 A168     		ldr	r1, [r4, #8]
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8530              		.loc 16 112 20 view .LVU1657
 8531 01e6 D4E90023 		ldrd	r2, r3, [r4]
 8532 01ea 55E7     		b	.L215
 8533              	.LVL333:
 8534              	.L237:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8535              		.loc 16 112 20 view .LVU1658
 8536              	.LBE5396:
 8537              	.LBE5399:
 8538              	.LBE5589:
 8539              	.LBB5590:
 8540              	.LBI5420:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8541              		.loc 14 1043 7 is_stmt 1 view .LVU1659
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8542              		.loc 14 1043 7 is_stmt 0 view .LVU1660
 8543              	.LBE5590:
  70:utils.h       ****                 : midi_notes.push_back(midi_notes[0] + 10); // b7
 8544              		.loc 27 70 56 view .LVU1661
 8545 01ec 0268     		ldr	r2, [r0]
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 532


 8546              	.LBB5591:
 8547              	.LBB5592:
 8548              	.LBB5593:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8549              		.loc 16 112 47 view .LVU1662
 8550 01ee D4E90131 		ldrd	r3, r1, [r4, #4]
 8551              	.LVL334:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8552              		.loc 16 112 47 view .LVU1663
 8553              	.LBE5593:
 8554              	.LBE5592:
 8555              	.LBE5591:
  70:utils.h       ****                 : midi_notes.push_back(midi_notes[0] + 10); // b7
 8556              		.loc 27 70 56 view .LVU1664
 8557 01f2 0B32     		adds	r2, r2, #11
 8558              	.LBB5598:
 8559              	.LBB5596:
 8560              	.LBB5594:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8561              		.loc 16 112 2 view .LVU1665
 8562 01f4 8B42     		cmp	r3, r1
 8563              	.LBE5594:
 8564              	.LBE5596:
 8565              	.LBE5598:
  70:utils.h       ****                 : midi_notes.push_back(midi_notes[0] + 10); // b7
 8566              		.loc 27 70 56 view .LVU1666
 8567 01f6 0192     		str	r2, [sp, #4]
 8568              	.LVL335:
 8569              	.LBB5599:
 8570              	.LBI5591:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 8571              		.loc 14 1203 7 is_stmt 1 view .LVU1667
 8572              	.LBB5597:
 8573              	.LBI5592:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 8574              		.loc 16 109 7 view .LVU1668
 8575              	.LBB5595:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8576              		.loc 16 112 2 is_stmt 0 view .LVU1669
 8577 01f8 7FF466AF 		bne	.L229
 8578              	.LVL336:
 8579              	.L222:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8580              		.loc 16 112 2 view .LVU1670
 8581              	.LBE5595:
 8582              	.LBE5597:
 8583              	.LBE5599:
 8584              	.LBB5600:
 8585              	.LBB5440:
 8586              	.LBB5436:
 8587              	.LBB5431:
 8588              	.LBI5431:
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 8589              		.loc 14 829 7 is_stmt 1 view .LVU1671
 8590              	.LBB5432:
 8591              	.LBI5432:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 533


 8592              		.loc 13 978 7 view .LVU1672
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 8593              		.loc 13 978 7 is_stmt 0 view .LVU1673
 8594              	.LBE5432:
 8595              	.LBE5431:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 8596              		.loc 16 121 21 view .LVU1674
 8597 01fc 2046     		mov	r0, r4
 8598 01fe 01AA     		add	r2, sp, #4
 8599 0200 FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_
 8600              	.LVL337:
 8601              	.LBE5436:
 8602              	.LBE5440:
 8603              	.LBE5600:
 8604              	.LBB5601:
 8605              	.LBB5461:
 8606              	.LBB5457:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8607              		.loc 16 112 47 view .LVU1675
 8608 0204 A168     		ldr	r1, [r4, #8]
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8609              		.loc 16 112 20 view .LVU1676
 8610 0206 D4E90003 		ldrd	r0, r3, [r4]
 8611 020a 60E7     		b	.L221
 8612              	.LVL338:
 8613              	.L177:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8614              		.loc 16 112 20 view .LVU1677
 8615              	.LBE5457:
 8616              	.LBE5461:
 8617              	.LBE5601:
 8618              	.LBB5602:
 8619              	.LBB5312:
 8620              	.LBB5310:
 8621              	.LBB5307:
 8622              	.LBI5307:
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 8623              		.loc 14 829 7 is_stmt 1 view .LVU1678
 8624              	.LBB5308:
 8625              	.LBI5308:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 8626              		.loc 13 978 7 view .LVU1679
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 8627              		.loc 13 978 7 is_stmt 0 view .LVU1680
 8628              	.LBE5308:
 8629              	.LBE5307:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 8630              		.loc 16 121 21 view .LVU1681
 8631 020c 01AA     		add	r2, sp, #4
 8632              	.LVL339:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 8633              		.loc 16 121 21 view .LVU1682
 8634 020e 2046     		mov	r0, r4
 8635 0210 FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_
 8636              	.LVL340:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 8637              		.loc 16 121 21 view .LVU1683
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 534


 8638 0214 08E7     		b	.L178
 8639              	.LVL341:
 8640              	.L193:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 8641              		.loc 16 121 21 view .LVU1684
 8642              	.LBE5310:
 8643              	.LBE5312:
 8644              	.LBE5602:
 8645              	.LBB5603:
 8646              	.LBB5549:
 8647              	.LBB5545:
 8648              	.LBB5540:
 8649              	.LBI5540:
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 8650              		.loc 14 829 7 is_stmt 1 view .LVU1685
 8651              	.LBB5541:
 8652              	.LBI5541:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 8653              		.loc 13 978 7 view .LVU1686
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 8654              		.loc 13 978 7 is_stmt 0 view .LVU1687
 8655              	.LBE5541:
 8656              	.LBE5540:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 8657              		.loc 16 121 21 view .LVU1688
 8658 0216 2046     		mov	r0, r4
 8659 0218 01AA     		add	r2, sp, #4
 8660              	.LVL342:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 8661              		.loc 16 121 21 view .LVU1689
 8662 021a FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_
 8663              	.LVL343:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 8664              		.loc 16 121 21 view .LVU1690
 8665              	.LBE5545:
 8666              	.LBE5549:
 8667              	.LBE5603:
 8668              	.LBB5604:
 8669              	.LBB5560:
 8670              	.LBB5558:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8671              		.loc 16 112 47 view .LVU1691
 8672 021e A168     		ldr	r1, [r4, #8]
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8673              		.loc 16 112 20 view .LVU1692
 8674 0220 D4E90003 		ldrd	r0, r3, [r4]
 8675 0224 AEE7     		b	.L194
 8676              	.LVL344:
 8677              	.L197:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8678              		.loc 16 112 20 view .LVU1693
 8679              	.LBE5558:
 8680              	.LBE5560:
 8681              	.LBE5604:
 8682              	.LBB5605:
 8683              	.LBB5524:
 8684              	.LBB5520:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 535


 8685              	.LBB5515:
 8686              	.LBI5515:
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 8687              		.loc 14 829 7 is_stmt 1 view .LVU1694
 8688              	.LBB5516:
 8689              	.LBI5516:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 8690              		.loc 13 978 7 view .LVU1695
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 8691              		.loc 13 978 7 is_stmt 0 view .LVU1696
 8692              	.LBE5516:
 8693              	.LBE5515:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 8694              		.loc 16 121 21 view .LVU1697
 8695 0226 2046     		mov	r0, r4
 8696 0228 01AA     		add	r2, sp, #4
 8697              	.LVL345:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 8698              		.loc 16 121 21 view .LVU1698
 8699 022a FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_
 8700              	.LVL346:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 8701              		.loc 16 121 21 view .LVU1699
 8702              	.LBE5520:
 8703              	.LBE5524:
 8704              	.LBE5605:
 8705              	.LBB5606:
 8706              	.LBB5362:
 8707              	.LBB5358:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8708              		.loc 16 112 47 view .LVU1700
 8709 022e A168     		ldr	r1, [r4, #8]
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8710              		.loc 16 112 20 view .LVU1701
 8711 0230 D4E90003 		ldrd	r0, r3, [r4]
 8712 0234 8EE7     		b	.L198
 8713              	.LVL347:
 8714              	.L223:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8715              		.loc 16 112 20 view .LVU1702
 8716              	.LBE5358:
 8717              	.LBE5362:
 8718              	.LBE5606:
 8719              	.LBB5607:
 8720              	.LBB5462:
 8721              	.LBB5458:
 8722              	.LBB5453:
 8723              	.LBI5453:
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 8724              		.loc 14 829 7 is_stmt 1 view .LVU1703
 8725              	.LBB5454:
 8726              	.LBI5454:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 8727              		.loc 13 978 7 view .LVU1704
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 8728              		.loc 13 978 7 is_stmt 0 view .LVU1705
 8729              	.LBE5454:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 536


 8730              	.LBE5453:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 8731              		.loc 16 121 21 view .LVU1706
 8732 0236 2046     		mov	r0, r4
 8733 0238 01AA     		add	r2, sp, #4
 8734              	.LVL348:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 8735              		.loc 16 121 21 view .LVU1707
 8736 023a FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_
 8737              	.LVL349:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 8738              		.loc 16 121 21 view .LVU1708
 8739              	.LBE5458:
 8740              	.LBE5462:
 8741              	.LBE5607:
 8742              	.LBB5608:
 8743              	.LBB5418:
 8744              	.LBB5414:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8745              		.loc 16 112 47 view .LVU1709
 8746 023e A168     		ldr	r1, [r4, #8]
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8747              		.loc 16 112 20 view .LVU1710
 8748 0240 D4E90003 		ldrd	r0, r3, [r4]
 8749 0244 4DE7     		b	.L224
 8750              	.LBE5414:
 8751              	.LBE5418:
 8752              	.LBE5608:
 8753              		.cfi_endproc
 8754              	.LFE4202:
 8756 0246 00BF     		.section	.text._ZN10ChordSynth9set_chordE5Chord,"ax",%progbits
 8757              		.align	1
 8758              		.p2align 2,,3
 8759              		.global	_ZN10ChordSynth9set_chordE5Chord
 8760              		.syntax unified
 8761              		.thumb
 8762              		.thumb_func
 8763              		.fpu fpv5-d16
 8765              	_ZN10ChordSynth9set_chordE5Chord:
 8766              	.LVL350:
 8767              	.LFB4290:
  18:ChordSynth.cpp **** 	std::vector<int> midi_notes = chord_to_midi(chord);
 8768              		.loc 9 18 41 is_stmt 1 view -0
 8769              		.cfi_startproc
 8770              		@ args = 0, pretend = 0, frame = 144
 8771              		@ frame_needed = 0, uses_anonymous_args = 0
  19:ChordSynth.cpp **** 	chord_oscs.clear();
 8772              		.loc 9 19 2 view .LVU1712
  18:ChordSynth.cpp **** 	std::vector<int> midi_notes = chord_to_midi(chord);
 8773              		.loc 9 18 41 is_stmt 0 view .LVU1713
 8774 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 8775              		.cfi_def_cfa_offset 32
 8776              		.cfi_offset 4, -32
 8777              		.cfi_offset 5, -28
 8778              		.cfi_offset 6, -24
 8779              		.cfi_offset 7, -20
 8780              		.cfi_offset 8, -16
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 537


 8781              		.cfi_offset 9, -12
 8782              		.cfi_offset 10, -8
 8783              		.cfi_offset 14, -4
 8784              	.LBB5844:
 8785              	.LBB5845:
 8786              	.LBB5846:
 8787              	.LBB5847:
 8788              	.LBB5848:
 8789              	.LBB5849:
 8790              	.LBB5850:
 8791              	.LBB5851:
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8792              		.loc 4 908 16 view .LVU1714
 8793 0004 D1E90053 		ldrd	r5, r3, [r1]
 8794              	.LBE5851:
 8795              	.LBE5850:
 8796              	.LBE5849:
 8797              	.LBE5848:
 8798              	.LBE5847:
 8799              	.LBE5846:
 8800              	.LBE5845:
 8801              	.LBE5844:
  18:ChordSynth.cpp **** 	std::vector<int> midi_notes = chord_to_midi(chord);
 8802              		.loc 9 18 41 view .LVU1715
 8803 0008 2DED028B 		vpush.64	{d8}
 8804              		.cfi_def_cfa_offset 40
 8805              		.cfi_offset 80, -40
 8806              		.cfi_offset 81, -36
 8807 000c A4B0     		sub	sp, sp, #144
 8808              		.cfi_def_cfa_offset 184
 8809              	.LVL351:
 8810              	.LBB5995:
 8811              	.LBB5987:
 8812              	.LBB5979:
 8813              	.LBB5972:
 8814              	.LBB5965:
 8815              	.LBB5958:
 8816              	.LBB5852:
 8817              	.LBB5853:
 8818              	.LBB5854:
 8819              	.LBB5855:
 8820              	.LBB5856:
 8821              	.LBB5857:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 8822              		.loc 24 211 42 view .LVU1716
 8823 000e DD42     		cmn	r5, r3
 8824              	.LBE5857:
 8825              	.LBE5856:
 8826              	.LBE5855:
 8827              	.LBE5854:
 8828              	.LBE5853:
 8829              	.LBE5852:
 8830              	.LBE5958:
 8831              	.LBE5965:
 8832              	.LBE5972:
 8833              	.LBE5979:
 8834              	.LBE5987:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 538


 8835              	.LBE5995:
  18:ChordSynth.cpp **** 	std::vector<int> midi_notes = chord_to_midi(chord);
 8836              		.loc 9 18 41 view .LVU1717
 8837 0010 0F46     		mov	r7, r1
 8838              	.LVL352:
 8839              	.LBB5996:
 8840              	.LBI5844:
 8841              		.file 29 "InstrumentState.h"
   1:InstrumentState.h **** #pragma once
   2:InstrumentState.h **** #include <string>
   3:InstrumentState.h **** 
   4:InstrumentState.h **** enum ChordQuality {
   5:InstrumentState.h **** 	MAJOR, MINOR,
   6:InstrumentState.h **** 	AUGMENTED, DIMINISHED,
   7:InstrumentState.h **** };
   8:InstrumentState.h **** 
   9:InstrumentState.h **** enum ChordExtension {
  10:InstrumentState.h **** 	TRIAD, SIXTH, SEVENTH,
  11:InstrumentState.h **** 	NINTH, ELEVENTH,
  12:InstrumentState.h **** };
  13:InstrumentState.h **** 
  14:InstrumentState.h **** enum Beat {
  15:InstrumentState.h **** 	ROCK1, ROCK2, SLOW_ROCK, COUNTRY, SWING,
  16:InstrumentState.h **** 	DISCO, HIPHOP, FUNK, BOSSA, WALTZ,
  17:InstrumentState.h **** };
  18:InstrumentState.h **** 
  19:InstrumentState.h **** enum Voice {
  20:InstrumentState.h **** 	HARP,
  21:InstrumentState.h **** 	ORGAN,
  22:InstrumentState.h **** 	WURLI,
  23:InstrumentState.h **** };
  24:InstrumentState.h **** 
  25:InstrumentState.h **** struct Chord {
 8842              		.loc 29 25 8 is_stmt 1 view .LVU1718
 8843              	.LBB5988:
 8844              	.LBB5980:
 8845              	.LBB5973:
 8846              	.LBI5847:
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(),
 8847              		.loc 4 448 7 view .LVU1719
 8848              	.LBB5966:
 8849              	.LBB5959:
 8850              	.LBB5935:
 8851              	.LBI5935:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8852              		.loc 4 190 7 view .LVU1720
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8853              		.loc 4 190 7 is_stmt 0 view .LVU1721
 8854              	.LBE5935:
 8855              	.LBB5936:
 8856              	.LBI5936:
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 8857              		.loc 4 290 7 is_stmt 1 view .LVU1722
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 8858              		.loc 4 290 7 is_stmt 0 view .LVU1723
 8859              	.LBE5936:
 8860              	.LBB5937:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 539


 8861              	.LBI5937:
 8862              		.loc 25 97 29 is_stmt 1 view .LVU1724
 8863              	.LBB5938:
 8864              	.LBI5938:
 8865              		.loc 5 558 7 view .LVU1725
 8866              	.LBB5939:
 8867              	.LBI5939:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 8868              		.loc 8 147 7 view .LVU1726
 8869              	.LBB5940:
 8870              	.LBI5940:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8871              		.loc 6 82 7 view .LVU1727
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8872              		.loc 6 82 7 is_stmt 0 view .LVU1728
 8873              	.LBE5940:
 8874              	.LBE5939:
 8875              	.LBE5938:
 8876              	.LBE5937:
 8877              	.LBB5941:
 8878              	.LBI5941:
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 8879              		.loc 4 159 2 is_stmt 1 view .LVU1729
 8880              	.LBB5942:
 8881              	.LBB5943:
 8882              	.LBB5944:
 8883              	.LBI5944:
 8884              		.loc 26 101 5 view .LVU1730
 8885              		.loc 26 101 5 is_stmt 0 view .LVU1731
 8886              	.LBE5944:
 8887              	.LBB5945:
 8888              	.LBI5945:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 8889              		.loc 8 147 7 is_stmt 1 view .LVU1732
 8890              	.LBB5946:
 8891              	.LBI5946:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8892              		.loc 6 82 7 view .LVU1733
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8893              		.loc 6 82 7 is_stmt 0 view .LVU1734
 8894              	.LBE5946:
 8895              	.LBE5945:
 8896              	.LBE5943:
 8897              	.LBE5942:
 8898              	.LBE5941:
 8899              	.LBE5959:
 8900              	.LBE5966:
 8901              	.LBE5973:
 8902              	.LBE5980:
 8903              	.LBE5988:
 8904              	.LBE5996:
  18:ChordSynth.cpp **** 	std::vector<int> midi_notes = chord_to_midi(chord);
 8905              		.loc 9 18 41 view .LVU1735
 8906 0012 0446     		mov	r4, r0
 8907              	.LBB5997:
 8908              	.LBB5989:
 8909              	.LBB5981:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 540


 8910              	.LBB5974:
 8911              	.LBB5967:
 8912              	.LBB5960:
 8913              	.LBB5949:
 8914              	.LBB5948:
 8915              	.LBB5947:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 8916              		.loc 4 160 46 view .LVU1736
 8917 0014 0DF13808 		add	r8, sp, #56
 8918              	.LVL353:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 8919              		.loc 4 160 46 view .LVU1737
 8920 0018 CDF83080 		str	r8, [sp, #48]
 8921              	.LVL354:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 8922              		.loc 4 160 46 view .LVU1738
 8923              	.LBE5947:
 8924              	.LBE5948:
 8925              	.LBE5949:
 8926              	.LBB5950:
 8927              	.LBI5950:
 8928              		.loc 8 162 7 is_stmt 1 view .LVU1739
 8929              	.LBB5951:
 8930              	.LBI5951:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8931              		.loc 6 89 7 view .LVU1740
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8932              		.loc 6 89 7 is_stmt 0 view .LVU1741
 8933              	.LBE5951:
 8934              	.LBE5950:
 8935              	.LBB5952:
 8936              	.LBI5952:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 8937              		.loc 4 186 7 is_stmt 1 view .LVU1742
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 8938              		.loc 4 186 7 is_stmt 0 view .LVU1743
 8939              	.LBE5952:
 8940              	.LBB5953:
 8941              	.LBI5852:
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 8942              		.loc 4 263 9 is_stmt 1 view .LVU1744
 8943              	.LBB5930:
 8944              	.LBB5925:
 8945              	.LBI5854:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 8946              		.loc 4 243 9 view .LVU1745
 8947              	.LBB5920:
 8948              	.LBB5915:
 8949              	.LBI5856:
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 8950              		.loc 24 206 7 view .LVU1746
 8951              	.LBB5910:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 8952              		.loc 24 211 42 is_stmt 0 view .LVU1747
 8953 001c 02D0     		beq	.L239
 8954 001e 002D     		cmp	r5, #0
 8955 0020 00F0CC81 		beq	.L247
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 541


 8956              	.L239:
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 8957              		.loc 24 217 2 view .LVU1748
 8958 0024 0F2B     		cmp	r3, #15
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 8959              		.loc 24 215 12 view .LVU1749
 8960 0026 0593     		str	r3, [sp, #20]
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 8961              		.loc 24 217 2 view .LVU1750
 8962 0028 00F2AA81 		bhi	.L297
 8963              	.LVL355:
 8964              	.LBB5858:
 8965              	.LBI5858:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 8966              		.loc 4 186 7 is_stmt 1 view .LVU1751
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 8967              		.loc 4 186 7 is_stmt 0 view .LVU1752
 8968              	.LBE5858:
 8969              	.LBB5860:
 8970              	.LBI5860:
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 8971              		.loc 4 392 7 is_stmt 1 view .LVU1753
 8972              	.LBB5861:
 8973              	.LBI5861:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8974              		.loc 4 346 7 view .LVU1754
 8975              	.LBB5862:
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 8976              		.loc 4 348 2 is_stmt 0 view .LVU1755
 8977 002c 012B     		cmp	r3, #1
 8978 002e 40F07581 		bne	.L242
 8979              	.LVL356:
 8980              	.LBB5863:
 8981              	.LBI5863:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 8982              		.loc 20 321 7 is_stmt 1 view .LVU1756
 8983              	.LBB5864:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 8984              		.loc 20 322 9 view .LVU1757
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 8985              		.loc 20 322 14 is_stmt 0 view .LVU1758
 8986 0032 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 8987              		.loc 20 322 22 view .LVU1759
 8988 0034 4146     		mov	r1, r8
 8989              	.LVL357:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 8990              		.loc 20 322 22 view .LVU1760
 8991 0036 0CAE     		add	r6, sp, #48
 8992              	.LVL358:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 8993              		.loc 20 322 14 view .LVU1761
 8994 0038 8DF83820 		strb	r2, [sp, #56]
 8995              	.LVL359:
 8996              	.L243:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 8997              		.loc 20 322 14 view .LVU1762
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 542


 8998              	.LBE5864:
 8999              	.LBE5863:
 9000              	.LBE5862:
 9001              	.LBE5861:
 9002              	.LBE5860:
 9003              	.LBB5880:
 9004              	.LBI5880:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9005              		.loc 4 214 7 is_stmt 1 view .LVU1763
 9006              	.LBB5881:
 9007              	.LBB5882:
 9008              	.LBI5882:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 9009              		.loc 4 182 7 view .LVU1764
 9010              	.LBE5882:
 9011              	.LBB5884:
 9012              	.LBB5885:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9013              		.loc 20 322 14 is_stmt 0 view .LVU1765
 9014 003c 0022     		movs	r2, #0
 9015              	.LBE5885:
 9016              	.LBE5884:
 9017              	.LBB5888:
 9018              	.LBB5883:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9019              		.loc 4 183 26 view .LVU1766
 9020 003e 0D93     		str	r3, [sp, #52]
 9021              	.LVL360:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9022              		.loc 4 183 26 view .LVU1767
 9023              	.LBE5883:
 9024              	.LBE5888:
 9025              	.LBB5889:
 9026              	.LBI5889:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9027              		.loc 4 186 7 is_stmt 1 view .LVU1768
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9028              		.loc 4 186 7 is_stmt 0 view .LVU1769
 9029              	.LBE5889:
 9030              	.LBB5891:
 9031              	.LBI5884:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 9032              		.loc 20 321 7 is_stmt 1 view .LVU1770
 9033              	.LBB5886:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9034              		.loc 20 322 9 view .LVU1771
 9035              	.LBE5886:
 9036              	.LBE5891:
 9037              	.LBE5881:
 9038              	.LBE5880:
 9039              	.LBE5910:
 9040              	.LBE5915:
 9041              	.LBE5920:
 9042              	.LBE5925:
 9043              	.LBE5930:
 9044              	.LBE5953:
 9045              	.LBE5960:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 543


 9046              	.LBE5967:
 9047              	.LBE5974:
 9048              	.LBE5981:
 9049              	.LBE5989:
 9050              	.LBE5997:
  19:ChordSynth.cpp **** 	chord_oscs.clear();
 9051              		.loc 9 19 51 is_stmt 0 view .LVU1772
 9052 0040 02A8     		add	r0, sp, #8
 9053              	.LBB5998:
 9054              	.LBB5990:
 9055              	.LBB5982:
 9056              	.LBB5975:
 9057              	.LBB5968:
 9058              	.LBB5961:
 9059              	.LBB5954:
 9060              	.LBB5931:
 9061              	.LBB5926:
 9062              	.LBB5921:
 9063              	.LBB5916:
 9064              	.LBB5911:
 9065              	.LBB5896:
 9066              	.LBB5894:
 9067              	.LBB5892:
 9068              	.LBB5887:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9069              		.loc 20 322 14 view .LVU1773
 9070 0042 CA54     		strb	r2, [r1, r3]
 9071              	.LVL361:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9072              		.loc 20 322 14 view .LVU1774
 9073              	.LBE5887:
 9074              	.LBE5892:
 9075              	.LBE5894:
 9076              	.LBE5896:
 9077              	.LBE5911:
 9078              	.LBE5916:
 9079              	.LBE5921:
 9080              	.LBE5926:
 9081              	.LBE5931:
 9082              	.LBE5954:
 9083              	.LBE5961:
 9084              	.LBE5968:
 9085              	.LBE5975:
 9086              	.LBE5982:
 9087              	.LBE5990:
 9088              	.LBE5998:
  19:ChordSynth.cpp **** 	chord_oscs.clear();
 9089              		.loc 9 19 51 view .LVU1775
 9090 0044 3146     		mov	r1, r6
 9091              	.LBB5999:
 9092              	.LBB5991:
 9093              	.LBB5983:
 9094              		.loc 29 25 8 view .LVU1776
 9095 0046 3B8B     		ldrh	r3, [r7, #24]
 9096 0048 ADF84830 		strh	r3, [sp, #72]	@ movhi
 9097              	.LVL362:
 9098              		.loc 29 25 8 view .LVU1777
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 544


 9099              	.LBE5983:
 9100              	.LBE5991:
 9101              	.LBE5999:
  19:ChordSynth.cpp **** 	chord_oscs.clear();
 9102              		.loc 9 19 51 view .LVU1778
 9103 004c FFF7FEFF 		bl	_Z13chord_to_midi5Chord
 9104              	.LVL363:
 9105              	.LBB6000:
 9106              	.LBI6000:
 9107              		.loc 29 25 8 is_stmt 1 view .LVU1779
 9108              	.LBB6001:
 9109              	.LBI6001:
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 9110              		.loc 4 657 7 view .LVU1780
 9111              	.LBB6002:
 9112              	.LBI6002:
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9113              		.loc 4 229 7 view .LVU1781
 9114              	.LBB6003:
 9115              	.LBB6004:
 9116              	.LBI6004:
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 9117              		.loc 4 221 7 view .LVU1782
 9118              	.LBB6005:
 9119              	.LBI6005:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9120              		.loc 4 186 7 view .LVU1783
 9121              	.LBB6006:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9122              		.loc 4 187 28 is_stmt 0 view .LVU1784
 9123 0050 0C98     		ldr	r0, [sp, #48]
 9124              	.LVL364:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9125              		.loc 4 187 28 view .LVU1785
 9126              	.LBE6006:
 9127              	.LBE6005:
 9128              	.LBB6007:
 9129              	.LBI6007:
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9130              		.loc 4 200 7 is_stmt 1 view .LVU1786
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9131              		.loc 4 200 7 is_stmt 0 view .LVU1787
 9132              	.LBE6007:
 9133              	.LBE6004:
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 9134              		.loc 4 231 2 view .LVU1788
 9135 0052 4045     		cmp	r0, r8
 9136 0054 03D0     		beq	.L244
 9137              	.LVL365:
 9138              	.LBB6008:
 9139              	.LBI6008:
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 9140              		.loc 4 236 7 is_stmt 1 view .LVU1789
 9141              	.LBB6009:
 9142              	.LBB6010:
 9143              	.LBI6010:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 545


 9144              		.loc 5 491 7 view .LVU1790
 9145              	.LBB6011:
 9146              	.LBI6011:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 9147              		.loc 6 120 7 view .LVU1791
 9148              	.LBE6011:
 9149              	.LBE6010:
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9150              		.loc 4 237 34 is_stmt 0 view .LVU1792
 9151 0056 0E99     		ldr	r1, [sp, #56]
 9152              	.LBB6014:
 9153              	.LBB6013:
 9154              	.LBB6012:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 9155              		.loc 6 133 19 view .LVU1793
 9156 0058 0131     		adds	r1, r1, #1
 9157              	.LVL366:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 9158              		.loc 6 133 19 view .LVU1794
 9159 005a FFF7FEFF 		bl	_ZdlPvj
 9160              	.LVL367:
 9161              	.L244:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 9162              		.loc 6 133 19 view .LVU1795
 9163              	.LBE6012:
 9164              	.LBE6013:
 9165              	.LBE6014:
 9166              	.LBE6009:
 9167              	.LBE6008:
 9168              	.LBE6003:
 9169              	.LBE6002:
 9170              	.LBB6015:
 9171              	.LBI6015:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9172              		.loc 4 150 14 is_stmt 1 view .LVU1796
 9173              	.LBB6016:
 9174              	.LBI6016:
 9175              		.loc 8 162 7 view .LVU1797
 9176              	.LBB6017:
 9177              	.LBI6017:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9178              		.loc 6 89 7 view .LVU1798
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9179              		.loc 6 89 7 is_stmt 0 view .LVU1799
 9180              	.LBE6017:
 9181              	.LBE6016:
 9182              	.LBE6015:
 9183              	.LBE6001:
 9184              	.LBE6000:
  20:ChordSynth.cpp **** 	for (int i = 0; i < midi_notes.size(); i++) {
 9185              		.loc 9 20 2 is_stmt 1 view .LVU1800
  20:ChordSynth.cpp **** 	for (int i = 0; i < midi_notes.size(); i++) {
 9186              		.loc 9 20 18 is_stmt 0 view .LVU1801
 9187 005e 04F19408 		add	r8, r4, #148
 9188              	.LVL368:
 9189              	.LBB6018:
 9190              	.LBI6018:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 546


1498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_erase_at_end(this->_M_impl._M_start); }
 9191              		.loc 14 1498 7 is_stmt 1 view .LVU1802
 9192              	.LBB6019:
 9193              	.LBB6020:
 9194              	.LBB6021:
1760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const size_type __len = size() + (std::max)(size(), __n);
1762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (__len < size() || __len > max_size()) ? max_size() : __len;
1763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by constructors to check initial size.
1766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static size_type
1767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_check_init_len(size_type __n, const allocator_type& __a)
1768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__n > _S_max_size(_Tp_alloc_type(__a)))
1770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(
1771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __N("cannot create std::vector larger than max_size()"));
1772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return __n;
1773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static size_type
1776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
1777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// std::distance(begin(), end()) cannot be greater than PTRDIFF_MAX,
1779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// and realistically we can't store more than PTRDIFF_MAX/sizeof(T)
1780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// (even if std::allocator_traits::max_size says we can).
1781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const size_t __diffmax
1782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  = __gnu_cxx::__numeric_traits<ptrdiff_t>::__max / sizeof(_Tp);
1783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const size_t __allocmax = _Alloc_traits::max_size(__a);
1784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (std::min)(__diffmax, __allocmax);
1785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Internal erase functions follow.
1788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by erase(q1,q2), clear(), resize(), _M_fill_assign,
1790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _M_assign_aux.
1791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
1793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (size_type __n = this->_M_impl._M_finish - __pos)
 9195              		.loc 14 1794 2 is_stmt 0 view .LVU1803
 9196 0062 D4E92532 		ldrd	r3, r2, [r4, #148]
 9197              	.LVL369:
 9198              		.loc 14 1794 2 view .LVU1804
 9199              	.LBE6021:
 9200              	.LBI6020:
1792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 9201              		.loc 14 1792 7 is_stmt 1 view .LVU1805
 9202              	.LBB6026:
 9203              		.loc 14 1794 2 is_stmt 0 view .LVU1806
 9204 0066 9A42     		cmp	r2, r3
 9205              	.LVL370:
 9206              	.LBB6022:
 9207              	.LBI6022:
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __rhs; }
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     };
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 547


 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus < 201703L
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __do_alloc_on_copy(_Alloc& __one, const _Alloc& __two, true_type)
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { __one = __two; }
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __do_alloc_on_copy(_Alloc&, const _Alloc&, false_type)
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { }
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _GLIBCXX14_CONSTEXPR inline void
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __alloc_on_copy(_Alloc& __one, const _Alloc& __two)
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef typename __traits::propagate_on_container_copy_assignment __pocca;
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201703L
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       if constexpr (__pocca::value)
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	__one = __two;
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __do_alloc_on_copy(__one, __two, __pocca());
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     constexpr _Alloc
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __alloc_on_copy(const _Alloc& __a)
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       return __traits::select_on_container_copy_construction(__a);
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus < 201703L
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void __do_alloc_on_move(_Alloc& __one, _Alloc& __two, true_type)
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { __one = std::move(__two); }
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void __do_alloc_on_move(_Alloc&, _Alloc&, false_type)
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { }
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _GLIBCXX14_CONSTEXPR inline void
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __alloc_on_move(_Alloc& __one, _Alloc& __two)
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef typename __traits::propagate_on_container_move_assignment __pocma;
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201703L
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       if constexpr (__pocma::value)
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	__one = std::move(__two);
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __do_alloc_on_move(__one, __two, __pocma());
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 548


 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus < 201703L
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void __do_alloc_on_swap(_Alloc& __one, _Alloc& __two, true_type)
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using std::swap;
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       swap(__one, __two);
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void __do_alloc_on_swap(_Alloc&, _Alloc&, false_type)
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { }
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _GLIBCXX14_CONSTEXPR inline void
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __alloc_on_swap(_Alloc& __one, _Alloc& __two)
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef typename __traits::propagate_on_container_swap __pocs;
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201703L
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       if constexpr (__pocs::value)
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using std::swap;
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  swap(__one, __two);
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __do_alloc_on_swap(__one, __two, __pocs());
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc, typename _Tp,
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	   typename _ValueT = __remove_cvref_t<typename _Alloc::value_type>,
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	   typename = void>
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_alloc_insertable_impl
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : false_type
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc, typename _Tp, typename _ValueT>
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_alloc_insertable_impl<_Alloc, _Tp, _ValueT,
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __void_t<decltype(allocator_traits<_Alloc>::construct(
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		   std::declval<_Alloc&>(), std::declval<_ValueT*>(),
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		   std::declval<_Tp>()))>>
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : true_type
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // true if _Alloc::value_type is CopyInsertable into containers using _Alloc
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // (might be wrong if _Alloc::construct exists but is not constrained,
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // i.e. actually trying to use it would still be invalid. Use with caution.)
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_copy_insertable
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : __is_alloc_insertable_impl<_Alloc,
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 				 typename _Alloc::value_type const&>::type
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // std::allocator<_Tp> just requires CopyConstructible
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Tp>
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 549


 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_copy_insertable<allocator<_Tp>>
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : is_copy_constructible<_Tp>
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // true if _Alloc::value_type is MoveInsertable into containers using _Alloc
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // (might be wrong if _Alloc::construct exists but is not constrained,
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // i.e. actually trying to use it would still be invalid. Use with caution.)
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_move_insertable
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : __is_alloc_insertable_impl<_Alloc, typename _Alloc::value_type>::type
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // std::allocator<_Tp> just requires MoveConstructible
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Tp>
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_move_insertable<allocator<_Tp>>
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : is_move_constructible<_Tp>
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // Trait to detect Allocator-like types.
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc, typename = void>
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_allocator : false_type { };
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_allocator<_Alloc,
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __void_t<typename _Alloc::value_type,
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	       decltype(std::declval<_Alloc&>().allocate(size_t{}))>>
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : true_type { };
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     using _RequireAllocator
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       = typename enable_if<__is_allocator<_Alloc>::value, _Alloc>::type;
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     using _RequireNotAllocator
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       = typename enable_if<!__is_allocator<_Alloc>::value, _Alloc>::type;
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif // C++11
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   /**
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * Destroy a range of objects using the supplied allocator.  For
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * non-default allocators we do not optimize away invocation of
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * destroy() even if _Tp has a trivial destructor.
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    */
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _ForwardIterator, typename _Allocator>
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     void
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	     _Allocator& __alloc)
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       for (; __first != __last; ++__first)
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus < 201103L
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	__alloc.destroy(std::__addressof(*__first));
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	allocator_traits<_Allocator>::destroy(__alloc,
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 					      std::__addressof(*__first));
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 550


 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _ForwardIterator, typename _Tp>
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 9208              		.loc 5 735 5 is_stmt 1 view .LVU1807
 9209              	.LBB6023:
 9210              	.LBI6023:
 9211              		.file 30 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_constr
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // nonstandard construct and destroy functions -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * Copyright (c) 1996,1997
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * representations about the suitability of this software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 551


  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** /** @file bits/stl_construct.h
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #ifndef _STL_CONSTRUCT_H
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #define _STL_CONSTRUCT_H 1
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #include <new>
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #include <bits/move.h>
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #include <bits/stl_iterator_base_types.h> // for iterator_traits
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #include <bits/stl_iterator_base_funcs.h> // for advance
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** /* This file provides the C++17 functions std::destroy_at, std::destroy, and
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * std::destroy_n, and the C++20 function std::construct_at.
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * It also provides std::_Construct, std::_Destroy,and std::_Destroy_n functions
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * which are defined in all standard modes and so can be used in C++98-14 code.
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * The _Destroy functions will dispatch to destroy_at during constant
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * evaluation, because calls to that function are intercepted by the compiler
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * to allow use in constant expressions.
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  */
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** namespace std _GLIBCXX_VISIBILITY(default)
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** {
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #if __cplusplus >= 201703L
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template <typename _Tp>
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _GLIBCXX20_CONSTEXPR inline void
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     destroy_at(_Tp* __location)
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     {
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       if constexpr (__cplusplus > 201703L && is_array_v<_Tp>)
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	{
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	  for (auto& __x : *__location)
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	    std::destroy_at(std::__addressof(__x));
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	}
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       else
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	__location->~_Tp();
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     }
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #if __cplusplus > 201703L
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<typename _Tp, typename... _Args>
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     constexpr auto
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     construct_at(_Tp* __location, _Args&&... __args)
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     noexcept(noexcept(::new((void*)0) _Tp(std::declval<_Args>()...)))
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     -> decltype(::new((void*)0) _Tp(std::declval<_Args>()...))
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #endif // C++20
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #endif// C++17
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   /**
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****    * Constructs an object in existing memory by invoking an allocated
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****    * object's constructor with an initializer.
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****    */
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #if __cplusplus >= 201103L
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<typename _Tp, typename... _Args>
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     inline void
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 552


 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _Construct(_Tp* __p, _Args&&... __args)
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     { ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...); }
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #else
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<typename _T1, typename _T2>
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     inline void
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _Construct(_T1* __p, const _T2& __value)
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     {
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       // 402. wrong new expression in [some_]allocator::construct
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       ::new(static_cast<void*>(__p)) _T1(__value);
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     }
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #endif
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<typename _T1>
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     inline void
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _Construct_novalue(_T1* __p)
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     { ::new(static_cast<void*>(__p)) _T1; }
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<typename _ForwardIterator>
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _GLIBCXX20_CONSTEXPR void
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last);
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   /**
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****    * Destroy the object pointed to by a pointer type.
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****    */
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<typename _Tp>
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _GLIBCXX14_CONSTEXPR inline void
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _Destroy(_Tp* __pointer)
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     {
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #if __cplusplus > 201703L
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       std::destroy_at(__pointer);
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #else
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       __pointer->~_Tp();
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #endif
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     }
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<bool>
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     struct _Destroy_aux
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     {
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       template<typename _ForwardIterator>
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	static _GLIBCXX20_CONSTEXPR void
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	__destroy(_ForwardIterator __first, _ForwardIterator __last)
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	{
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	  for (; __first != __last; ++__first)
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	}
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     };
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<>
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     struct _Destroy_aux<true>
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     {
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       template<typename _ForwardIterator>
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****         static void
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****         __destroy(_ForwardIterator, _ForwardIterator) { }
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     };
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   /**
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 553


 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****    * Destroy a range of objects.  If the value_type of the object has
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****    * a trivial destructor, the compiler should optimize all of this
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****    * away, otherwise the objects' destructors must be invoked.
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****    */
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<typename _ForwardIterator>
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _GLIBCXX20_CONSTEXPR inline void
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 9212              		.loc 30 171 5 view .LVU1808
 9213              	.LBB6024:
 9214              	.LBB6025:
 9215              	.LBI6025:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	{
 9216              		.loc 30 149 2 view .LVU1809
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	{
 9217              		.loc 30 149 2 is_stmt 0 view .LVU1810
 9218              	.LBE6025:
 9219              	.LBE6024:
 9220              	.LBE6023:
 9221              	.LBE6022:
 9222              	.LBE6026:
 9223              	.LBE6020:
 9224              	.LBE6019:
 9225              	.LBE6018:
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 9226              		.loc 30 151 19 is_stmt 1 view .LVU1811
 9227              	.LBB6030:
 9228              	.LBB6029:
 9229              	.LBB6028:
 9230              	.LBB6027:
1795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
1796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    std::_Destroy(__pos, this->_M_impl._M_finish,
1797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			  _M_get_Tp_allocator());
1798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_impl._M_finish = __pos;
 9231              		.loc 14 1798 30 is_stmt 0 view .LVU1812
 9232 0068 18BF     		it	ne
 9233 006a C4F89830 		strne	r3, [r4, #152]
 9234              	.LVL371:
 9235              		.loc 14 1798 30 view .LVU1813
 9236              	.LBE6027:
 9237              	.LBE6028:
 9238              	.LBE6029:
 9239              	.LBE6030:
 9240              	.LBB6031:
  21:ChordSynth.cpp **** 		daisysp::Oscillator osc;
 9241              		.loc 9 21 20 is_stmt 1 view .LVU1814
 9242              	.LBB6032:
 9243              	.LBI6032:
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 9244              		.loc 14 918 7 view .LVU1815
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 9245              		.loc 14 918 7 is_stmt 0 view .LVU1816
 9246              	.LBE6032:
  21:ChordSynth.cpp **** 		daisysp::Oscillator osc;
 9247              		.loc 9 21 20 view .LVU1817
 9248 006e DDE90232 		ldrd	r3, r2, [sp, #8]
 9249              	.LVL372:
  21:ChordSynth.cpp **** 		daisysp::Oscillator osc;
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 554


 9250              		.loc 9 21 20 view .LVU1818
 9251 0072 9A42     		cmp	r2, r3
 9252 0074 75D0     		beq	.L252
 9253 0076 0025     		movs	r5, #0
 9254 0078 14E0     		b	.L246
 9255              	.LVL373:
 9256              	.L298:
 9257              	.LBB6034:
 9258              	.LBB6035:
 9259              	.LBB6036:
 9260              	.LBB6037:
 9261              	.LBI6037:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 9262              		.loc 5 507 2 is_stmt 1 view .LVU1819
 9263              	.LBB6038:
 9264              	.LBI6038:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 9265              		.loc 6 148 2 view .LVU1820
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 9266              		.loc 6 148 2 is_stmt 0 view .LVU1821
 9267              	.LBE6038:
 9268              	.LBE6037:
 9269              	.LBE6036:
 9270              	.LBE6035:
 9271              	.LBE6034:
 9272              	.LBE6031:
 9273              		.loc 17 175 3 is_stmt 1 view .LVU1822
 9274              	.LBB6112:
 9275              	.LBB6104:
 9276              	.LBB6056:
 9277              	.LBB6050:
 9278              	.LBB6045:
 9279              	.LBB6042:
 9280              	.LBB6039:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9281              		.loc 6 150 4 is_stmt 0 view .LVU1823
 9282 007a B646     		mov	lr, r6
 9283 007c 8C46     		mov	ip, r1
 9284              	.LBE6039:
 9285              	.LBE6042:
 9286              	.LBE6045:
1194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 9287              		.loc 14 1194 6 view .LVU1824
 9288 007e 01F12C0A 		add	r10, r1, #44
 9289              	.LBE6050:
 9290              	.LBE6056:
 9291              	.LBE6104:
  21:ChordSynth.cpp **** 		daisysp::Oscillator osc;
 9292              		.loc 9 21 2 view .LVU1825
 9293 0082 0135     		adds	r5, r5, #1
 9294              	.LVL374:
 9295              	.LBB6105:
 9296              	.LBB6057:
 9297              	.LBB6051:
 9298              	.LBB6046:
 9299              	.LBB6043:
 9300              	.LBB6040:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 555


 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9301              		.loc 6 150 4 view .LVU1826
 9302 0084 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 9303              	.LVL375:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9304              		.loc 6 150 4 view .LVU1827
 9305 0088 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 9306              	.LVL376:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9307              		.loc 6 150 4 view .LVU1828
 9308 008c BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 9309              	.LBE6040:
 9310              	.LBE6043:
 9311              	.LBE6046:
 9312              	.LBE6051:
 9313              	.LBE6057:
 9314              	.LBE6105:
  21:ChordSynth.cpp **** 		daisysp::Oscillator osc;
 9315              		.loc 9 21 20 view .LVU1829
 9316 0090 4D45     		cmp	r5, r9
 9317              	.LBB6106:
 9318              	.LBB6058:
 9319              	.LBB6052:
 9320              	.LBB6047:
 9321              	.LBB6044:
 9322              	.LBB6041:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9323              		.loc 6 150 4 view .LVU1830
 9324 0092 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 9325 0096 9EE80700 		ldm	lr, {r0, r1, r2}
 9326 009a 8CE80700 		stm	ip, {r0, r1, r2}
 9327              	.LVL377:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9328              		.loc 6 150 4 view .LVU1831
 9329              	.LBE6041:
 9330              	.LBE6044:
 9331              	.LBE6047:
1194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 9332              		.loc 14 1194 6 view .LVU1832
 9333 009e C4F898A0 		str	r10, [r4, #152]
 9334              	.LVL378:
1194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 9335              		.loc 14 1194 6 view .LVU1833
 9336              	.LBE6052:
 9337              	.LBE6058:
 9338              	.LBB6059:
 9339              	.LBI6059:
  24:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
 9340              		.loc 10 24 5 is_stmt 1 view .LVU1834
  24:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
 9341              		.loc 10 24 5 is_stmt 0 view .LVU1835
 9342              	.LBE6059:
 9343              	.LBE6106:
  21:ChordSynth.cpp **** 		daisysp::Oscillator osc;
 9344              		.loc 9 21 2 is_stmt 1 view .LVU1836
  21:ChordSynth.cpp **** 		daisysp::Oscillator osc;
 9345              		.loc 9 21 20 view .LVU1837
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 556


 9346              	.LBB6107:
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 9347              		.loc 14 918 7 view .LVU1838
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 9348              		.loc 14 918 7 is_stmt 0 view .LVU1839
 9349              	.LBE6107:
  21:ChordSynth.cpp **** 		daisysp::Oscillator osc;
 9350              		.loc 9 21 20 view .LVU1840
 9351 00a2 5ED2     		bcs	.L252
 9352              	.LVL379:
 9353              	.L246:
 9354              	.LBB6108:
  22:ChordSynth.cpp **** 		osc.Init(sample_rate);
 9355              		.loc 9 22 3 is_stmt 1 view .LVU1841
 9356              	.LBB6060:
 9357              	.LBI6060:
  23:../../DaisySP//Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 9358              		.loc 10 23 5 view .LVU1842
  23:../../DaisySP//Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 9359              		.loc 10 23 5 is_stmt 0 view .LVU1843
 9360              	.LBE6060:
  23:ChordSynth.cpp **** 		osc.SetWaveform(Oscillator::WAVE_POLYBLEP_SAW);
 9361              		.loc 9 23 3 is_stmt 1 view .LVU1844
 9362              	.LBB6061:
 9363              	.LBB6062:
  53:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 9364              		.loc 10 53 27 is_stmt 0 view .LVU1845
 9365 00a4 B7EE008A 		vmov.f32	s16, #1.0e+0
 9366              	.LBE6062:
 9367              	.LBE6061:
  23:ChordSynth.cpp **** 		osc.SetWaveform(Oscillator::WAVE_POLYBLEP_SAW);
 9368              		.loc 9 23 11 view .LVU1846
 9369 00a8 D4ED007A 		vldr.32	s15, [r4]
 9370              	.LVL380:
 9371              	.LBB6067:
 9372              	.LBI6061:
  50:../../DaisySP//Source/Synthesis/oscillator.h ****     {
 9373              		.loc 10 50 10 is_stmt 1 view .LVU1847
 9374              	.LBB6063:
  52:../../DaisySP//Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 9375              		.loc 10 52 9 view .LVU1848
  55:../../DaisySP//Source/Synthesis/oscillator.h ****         pw_        = 0.5f;
 9376              		.loc 10 55 20 is_stmt 0 view .LVU1849
 9377 00ac 4FF07C53 		mov	r3, #1056964608
  57:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 9378              		.loc 10 57 20 view .LVU1850
 9379 00b0 0022     		movs	r2, #0
  54:../../DaisySP//Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 9380              		.loc 10 54 20 view .LVU1851
 9381 00b2 9FEDCA0A 		vldr.32	s0, .L307
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 9382              		.loc 10 58 34 view .LVU1852
 9383 00b6 3046     		mov	r0, r6
  53:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 9384              		.loc 10 53 27 view .LVU1853
 9385 00b8 88EE277A 		vdiv.f32	s14, s16, s15
  52:../../DaisySP//Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 557


 9386              		.loc 10 52 20 view .LVU1854
 9387 00bc CDED107A 		vstr.32	s15, [sp, #64]
  53:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 9388              		.loc 10 53 9 is_stmt 1 view .LVU1855
  55:../../DaisySP//Source/Synthesis/oscillator.h ****         pw_        = 0.5f;
 9389              		.loc 10 55 20 is_stmt 0 view .LVU1856
 9390 00c0 0D93     		str	r3, [sp, #52]	@ float
  56:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 9391              		.loc 10 56 20 view .LVU1857
 9392 00c2 0F93     		str	r3, [sp, #60]	@ float
  57:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 9393              		.loc 10 57 20 view .LVU1858
 9394 00c4 1292     		str	r2, [sp, #72]	@ float
  54:../../DaisySP//Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 9395              		.loc 10 54 20 view .LVU1859
 9396 00c6 8DED0E0A 		vstr.32	s0, [sp, #56]
  53:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 9397              		.loc 10 53 20 view .LVU1860
 9398 00ca 8DED117A 		vstr.32	s14, [sp, #68]
  54:../../DaisySP//Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 9399              		.loc 10 54 9 is_stmt 1 view .LVU1861
  55:../../DaisySP//Source/Synthesis/oscillator.h ****         pw_        = 0.5f;
 9400              		.loc 10 55 9 view .LVU1862
  56:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 9401              		.loc 10 56 9 view .LVU1863
  57:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 9402              		.loc 10 57 9 view .LVU1864
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 9403              		.loc 10 58 9 view .LVU1865
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 9404              		.loc 10 58 34 is_stmt 0 view .LVU1866
 9405 00ce FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 9406              	.LVL381:
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 9407              		.loc 10 58 34 view .LVU1867
 9408              	.LBE6063:
 9409              	.LBE6067:
  25:ChordSynth.cpp **** 		osc.SetAmp(1.f / (midi_notes.size() + 1));
 9410              		.loc 9 25 14 view .LVU1868
 9411 00d2 029A     		ldr	r2, [sp, #8]
 9412              	.LBB6068:
 9413              	.LBB6069:
  71:../../DaisySP//Source/Synthesis/oscillator.h ****     }
  72:../../DaisySP//Source/Synthesis/oscillator.h **** 
  73:../../DaisySP//Source/Synthesis/oscillator.h **** 
  74:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the amplitude of the waveform.
  75:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  76:../../DaisySP//Source/Synthesis/oscillator.h ****     inline void SetAmp(const float a) { amp_ = a; }
  77:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
  78:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  79:../../DaisySP//Source/Synthesis/oscillator.h ****     inline void SetWaveform(const uint8_t wf)
  80:../../DaisySP//Source/Synthesis/oscillator.h ****     {
  81:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_ = wf < WAVE_LAST ? wf : WAVE_SIN;
 9414              		.loc 10 81 19 view .LVU1869
 9415 00d4 0621     		movs	r1, #6
 9416              	.LBE6069:
 9417              	.LBE6068:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 558


 9418              	.LBB6072:
 9419              	.LBB6073:
 9420              		.loc 12 141 23 view .LVU1870
 9421 00d6 9FEDC27A 		vldr.32	s14, .L307+4
 9422              		.loc 12 141 16 view .LVU1871
 9423 00da F2EE080A 		vmov.f32	s1, #1.2e+1
 9424              	.LBE6073:
 9425              	.LBE6072:
  25:ChordSynth.cpp **** 		osc.SetAmp(1.f / (midi_notes.size() + 1));
 9426              		.loc 9 25 14 view .LVU1872
 9427 00de 02EB8502 		add	r2, r2, r5, lsl #2
 9428              	.LBB6077:
 9429              	.LBB6070:
 9430              		.loc 10 81 19 view .LVU1873
 9431 00e2 8DF83010 		strb	r1, [sp, #48]
 9432              	.LBE6070:
 9433              	.LBE6077:
 9434              	.LBB6078:
 9435              	.LBB6064:
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 9436              		.loc 10 58 34 view .LVU1874
 9437 00e6 F0EE406A 		vmov.f32	s13, s0
  61:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 9438              		.loc 10 61 20 view .LVU1875
 9439 00ea 40F20113 		movw	r3, #257
 9440              	.LBE6064:
 9441              	.LBE6078:
  25:ChordSynth.cpp **** 		osc.SetAmp(1.f / (midi_notes.size() + 1));
 9442              		.loc 9 25 14 view .LVU1876
 9443 00ee D2ED007A 		vldr.32	s15, [r2]	@ int
 9444              	.LBB6079:
 9445              	.LBB6074:
 9446              		.loc 12 141 16 view .LVU1877
 9447 00f2 B0EE000A 		vmov.f32	s0, #2.0e+0
 9448              	.LBE6074:
 9449              	.LBE6079:
 9450              	.LBB6080:
 9451              	.LBB6065:
  61:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 9452              		.loc 10 61 20 view .LVU1878
 9453 00f6 ADF85830 		strh	r3, [sp, #88]	@ movhi
 9454              	.LBE6065:
 9455              	.LBE6080:
  25:ChordSynth.cpp **** 		osc.SetAmp(1.f / (midi_notes.size() + 1));
 9456              		.loc 9 25 14 view .LVU1879
 9457 00fa F8EEE77A 		vcvt.f32.s32	s15, s15
 9458              	.LBB6081:
 9459              	.LBB6066:
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 9460              		.loc 10 58 20 view .LVU1880
 9461 00fe CDED136A 		vstr.32	s13, [sp, #76]
  59:../../DaisySP//Source/Synthesis/oscillator.h ****         eoc_       = true;
 9462              		.loc 10 59 9 is_stmt 1 view .LVU1881
  60:../../DaisySP//Source/Synthesis/oscillator.h ****         eor_       = true;
 9463              		.loc 10 60 9 view .LVU1882
  61:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 9464              		.loc 10 61 9 view .LVU1883
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 559


 9465              	.LVL382:
  61:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 9466              		.loc 10 61 9 is_stmt 0 view .LVU1884
 9467              	.LBE6066:
 9468              	.LBE6081:
  24:ChordSynth.cpp **** 		osc.SetFreq(mtof(midi_notes[i]));
 9469              		.loc 9 24 3 is_stmt 1 view .LVU1885
 9470              	.LBB6082:
 9471              	.LBI6068:
  79:../../DaisySP//Source/Synthesis/oscillator.h ****     {
 9472              		.loc 10 79 17 view .LVU1886
 9473              	.LBB6071:
 9474              		.loc 10 81 9 view .LVU1887
 9475              		.loc 10 81 9 is_stmt 0 view .LVU1888
 9476              	.LBE6071:
 9477              	.LBE6082:
  25:ChordSynth.cpp **** 		osc.SetAmp(1.f / (midi_notes.size() + 1));
 9478              		.loc 9 25 3 is_stmt 1 view .LVU1889
 9479              	.LBB6083:
 9480              	.LBI6083:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 9481              		.loc 14 1043 7 view .LVU1890
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 9482              		.loc 14 1043 7 is_stmt 0 view .LVU1891
 9483              	.LBE6083:
 9484              	.LBB6084:
 9485              	.LBI6072:
 139:../../DaisySP//Source/Utility/dsp.h **** {
 9486              		.loc 12 139 14 is_stmt 1 view .LVU1892
 9487              	.LBB6075:
 9488              		.loc 12 141 5 view .LVU1893
 9489              		.loc 12 141 23 is_stmt 0 view .LVU1894
 9490 0102 77EEC77A 		vsub.f32	s15, s15, s14
 9491              		.loc 12 141 16 view .LVU1895
 9492 0106 C7EEA00A 		vdiv.f32	s1, s15, s1
 9493 010a FFF7FEFF 		bl	powf
 9494              	.LVL383:
 9495              		.loc 12 141 43 view .LVU1896
 9496 010e DFEDB57A 		vldr.32	s15, .L307+8
 9497              	.LBE6075:
 9498              	.LBE6084:
 9499              	.LBB6085:
 9500              	.LBB6086:
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 9501              		.loc 10 70 34 view .LVU1897
 9502 0112 3046     		mov	r0, r6
 9503              	.LBE6086:
 9504              	.LBE6085:
 9505              	.LBB6088:
 9506              	.LBB6076:
 9507              		.loc 12 141 43 view .LVU1898
 9508 0114 20EE270A 		vmul.f32	s0, s0, s15
 9509              	.LVL384:
 9510              		.loc 12 141 43 view .LVU1899
 9511              	.LBE6076:
 9512              	.LBE6088:
 9513              	.LBB6089:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 560


 9514              	.LBI6085:
  67:../../DaisySP//Source/Synthesis/oscillator.h ****     {
 9515              		.loc 10 67 17 is_stmt 1 view .LVU1900
 9516              	.LBB6087:
  69:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 9517              		.loc 10 69 9 view .LVU1901
  69:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 9518              		.loc 10 69 20 is_stmt 0 view .LVU1902
 9519 0118 8DED0E0A 		vstr.32	s0, [sp, #56]
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 9520              		.loc 10 70 9 is_stmt 1 view .LVU1903
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 9521              		.loc 10 70 34 is_stmt 0 view .LVU1904
 9522 011c FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 9523              	.LVL385:
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 9524              		.loc 10 70 20 view .LVU1905
 9525 0120 8DED130A 		vstr.32	s0, [sp, #76]
 9526              	.LVL386:
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 9527              		.loc 10 70 20 view .LVU1906
 9528              	.LBE6087:
 9529              	.LBE6089:
  26:ChordSynth.cpp **** 
 9530              		.loc 9 26 3 is_stmt 1 view .LVU1907
 9531              	.LBB6090:
 9532              	.LBI6090:
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 9533              		.loc 14 918 7 view .LVU1908
 9534              	.LBB6091:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 9535              		.loc 14 919 50 is_stmt 0 view .LVU1909
 9536 0124 DDE90203 		ldrd	r0, r3, [sp, #8]
 9537              	.LBE6091:
 9538              	.LBE6090:
 9539              	.LBB6094:
 9540              	.LBB6053:
1189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 9541              		.loc 14 1189 2 view .LVU1910
 9542 0128 D4E92612 		ldrd	r1, r2, [r4, #152]
 9543              	.LBE6053:
 9544              	.LBE6094:
 9545              	.LBB6095:
 9546              	.LBB6092:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 9547              		.loc 14 919 50 view .LVU1911
 9548 012c 1B1A     		subs	r3, r3, r0
 9549              	.LBE6092:
 9550              	.LBE6095:
 9551              	.LBB6096:
 9552              	.LBB6054:
1189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 9553              		.loc 14 1189 2 view .LVU1912
 9554 012e 9142     		cmp	r1, r2
 9555              	.LBE6054:
 9556              	.LBE6096:
 9557              	.LBB6097:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 561


 9558              	.LBB6093:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 9559              		.loc 14 919 50 view .LVU1913
 9560 0130 4FEAA309 		asr	r9, r3, #2
 9561              	.LVL387:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 9562              		.loc 14 919 50 view .LVU1914
 9563              	.LBE6093:
 9564              	.LBE6097:
 9565              	.LBB6098:
 9566              	.LBI6098:
  76:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 9567              		.loc 10 76 17 is_stmt 1 view .LVU1915
 9568              	.LBB6099:
  76:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 9569              		.loc 10 76 41 view .LVU1916
 9570              	.LBE6099:
 9571              	.LBE6098:
  26:ChordSynth.cpp **** 
 9572              		.loc 9 26 39 is_stmt 0 view .LVU1917
 9573 0134 09F10103 		add	r3, r9, #1
 9574 0138 07EE903A 		vmov	s15, r3	@ int
  26:ChordSynth.cpp **** 
 9575              		.loc 9 26 13 view .LVU1918
 9576 013c F8EE677A 		vcvt.f32.u32	s15, s15
 9577 0140 88EE277A 		vdiv.f32	s14, s16, s15
 9578              	.LVL388:
 9579              	.LBB6101:
 9580              	.LBB6100:
  76:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 9581              		.loc 10 76 46 view .LVU1919
 9582 0144 8DED0D7A 		vstr.32	s14, [sp, #52]
 9583              	.LVL389:
  76:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 9584              		.loc 10 76 46 view .LVU1920
 9585              	.LBE6100:
 9586              	.LBE6101:
  28:ChordSynth.cpp **** 	}
 9587              		.loc 9 28 3 is_stmt 1 view .LVU1921
 9588              	.LBB6102:
 9589              	.LBI6035:
1187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 9590              		.loc 14 1187 7 view .LVU1922
 9591              	.LBB6055:
1189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 9592              		.loc 14 1189 2 is_stmt 0 view .LVU1923
 9593 0148 97D1     		bne	.L298
 9594              	.LVL390:
 9595              	.LBB6048:
 9596              	.LBI6048:
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 9597              		.loc 14 829 7 is_stmt 1 view .LVU1924
 9598              	.LBB6049:
 9599              	.LBI6049:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 9600              		.loc 13 978 7 view .LVU1925
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 562


 9601              		.loc 13 978 7 is_stmt 0 view .LVU1926
 9602              	.LBE6049:
 9603              	.LBE6048:
1198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 9604              		.loc 14 1198 21 view .LVU1927
 9605 014a 3246     		mov	r2, r6
 9606 014c 4046     		mov	r0, r8
 9607 014e FFF7FEFF 		bl	_ZNSt6vectorIN7daisysp10OscillatorESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_
 9608              	.LVL391:
 9609              	.LBE6055:
 9610              	.LBE6102:
 9611              	.LBE6108:
  21:ChordSynth.cpp **** 		daisysp::Oscillator osc;
 9612              		.loc 9 21 2 view .LVU1928
 9613 0152 0135     		adds	r5, r5, #1
 9614              	.LVL392:
 9615              	.LBB6109:
 9616              	.LBB6033:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 9617              		.loc 14 919 50 view .LVU1929
 9618 0154 DDE90223 		ldrd	r2, r3, [sp, #8]
 9619 0158 9B1A     		subs	r3, r3, r2
 9620 015a 4FEAA309 		asr	r9, r3, #2
 9621              	.LVL393:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 9622              		.loc 14 919 50 view .LVU1930
 9623              	.LBE6033:
 9624              	.LBE6109:
 9625              	.LBB6110:
 9626              	.LBB6103:
  24:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
 9627              		.loc 10 24 5 is_stmt 1 view .LVU1931
  24:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
 9628              		.loc 10 24 5 is_stmt 0 view .LVU1932
 9629              	.LBE6103:
 9630              	.LBE6110:
  21:ChordSynth.cpp **** 		daisysp::Oscillator osc;
 9631              		.loc 9 21 2 is_stmt 1 view .LVU1933
  21:ChordSynth.cpp **** 		daisysp::Oscillator osc;
 9632              		.loc 9 21 20 view .LVU1934
 9633              	.LBB6111:
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 9634              		.loc 14 918 7 view .LVU1935
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 9635              		.loc 14 918 7 is_stmt 0 view .LVU1936
 9636              	.LBE6111:
  21:ChordSynth.cpp **** 		daisysp::Oscillator osc;
 9637              		.loc 9 21 20 view .LVU1937
 9638 015e 4D45     		cmp	r5, r9
 9639 0160 A0D3     		bcc	.L246
 9640              	.LVL394:
 9641              	.L252:
  21:ChordSynth.cpp **** 		daisysp::Oscillator osc;
 9642              		.loc 9 21 20 view .LVU1938
 9643              	.LBE6112:
  31:ChordSynth.cpp **** 
 9644              		.loc 9 31 2 is_stmt 1 view .LVU1939
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 563


 9645              	.LBB6113:
 9646              	.LBI6113:
 9647              		.loc 29 25 8 view .LVU1940
 9648              	.LBB6114:
 9649              	.LBB6115:
 9650              	.LBB6116:
 9651              	.LBI6116:
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(),
 9652              		.loc 4 448 7 view .LVU1941
 9653              	.LBB6117:
 9654              	.LBB6118:
 9655              	.LBB6119:
 9656              	.LBI6119:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9657              		.loc 4 190 7 view .LVU1942
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9658              		.loc 4 190 7 is_stmt 0 view .LVU1943
 9659              	.LBE6119:
 9660              	.LBB6120:
 9661              	.LBI6120:
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 9662              		.loc 4 290 7 is_stmt 1 view .LVU1944
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 9663              		.loc 4 290 7 is_stmt 0 view .LVU1945
 9664              	.LBE6120:
 9665              	.LBB6121:
 9666              	.LBI6121:
 9667              		.loc 25 97 29 is_stmt 1 view .LVU1946
 9668              	.LBB6122:
 9669              	.LBI6122:
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __rhs; }
 9670              		.loc 5 558 7 view .LVU1947
 9671              	.LBB6123:
 9672              	.LBI6123:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 9673              		.loc 8 147 7 view .LVU1948
 9674              	.LBB6124:
 9675              	.LBI6124:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9676              		.loc 6 82 7 view .LVU1949
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9677              		.loc 6 82 7 is_stmt 0 view .LVU1950
 9678              	.LBE6124:
 9679              	.LBE6123:
 9680              	.LBE6122:
 9681              	.LBE6121:
 9682              	.LBB6125:
 9683              	.LBI6125:
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 9684              		.loc 4 159 2 is_stmt 1 view .LVU1951
 9685              	.LBB6126:
 9686              	.LBB6127:
 9687              	.LBB6128:
 9688              	.LBI6128:
 9689              		.loc 26 101 5 view .LVU1952
 9690              		.loc 26 101 5 is_stmt 0 view .LVU1953
 9691              	.LBE6128:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 564


 9692              	.LBB6129:
 9693              	.LBI6129:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 9694              		.loc 8 147 7 is_stmt 1 view .LVU1954
 9695              	.LBB6130:
 9696              	.LBI6130:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9697              		.loc 6 82 7 view .LVU1955
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9698              		.loc 6 82 7 is_stmt 0 view .LVU1956
 9699              	.LBE6130:
 9700              	.LBE6129:
 9701              	.LBE6127:
 9702              	.LBE6126:
 9703              	.LBE6125:
 9704              	.LBB6135:
 9705              	.LBB6136:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9706              		.loc 4 187 28 view .LVU1957
 9707 0162 D7F80080 		ldr	r8, [r7]
 9708              	.LBE6136:
 9709              	.LBE6135:
 9710              	.LBB6137:
 9711              	.LBB6133:
 9712              	.LBB6131:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 9713              		.loc 4 160 46 view .LVU1958
 9714 0166 07AD     		add	r5, sp, #28
 9715              	.LVL395:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 9716              		.loc 4 160 46 view .LVU1959
 9717              	.LBE6131:
 9718              	.LBE6133:
 9719              	.LBE6137:
 9720              	.LBB6138:
 9721              	.LBB6139:
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9722              		.loc 4 908 16 view .LVU1960
 9723 0168 7B68     		ldr	r3, [r7, #4]
 9724              	.LBE6139:
 9725              	.LBE6138:
 9726              	.LBB6140:
 9727              	.LBB6134:
 9728              	.LBB6132:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 9729              		.loc 4 160 46 view .LVU1961
 9730 016a 0595     		str	r5, [sp, #20]
 9731              	.LVL396:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 9732              		.loc 4 160 46 view .LVU1962
 9733              	.LBE6132:
 9734              	.LBE6134:
 9735              	.LBE6140:
 9736              	.LBB6141:
 9737              	.LBI6141:
 9738              		.loc 8 162 7 is_stmt 1 view .LVU1963
 9739              	.LBB6142:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 565


 9740              	.LBI6142:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9741              		.loc 6 89 7 view .LVU1964
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9742              		.loc 6 89 7 is_stmt 0 view .LVU1965
 9743              	.LBE6142:
 9744              	.LBE6141:
 9745              	.LBB6143:
 9746              	.LBI6135:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9747              		.loc 4 186 7 is_stmt 1 view .LVU1966
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9748              		.loc 4 186 7 is_stmt 0 view .LVU1967
 9749              	.LBE6143:
 9750              	.LBB6144:
 9751              	.LBI6144:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9752              		.loc 4 186 7 is_stmt 1 view .LVU1968
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9753              		.loc 4 186 7 is_stmt 0 view .LVU1969
 9754              	.LBE6144:
 9755              	.LBB6145:
 9756              	.LBI6138:
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 9757              		.loc 4 907 7 is_stmt 1 view .LVU1970
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 9758              		.loc 4 907 7 is_stmt 0 view .LVU1971
 9759              	.LBE6145:
 9760              	.LBB6146:
 9761              	.LBI6146:
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 9762              		.loc 4 263 9 is_stmt 1 view .LVU1972
 9763              	.LBB6147:
 9764              	.LBB6148:
 9765              	.LBI6148:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 9766              		.loc 4 243 9 view .LVU1973
 9767              	.LBB6149:
 9768              	.LBB6150:
 9769              	.LBI6150:
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 9770              		.loc 24 206 7 view .LVU1974
 9771              	.LBB6151:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 9772              		.loc 24 211 42 is_stmt 0 view .LVU1975
 9773 016c 18EB030F 		cmn	r8, r3
 9774 0170 03D0     		beq	.L249
 9775 0172 B8F1000F 		cmp	r8, #0
 9776 0176 00F02181 		beq	.L247
 9777              	.L249:
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 9778              		.loc 24 217 2 view .LVU1976
 9779 017a 0F2B     		cmp	r3, #15
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 9780              		.loc 24 215 12 view .LVU1977
 9781 017c 0C93     		str	r3, [sp, #48]
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 566


 9782              		.loc 24 217 2 view .LVU1978
 9783 017e 00F2EC80 		bhi	.L299
 9784              	.LVL397:
 9785              	.LBB6152:
 9786              	.LBI6152:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9787              		.loc 4 186 7 is_stmt 1 view .LVU1979
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9788              		.loc 4 186 7 is_stmt 0 view .LVU1980
 9789              	.LBE6152:
 9790              	.LBB6154:
 9791              	.LBI6154:
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 9792              		.loc 4 392 7 is_stmt 1 view .LVU1981
 9793              	.LBB6155:
 9794              	.LBI6155:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9795              		.loc 4 346 7 view .LVU1982
 9796              	.LBB6156:
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 9797              		.loc 4 348 2 is_stmt 0 view .LVU1983
 9798 0182 012B     		cmp	r3, #1
 9799 0184 40F0E380 		bne	.L255
 9800              	.LVL398:
 9801              	.LBB6157:
 9802              	.LBI6157:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 9803              		.loc 20 321 7 is_stmt 1 view .LVU1984
 9804              	.LBB6158:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9805              		.loc 20 322 9 view .LVU1985
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9806              		.loc 20 322 14 is_stmt 0 view .LVU1986
 9807 0188 98F80020 		ldrb	r2, [r8]	@ zero_extendqisi2
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9808              		.loc 20 322 22 view .LVU1987
 9809 018c 2946     		mov	r1, r5
 9810 018e 0DF11409 		add	r9, sp, #20
 9811              	.LVL399:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9812              		.loc 20 322 14 view .LVU1988
 9813 0192 8DF81C20 		strb	r2, [sp, #28]
 9814              	.LVL400:
 9815              	.L256:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9816              		.loc 20 322 14 view .LVU1989
 9817              	.LBE6158:
 9818              	.LBE6157:
 9819              	.LBE6156:
 9820              	.LBE6155:
 9821              	.LBE6154:
 9822              	.LBB6174:
 9823              	.LBI6174:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9824              		.loc 4 214 7 is_stmt 1 view .LVU1990
 9825              	.LBB6175:
 9826              	.LBB6176:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 567


 9827              	.LBI6176:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 9828              		.loc 4 182 7 view .LVU1991
 9829              	.LBE6176:
 9830              	.LBB6178:
 9831              	.LBB6179:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9832              		.loc 20 322 14 is_stmt 0 view .LVU1992
 9833 0196 0022     		movs	r2, #0
 9834              	.LBE6179:
 9835              	.LBE6178:
 9836              	.LBB6182:
 9837              	.LBB6177:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9838              		.loc 4 183 26 view .LVU1993
 9839 0198 0693     		str	r3, [sp, #24]
 9840              	.LVL401:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9841              		.loc 4 183 26 view .LVU1994
 9842              	.LBE6177:
 9843              	.LBE6182:
 9844              	.LBB6183:
 9845              	.LBI6183:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9846              		.loc 4 186 7 is_stmt 1 view .LVU1995
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9847              		.loc 4 186 7 is_stmt 0 view .LVU1996
 9848              	.LBE6183:
 9849              	.LBB6185:
 9850              	.LBI6178:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 9851              		.loc 20 321 7 is_stmt 1 view .LVU1997
 9852              	.LBB6180:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9853              		.loc 20 322 9 view .LVU1998
 9854              	.LBE6180:
 9855              	.LBE6185:
 9856              	.LBE6175:
 9857              	.LBE6174:
 9858              	.LBE6151:
 9859              	.LBE6150:
 9860              	.LBE6149:
 9861              	.LBE6148:
 9862              	.LBE6147:
 9863              	.LBE6146:
 9864              	.LBE6118:
 9865              	.LBE6117:
 9866              	.LBE6116:
 9867              	.LBE6115:
 9868              	.LBE6114:
 9869              	.LBE6113:
 9870              	.LBB6237:
 9871              	.LBB6238:
  78:utils.h       **** 
  79:utils.h       **** // Takes a note name and a semitone offset and returns the note name at that offset.
  80:utils.h       **** // Ex: ("C4", 4) -> "E4"
  81:utils.h       **** // Ex: ("G5", 7) -> "D6"
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 568


  82:utils.h       **** inline std::string parse_interval(std::string note, int interval) {
  83:utils.h       ****     static const std::vector<std::string> notes = {
  84:utils.h       ****         "C", "Db", "D", "Eb", "E", "F", "Gb", "G", "Ab", "A", "Bb", "B"
  85:utils.h       ****     };
  86:utils.h       **** 
  87:utils.h       ****     std::string base = (note.length() == 3) ? note.substr(0, 2) : note.substr(0, 1);
  88:utils.h       ****     int octave = std::stoi(note.substr(base.length()));
  89:utils.h       **** 
  90:utils.h       ****     // Find index of current note
  91:utils.h       ****     int base_index = 0;
  92:utils.h       ****     for (int i = 0; i < 12; ++i) {
  93:utils.h       ****         if (notes[i] == base) {
  94:utils.h       ****             base_index = i;
  95:utils.h       ****             break;
  96:utils.h       ****         }
  97:utils.h       ****     }
  98:utils.h       **** 
  99:utils.h       ****     int new_index = base_index + interval;
 100:utils.h       ****     int new_octave = octave + new_index / 12;
 101:utils.h       ****     new_index = (new_index % 12 + 12) % 12;
 102:utils.h       **** 
 103:utils.h       ****     return notes[new_index] + std::to_string(new_octave);
 104:utils.h       **** }
 105:utils.h       **** 
 106:utils.h       **** inline float note_to_freq(const std::string& note) {
 107:utils.h       ****     static const std::unordered_map<std::string, float> base_octave = {
 108:utils.h       ****         {"C", 16.35}, {"Db", 17.32}, {"D", 18.35}, {"Eb", 19.45},
 109:utils.h       ****         {"E", 20.60}, {"F", 21.83}, {"Gb", 23.12}, {"G", 24.50},
 110:utils.h       ****         {"Ab", 25.96}, {"A", 27.50}, {"Bb", 29.14}, {"B", 30.87}
 111:utils.h       ****     };
 112:utils.h       **** 
 113:utils.h       ****     std::string name = (note.length() == 3) ? note.substr(0, 2) : note.substr(0, 1);
 114:utils.h       ****     int octave = std::stoi(note.substr(name.length()));
 115:utils.h       ****     return base_octave.at(name) * std::pow(2.0f, octave);
 116:utils.h       **** }
 117:utils.h       **** 
 118:utils.h       **** inline std::vector<float> chord_to_freqs(Chord chord) {
 119:utils.h       ****     std::vector<std::string> notes;
 120:utils.h       **** 
 121:utils.h       ****     // Push root
 122:utils.h       ****     notes.push_back(chord.root);
 123:utils.h       **** 
 124:utils.h       ****     // Push third and fifth
 125:utils.h       ****     switch (chord.quality) {
 126:utils.h       ****         case MAJOR:
 127:utils.h       ****             notes.push_back(parse_interval(chord.root, 4));
 128:utils.h       ****             notes.push_back(parse_interval(chord.root, 7));
 129:utils.h       ****             break;
 130:utils.h       ****         case MINOR:
 131:utils.h       ****             notes.push_back(parse_interval(chord.root, 3));
 132:utils.h       ****             notes.push_back(parse_interval(chord.root, 7));
 133:utils.h       ****             break;
 134:utils.h       ****         case AUGMENTED:
 135:utils.h       ****             notes.push_back(parse_interval(chord.root, 4));
 136:utils.h       ****             notes.push_back(parse_interval(chord.root, 8));
 137:utils.h       ****             break;
 138:utils.h       ****         case DIMINISHED:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 569


 139:utils.h       ****             notes.push_back(parse_interval(chord.root, 3));
 140:utils.h       ****             notes.push_back(parse_interval(chord.root, 6));
 141:utils.h       ****             break;
 142:utils.h       ****     }
 143:utils.h       ****     
 144:utils.h       ****     std::vector<float> freqs;
 145:utils.h       ****     for (const auto& note: notes) {
 146:utils.h       ****         freqs.push_back(note_to_freq(note));
 147:utils.h       ****     }
 148:utils.h       ****     return freqs;
 149:utils.h       **** }
 150:utils.h       **** 
 151:utils.h       **** inline std::array<int, 24> chord_to_scale_midi(Chord chord) {
 152:utils.h       ****     constexpr uint8_t OCTAVE_OFFSET = 12;
 153:utils.h       ****     std::array<int, 24> scale_midi;
 154:utils.h       **** 
 155:utils.h       ****     // 1st
 156:utils.h       ****     scale_midi[0] = note_name_to_midi(chord.root);
 9872              		.loc 27 156 38 is_stmt 0 view .LVU1999
 9873 019a 4846     		mov	r0, r9
 9874              	.LBE6238:
 9875              	.LBE6237:
 9876              	.LBB6244:
 9877              	.LBB6234:
 9878              	.LBB6231:
 9879              	.LBB6228:
 9880              	.LBB6225:
 9881              	.LBB6222:
 9882              	.LBB6219:
 9883              	.LBB6216:
 9884              	.LBB6213:
 9885              	.LBB6210:
 9886              	.LBB6207:
 9887              	.LBB6204:
 9888              	.LBB6190:
 9889              	.LBB6188:
 9890              	.LBB6186:
 9891              	.LBB6181:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9892              		.loc 20 322 14 view .LVU2000
 9893 019c CA54     		strb	r2, [r1, r3]
 9894              	.LVL402:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9895              		.loc 20 322 14 view .LVU2001
 9896              	.LBE6181:
 9897              	.LBE6186:
 9898              	.LBE6188:
 9899              	.LBE6190:
 9900              	.LBE6204:
 9901              	.LBE6207:
 9902              	.LBE6210:
 9903              	.LBE6213:
 9904              	.LBE6216:
 9905              	.LBE6219:
 9906              	.LBE6222:
 9907              	.LBE6225:
 9908              	.LBE6228:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 570


 9909              		.loc 29 25 8 view .LVU2002
 9910 019e 3B8B     		ldrh	r3, [r7, #24]
 9911 01a0 ADF82C30 		strh	r3, [sp, #44]	@ movhi
 9912              	.LVL403:
 9913              		.loc 29 25 8 view .LVU2003
 9914              	.LBE6231:
 9915              	.LBE6234:
 9916              	.LBE6244:
 9917              	.LBB6245:
 9918              	.LBI6237:
 151:utils.h       ****     constexpr uint8_t OCTAVE_OFFSET = 12;
 9919              		.loc 27 151 28 is_stmt 1 view .LVU2004
 9920              	.LBB6240:
 152:utils.h       ****     std::array<int, 24> scale_midi;
 9921              		.loc 27 152 5 view .LVU2005
 153:utils.h       **** 
 9922              		.loc 27 153 5 view .LVU2006
 9923              		.loc 27 156 5 view .LVU2007
 9924              		.loc 27 156 38 is_stmt 0 view .LVU2008
 9925 01a4 FFF7FEFF 		bl	_Z17note_name_to_midiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 9926              	.LVL404:
 157:utils.h       ****     // 2nd
 158:utils.h       ****     scale_midi[1] = scale_midi[0] + 2;
 9927              		.loc 27 158 35 view .LVU2009
 9928 01a8 831C     		adds	r3, r0, #2
 9929              		.loc 27 158 19 view .LVU2010
 9930 01aa CDE90C03 		strd	r0, r3, [sp, #48]
 159:utils.h       **** 
 160:utils.h       ****     // 3rd
 161:utils.h       ****     scale_midi[2] = scale_midi[0]
 9931              		.loc 27 161 5 is_stmt 1 view .LVU2011
 162:utils.h       ****         + (chord.quality == MAJOR || chord.quality == AUGMENTED ? 4 : 3); // Maj or min 3rd
 9932              		.loc 27 162 18 is_stmt 0 view .LVU2012
 9933 01ae 9DF82C30 		ldrb	r3, [sp, #44]	@ zero_extendqisi2
 9934              		.loc 27 162 35 view .LVU2013
 9935 01b2 13F0FD0F 		tst	r3, #253
 9936 01b6 00F0B680 		beq	.L300
 9937              		.loc 27 162 9 view .LVU2014
 9938 01ba C21C     		adds	r2, r0, #3
 161:utils.h       ****         + (chord.quality == MAJOR || chord.quality == AUGMENTED ? 4 : 3); // Maj or min 3rd
 9939              		.loc 27 161 19 view .LVU2015
 9940 01bc 0E92     		str	r2, [sp, #56]
 163:utils.h       **** 
 164:utils.h       ****     // 4th
 165:utils.h       ****     scale_midi[3] = scale_midi[0]
 9941              		.loc 27 165 5 is_stmt 1 view .LVU2016
 166:utils.h       ****         + (chord.extension == ELEVENTH ? 6 : 5); // 4th or #4th if (sharp) eleventh chord
 9942              		.loc 27 166 40 is_stmt 0 view .LVU2017
 9943 01be 9DF82D20 		ldrb	r2, [sp, #45]	@ zero_extendqisi2
 9944 01c2 042A     		cmp	r2, #4
 9945 01c4 00F0EE80 		beq	.L301
 9946              	.L270:
 9947              		.loc 27 166 9 view .LVU2018
 9948 01c8 421D     		adds	r2, r0, #5
 167:utils.h       **** 
 168:utils.h       ****     // 5th
 169:utils.h       ****     if (chord.quality == AUGMENTED ) {
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 571


 9949              		.loc 27 169 5 view .LVU2019
 9950 01ca 022B     		cmp	r3, #2
 165:utils.h       ****         + (chord.extension == ELEVENTH ? 6 : 5); // 4th or #4th if (sharp) eleventh chord
 9951              		.loc 27 165 19 view .LVU2020
 9952 01cc 0F92     		str	r2, [sp, #60]
 9953              		.loc 27 169 5 is_stmt 1 view .LVU2021
 9954 01ce 00F0B680 		beq	.L271
 170:utils.h       ****         scale_midi[4] = scale_midi[0] + 8; // Aug 5th
 171:utils.h       ****     } else if (chord.quality == DIMINISHED) {
 9955              		.loc 27 171 12 view .LVU2022
 9956 01d2 032B     		cmp	r3, #3
 9957 01d4 00F0F080 		beq	.L302
 9958              	.L261:
 172:utils.h       ****         scale_midi[4] = scale_midi[0] + 6; // Dim 5th
 173:utils.h       ****     } else {
 174:utils.h       ****         scale_midi[4] = scale_midi[0] + 7; // Perf 5th
 9959              		.loc 27 174 9 view .LVU2023
 9960              		.loc 27 174 39 is_stmt 0 view .LVU2024
 9961 01d8 C21D     		adds	r2, r0, #7
 9962 01da 1092     		str	r2, [sp, #64]
 175:utils.h       ****     }
 176:utils.h       **** 
 177:utils.h       ****     // 6th
 178:utils.h       ****     scale_midi[5] = scale_midi[0] + 9; // Always maj 6th
 9963              		.loc 27 178 5 is_stmt 1 view .LVU2025
 9964              		.loc 27 178 35 is_stmt 0 view .LVU2026
 9965 01dc 00F10902 		add	r2, r0, #9
 9966              		.loc 27 178 19 view .LVU2027
 9967 01e0 1192     		str	r2, [sp, #68]
 179:utils.h       **** 
 180:utils.h       ****     // 7th
 181:utils.h       ****     scale_midi[6] = scale_midi[0]
 9968              		.loc 27 181 5 is_stmt 1 view .LVU2028
 182:utils.h       ****         + (chord.quality == MAJOR || chord.quality == AUGMENTED ? 11 : 10); // maj7 or b7
 9969              		.loc 27 182 65 is_stmt 0 view .LVU2029
 9970 01e2 002B     		cmp	r3, #0
 9971 01e4 40F0E680 		bne	.L262
 9972 01e8 0B23     		movs	r3, #11
 9973              	.L260:
 9974              		.loc 27 182 9 view .LVU2030
 9975 01ea 0344     		add	r3, r3, r0
 9976 01ec 13A9     		add	r1, sp, #76
 181:utils.h       ****         + (chord.quality == MAJOR || chord.quality == AUGMENTED ? 11 : 10); // maj7 or b7
 9977              		.loc 27 181 19 view .LVU2031
 9978 01ee 1293     		str	r3, [sp, #72]
 183:utils.h       **** 
 184:utils.h       ****     // Double the scale and drop the whole thing an octave
 185:utils.h       ****     for (size_t i = 0; i < 7; ++i) {
 9979              		.loc 27 185 5 is_stmt 1 view .LVU2032
 9980              	.LVL405:
 9981              	.LBB6239:
 9982              		.loc 27 185 26 view .LVU2033
 9983 01f0 3346     		mov	r3, r6
 9984 01f2 00E0     		b	.L264
 9985              	.LVL406:
 9986              	.L303:
 186:utils.h       ****         scale_midi[7 + i] = scale_midi[i] - OCTAVE_OFFSET;
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 572


 9987              		.loc 27 186 43 is_stmt 0 view .LVU2034
 9988 01f4 1868     		ldr	r0, [r3]
 9989              	.L264:
 9990              		.loc 27 186 9 is_stmt 1 view .LVU2035
 187:utils.h       ****         scale_midi[i] -= (2 * OCTAVE_OFFSET);
 9991              		.loc 27 187 23 is_stmt 0 view .LVU2036
 9992 01f6 1A68     		ldr	r2, [r3]
 186:utils.h       ****         scale_midi[7 + i] = scale_midi[i] - OCTAVE_OFFSET;
 9993              		.loc 27 186 43 view .LVU2037
 9994 01f8 0C38     		subs	r0, r0, #12
 9995              		.loc 27 187 23 view .LVU2038
 9996 01fa 183A     		subs	r2, r2, #24
 186:utils.h       ****         scale_midi[7 + i] = scale_midi[i] - OCTAVE_OFFSET;
 9997              		.loc 27 186 27 view .LVU2039
 9998 01fc D861     		str	r0, [r3, #28]
 9999              		.loc 27 187 9 is_stmt 1 view .LVU2040
 10000              		.loc 27 187 23 is_stmt 0 view .LVU2041
 10001 01fe 43F8042B 		str	r2, [r3], #4
 185:utils.h       ****         scale_midi[7 + i] = scale_midi[i] - OCTAVE_OFFSET;
 10002              		.loc 27 185 5 is_stmt 1 view .LVU2042
 185:utils.h       ****         scale_midi[7 + i] = scale_midi[i] - OCTAVE_OFFSET;
 10003              		.loc 27 185 26 view .LVU2043
 10004 0202 8B42     		cmp	r3, r1
 10005 0204 F6D1     		bne	.L303
 10006              	.LBE6239:
 188:utils.h       ****     }
 189:utils.h       ****     return scale_midi;
 10007              		.loc 27 189 5 view .LVU2044
 10008              	.LVL407:
 10009              		.loc 27 189 5 is_stmt 0 view .LVU2045
 10010              	.LBE6240:
 10011              	.LBE6245:
  31:ChordSynth.cpp **** 
 10012              		.loc 9 31 40 view .LVU2046
 10013 0206 6022     		movs	r2, #96
 10014 0208 3146     		mov	r1, r6
 10015 020a 04F13400 		add	r0, r4, #52
 10016 020e FFF7FEFF 		bl	memcpy
 10017              	.LVL408:
 10018              	.LBB6246:
 10019              	.LBI6246:
 10020              		.loc 29 25 8 is_stmt 1 view .LVU2047
 10021              	.LBB6247:
 10022              	.LBI6247:
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 10023              		.loc 4 657 7 view .LVU2048
 10024              	.LBB6248:
 10025              	.LBI6248:
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10026              		.loc 4 229 7 view .LVU2049
 10027              	.LBB6249:
 10028              	.LBB6250:
 10029              	.LBI6250:
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 10030              		.loc 4 221 7 view .LVU2050
 10031              	.LBB6251:
 10032              	.LBI6251:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 573


 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10033              		.loc 4 186 7 view .LVU2051
 10034              	.LBB6252:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10035              		.loc 4 187 28 is_stmt 0 view .LVU2052
 10036 0212 0598     		ldr	r0, [sp, #20]
 10037              	.LVL409:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10038              		.loc 4 187 28 view .LVU2053
 10039              	.LBE6252:
 10040              	.LBE6251:
 10041              	.LBB6253:
 10042              	.LBI6253:
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10043              		.loc 4 200 7 is_stmt 1 view .LVU2054
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10044              		.loc 4 200 7 is_stmt 0 view .LVU2055
 10045              	.LBE6253:
 10046              	.LBE6250:
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 10047              		.loc 4 231 2 view .LVU2056
 10048 0214 A842     		cmp	r0, r5
 10049 0216 03D0     		beq	.L265
 10050              	.LVL410:
 10051              	.LBB6254:
 10052              	.LBI6254:
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 10053              		.loc 4 236 7 is_stmt 1 view .LVU2057
 10054              	.LBB6255:
 10055              	.LBB6256:
 10056              	.LBI6256:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 10057              		.loc 5 491 7 view .LVU2058
 10058              	.LBB6257:
 10059              	.LBI6257:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 10060              		.loc 6 120 7 view .LVU2059
 10061              	.LBE6257:
 10062              	.LBE6256:
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10063              		.loc 4 237 34 is_stmt 0 view .LVU2060
 10064 0218 0799     		ldr	r1, [sp, #28]
 10065              	.LBB6260:
 10066              	.LBB6259:
 10067              	.LBB6258:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10068              		.loc 6 133 19 view .LVU2061
 10069 021a 0131     		adds	r1, r1, #1
 10070              	.LVL411:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10071              		.loc 6 133 19 view .LVU2062
 10072 021c FFF7FEFF 		bl	_ZdlPvj
 10073              	.LVL412:
 10074              	.L265:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10075              		.loc 6 133 19 view .LVU2063
 10076              	.LBE6258:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 574


 10077              	.LBE6259:
 10078              	.LBE6260:
 10079              	.LBE6255:
 10080              	.LBE6254:
 10081              	.LBE6249:
 10082              	.LBE6248:
 10083              	.LBB6261:
 10084              	.LBI6261:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10085              		.loc 4 150 14 is_stmt 1 view .LVU2064
 10086              	.LBB6262:
 10087              	.LBI6262:
 10088              		.loc 8 162 7 view .LVU2065
 10089              	.LBB6263:
 10090              	.LBI6263:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10091              		.loc 6 89 7 view .LVU2066
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10092              		.loc 6 89 7 is_stmt 0 view .LVU2067
 10093              	.LBE6263:
 10094              	.LBE6262:
 10095              	.LBE6261:
 10096              	.LBE6247:
 10097              	.LBE6246:
  33:ChordSynth.cpp **** 	bass_osc.SetWaveform(Oscillator::WAVE_POLYBLEP_SAW);
 10098              		.loc 9 33 2 is_stmt 1 view .LVU2068
 10099              	.LBB6264:
 10100              	.LBB6265:
  53:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 10101              		.loc 10 53 27 is_stmt 0 view .LVU2069
 10102 0220 B7EE008A 		vmov.f32	s16, #1.0e+0
 10103              	.LBE6265:
 10104              	.LBE6264:
  33:ChordSynth.cpp **** 	bass_osc.SetWaveform(Oscillator::WAVE_POLYBLEP_SAW);
 10105              		.loc 9 33 15 view .LVU2070
 10106 0224 D4ED007A 		vldr.32	s15, [r4]
 10107 0228 2746     		mov	r7, r4
 10108              	.LVL413:
 10109              	.LBB6274:
 10110              	.LBB6266:
  57:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 10111              		.loc 10 57 20 view .LVU2071
 10112 022a 0022     		movs	r2, #0
  55:../../DaisySP//Source/Synthesis/oscillator.h ****         pw_        = 0.5f;
 10113              		.loc 10 55 20 view .LVU2072
 10114 022c 4FF07C53 		mov	r3, #1056964608
  54:../../DaisySP//Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 10115              		.loc 10 54 20 view .LVU2073
 10116 0230 9FED6A0A 		vldr.32	s0, .L307
  53:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 10117              		.loc 10 53 27 view .LVU2074
 10118 0234 88EE277A 		vdiv.f32	s14, s16, s15
 10119              	.LBE6266:
 10120              	.LBE6274:
  33:ChordSynth.cpp **** 	bass_osc.SetWaveform(Oscillator::WAVE_POLYBLEP_SAW);
 10121              		.loc 9 33 15 view .LVU2075
 10122 0238 0837     		adds	r7, r7, #8
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 575


 10123              	.LVL414:
 10124              	.LBB6275:
 10125              	.LBI6264:
  50:../../DaisySP//Source/Synthesis/oscillator.h ****     {
 10126              		.loc 10 50 10 is_stmt 1 view .LVU2076
 10127              	.LBB6267:
  52:../../DaisySP//Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 10128              		.loc 10 52 9 view .LVU2077
  57:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 10129              		.loc 10 57 20 is_stmt 0 view .LVU2078
 10130 023a 2262     		str	r2, [r4, #32]	@ float
 10131              	.LBE6267:
 10132              	.LBE6275:
  38:ChordSynth.cpp **** 	high_pass.SetFreq(250.f);
 10133              		.loc 9 38 16 view .LVU2079
 10134 023c 2546     		mov	r5, r4
 10135              	.LBB6276:
 10136              	.LBB6268:
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 10137              		.loc 10 58 34 view .LVU2080
 10138 023e 3846     		mov	r0, r7
  52:../../DaisySP//Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 10139              		.loc 10 52 20 view .LVU2081
 10140 0240 C4ED067A 		vstr.32	s15, [r4, #24]
  53:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 10141              		.loc 10 53 9 is_stmt 1 view .LVU2082
  55:../../DaisySP//Source/Synthesis/oscillator.h ****         pw_        = 0.5f;
 10142              		.loc 10 55 20 is_stmt 0 view .LVU2083
 10143 0244 E360     		str	r3, [r4, #12]	@ float
 10144              	.LBE6268:
 10145              	.LBE6276:
  38:ChordSynth.cpp **** 	high_pass.SetFreq(250.f);
 10146              		.loc 9 38 16 view .LVU2084
 10147 0246 A035     		adds	r5, r5, #160
 10148              	.LBB6277:
 10149              	.LBB6269:
  56:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 10150              		.loc 10 56 20 view .LVU2085
 10151 0248 6361     		str	r3, [r4, #20]	@ float
 10152              	.LBE6269:
 10153              	.LBE6277:
  42:ChordSynth.cpp **** 	low_pass.SetFreq(2800.f);
 10154              		.loc 9 42 15 view .LVU2086
 10155 024a 2646     		mov	r6, r4
 10156              	.LBB6278:
 10157              	.LBB6270:
  54:../../DaisySP//Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 10158              		.loc 10 54 20 view .LVU2087
 10159 024c 84ED040A 		vstr.32	s0, [r4, #16]
 10160              	.LBE6270:
 10161              	.LBE6278:
  42:ChordSynth.cpp **** 	low_pass.SetFreq(2800.f);
 10162              		.loc 9 42 15 view .LVU2088
 10163 0250 EC36     		adds	r6, r6, #236
 10164              	.LBB6279:
 10165              	.LBB6271:
  53:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 576


 10166              		.loc 10 53 20 view .LVU2089
 10167 0252 84ED077A 		vstr.32	s14, [r4, #28]
  54:../../DaisySP//Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 10168              		.loc 10 54 9 is_stmt 1 view .LVU2090
  55:../../DaisySP//Source/Synthesis/oscillator.h ****         pw_        = 0.5f;
 10169              		.loc 10 55 9 view .LVU2091
  56:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 10170              		.loc 10 56 9 view .LVU2092
  57:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 10171              		.loc 10 57 9 view .LVU2093
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 10172              		.loc 10 58 9 view .LVU2094
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 10173              		.loc 10 58 34 is_stmt 0 view .LVU2095
 10174 0256 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 10175              	.LVL415:
  61:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 10176              		.loc 10 61 20 view .LVU2096
 10177 025a 40F20113 		movw	r3, #257
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 10178              		.loc 10 58 34 view .LVU2097
 10179 025e F0EE407A 		vmov.f32	s15, s0
 10180              	.LBE6271:
 10181              	.LBE6279:
 10182              	.LBB6280:
 10183              	.LBB6281:
 10184              		.loc 12 141 23 view .LVU2098
 10185 0262 9FED5F7A 		vldr.32	s14, .L307+4
 10186              	.LBE6281:
 10187              	.LBE6280:
 10188              	.LBB6287:
 10189              	.LBB6272:
  61:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 10190              		.loc 10 61 20 view .LVU2099
 10191 0266 2386     		strh	r3, [r4, #48]	@ movhi
 10192              	.LBE6272:
 10193              	.LBE6287:
 10194              	.LBB6288:
 10195              	.LBB6289:
 10196              		.loc 10 81 19 view .LVU2100
 10197 0268 0623     		movs	r3, #6
 10198              	.LBE6289:
 10199              	.LBE6288:
 10200              	.LBB6292:
 10201              	.LBB6282:
 10202              		.loc 12 141 16 view .LVU2101
 10203 026a F2EE080A 		vmov.f32	s1, #1.2e+1
 10204              	.LBE6282:
 10205              	.LBE6292:
 10206              	.LBB6293:
 10207              	.LBB6290:
 10208              		.loc 10 81 19 view .LVU2102
 10209 026e 2372     		strb	r3, [r4, #8]
 10210              	.LBE6290:
 10211              	.LBE6293:
 10212              	.LBB6294:
 10213              	.LBB6283:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 577


 10214              		.loc 12 141 16 view .LVU2103
 10215 0270 B0EE000A 		vmov.f32	s0, #2.0e+0
 10216              	.LBE6283:
 10217              	.LBE6294:
  35:ChordSynth.cpp **** 	bass_osc.SetAmp(1.f / (midi_notes.size() + 1));
 10218              		.loc 9 35 23 view .LVU2104
 10219 0274 029B     		ldr	r3, [sp, #8]
 10220              	.LBB6295:
 10221              	.LBB6273:
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 10222              		.loc 10 58 20 view .LVU2105
 10223 0276 C4ED097A 		vstr.32	s15, [r4, #36]
  59:../../DaisySP//Source/Synthesis/oscillator.h ****         eoc_       = true;
 10224              		.loc 10 59 9 is_stmt 1 view .LVU2106
  60:../../DaisySP//Source/Synthesis/oscillator.h ****         eor_       = true;
 10225              		.loc 10 60 9 view .LVU2107
  61:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 10226              		.loc 10 61 9 view .LVU2108
 10227              	.LVL416:
  61:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 10228              		.loc 10 61 9 is_stmt 0 view .LVU2109
 10229              	.LBE6273:
 10230              	.LBE6295:
  34:ChordSynth.cpp **** 	bass_osc.SetFreq(mtof(midi_notes[0])/4.f);
 10231              		.loc 9 34 2 is_stmt 1 view .LVU2110
 10232              	.LBB6296:
 10233              	.LBI6288:
  79:../../DaisySP//Source/Synthesis/oscillator.h ****     {
 10234              		.loc 10 79 17 view .LVU2111
 10235              	.LBB6291:
 10236              		.loc 10 81 9 view .LVU2112
 10237              		.loc 10 81 9 is_stmt 0 view .LVU2113
 10238              	.LBE6291:
 10239              	.LBE6296:
  35:ChordSynth.cpp **** 	bass_osc.SetAmp(1.f / (midi_notes.size() + 1));
 10240              		.loc 9 35 2 is_stmt 1 view .LVU2114
 10241              	.LBB6297:
 10242              	.LBI6297:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 10243              		.loc 14 1043 7 view .LVU2115
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 10244              		.loc 14 1043 7 is_stmt 0 view .LVU2116
 10245              	.LBE6297:
 10246              	.LBB6298:
 10247              	.LBI6280:
 139:../../DaisySP//Source/Utility/dsp.h **** {
 10248              		.loc 12 139 14 is_stmt 1 view .LVU2117
 10249              	.LBB6284:
 10250              		.loc 12 141 5 view .LVU2118
 10251              	.LBE6284:
 10252              	.LBE6298:
  35:ChordSynth.cpp **** 	bass_osc.SetAmp(1.f / (midi_notes.size() + 1));
 10253              		.loc 9 35 23 is_stmt 0 view .LVU2119
 10254 027a D3ED007A 		vldr.32	s15, [r3]	@ int
 10255 027e F8EEE77A 		vcvt.f32.s32	s15, s15
 10256              	.LVL417:
 10257              	.LBB6299:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 578


 10258              	.LBB6285:
 10259              		.loc 12 141 23 view .LVU2120
 10260 0282 77EEC77A 		vsub.f32	s15, s15, s14
 10261              	.LVL418:
 10262              		.loc 12 141 16 view .LVU2121
 10263 0286 C7EEA00A 		vdiv.f32	s1, s15, s1
 10264 028a FFF7FEFF 		bl	powf
 10265              	.LVL419:
 10266              		.loc 12 141 43 view .LVU2122
 10267 028e 9FED557A 		vldr.32	s14, .L307+8
 10268              	.LBE6285:
 10269              	.LBE6299:
 10270              	.LBB6300:
 10271              	.LBB6301:
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 10272              		.loc 10 70 34 view .LVU2123
 10273 0292 3846     		mov	r0, r7
 10274              	.LBE6301:
 10275              	.LBE6300:
  35:ChordSynth.cpp **** 	bass_osc.SetAmp(1.f / (midi_notes.size() + 1));
 10276              		.loc 9 35 18 view .LVU2124
 10277 0294 F5EE007A 		vmov.f32	s15, #2.5e-1
 10278              	.LBB6305:
 10279              	.LBB6286:
 10280              		.loc 12 141 43 view .LVU2125
 10281 0298 20EE070A 		vmul.f32	s0, s0, s14
 10282              	.LBE6286:
 10283              	.LBE6305:
  35:ChordSynth.cpp **** 	bass_osc.SetAmp(1.f / (midi_notes.size() + 1));
 10284              		.loc 9 35 18 view .LVU2126
 10285 029c 20EE270A 		vmul.f32	s0, s0, s15
 10286              	.LVL420:
 10287              	.LBB6306:
 10288              	.LBI6300:
  67:../../DaisySP//Source/Synthesis/oscillator.h ****     {
 10289              		.loc 10 67 17 is_stmt 1 view .LVU2127
 10290              	.LBB6302:
  69:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 10291              		.loc 10 69 9 view .LVU2128
  69:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 10292              		.loc 10 69 20 is_stmt 0 view .LVU2129
 10293 02a0 84ED040A 		vstr.32	s0, [r4, #16]
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 10294              		.loc 10 70 9 is_stmt 1 view .LVU2130
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 10295              		.loc 10 70 34 is_stmt 0 view .LVU2131
 10296 02a4 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 10297              	.LVL421:
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 10298              		.loc 10 70 34 view .LVU2132
 10299              	.LBE6302:
 10300              	.LBE6306:
 10301              	.LBB6307:
 10302              	.LBB6308:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 10303              		.loc 14 919 50 view .LVU2133
 10304 02a8 029A     		ldr	r2, [sp, #8]
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 579


 10305 02aa 039B     		ldr	r3, [sp, #12]
 10306              	.LBE6308:
 10307              	.LBE6307:
 10308              	.LBB6311:
 10309              	.LBB6303:
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 10310              		.loc 10 70 34 view .LVU2134
 10311 02ac F0EE407A 		vmov.f32	s15, s0
 10312              	.LBE6303:
 10313              	.LBE6311:
  38:ChordSynth.cpp **** 	high_pass.SetFreq(250.f);
 10314              		.loc 9 38 16 view .LVU2135
 10315 02b0 2846     		mov	r0, r5
 10316 02b2 94ED000A 		vldr.32	s0, [r4]
 10317              	.LBB6312:
 10318              	.LBB6309:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 10319              		.loc 14 919 50 view .LVU2136
 10320 02b6 9B1A     		subs	r3, r3, r2
 10321              	.LBE6309:
 10322              	.LBE6312:
 10323              	.LBB6313:
 10324              	.LBB6304:
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 10325              		.loc 10 70 20 view .LVU2137
 10326 02b8 C4ED097A 		vstr.32	s15, [r4, #36]
 10327              	.LVL422:
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 10328              		.loc 10 70 20 view .LVU2138
 10329              	.LBE6304:
 10330              	.LBE6313:
  36:ChordSynth.cpp **** 
 10331              		.loc 9 36 2 is_stmt 1 view .LVU2139
 10332              	.LBB6314:
 10333              	.LBI6307:
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 10334              		.loc 14 918 7 view .LVU2140
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 10335              		.loc 14 918 7 is_stmt 0 view .LVU2141
 10336              	.LBE6314:
 10337              	.LBB6315:
 10338              	.LBI6315:
  76:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 10339              		.loc 10 76 17 is_stmt 1 view .LVU2142
 10340              	.LBB6316:
  76:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 10341              		.loc 10 76 41 view .LVU2143
 10342              	.LBE6316:
 10343              	.LBE6315:
 10344              	.LBB6318:
 10345              	.LBB6310:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 10346              		.loc 14 919 50 is_stmt 0 view .LVU2144
 10347 02bc 9B10     		asrs	r3, r3, #2
 10348              	.LVL423:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 10349              		.loc 14 919 50 view .LVU2145
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 580


 10350              	.LBE6310:
 10351              	.LBE6318:
  36:ChordSynth.cpp **** 
 10352              		.loc 9 36 43 view .LVU2146
 10353 02be 0133     		adds	r3, r3, #1
  36:ChordSynth.cpp **** 
 10354              		.loc 9 36 17 view .LVU2147
 10355 02c0 07EE903A 		vmov	s15, r3	@ int
 10356 02c4 F8EE677A 		vcvt.f32.u32	s15, s15
 10357 02c8 88EE277A 		vdiv.f32	s14, s16, s15
 10358              	.LBB6319:
 10359              	.LBB6317:
  76:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 10360              		.loc 10 76 46 view .LVU2148
 10361 02cc 84ED037A 		vstr.32	s14, [r4, #12]
 10362              	.LVL424:
  76:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 10363              		.loc 10 76 46 view .LVU2149
 10364              	.LBE6317:
 10365              	.LBE6319:
  38:ChordSynth.cpp **** 	high_pass.SetFreq(250.f);
 10366              		.loc 9 38 2 is_stmt 1 view .LVU2150
  38:ChordSynth.cpp **** 	high_pass.SetFreq(250.f);
 10367              		.loc 9 38 16 is_stmt 0 view .LVU2151
 10368 02d0 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 10369              	.LVL425:
  39:ChordSynth.cpp **** 	high_pass.SetRes(0.1f);
 10370              		.loc 9 39 2 is_stmt 1 view .LVU2152
  39:ChordSynth.cpp **** 	high_pass.SetRes(0.1f);
 10371              		.loc 9 39 19 is_stmt 0 view .LVU2153
 10372 02d4 9FED440A 		vldr.32	s0, .L307+12
 10373 02d8 2846     		mov	r0, r5
 10374 02da FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 10375              	.LVL426:
  40:ChordSynth.cpp **** 
 10376              		.loc 9 40 2 is_stmt 1 view .LVU2154
  40:ChordSynth.cpp **** 
 10377              		.loc 9 40 18 is_stmt 0 view .LVU2155
 10378 02de 9FED430A 		vldr.32	s0, .L307+16
 10379 02e2 2846     		mov	r0, r5
 10380 02e4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 10381              	.LVL427:
  42:ChordSynth.cpp **** 	low_pass.SetFreq(2800.f);
 10382              		.loc 9 42 2 is_stmt 1 view .LVU2156
  42:ChordSynth.cpp **** 	low_pass.SetFreq(2800.f);
 10383              		.loc 9 42 15 is_stmt 0 view .LVU2157
 10384 02e8 94ED000A 		vldr.32	s0, [r4]
 10385 02ec 3046     		mov	r0, r6
 10386 02ee FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 10387              	.LVL428:
  43:ChordSynth.cpp **** 	low_pass.SetRes(0.1f);
 10388              		.loc 9 43 2 is_stmt 1 view .LVU2158
  43:ChordSynth.cpp **** 	low_pass.SetRes(0.1f);
 10389              		.loc 9 43 18 is_stmt 0 view .LVU2159
 10390 02f2 9FED3F0A 		vldr.32	s0, .L307+20
 10391 02f6 3046     		mov	r0, r6
 10392 02f8 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 581


 10393              	.LVL429:
  44:ChordSynth.cpp **** }
 10394              		.loc 9 44 2 is_stmt 1 view .LVU2160
  44:ChordSynth.cpp **** }
 10395              		.loc 9 44 17 is_stmt 0 view .LVU2161
 10396 02fc 3046     		mov	r0, r6
 10397 02fe 9FED3B0A 		vldr.32	s0, .L307+16
 10398 0302 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 10399              	.LVL430:
 10400              	.LBB6320:
 10401              	.LBI6320:
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 10402              		.loc 14 678 7 is_stmt 1 view .LVU2162
 10403              	.LBB6321:
 10404              	.LBB6322:
 10405              	.LBI6322:
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 10406              		.loc 14 276 7 view .LVU2163
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 10407              		.loc 14 276 7 is_stmt 0 view .LVU2164
 10408              	.LBE6322:
 10409              	.LBB6323:
 10410              	.LBI6323:
 10411              		.loc 5 735 5 is_stmt 1 view .LVU2165
 10412              		.loc 5 735 5 is_stmt 0 view .LVU2166
 10413              	.LBE6323:
 10414              	.LBB6324:
 10415              	.LBI6324:
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 10416              		.loc 14 333 7 is_stmt 1 view .LVU2167
 10417              	.LBB6325:
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 10418              		.loc 14 335 15 is_stmt 0 view .LVU2168
 10419 0306 0298     		ldr	r0, [sp, #8]
 10420              	.LVL431:
 10421              	.LBB6326:
 10422              	.LBI6326:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 10423              		.loc 14 350 7 is_stmt 1 view .LVU2169
 10424              	.LBB6327:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 10425              		.loc 14 353 2 is_stmt 0 view .LVU2170
 10426 0308 18B1     		cbz	r0, .L238
 10427              	.LVL432:
 10428              	.LBB6328:
 10429              	.LBI6328:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 10430              		.loc 5 491 7 is_stmt 1 view .LVU2171
 10431              	.LBB6329:
 10432              	.LBB6330:
 10433              	.LBI6330:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 10434              		.loc 6 120 7 view .LVU2172
 10435              	.LBE6330:
 10436              	.LBE6329:
 10437              	.LBE6328:
 10438              	.LBE6327:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 582


 10439              	.LBE6326:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 10440              		.loc 14 336 35 is_stmt 0 view .LVU2173
 10441 030a 0499     		ldr	r1, [sp, #16]
 10442              	.LBB6336:
 10443              	.LBB6335:
 10444              	.LBB6334:
 10445              	.LBB6333:
 10446              	.LBB6332:
 10447              	.LBB6331:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10448              		.loc 6 133 19 view .LVU2174
 10449 030c 091A     		subs	r1, r1, r0
 10450 030e FFF7FEFF 		bl	_ZdlPvj
 10451              	.LVL433:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10452              		.loc 6 133 19 view .LVU2175
 10453              	.LBE6331:
 10454              	.LBE6332:
 10455              	.LBE6333:
 10456              	.LBE6334:
 10457              	.LBE6335:
 10458              	.LBE6336:
 10459              	.LBB6337:
 10460              	.LBI6337:
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 10461              		.loc 14 128 14 is_stmt 1 view .LVU2176
 10462              	.LBB6338:
 10463              	.LBI6338:
 10464              		.loc 8 162 7 view .LVU2177
 10465              	.LBB6339:
 10466              	.LBI6339:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10467              		.loc 6 89 7 view .LVU2178
 10468              	.L238:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10469              		.loc 6 89 7 is_stmt 0 view .LVU2179
 10470              	.LBE6339:
 10471              	.LBE6338:
 10472              	.LBE6337:
 10473              	.LBE6325:
 10474              	.LBE6324:
 10475              	.LBE6321:
 10476              	.LBE6320:
  45:ChordSynth.cpp **** 
 10477              		.loc 9 45 1 view .LVU2180
 10478 0312 24B0     		add	sp, sp, #144
 10479              		.cfi_remember_state
 10480              		.cfi_def_cfa_offset 40
 10481              		@ sp needed
 10482 0314 BDEC028B 		vldm	sp!, {d8}
 10483              		.cfi_restore 80
 10484              		.cfi_restore 81
 10485              		.cfi_def_cfa_offset 32
 10486 0318 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 10487              	.LVL434:
 10488              	.L242:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 583


 10489              		.cfi_restore_state
 10490              	.LBB6340:
 10491              	.LBB5992:
 10492              	.LBB5984:
 10493              	.LBB5976:
 10494              	.LBB5969:
 10495              	.LBB5962:
 10496              	.LBB5955:
 10497              	.LBB5932:
 10498              	.LBB5927:
 10499              	.LBB5922:
 10500              	.LBB5917:
 10501              	.LBB5912:
 10502              	.LBB5897:
 10503              	.LBB5877:
 10504              	.LBB5874:
 10505              	.LBB5865:
 10506              	.LBI5865:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10507              		.loc 4 346 7 is_stmt 1 view .LVU2181
 10508              	.LBB5866:
 10509              	.LBI5866:
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 10510              		.loc 20 387 7 view .LVU2182
 10511              	.LBB5867:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 10512              		.loc 20 389 2 view .LVU2183
 10513 031c 002B     		cmp	r3, #0
 10514 031e 50D1     		bne	.L304
 10515 0320 4146     		mov	r1, r8
 10516              	.LVL435:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 10517              		.loc 20 389 2 is_stmt 0 view .LVU2184
 10518 0322 0CAE     		add	r6, sp, #48
 10519              	.LVL436:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 10520              		.loc 20 389 2 view .LVU2185
 10521 0324 8AE6     		b	.L243
 10522              	.LVL437:
 10523              	.L300:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 10524              		.loc 20 389 2 view .LVU2186
 10525              	.LBE5867:
 10526              	.LBE5866:
 10527              	.LBE5865:
 10528              	.LBE5874:
 10529              	.LBE5877:
 10530              	.LBE5897:
 10531              	.LBE5912:
 10532              	.LBE5917:
 10533              	.LBE5922:
 10534              	.LBE5927:
 10535              	.LBE5932:
 10536              	.LBE5955:
 10537              	.LBE5962:
 10538              	.LBE5969:
 10539              	.LBE5976:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 584


 10540              	.LBE5984:
 10541              	.LBE5992:
 10542              	.LBE6340:
 10543              	.LBB6341:
 10544              	.LBB6241:
 162:utils.h       **** 
 10545              		.loc 27 162 9 view .LVU2187
 10546 0326 021D     		adds	r2, r0, #4
 161:utils.h       ****         + (chord.quality == MAJOR || chord.quality == AUGMENTED ? 4 : 3); // Maj or min 3rd
 10547              		.loc 27 161 19 view .LVU2188
 10548 0328 0E92     		str	r2, [sp, #56]
 165:utils.h       ****         + (chord.extension == ELEVENTH ? 6 : 5); // 4th or #4th if (sharp) eleventh chord
 10549              		.loc 27 165 5 is_stmt 1 view .LVU2189
 166:utils.h       **** 
 10550              		.loc 27 166 40 is_stmt 0 view .LVU2190
 10551 032a 9DF82D20 		ldrb	r2, [sp, #45]	@ zero_extendqisi2
 10552 032e 042A     		cmp	r2, #4
 10553 0330 7FF44AAF 		bne	.L270
 166:utils.h       **** 
 10554              		.loc 27 166 9 view .LVU2191
 10555 0334 821D     		adds	r2, r0, #6
 169:utils.h       ****         scale_midi[4] = scale_midi[0] + 8; // Aug 5th
 10556              		.loc 27 169 5 view .LVU2192
 10557 0336 022B     		cmp	r3, #2
 165:utils.h       ****         + (chord.extension == ELEVENTH ? 6 : 5); // 4th or #4th if (sharp) eleventh chord
 10558              		.loc 27 165 19 view .LVU2193
 10559 0338 0F92     		str	r2, [sp, #60]
 169:utils.h       ****         scale_midi[4] = scale_midi[0] + 8; // Aug 5th
 10560              		.loc 27 169 5 is_stmt 1 view .LVU2194
 10561 033a 7FF44DAF 		bne	.L261
 10562              	.L271:
 170:utils.h       ****     } else if (chord.quality == DIMINISHED) {
 10563              		.loc 27 170 9 view .LVU2195
 170:utils.h       ****     } else if (chord.quality == DIMINISHED) {
 10564              		.loc 27 170 39 is_stmt 0 view .LVU2196
 10565 033e 00F10803 		add	r3, r0, #8
 170:utils.h       ****     } else if (chord.quality == DIMINISHED) {
 10566              		.loc 27 170 23 view .LVU2197
 10567 0342 1093     		str	r3, [sp, #64]
 178:utils.h       **** 
 10568              		.loc 27 178 5 is_stmt 1 view .LVU2198
 178:utils.h       **** 
 10569              		.loc 27 178 35 is_stmt 0 view .LVU2199
 10570 0344 00F10903 		add	r3, r0, #9
 178:utils.h       **** 
 10571              		.loc 27 178 19 view .LVU2200
 10572 0348 1193     		str	r3, [sp, #68]
 181:utils.h       ****         + (chord.quality == MAJOR || chord.quality == AUGMENTED ? 11 : 10); // maj7 or b7
 10573              		.loc 27 181 5 is_stmt 1 view .LVU2201
 182:utils.h       **** 
 10574              		.loc 27 182 65 is_stmt 0 view .LVU2202
 10575 034a 0B23     		movs	r3, #11
 10576 034c 4DE7     		b	.L260
 10577              	.LVL438:
 10578              	.L255:
 182:utils.h       **** 
 10579              		.loc 27 182 65 view .LVU2203
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 585


 10580              	.LBE6241:
 10581              	.LBE6341:
 10582              	.LBB6342:
 10583              	.LBB6235:
 10584              	.LBB6232:
 10585              	.LBB6229:
 10586              	.LBB6226:
 10587              	.LBB6223:
 10588              	.LBB6220:
 10589              	.LBB6217:
 10590              	.LBB6214:
 10591              	.LBB6211:
 10592              	.LBB6208:
 10593              	.LBB6205:
 10594              	.LBB6191:
 10595              	.LBB6171:
 10596              	.LBB6168:
 10597              	.LBB6159:
 10598              	.LBI6159:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10599              		.loc 4 346 7 is_stmt 1 view .LVU2204
 10600              	.LBB6160:
 10601              	.LBI6160:
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 10602              		.loc 20 387 7 view .LVU2205
 10603              	.LBB6161:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 10604              		.loc 20 389 2 view .LVU2206
 10605 034e 002B     		cmp	r3, #0
 10606 0350 3AD1     		bne	.L305
 10607 0352 2946     		mov	r1, r5
 10608 0354 0DF11409 		add	r9, sp, #20
 10609              	.LVL439:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 10610              		.loc 20 389 2 is_stmt 0 view .LVU2207
 10611 0358 1DE7     		b	.L256
 10612              	.LVL440:
 10613              	.L299:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 10614              		.loc 20 389 2 view .LVU2208
 10615              	.LBE6161:
 10616              	.LBE6160:
 10617              	.LBE6159:
 10618              	.LBE6168:
 10619              	.LBE6171:
 10620              	.LBE6191:
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 10621              		.loc 24 219 13 view .LVU2209
 10622 035a 0DF11409 		add	r9, sp, #20
 10623              	.LVL441:
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 10624              		.loc 24 219 13 view .LVU2210
 10625 035e 0022     		movs	r2, #0
 10626 0360 3146     		mov	r1, r6
 10627 0362 0193     		str	r3, [sp, #4]
 10628 0364 4846     		mov	r0, r9
 10629 0366 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 586


 10630              	.LVL442:
 10631              	.LBB6192:
 10632              	.LBI6192:
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 10633              		.loc 4 178 7 is_stmt 1 view .LVU2211
 10634              	.LBE6192:
 10635              	.LBB6194:
 10636              	.LBB6195:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10637              		.loc 4 211 31 is_stmt 0 view .LVU2212
 10638 036a 0C9A     		ldr	r2, [sp, #48]
 10639 036c 019B     		ldr	r3, [sp, #4]
 10640              	.LBE6195:
 10641              	.LBE6194:
 10642              	.LBB6197:
 10643              	.LBB6193:
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10644              		.loc 4 179 26 view .LVU2213
 10645 036e 0590     		str	r0, [sp, #20]
 10646              	.LVL443:
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10647              		.loc 4 179 26 view .LVU2214
 10648              	.LBE6193:
 10649              	.LBE6197:
 10650              	.LBB6198:
 10651              	.LBI6194:
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 10652              		.loc 4 210 7 is_stmt 1 view .LVU2215
 10653              	.LBB6196:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10654              		.loc 4 211 31 is_stmt 0 view .LVU2216
 10655 0370 0792     		str	r2, [sp, #28]
 10656              	.LVL444:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10657              		.loc 4 211 31 view .LVU2217
 10658              	.LBE6196:
 10659              	.LBE6198:
 10660              	.LBB6199:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10661              		.loc 4 186 7 is_stmt 1 view .LVU2218
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10662              		.loc 4 186 7 is_stmt 0 view .LVU2219
 10663              	.LBE6199:
 10664              	.LBB6200:
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 10665              		.loc 4 392 7 is_stmt 1 view .LVU2220
 10666              	.LBB6172:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10667              		.loc 4 346 7 view .LVU2221
 10668              	.LBB6169:
 10669              	.LBB6166:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10670              		.loc 4 346 7 view .LVU2222
 10671              	.LBB6164:
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 10672              		.loc 20 387 7 view .LVU2223
 10673              	.LBB6162:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 587


 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 10674              		.loc 20 389 2 view .LVU2224
 10675              	.L254:
 10676              		.loc 20 395 2 view .LVU2225
 10677              		.loc 20 395 49 is_stmt 0 view .LVU2226
 10678 0372 1A46     		mov	r2, r3
 10679 0374 4146     		mov	r1, r8
 10680 0376 FFF7FEFF 		bl	memcpy
 10681              	.LVL445:
 10682              		.loc 20 395 49 view .LVU2227
 10683              	.LBE6162:
 10684              	.LBE6164:
 10685              	.LBE6166:
 10686              	.LBE6169:
 10687              	.LBE6172:
 10688              	.LBE6200:
 10689              		.loc 24 232 15 view .LVU2228
 10690 037a 0C9B     		ldr	r3, [sp, #48]
 10691              	.LBB6201:
 10692              	.LBB6189:
 10693              	.LBB6187:
 10694              	.LBB6184:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10695              		.loc 4 187 28 view .LVU2229
 10696 037c 0599     		ldr	r1, [sp, #20]
 10697              	.LBE6184:
 10698              	.LBE6187:
 10699              	.LBE6189:
 10700              	.LBE6201:
 10701              	.LBB6202:
 10702              	.LBB6173:
 10703              	.LBB6170:
 10704              	.LBB6167:
 10705              	.LBB6165:
 10706              	.LBB6163:
 10707              		.loc 20 395 66 view .LVU2230
 10708 037e 0AE7     		b	.L256
 10709              	.LVL446:
 10710              	.L297:
 10711              		.loc 20 395 66 view .LVU2231
 10712              	.LBE6163:
 10713              	.LBE6165:
 10714              	.LBE6167:
 10715              	.LBE6170:
 10716              	.LBE6173:
 10717              	.LBE6202:
 10718              	.LBE6205:
 10719              	.LBE6208:
 10720              	.LBE6211:
 10721              	.LBE6214:
 10722              	.LBE6217:
 10723              	.LBE6220:
 10724              	.LBE6223:
 10725              	.LBE6226:
 10726              	.LBE6229:
 10727              	.LBE6232:
 10728              	.LBE6235:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 588


 10729              	.LBE6342:
 10730              	.LBB6343:
 10731              	.LBB5993:
 10732              	.LBB5985:
 10733              	.LBB5977:
 10734              	.LBB5970:
 10735              	.LBB5963:
 10736              	.LBB5956:
 10737              	.LBB5933:
 10738              	.LBB5928:
 10739              	.LBB5923:
 10740              	.LBB5918:
 10741              	.LBB5913:
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 10742              		.loc 24 219 13 view .LVU2232
 10743 0380 0CAE     		add	r6, sp, #48
 10744              	.LVL447:
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 10745              		.loc 24 219 13 view .LVU2233
 10746 0382 0022     		movs	r2, #0
 10747 0384 05A9     		add	r1, sp, #20
 10748              	.LVL448:
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 10749              		.loc 24 219 13 view .LVU2234
 10750 0386 0193     		str	r3, [sp, #4]
 10751 0388 3046     		mov	r0, r6
 10752              	.LVL449:
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 10753              		.loc 24 219 13 view .LVU2235
 10754 038a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 10755              	.LVL450:
 10756              	.LBB5898:
 10757              	.LBI5898:
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 10758              		.loc 4 178 7 is_stmt 1 view .LVU2236
 10759              	.LBE5898:
 10760              	.LBB5900:
 10761              	.LBB5901:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10762              		.loc 4 211 31 is_stmt 0 view .LVU2237
 10763 038e 059A     		ldr	r2, [sp, #20]
 10764 0390 019B     		ldr	r3, [sp, #4]
 10765              	.LBE5901:
 10766              	.LBE5900:
 10767              	.LBB5903:
 10768              	.LBB5899:
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10769              		.loc 4 179 26 view .LVU2238
 10770 0392 0C90     		str	r0, [sp, #48]
 10771              	.LVL451:
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10772              		.loc 4 179 26 view .LVU2239
 10773              	.LBE5899:
 10774              	.LBE5903:
 10775              	.LBB5904:
 10776              	.LBI5900:
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 589


 10777              		.loc 4 210 7 is_stmt 1 view .LVU2240
 10778              	.LBB5902:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10779              		.loc 4 211 31 is_stmt 0 view .LVU2241
 10780 0394 0E92     		str	r2, [sp, #56]
 10781              	.LVL452:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10782              		.loc 4 211 31 view .LVU2242
 10783              	.LBE5902:
 10784              	.LBE5904:
 10785              	.LBB5905:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10786              		.loc 4 186 7 is_stmt 1 view .LVU2243
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10787              		.loc 4 186 7 is_stmt 0 view .LVU2244
 10788              	.LBE5905:
 10789              	.LBB5906:
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 10790              		.loc 4 392 7 is_stmt 1 view .LVU2245
 10791              	.LBB5878:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10792              		.loc 4 346 7 view .LVU2246
 10793              	.LBB5875:
 10794              	.LBB5872:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10795              		.loc 4 346 7 view .LVU2247
 10796              	.LBB5870:
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 10797              		.loc 20 387 7 view .LVU2248
 10798              	.LBB5868:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 10799              		.loc 20 389 2 view .LVU2249
 10800              	.L241:
 10801              		.loc 20 395 2 view .LVU2250
 10802              		.loc 20 395 49 is_stmt 0 view .LVU2251
 10803 0396 1A46     		mov	r2, r3
 10804 0398 2946     		mov	r1, r5
 10805 039a FFF7FEFF 		bl	memcpy
 10806              	.LVL453:
 10807              		.loc 20 395 49 view .LVU2252
 10808              	.LBE5868:
 10809              	.LBE5870:
 10810              	.LBE5872:
 10811              	.LBE5875:
 10812              	.LBE5878:
 10813              	.LBE5906:
 10814              		.loc 24 232 15 view .LVU2253
 10815 039e 059B     		ldr	r3, [sp, #20]
 10816              	.LBB5907:
 10817              	.LBB5895:
 10818              	.LBB5893:
 10819              	.LBB5890:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10820              		.loc 4 187 28 view .LVU2254
 10821 03a0 0C99     		ldr	r1, [sp, #48]
 10822              	.LBE5890:
 10823              	.LBE5893:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 590


 10824              	.LBE5895:
 10825              	.LBE5907:
 10826              	.LBB5908:
 10827              	.LBB5879:
 10828              	.LBB5876:
 10829              	.LBB5873:
 10830              	.LBB5871:
 10831              	.LBB5869:
 10832              		.loc 20 395 66 view .LVU2255
 10833 03a2 4BE6     		b	.L243
 10834              	.LVL454:
 10835              	.L301:
 10836              		.loc 20 395 66 view .LVU2256
 10837              	.LBE5869:
 10838              	.LBE5871:
 10839              	.LBE5873:
 10840              	.LBE5876:
 10841              	.LBE5879:
 10842              	.LBE5908:
 10843              	.LBE5913:
 10844              	.LBE5918:
 10845              	.LBE5923:
 10846              	.LBE5928:
 10847              	.LBE5933:
 10848              	.LBE5956:
 10849              	.LBE5963:
 10850              	.LBE5970:
 10851              	.LBE5977:
 10852              	.LBE5985:
 10853              	.LBE5993:
 10854              	.LBE6343:
 10855              	.LBB6344:
 10856              	.LBB6242:
 166:utils.h       **** 
 10857              		.loc 27 166 9 view .LVU2257
 10858 03a4 821D     		adds	r2, r0, #6
 171:utils.h       ****         scale_midi[4] = scale_midi[0] + 6; // Dim 5th
 10859              		.loc 27 171 12 view .LVU2258
 10860 03a6 032B     		cmp	r3, #3
 165:utils.h       ****         + (chord.extension == ELEVENTH ? 6 : 5); // 4th or #4th if (sharp) eleventh chord
 10861              		.loc 27 165 19 view .LVU2259
 10862 03a8 0F92     		str	r2, [sp, #60]
 169:utils.h       ****         scale_midi[4] = scale_midi[0] + 8; // Aug 5th
 10863              		.loc 27 169 5 is_stmt 1 view .LVU2260
 171:utils.h       ****         scale_midi[4] = scale_midi[0] + 6; // Dim 5th
 10864              		.loc 27 171 12 view .LVU2261
 10865 03aa 11D1     		bne	.L306
 10866              	.L267:
 172:utils.h       ****     } else {
 10867              		.loc 27 172 9 view .LVU2262
 178:utils.h       **** 
 10868              		.loc 27 178 35 is_stmt 0 view .LVU2263
 10869 03ac 00F10903 		add	r3, r0, #9
 10870 03b0 1092     		str	r2, [sp, #64]
 178:utils.h       **** 
 10871              		.loc 27 178 5 is_stmt 1 view .LVU2264
 178:utils.h       **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 591


 10872              		.loc 27 178 19 is_stmt 0 view .LVU2265
 10873 03b2 1193     		str	r3, [sp, #68]
 181:utils.h       ****         + (chord.quality == MAJOR || chord.quality == AUGMENTED ? 11 : 10); // maj7 or b7
 10874              		.loc 27 181 5 is_stmt 1 view .LVU2266
 10875              	.L262:
 182:utils.h       **** 
 10876              		.loc 27 182 65 is_stmt 0 view .LVU2267
 10877 03b4 0A23     		movs	r3, #10
 10878 03b6 18E7     		b	.L260
 10879              	.L302:
 10880 03b8 821D     		adds	r2, r0, #6
 10881 03ba F7E7     		b	.L267
 10882              	.LVL455:
 10883              	.L247:
 182:utils.h       **** 
 10884              		.loc 27 182 65 view .LVU2268
 10885              	.LBE6242:
 10886              	.LBE6344:
 10887              	.LBB6345:
 10888              	.LBB5994:
 10889              	.LBB5986:
 10890              	.LBB5978:
 10891              	.LBB5971:
 10892              	.LBB5964:
 10893              	.LBB5957:
 10894              	.LBB5934:
 10895              	.LBB5929:
 10896              	.LBB5924:
 10897              	.LBB5919:
 10898              	.LBB5914:
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 10899              		.loc 24 212 28 view .LVU2269
 10900 03bc 0D48     		ldr	r0, .L307+24
 10901 03be FFF7FEFF 		bl	_ZSt19__throw_logic_errorPKc
 10902              	.LVL456:
 10903              	.L304:
 10904              	.LBB5909:
 10905              	.LBB5859:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10906              		.loc 4 187 28 view .LVU2270
 10907 03c2 4046     		mov	r0, r8
 10908              	.LVL457:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10909              		.loc 4 187 28 view .LVU2271
 10910 03c4 0CAE     		add	r6, sp, #48
 10911              	.LVL458:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10912              		.loc 4 187 28 view .LVU2272
 10913 03c6 E6E7     		b	.L241
 10914              	.LVL459:
 10915              	.L305:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10916              		.loc 4 187 28 view .LVU2273
 10917              	.LBE5859:
 10918              	.LBE5909:
 10919              	.LBE5914:
 10920              	.LBE5919:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 592


 10921              	.LBE5924:
 10922              	.LBE5929:
 10923              	.LBE5934:
 10924              	.LBE5957:
 10925              	.LBE5964:
 10926              	.LBE5971:
 10927              	.LBE5978:
 10928              	.LBE5986:
 10929              	.LBE5994:
 10930              	.LBE6345:
 10931              	.LBB6346:
 10932              	.LBB6236:
 10933              	.LBB6233:
 10934              	.LBB6230:
 10935              	.LBB6227:
 10936              	.LBB6224:
 10937              	.LBB6221:
 10938              	.LBB6218:
 10939              	.LBB6215:
 10940              	.LBB6212:
 10941              	.LBB6209:
 10942              	.LBB6206:
 10943              	.LBB6203:
 10944              	.LBB6153:
 10945 03c8 2846     		mov	r0, r5
 10946 03ca 0DF11409 		add	r9, sp, #20
 10947              	.LVL460:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10948              		.loc 4 187 28 view .LVU2274
 10949 03ce D0E7     		b	.L254
 10950              	.LVL461:
 10951              	.L306:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10952              		.loc 4 187 28 view .LVU2275
 10953              	.LBE6153:
 10954              	.LBE6203:
 10955              	.LBE6206:
 10956              	.LBE6209:
 10957              	.LBE6212:
 10958              	.LBE6215:
 10959              	.LBE6218:
 10960              	.LBE6221:
 10961              	.LBE6224:
 10962              	.LBE6227:
 10963              	.LBE6230:
 10964              	.LBE6233:
 10965              	.LBE6236:
 10966              	.LBE6346:
 10967              	.LBB6347:
 10968              	.LBB6243:
 174:utils.h       ****     }
 10969              		.loc 27 174 9 is_stmt 1 view .LVU2276
 174:utils.h       ****     }
 10970              		.loc 27 174 39 is_stmt 0 view .LVU2277
 10971 03d0 C31D     		adds	r3, r0, #7
 10972 03d2 1093     		str	r3, [sp, #64]
 178:utils.h       **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 593


 10973              		.loc 27 178 5 is_stmt 1 view .LVU2278
 178:utils.h       **** 
 10974              		.loc 27 178 35 is_stmt 0 view .LVU2279
 10975 03d4 00F10903 		add	r3, r0, #9
 178:utils.h       **** 
 10976              		.loc 27 178 19 view .LVU2280
 10977 03d8 1193     		str	r3, [sp, #68]
 181:utils.h       ****         + (chord.quality == MAJOR || chord.quality == AUGMENTED ? 11 : 10); // maj7 or b7
 10978              		.loc 27 181 5 is_stmt 1 view .LVU2281
 10979 03da EBE7     		b	.L262
 10980              	.L308:
 10981              		.align	2
 10982              	.L307:
 10983 03dc 0000C842 		.word	1120403456
 10984 03e0 00008A42 		.word	1116340224
 10985 03e4 0000DC43 		.word	1138491392
 10986 03e8 00007A43 		.word	1132068864
 10987 03ec CDCCCC3D 		.word	1036831949
 10988 03f0 00002F45 		.word	1160708096
 10989 03f4 00000000 		.word	.LC1
 10990              	.LBE6243:
 10991              	.LBE6347:
 10992              		.cfi_endproc
 10993              	.LFE4290:
 10995              		.weak	_ZGVZ17note_name_to_midiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE13fourth_octa
 10996              		.section	.bss._ZGVZ17note_name_to_midiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE13fou
 10997              		.align	2
 11000              	_ZGVZ17note_name_to_midiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE13fourth_octaveB5cxx
 11001 0000 00000000 		.space	4
 11002              		.weak	_ZZ17note_name_to_midiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE13fourth_octave
 11003              		.section	.bss._ZZ17note_name_to_midiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE13fourt
 11004              		.align	2
 11007              	_ZZ17note_name_to_midiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE13fourth_octaveB5cxx11
 11008 0000 00000000 		.space	28
 11008      00000000 
 11008      00000000 
 11008      00000000 
 11008      00000000 
 11009              		.text
 11010              	.Letext0:
 11011              		.file 31 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 11012              		.file 32 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 11013              		.file 33 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdint.h"
 11014              		.file 34 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stddef.h"
 11015              		.file 35 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cmath"
 11016              		.file 36 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\std_abs.h"
 11017              		.file 37 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdint"
 11018              		.file 38 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdlib"
 11019              		.file 39 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\type_traits"
 11020              		.file 40 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\arm-none-eabi\\t
 11021              		.file 41 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\cpp_type_t
 11022              		.file 42 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_iterat
 11023              		.file 43 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\debug\\debug.h"
 11024              		.file 44 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cwchar"
 11025              		.file 45 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\exception_
 11026              		.file 46 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\clocale"
 11027              		.file 47 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdio"
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 594


 11028              		.file 48 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stringfwd.
 11029              		.file 49 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\charconv.h
 11030              		.file 50 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\utility"
 11031              		.file 51 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\algorithmf
 11032              		.file 52 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstring"
 11033              		.file 53 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\uses_alloc
 11034              		.file 54 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\tuple"
 11035              		.file 55 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\ptr_traits
 11036              		.file 56 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\functexcep
 11037              		.file 57 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\hash_bytes
 11038              		.file 58 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\predefined
 11039              		.file 59 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\ext\\aligned_buf
 11040              		.file 60 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\ext\\type_traits
 11041              		.file 61 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_types.h"
 11042              		.file 62 "<built-in>"
 11043              		.file 63 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\reent.h"
 11044              		.file 64 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\lock.h"
 11045              		.file 65 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\math.h"
 11046              		.file 66 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdlib.h"
 11047              		.file 67 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\math.h"
 11048              		.file 68 "../../DaisySP//Source/Control/adenv.h"
 11049              		.file 69 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stdarg.h"
 11050              		.file 70 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\wchar.h"
 11051              		.file 71 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\locale.h"
 11052              		.file 72 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdio.h"
 11053              		.file 73 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\stdlib.h"
 11054              		.file 74 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\string.h"
 11055              		.file 75 "ChordSynth.h"
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 595


DEFINED SYMBOLS
                            *ABS*:00000000 ChordSynth.cpp
C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s:17     .text._ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_iEEED2Ev:00000000 $t
C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s:26     .text._ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_iEEED2Ev:00000000 _ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_iEEED2Ev
C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s:26     .text._ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_iEEED2Ev:00000000 _ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_iEEED1Ev
C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s:394    .text._ZN10ChordSynth13set_bass_noteEh:00000000 $t
C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s:402    .text._ZN10ChordSynth13set_bass_noteEh:00000000 _ZN10ChordSynth13set_bass_noteEh
C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s:518    .text._ZN10ChordSynth13set_bass_noteEh:00000054 $d
C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s:525    .text._ZN10ChordSynth7processEv:00000000 $t
C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s:533    .text._ZN10ChordSynth7processEv:00000000 _ZN10ChordSynth7processEv
C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s:682    .text._ZN10ChordSynth7processEv:00000064 $d
C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s:687    .rodata._ZNSt6vectorIN7daisysp10OscillatorESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_.str1.4:00000000 $d
C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s:691    .text._ZNSt6vectorIN7daisysp10OscillatorESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:00000000 $t
C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s:699    .text._ZNSt6vectorIN7daisysp10OscillatorESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:00000000 _ZNSt6vectorIN7daisysp10OscillatorESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s:1219   .text._ZNSt6vectorIN7daisysp10OscillatorESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:0000011c $d
C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s:1230   .text._ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_:00000000 $t
C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s:1238   .text._ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_:00000000 _ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_
C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s:1747   .text._ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_:000000cc $d
C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s:1755   .text._ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_find_before_nodeEjRS7_j:00000000 $t
C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s:1763   .text._ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_find_before_nodeEjRS7_j:00000000 _ZNKSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_find_before_nodeEjRS7_j
C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s:1945   .rodata._ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEEC2IPKS8_EET_SP_jRKSF_RKSG_RKSH_RKSD_RKSB_RKS9_.str1.4:00000000 $d
C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s:1949   .text._ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEEC2IPKS8_EET_SP_jRKSF_RKSG_RKSH_RKSD_RKSB_RKS9_:00000000 $t
C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s:1957   .text._ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEEC2IPKS8_EET_SP_jRKSF_RKSG_RKSH_RKSD_RKSB_RKS9_:00000000 _ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEEC2IPKS8_EET_SP_jRKSF_RKSG_RKSH_RKSD_RKSB_RKS9_
C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s:3691   .text._ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEEC2IPKS8_EET_SP_jRKSF_RKSG_RKSH_RKSD_RKSB_RKS9_:0000026c $d
C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s:1957   .text._ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEEC2IPKS8_EET_SP_jRKSF_RKSG_RKSH_RKSD_RKSB_RKS9_:00000000 _ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEEC1IPKS8_EET_SP_jRKSF_RKSG_RKSH_RKSD_RKSB_RKS9_
C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s:3720   .rodata._Z17note_name_to_midiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.str1.4:00000000 $d
C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s:3724   .text._Z17note_name_to_midiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:00000000 $t
C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s:3732   .text._Z17note_name_to_midiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:00000000 _Z17note_name_to_midiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s:7205   .text._Z17note_name_to_midiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:000001dc $d
C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s:11000  .bss._ZGVZ17note_name_to_midiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE13fourth_octaveB5cxx11:00000000 _ZGVZ17note_name_to_midiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE13fourth_octaveB5cxx11
C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s:11007  .bss._ZZ17note_name_to_midiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE13fourth_octaveB5cxx11:00000000 _ZZ17note_name_to_midiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE13fourth_octaveB5cxx11
C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s:7218   .text._Z13chord_to_midi5Chord:00000000 $t
C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s:7226   .text._Z13chord_to_midi5Chord:00000000 _Z13chord_to_midi5Chord
C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s:7374   .text._Z13chord_to_midi5Chord:00000032 $d
C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s:7378   .text._Z13chord_to_midi5Chord:00000036 $t
C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s:7542   .text._Z13chord_to_midi5Chord:00000076 $d
C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s:7546   .text._Z13chord_to_midi5Chord:0000007a $t
C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s:8757   .text._ZN10ChordSynth9set_chordE5Chord:00000000 $t
C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s:8765   .text._ZN10ChordSynth9set_chordE5Chord:00000000 _ZN10ChordSynth9set_chordE5Chord
C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s:10983  .text._ZN10ChordSynth9set_chordE5Chord:000003dc $d
C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s:10997  .bss._ZGVZ17note_name_to_midiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE13fourth_octaveB5cxx11:00000000 $d
C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s:11004  .bss._ZZ17note_name_to_midiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE13fourth_octaveB5cxx11:00000000 $d
                           .group:00000000 _ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_iEEED5Ev
                           .group:00000000 _ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESaIS8_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb1ELb0ELb1EEEEC5IPKS8_EET_SP_jRKSF_RKSG_RKSH_RKSD_RKSB_RKS9_

UNDEFINED SYMBOLS
_ZdlPvj
memset
_ZN7daisysp10Oscillator12CalcPhaseIncEf
powf
_ZN7daisysp10Oscillator7ProcessEv
_ZN7daisysp3Svf7ProcessEf
memcpy
_Znwj
_ZSt20__throw_length_errorPKc
memmove
memcmp
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccGbJAvD.s 			page 596


_ZNKSt8__detail20_Prime_rehash_policy11_M_next_bktEj
_ZSt11_Hash_bytesPKvjj
_ZNKSt8__detail20_Prime_rehash_policy14_M_need_rehashEjjj
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
_ZSt17__throw_bad_allocv
_ZSt19__throw_logic_errorPKc
__cxa_guard_acquire
__cxa_guard_release
__aeabi_atexit
_ZSt20__throw_out_of_rangePKc
__dso_handle
_ZN7daisysp3Svf4InitEf
_ZN7daisysp3Svf7SetFreqEf
_ZN7daisysp3Svf6SetResEf
