ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"Sequencer.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.rodata._ZNSt6vectorIbSaIbEE13_M_assign_auxIPKbEEvT_S5_St20forward_iterator_tag.isra.0.st
  17              		.align	2
  18              	.LC3:
  19 0000 76656374 		.ascii	"vector<bool>::_M_insert_range\000"
  19      6F723C62 
  19      6F6F6C3E 
  19      3A3A5F4D 
  19      5F696E73 
  20              		.section	.text._ZNSt6vectorIbSaIbEE13_M_assign_auxIPKbEEvT_S5_St20forward_iterator_tag.isra.0,"ax"
  21              		.align	1
  22              		.p2align 2,,3
  23              		.arch armv7e-m
  24              		.syntax unified
  25              		.thumb
  26              		.thumb_func
  27              		.fpu fpv5-d16
  29              	_ZNSt6vectorIbSaIbEE13_M_assign_auxIPKbEEvT_S5_St20forward_iterator_tag.isra.0:
  30              	.LVL0:
  31              	.LFB4571:
  32              		.file 1 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_bvector
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // vector<bool> specialization -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 2


  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * Copyright (c) 1996-1999
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * representations about the suitability of this software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** /** @file bits/stl_bvector.h
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  *  Do not attempt to use it directly. @headername{vector}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #ifndef _STL_BVECTOR_H
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #define _STL_BVECTOR_H 1
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #include <initializer_list>
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #include <bits/functional_hash.h>
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** namespace std _GLIBCXX_VISIBILITY(default)
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** {
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   typedef unsigned long _Bit_type;
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   enum { _S_word_bit = int(__CHAR_BIT__ * sizeof(_Bit_type)) };
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   struct _Bit_reference
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   {
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _Bit_type * _M_p;
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _Bit_type _M_mask;
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _Bit_reference(_Bit_type * __x, _Bit_type __y)
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_mask(__y) { }
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 3


  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _Bit_reference() _GLIBCXX_NOEXCEPT : _M_p(0), _M_mask(0) { }
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _Bit_reference(const _Bit_reference&) = default;
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator bool() const _GLIBCXX_NOEXCEPT
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return !!(*_M_p & _M_mask); }
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _Bit_reference&
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator=(bool __x) _GLIBCXX_NOEXCEPT
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__x)
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	*_M_p |= _M_mask;
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       else
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	*_M_p &= ~_M_mask;
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _Bit_reference&
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator=(const _Bit_reference& __x) _GLIBCXX_NOEXCEPT
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return *this = bool(__x); }
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     bool
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator==(const _Bit_reference& __x) const
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return bool(*this) == bool(__x); }
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     bool
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator<(const _Bit_reference& __x) const
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return !bool(*this) && bool(__x); }
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     void
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     flip() _GLIBCXX_NOEXCEPT
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { *_M_p ^= _M_mask; }
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   };
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   inline void
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   swap(_Bit_reference __x, _Bit_reference __y) noexcept
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   {
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     bool __tmp = __x;
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     __x = __y;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     __y = __tmp;
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   }
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   inline void
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   swap(_Bit_reference __x, bool& __y) noexcept
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   {
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     bool __tmp = __x;
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     __x = __y;
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     __y = __tmp;
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   }
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   inline void
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   swap(bool& __x, _Bit_reference __y) noexcept
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   {
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     bool __tmp = __x;
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 4


 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     __x = __y;
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     __y = __tmp;
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   }
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   struct _Bit_iterator_base
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   : public std::iterator<std::random_access_iterator_tag, bool>
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   {
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _Bit_type * _M_p;
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     unsigned int _M_offset;
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _Bit_iterator_base(_Bit_type * __x, unsigned int __y)
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     void
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _M_bump_up()
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (_M_offset++ == int(_S_word_bit) - 1)
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_offset = 0;
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  ++_M_p;
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     void
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _M_bump_down()
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (_M_offset-- == 0)
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_offset = int(_S_word_bit) - 1;
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  --_M_p;
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     void
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _M_incr(ptrdiff_t __i)
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       difference_type __n = __i + _M_offset;
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_p += __n / int(_S_word_bit);
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  __n += int(_S_word_bit);
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  --_M_p;
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_offset = static_cast<unsigned int>(__n);
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     friend _GLIBCXX20_CONSTEXPR bool
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator==(const _Bit_iterator_base& __x, const _Bit_iterator_base& __y)
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return __x._M_p == __y._M_p && __x._M_offset == __y._M_offset; }
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cpp_lib_three_way_comparison
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     friend constexpr strong_ordering
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator<=>(const _Bit_iterator_base& __x, const _Bit_iterator_base& __y)
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     noexcept
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 5


 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (const auto __cmp = __x._M_p <=> __y._M_p; __cmp != 0)
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	return __cmp;
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __x._M_offset <=> __y._M_offset;
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     friend bool
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator<(const _Bit_iterator_base& __x, const _Bit_iterator_base& __y)
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __x._M_p < __y._M_p
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    || (__x._M_p == __y._M_p && __x._M_offset < __y._M_offset);
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     friend bool
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator!=(const _Bit_iterator_base& __x, const _Bit_iterator_base& __y)
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return !(__x == __y); }
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     friend bool
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator>(const _Bit_iterator_base& __x, const _Bit_iterator_base& __y)
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return __y < __x; }
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     friend bool
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator<=(const _Bit_iterator_base& __x, const _Bit_iterator_base& __y)
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return !(__y < __x); }
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     friend bool
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator>=(const _Bit_iterator_base& __x, const _Bit_iterator_base& __y)
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return !(__x < __y); }
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif // three-way comparison
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     friend ptrdiff_t
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator-(const _Bit_iterator_base& __x, const _Bit_iterator_base& __y)
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return (int(_S_word_bit) * (__x._M_p - __y._M_p)
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   };
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   struct _Bit_iterator : public _Bit_iterator_base
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   {
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     typedef _Bit_reference  reference;
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus > 201703L
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     typedef void	    pointer;
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     typedef _Bit_reference* pointer;
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     typedef _Bit_iterator   iterator;
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _Bit_iterator() : _Bit_iterator_base(0, 0) { }
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _Bit_iterator(_Bit_type * __x, unsigned int __y)
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     iterator
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _M_const_cast() const
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return *this; }
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     reference
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 6


 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator*() const
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return reference(_M_p, 1UL << _M_offset); }
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     iterator&
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator++()
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_bump_up();
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     iterator
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator++(int)
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       iterator __tmp = *this;
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_bump_up();
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __tmp;
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     iterator&
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator--()
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_bump_down();
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     iterator
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator--(int)
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       iterator __tmp = *this;
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_bump_down();
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __tmp;
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     iterator&
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator+=(difference_type __i)
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_incr(__i);
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     iterator&
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator-=(difference_type __i)
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       *this += -__i;
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     reference
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator[](difference_type __i) const
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return *(*this + __i); }
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     friend iterator
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator+(const iterator& __x, difference_type __n)
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       iterator __tmp = __x;
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __tmp += __n;
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __tmp;
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 7


 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     friend iterator
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator+(difference_type __n, const iterator& __x)
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return __x + __n; }
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     friend iterator
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator-(const iterator& __x, difference_type __n)
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       iterator __tmp = __x;
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __tmp -= __n;
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __tmp;
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   };
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   struct _Bit_const_iterator : public _Bit_iterator_base
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   {
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     typedef bool                 reference;
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     typedef bool                 const_reference;
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus > 201703L
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     typedef void	    pointer;
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     typedef const bool*          pointer;
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     typedef _Bit_const_iterator  const_iterator;
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _Bit_const_iterator() : _Bit_iterator_base(0, 0) { }
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _Bit_const_iterator(_Bit_type * __x, unsigned int __y)
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _Bit_const_iterator(const _Bit_iterator& __x)
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x._M_p, __x._M_offset) { }
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _Bit_iterator
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _M_const_cast() const
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return _Bit_iterator(_M_p, _M_offset); }
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     const_reference
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator*() const
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return _Bit_reference(_M_p, 1UL << _M_offset); }
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     const_iterator&
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator++()
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_bump_up();
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     const_iterator
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator++(int)
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       const_iterator __tmp = *this;
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_bump_up();
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __tmp;
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 8


 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     const_iterator&
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator--()
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_bump_down();
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     const_iterator
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator--(int)
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       const_iterator __tmp = *this;
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_bump_down();
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __tmp;
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     const_iterator&
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator+=(difference_type __i)
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_incr(__i);
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     const_iterator&
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator-=(difference_type __i)
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       *this += -__i;
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     const_reference
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator[](difference_type __i) const
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return *(*this + __i); }
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     friend const_iterator
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator+(const const_iterator& __x, difference_type __n)
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       const_iterator __tmp = __x;
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __tmp += __n;
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __tmp;
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     friend const_iterator
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator-(const const_iterator& __x, difference_type __n)
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       const_iterator __tmp = __x;
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __tmp -= __n;
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __tmp;
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     friend const_iterator
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator+(difference_type __n, const const_iterator& __x)
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return __x + __n; }
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   };
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   inline void
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   __fill_bvector(_Bit_type * __v,
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 		 unsigned int __first, unsigned int __last, bool __x)
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 9


 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   {
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     const _Bit_type __fmask = ~0ul << __first;
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     const _Bit_type __lmask = ~0ul >> (_S_word_bit - __last);
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     const _Bit_type __mask = __fmask & __lmask;
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     if (__x)
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       *__v |= __mask;
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     else
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       *__v &= ~__mask;
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   }
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   inline void
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   fill(_Bit_iterator __first, _Bit_iterator __last, const bool& __x)
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   {
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     if (__first._M_p != __last._M_p)
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_Bit_type* __first_p = __first._M_p;
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (__first._M_offset != 0)
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  __fill_bvector(__first_p++, __first._M_offset, _S_word_bit, __x);
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	__builtin_memset(__first_p, __x ? ~0 : 0,
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			 (__last._M_p - __first_p) * sizeof(_Bit_type));
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (__last._M_offset != 0)
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  __fill_bvector(__last._M_p, 0, __last._M_offset, __x);
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     else if (__first._M_offset != __last._M_offset)
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __fill_bvector(__first._M_p, __first._M_offset, __last._M_offset, __x);
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   }
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   template<typename _Alloc>
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     struct _Bvector_base
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****         rebind<_Bit_type>::other _Bit_alloc_type;
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Bit_alloc_type>
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_Bit_alloc_traits;
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef typename _Bit_alloc_traits::pointer _Bit_pointer;
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       struct _Bvector_impl_data
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_Bit_iterator 	_M_start;
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_Bit_iterator 	_M_finish;
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_Bit_pointer 	_M_end_of_storage;
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_Bvector_impl_data() _GLIBCXX_NOEXCEPT
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ }
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_Bvector_impl_data(_Bvector_impl_data&& __x) noexcept
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish)
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	, _M_end_of_storage(__x._M_end_of_storage)
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_move_data(_Bvector_impl_data&& __x) noexcept
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 10


 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  this->_M_start = __x._M_start;
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  this->_M_finish = __x._M_finish;
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  this->_M_end_of_storage = __x._M_end_of_storage;
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  __x._M_reset();
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_reset() _GLIBCXX_NOEXCEPT
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_start = _M_finish = _Bit_iterator();
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_end_of_storage = _Bit_pointer();
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       };
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       struct _Bvector_impl
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: public _Bit_alloc_type, public _Bvector_impl_data
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	public:
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _Bvector_impl() _GLIBCXX_NOEXCEPT_IF(
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 		is_nothrow_default_constructible<_Bit_alloc_type>::value)
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  : _Bit_alloc_type()
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  { }
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _Bvector_impl(const _Bit_alloc_type& __a) _GLIBCXX_NOEXCEPT
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  : _Bit_alloc_type(__a)
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  { }
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_Bvector_impl(_Bvector_impl&&) = default;
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_Bit_type*
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_end_addr() const _GLIBCXX_NOEXCEPT
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  if (this->_M_end_of_storage)
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    return std::__addressof(this->_M_end_of_storage[-1]) + 1;
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  return 0;
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       };
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     public:
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef _Alloc allocator_type;
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _Bit_alloc_type&
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_get_Bit_allocator() _GLIBCXX_NOEXCEPT
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl; }
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       const _Bit_alloc_type&
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_get_Bit_allocator() const _GLIBCXX_NOEXCEPT
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl; }
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       allocator_type
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return allocator_type(_M_get_Bit_allocator()); }
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 11


 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _Bvector_base() = default;
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _Bvector_base() { }
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _Bvector_base(const allocator_type& __a)
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       : _M_impl(__a) { }
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _Bvector_base(_Bvector_base&&) = default;
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       ~_Bvector_base()
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { this->_M_deallocate(); }
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     protected:
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _Bvector_impl _M_impl;
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _Bit_pointer
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_allocate(size_t __n)
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return _Bit_alloc_traits::allocate(_M_impl, _S_nword(__n)); }
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_deallocate()
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (_M_impl._M_start._M_p)
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    const size_t __n = _M_impl._M_end_addr() - _M_impl._M_start._M_p;
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    _Bit_alloc_traits::deallocate(_M_impl,
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 					  _M_impl._M_end_of_storage - __n,
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 					  __n);
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    _M_impl._M_reset();
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_move_data(_Bvector_base&& __x) noexcept
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { _M_impl._M_move_data(std::move(__x._M_impl)); }
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       static size_t
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _S_nword(size_t __n)
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return (__n + int(_S_word_bit) - 1) / int(_S_word_bit); }
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     };
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** _GLIBCXX_END_NAMESPACE_CONTAINER
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** _GLIBCXX_END_NAMESPACE_VERSION
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** } // namespace std
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // Declare a partial specialization of vector<T, Alloc>.
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #include <bits/stl_vector.h>
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** namespace std _GLIBCXX_VISIBILITY(default)
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** {
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 12


 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   /**
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****    *  @brief  A specialization of vector for booleans which offers fixed time
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****    *  access to individual elements in any order.
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****    *
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****    *  @ingroup sequences
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****    *
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****    *  @tparam _Alloc  Allocator type.
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****    *
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****    *  Note that vector<bool> does not actually meet the requirements for being
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****    *  a container.  This is because the reference and pointer types are not
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****    *  really references and pointers to bool.  See DR96 for details.  @see
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****    *  vector for function documentation.
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****    *
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****    *  In some terminology a %vector can be described as a dynamic
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****    *  C-style array, it offers fast and efficient access to individual
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****    *  elements in any order and saves the user from worrying about
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****    *  memory and size allocation.  Subscripting ( @c [] ) access is
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****    *  also provided as with C-style arrays.
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   */
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   template<typename _Alloc>
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     class vector<bool, _Alloc> : protected _Bvector_base<_Alloc>
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef _Bvector_base<_Alloc>			_Base;
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef typename _Base::_Bit_pointer		_Bit_pointer;
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef typename _Base::_Bit_alloc_traits		_Bit_alloc_traits;
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       friend struct std::hash<vector>;
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     public:
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef bool					value_type;
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef size_t					size_type;
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef ptrdiff_t					difference_type;
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef _Bit_reference				reference;
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef bool					const_reference;
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef _Bit_reference*				pointer;
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef const bool*				const_pointer;
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef _Bit_iterator				iterator;
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef _Bit_const_iterator			const_iterator;
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef _Alloc					allocator_type;
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       allocator_type
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       get_allocator() const
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return _Base::get_allocator(); }
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     protected:
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       using _Base::_M_allocate;
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       using _Base::_M_deallocate;
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       using _Base::_S_nword;
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       using _Base::_M_get_Bit_allocator;
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     public:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 13


 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       vector() = default;
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       vector() { }
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       explicit
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       vector(const allocator_type& __a)
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       : _Base(__a) { }
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       explicit
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       vector(size_type __n, const allocator_type& __a = allocator_type())
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       : vector(__n, false, __a)
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { }
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       vector(size_type __n, const bool& __value,
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	     const allocator_type& __a = allocator_type())
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       explicit
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       vector(size_type __n, const bool& __value = bool(),
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	     const allocator_type& __a = allocator_type())
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       : _Base(__a)
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_initialize(__n);
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_initialize_value(__value);
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       vector(const vector& __x)
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       : _Base(_Bit_alloc_traits::_S_select_on_copy(__x._M_get_Bit_allocator()))
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_initialize(__x.size());
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_copy_aligned(__x.begin(), __x.end(), this->_M_impl._M_start);
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       vector(vector&&) = default;
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       vector(vector&& __x, const allocator_type& __a)
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       noexcept(_Bit_alloc_traits::_S_always_equal())
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       : _Base(__a)
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (__x.get_allocator() == __a)
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  this->_M_move_data(std::move(__x));
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	else
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    _M_initialize(__x.size());
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    _M_copy_aligned(__x.begin(), __x.end(), begin());
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    __x.clear();
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       vector(const vector& __x, const allocator_type& __a)
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       : _Base(__a)
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_initialize(__x.size());
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 14


 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_copy_aligned(__x.begin(), __x.end(), this->_M_impl._M_start);
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       vector(initializer_list<bool> __l,
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	     const allocator_type& __a = allocator_type())
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       : _Base(__a)
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_initialize_range(__l.begin(), __l.end(),
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			    random_access_iterator_tag());
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename _InputIterator,
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	       const allocator_type& __a = allocator_type())
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: _Base(__a)
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ _M_initialize_dispatch(__first, __last, __false_type()); }
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename _InputIterator>
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	       const allocator_type& __a = allocator_type())
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: _Base(__a)
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_initialize_dispatch(__first, __last, _Integral());
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       ~vector() _GLIBCXX_NOEXCEPT { }
 738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       vector&
 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       operator=(const vector& __x)
 741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (&__x == this)
 743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  return *this;
 744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (_Bit_alloc_traits::_S_propagate_on_copy_assign())
 746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    if (this->_M_get_Bit_allocator() != __x._M_get_Bit_allocator())
 748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      {
 749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 		this->_M_deallocate();
 750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 		std::__alloc_on_copy(_M_get_Bit_allocator(),
 751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 				     __x._M_get_Bit_allocator());
 752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 		_M_initialize(__x.size());
 753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      }
 754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    else
 755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      std::__alloc_on_copy(_M_get_Bit_allocator(),
 756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 				   __x._M_get_Bit_allocator());
 757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (__x.size() > capacity())
 760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    this->_M_deallocate();
 762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    _M_initialize(__x.size());
 763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 15


 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	this->_M_impl._M_finish = _M_copy_aligned(__x.begin(), __x.end(),
 765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 						  begin());
 766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	return *this;
 767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
 770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       vector&
 771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       operator=(vector&& __x) noexcept(_Bit_alloc_traits::_S_nothrow_move())
 772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (_Bit_alloc_traits::_S_propagate_on_move_assign()
 774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    || this->_M_get_Bit_allocator() == __x._M_get_Bit_allocator())
 775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    this->_M_deallocate();
 777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    this->_M_move_data(std::move(__x));
 778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    std::__alloc_on_move(_M_get_Bit_allocator(),
 779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 				 __x._M_get_Bit_allocator());
 780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	else
 782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    if (__x.size() > capacity())
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      {
 785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 		this->_M_deallocate();
 786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 		_M_initialize(__x.size());
 787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      }
 788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    this->_M_impl._M_finish = _M_copy_aligned(__x.begin(), __x.end(),
 789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 						      begin());
 790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    __x.clear();
 791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	return *this;
 793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       vector&
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       operator=(initializer_list<bool> __l)
 797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	this->assign (__l.begin(), __l.end());
 799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	return *this;
 800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // assign(), a generalized assignment member function.  Two
 804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // versions: one that takes a count, and one that takes a range.
 805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // The range version is a member template, so we dispatch on whether
 806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // or not the type is an integer.
 807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
 808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       assign(size_type __n, const bool& __x)
 809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { _M_fill_assign(__n, __x); }
 810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
 812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename _InputIterator,
 813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	assign(_InputIterator __first, _InputIterator __last)
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ _M_assign_aux(__first, __last, std::__iterator_category(__first)); }
 817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename _InputIterator>
 819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	assign(_InputIterator __first, _InputIterator __last)
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 16


 821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_assign_dispatch(__first, __last, _Integral());
 824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
 828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       assign(initializer_list<bool> __l)
 830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { _M_assign_aux(__l.begin(), __l.end(), random_access_iterator_tag()); }
 831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       iterator
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       begin() _GLIBCXX_NOEXCEPT
 835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return iterator(this->_M_impl._M_start._M_p, 0); }
 836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       const_iterator
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       begin() const _GLIBCXX_NOEXCEPT
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_iterator(this->_M_impl._M_start._M_p, 0); }
 840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       iterator
 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       end() _GLIBCXX_NOEXCEPT
 843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl._M_finish; }
 844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       const_iterator
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       end() const _GLIBCXX_NOEXCEPT
 847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl._M_finish; }
 848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       reverse_iterator
 850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       rbegin() _GLIBCXX_NOEXCEPT
 851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return reverse_iterator(end()); }
 852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       const_reverse_iterator
 854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_reverse_iterator(end()); }
 856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       reverse_iterator
 858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       rend() _GLIBCXX_NOEXCEPT
 859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return reverse_iterator(begin()); }
 860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       const_reverse_iterator
 862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       rend() const _GLIBCXX_NOEXCEPT
 863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_reverse_iterator(begin()); }
 864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
 866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       const_iterator
 867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       cbegin() const noexcept
 868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_iterator(this->_M_impl._M_start._M_p, 0); }
 869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       const_iterator
 871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       cend() const noexcept
 872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl._M_finish; }
 873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       const_reverse_iterator
 875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       crbegin() const noexcept
 876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_reverse_iterator(end()); }
 877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 17


 878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       const_reverse_iterator
 879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       crend() const noexcept
 880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_reverse_iterator(begin()); }
 881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       size_type
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       size() const _GLIBCXX_NOEXCEPT
 885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return size_type(end() - begin()); }
 886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       size_type
 888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       max_size() const _GLIBCXX_NOEXCEPT
 889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	const size_type __isize =
 891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  __gnu_cxx::__numeric_traits<difference_type>::__max
 892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  - int(_S_word_bit) + 1;
 893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	const size_type __asize
 894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  = _Bit_alloc_traits::max_size(_M_get_Bit_allocator());
 895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	return (__asize <= __isize / int(_S_word_bit)
 896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 		? __asize * int(_S_word_bit) : __isize);
 897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       size_type
 900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       capacity() const _GLIBCXX_NOEXCEPT
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return size_type(const_iterator(this->_M_impl._M_end_addr(), 0)
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			 - begin()); }
 903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _GLIBCXX_NODISCARD bool
 905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       empty() const _GLIBCXX_NOEXCEPT
 906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return begin() == end(); }
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       reference
 909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       operator[](size_type __n)
 910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	return *iterator(this->_M_impl._M_start._M_p
 912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			 + __n / int(_S_word_bit), __n % int(_S_word_bit));
 913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       const_reference
 916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       operator[](size_type __n) const
 917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	return *const_iterator(this->_M_impl._M_start._M_p
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			     + __n / int(_S_word_bit), __n % int(_S_word_bit));
 920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     protected:
 923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
 924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_range_check(size_type __n) const
 925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (__n >= this->size())
 927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  __throw_out_of_range_fmt(__N("vector<bool>::_M_range_check: __n "
 928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 				       "(which is %zu) >= this->size() "
 929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 				       "(which is %zu)"),
 930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 				   __n, this->size());
 931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     public:
 934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       reference
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 18


 935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       at(size_type __n)
 936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { _M_range_check(__n); return (*this)[__n]; }
 937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       const_reference
 939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       at(size_type __n) const
 940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { _M_range_check(__n); return (*this)[__n]; }
 941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
 943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       reserve(size_type __n)
 944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (__n > max_size())
 946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  __throw_length_error(__N("vector::reserve"));
 947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (capacity() < __n)
 948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_reallocate(__n);
 949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       reference
 952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       front()
 953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return *begin(); }
 954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       const_reference
 956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       front() const
 957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return *begin(); }
 958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       reference
 960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       back()
 961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return *(end() - 1); }
 962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       const_reference
 964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       back() const
 965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return *(end() - 1); }
 966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // DR 464. Suggestion for new member functions in standard containers.
 969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // N.B. DR 464 says nothing about vector<bool> but we need something
 970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // here due to the way we are implementing DR 464 in the debug-mode
 971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // vector class.
 972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
 973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       data() _GLIBCXX_NOEXCEPT { }
 974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
 976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       push_back(bool __x)
 977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (this->_M_impl._M_finish._M_p != this->_M_impl._M_end_addr())
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  *this->_M_impl._M_finish++ = __x;
 980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	else
 981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_insert_aux(end(), __x);
 982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
 985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       swap(vector& __x) _GLIBCXX_NOEXCEPT
 986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	std::swap(this->_M_impl._M_start, __x._M_impl._M_start);
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	std::swap(this->_M_impl._M_finish, __x._M_impl._M_finish);
 989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	std::swap(this->_M_impl._M_end_of_storage,
 990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 		  __x._M_impl._M_end_of_storage);
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_Bit_alloc_traits::_S_on_swap(_M_get_Bit_allocator(),
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 19


 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 				      __x._M_get_Bit_allocator());
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // [23.2.5]/1, third-to-last entry in synopsis listing
 996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       static void
 997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       swap(reference __x, reference __y) _GLIBCXX_NOEXCEPT
 998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	bool __tmp = __x;
1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	__x = __y;
1001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	__y = __tmp;
1002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
1003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       iterator
1005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
1006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       insert(const_iterator __position, const bool& __x = bool())
1007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
1008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       insert(iterator __position, const bool& __x = bool())
1009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
1010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
1011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	const difference_type __n = __position - begin();
1012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (this->_M_impl._M_finish._M_p != this->_M_impl._M_end_addr()
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    && __position == end())
1014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  *this->_M_impl._M_finish++ = __x;
1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	else
1016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_insert_aux(__position._M_const_cast(), __x);
1017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	return begin() + __n;
1018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
1019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
1021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename _InputIterator,
1022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	iterator
1024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	insert(const_iterator __position,
1025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	       _InputIterator __first, _InputIterator __last)
1026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
1027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  difference_type __offset = __position - cbegin();
1028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_insert_dispatch(__position._M_const_cast(),
1029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			     __first, __last, __false_type());
1030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  return begin() + __offset;
1031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
1032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
1033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename _InputIterator>
1034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
1035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	insert(iterator __position,
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	       _InputIterator __first, _InputIterator __last)
1037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
1038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
1039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_insert_dispatch(__position, __first, __last, _Integral());
1040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
1041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
1042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
1044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       iterator
1045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       insert(const_iterator __position, size_type __n, const bool& __x)
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
1047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	difference_type __offset = __position - cbegin();
1048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_fill_insert(__position._M_const_cast(), __n, __x);
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 20


1049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	return begin() + __offset;
1050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
1051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
1052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
1053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       insert(iterator __position, size_type __n, const bool& __x)
1054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { _M_fill_insert(__position, __n, __x); }
1055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
1056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
1058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       iterator
1059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       insert(const_iterator __p, initializer_list<bool> __l)
1060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->insert(__p, __l.begin(), __l.end()); }
1061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
1062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
1064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       pop_back()
1065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { --this->_M_impl._M_finish; }
1066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       iterator
1068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
1069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       erase(const_iterator __position)
1070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
1071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       erase(iterator __position)
1072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
1073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return _M_erase(__position._M_const_cast()); }
1074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       iterator
1076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
1077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       erase(const_iterator __first, const_iterator __last)
1078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
1079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       erase(iterator __first, iterator __last)
1080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
1081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return _M_erase(__first._M_const_cast(), __last._M_const_cast()); }
1082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
1084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       resize(size_type __new_size, bool __x = bool())
1085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
1086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (__new_size < size())
1087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_erase_at_end(begin() + difference_type(__new_size));
1088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	else
1089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  insert(end(), __new_size - size(), __x);
1090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
1091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
1093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
1094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       shrink_to_fit()
1095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { _M_shrink_to_fit(); }
1096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
1097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
1099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       flip() _GLIBCXX_NOEXCEPT
1100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
1101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_Bit_type * const __end = this->_M_impl._M_end_addr();
1102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	for (_Bit_type * __p = this->_M_impl._M_start._M_p; __p != __end; ++__p)
1103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  *__p = ~*__p;
1104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
1105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 21


1106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
1107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       clear() _GLIBCXX_NOEXCEPT
1108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { _M_erase_at_end(begin()); }
1109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
1111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename... _Args>
1112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus > 201402L
1113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	reference
1114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
1115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
1116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
1117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	emplace_back(_Args&&... __args)
1118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
1119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  push_back(bool(__args...));
1120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus > 201402L
1121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  return back();
1122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
1123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
1124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename... _Args>
1126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	iterator
1127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	emplace(const_iterator __pos, _Args&&... __args)
1128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ return insert(__pos, bool(__args...)); }
1129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
1130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     protected:
1132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // Precondition: __first._M_offset == 0 && __result._M_offset == 0.
1133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       iterator
1134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_copy_aligned(const_iterator __first, const_iterator __last,
1135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 		      iterator __result)
1136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
1137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_Bit_type* __q = std::copy(__first._M_p, __last._M_p, __result._M_p);
1138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	return std::copy(const_iterator(__last._M_p, 0), __last,
1139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			 iterator(__q, 0));
1140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
1141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
1143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_initialize(size_type __n)
1144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
1145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (__n)
1146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
1147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    _Bit_pointer __q = this->_M_allocate(__n);
1148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    this->_M_impl._M_end_of_storage = __q + _S_nword(__n);
1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    this->_M_impl._M_start = iterator(std::__addressof(*__q), 0);
1150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
1151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	else
1152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
1153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    this->_M_impl._M_end_of_storage = _Bit_pointer();
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    this->_M_impl._M_start = iterator(0, 0);
1155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
1156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start + difference_type(__n);
1157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
1159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
1161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_initialize_value(bool __x)
1162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 22


1163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (_Bit_type* __p = this->_M_impl._M_start._M_p)
1164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  __builtin_memset(__p, __x ? ~0 : 0,
1165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			   (this->_M_impl._M_end_addr() - __p)
1166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			   * sizeof(_Bit_type));
1167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
1168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
1170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_reallocate(size_type __n);
1171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
1173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       bool
1174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_shrink_to_fit();
1175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
1176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // Check whether it's an integral type.  If so, it's not an iterator.
1178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // 438. Ambiguity in the "do the right thing" clause
1181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename _Integer>
1182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
1183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_initialize_dispatch(_Integer __n, _Integer __x, __true_type)
1184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
1185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_initialize(static_cast<size_type>(__n));
1186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_initialize_value(__x);
1187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
1188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename _InputIterator>
1190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
1191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_initialize_dispatch(_InputIterator __first, _InputIterator __last,
1192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			       __false_type)
1193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ _M_initialize_range(__first, __last,
1194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			      std::__iterator_category(__first)); }
1195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename _InputIterator>
1197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
1198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_initialize_range(_InputIterator __first, _InputIterator __last,
1199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			    std::input_iterator_tag)
1200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
1201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  for (; __first != __last; ++__first)
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    push_back(*__first);
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
1204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename _ForwardIterator>
1206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
1207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_initialize_range(_ForwardIterator __first, _ForwardIterator __last,
1208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			    std::forward_iterator_tag)
1209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
1210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  const size_type __n = std::distance(__first, __last);
1211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_initialize(__n);
1212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  std::copy(__first, __last, this->_M_impl._M_start);
1213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
1214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus < 201103L
1216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // 438. Ambiguity in the "do the right thing" clause
1218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename _Integer>
1219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 23


1220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_assign_dispatch(_Integer __n, _Integer __val, __true_type)
1221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ _M_fill_assign(__n, __val); }
1222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<class _InputIterator>
1224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
1225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_assign_dispatch(_InputIterator __first, _InputIterator __last,
1226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			   __false_type)
1227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ _M_assign_aux(__first, __last, std::__iterator_category(__first)); }
1228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
1229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
1231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_fill_assign(size_t __n, bool __x)
1232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
1233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (__n > size())
1234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
1235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    _M_initialize_value(__x);
1236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    insert(end(), __n - size(), __x);
1237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
1238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	else
1239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
1240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    _M_erase_at_end(begin() + __n);
1241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    _M_initialize_value(__x);
1242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
1243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
1244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename _InputIterator>
1246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
1247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_assign_aux(_InputIterator __first, _InputIterator __last,
1248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 		      std::input_iterator_tag)
1249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
1250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  iterator __cur = begin();
1251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  for (; __first != __last && __cur != end(); ++__cur, (void)++__first)
1252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    *__cur = *__first;
1253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  if (__first == __last)
1254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    _M_erase_at_end(__cur);
1255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  else
1256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    insert(end(), __first, __last);
1257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
1258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename _ForwardIterator>
1260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
1261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,
  33              		.loc 1 1261 2 view -0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 8
  36              		@ frame_needed = 0, uses_anonymous_args = 0
  37              		.loc 1 1261 2 is_stmt 0 view .LVU1
  38 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  39              		.cfi_def_cfa_offset 36
  40              		.cfi_offset 4, -36
  41              		.cfi_offset 5, -32
  42              		.cfi_offset 6, -28
  43              		.cfi_offset 7, -24
  44              		.cfi_offset 8, -20
  45              		.cfi_offset 9, -16
  46              		.cfi_offset 10, -12
  47              		.cfi_offset 11, -8
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 24


  48              		.cfi_offset 14, -4
  49              	.LBB2022:
  50              	.LBB2023:
  51              	.LBB2024:
  52              	.LBB2025:
  53              	.LBB2026:
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
  54              		.loc 1 340 40 view .LVU2
  55 0004 D0E902A5 		ldrd	r10, r5, [r0, #8]
  56              	.LBE2026:
  57              	.LBE2025:
  58              	.LBE2024:
  59              	.LBB2032:
  60              	.LBB2033:
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
  61              		.loc 1 839 54 view .LVU3
  62 0008 0468     		ldr	r4, [r0]
  63              	.LBE2033:
  64              	.LBE2032:
  65              	.LBE2023:
  66              	.LBE2022:
  67              	.LBB3310:
  68              	.LBB3311:
  69              	.LBB3312:
  70              		.file 2 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_iterato
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // Functions used by iterators -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * provided that the above copyright notice appear in all copies and
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 25


  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * Copyright (c) 1996-1998
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * representations about the suitability of this software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** /** @file bits/stl_iterator_base_funcs.h
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  *  Do not attempt to use it directly. @headername{iterator}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  *
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  *  This file contains all of the general iterator-related utility
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  *  functions, such as distance() and advance().
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  */
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** #ifndef _STL_ITERATOR_BASE_FUNCS_H
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** #define _STL_ITERATOR_BASE_FUNCS_H 1
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** #pragma GCC system_header
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** #include <bits/concept_check.h>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** #include <debug/assertions.h>
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** {
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   // Forward declaration for the overloads of __distance.
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   template <typename> struct _List_iterator;
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   template <typename> struct _List_const_iterator;
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** _GLIBCXX_END_NAMESPACE_CONTAINER
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   template<typename _InputIterator>
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     inline _GLIBCXX14_CONSTEXPR
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     typename iterator_traits<_InputIterator>::difference_type
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     __distance(_InputIterator __first, _InputIterator __last,
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****                input_iterator_tag)
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     {
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       // concept requirements
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       typename iterator_traits<_InputIterator>::difference_type __n = 0;
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       while (__first != __last)
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	{
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	  ++__first;
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 26


  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	  ++__n;
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	}
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       return __n;
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     }
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   template<typename _RandomAccessIterator>
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     inline _GLIBCXX14_CONSTEXPR
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     typename iterator_traits<_RandomAccessIterator>::difference_type
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****                random_access_iterator_tag)
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     {
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       // concept requirements
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       __glibcxx_function_requires(_RandomAccessIteratorConcept<
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 				  _RandomAccessIterator>)
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       return __last - __first;
  71              		.loc 2 104 23 view .LVU4
  72 000a 531A     		subs	r3, r2, r1
  73              	.LBE3312:
  74              	.LBE3311:
  75              	.LBE3310:
  76              		.loc 1 1261 2 view .LVU5
  77 000c 83B0     		sub	sp, sp, #12
  78              		.cfi_def_cfa_offset 48
  79              		.loc 1 1261 2 view .LVU6
  80 000e 8146     		mov	r9, r0
  81              	.LVL1:
  82              	.LBB3314:
  83              	.LBI3310:
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     }
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** #if _GLIBCXX_USE_CXX11_ABI
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   // Forward declaration because of the qualified call in distance.
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   template<typename _Tp>
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     ptrdiff_t
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     __distance(_GLIBCXX_STD_C::_List_iterator<_Tp>,
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	       _GLIBCXX_STD_C::_List_iterator<_Tp>,
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	       input_iterator_tag);
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   template<typename _Tp>
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     ptrdiff_t
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     __distance(_GLIBCXX_STD_C::_List_const_iterator<_Tp>,
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	       _GLIBCXX_STD_C::_List_const_iterator<_Tp>,
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	       input_iterator_tag);
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** #endif
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   /**
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  @brief A generalization of pointer arithmetic.
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  @param  __first  An input iterator.
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  @param  __last  An input iterator.
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  @return  The distance between them.
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  Returns @c n such that __first + n == __last.  This requires
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  that @p __last must be reachable from @p __first.  Note that @c
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  n may be negative.
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  For random access iterators, this uses their @c + and @c - operations
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  and are constant time.  For other %iterator classes they are linear time.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 27


 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   */
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   template<typename _InputIterator>
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     inline _GLIBCXX17_CONSTEXPR
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     typename iterator_traits<_InputIterator>::difference_type
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     distance(_InputIterator __first, _InputIterator __last)
  84              		.loc 2 138 5 is_stmt 1 view .LVU7
  85              	.LBB3313:
  86              	.LBI3311:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****                random_access_iterator_tag)
  87              		.loc 2 98 5 view .LVU8
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****                random_access_iterator_tag)
  88              		.loc 2 98 5 is_stmt 0 view .LVU9
  89              	.LBE3313:
  90              	.LBE3314:
  91              	.LBB3315:
  92              	.LBB2042:
  93              	.LBI2023:
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return size_type(end() - begin()); }
  94              		.loc 1 884 7 is_stmt 1 view .LVU10
  95              	.LBB2037:
  96              	.LBI2024:
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl._M_finish; }
  97              		.loc 1 846 7 view .LVU11
  98              	.LBB2030:
  99              	.LBI2025:
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x._M_p, __x._M_offset) { }
 100              		.loc 1 339 5 view .LVU12
 101              	.LBB2028:
 102              	.LBB2027:
 103              	.LBI2027:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 104              		.loc 1 148 5 view .LVU13
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 105              		.loc 1 148 5 is_stmt 0 view .LVU14
 106              	.LBE2027:
 107              	.LBE2028:
 108              	.LBE2030:
 109              	.LBE2037:
 110              	.LBB2038:
 111              	.LBI2032:
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_iterator(this->_M_impl._M_start._M_p, 0); }
 112              		.loc 1 838 7 is_stmt 1 view .LVU15
 113              	.LBB2036:
 114              	.LBB2034:
 115              	.LBI2034:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 116              		.loc 1 336 5 view .LVU16
 117              	.LBB2035:
 118              	.LBI2035:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 119              		.loc 1 148 5 view .LVU17
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 120              		.loc 1 148 5 is_stmt 0 view .LVU18
 121              	.LBE2035:
 122              	.LBE2034:
 123              	.LBE2036:
 124              	.LBE2038:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 28


 125              	.LBB2039:
 126              	.LBI2039:
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 127              		.loc 1 224 5 is_stmt 1 view .LVU19
 128              	.LBB2040:
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 129              		.loc 1 226 7 view .LVU20
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 130              		.loc 1 226 44 is_stmt 0 view .LVU21
 131 0010 AAEB040E 		sub	lr, r10, r4
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 132              		.loc 1 227 8 view .LVU22
 133 0014 05EBCE0E 		add	lr, r5, lr, lsl #3
 134              	.LVL2:
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 135              		.loc 1 227 8 view .LVU23
 136              	.LBE2040:
 137              	.LBE2039:
 138              	.LBE2042:
1262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 		      std::forward_iterator_tag)
1263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
1264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  const size_type __len = std::distance(__first, __last);
1265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  if (__len < size())
 139              		.loc 1 1265 4 view .LVU24
 140 0018 7345     		cmp	r3, lr
 141 001a 27D2     		bcs	.L2
 142              	.LVL3:
 143              	.LBB2043:
 144              	.LBI2043:
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return iterator(this->_M_impl._M_start._M_p, 0); }
 145              		.loc 1 834 7 is_stmt 1 view .LVU25
 146              	.LBB2044:
 147              	.LBI2044:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 148              		.loc 1 243 5 view .LVU26
 149              	.LBB2045:
 150              	.LBI2045:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 151              		.loc 1 148 5 view .LVU27
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 152              		.loc 1 148 5 is_stmt 0 view .LVU28
 153              	.LBE2045:
 154              	.LBE2044:
 155              	.LBE2043:
 156              	.LBB2046:
 157              	.LBI2046:
 158              		.file 3 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_algobas
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 29


  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Copyright (c) 1996-1998
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * representations about the suitability of this software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** /** @file bits/stl_algobase.h
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/c++config.h>
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/functexcept.h>
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <ext/type_traits.h>
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <ext/numeric_traits.h>
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_pair.h>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_iterator.h>
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 30


  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/concept_check.h>
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <debug/debug.h>
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/move.h> // For std::swap
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/predefined_ops.h>
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** # include <type_traits>
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus > 201703L
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** # include <compare>
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** {
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /*
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    * A constexpr wrapper for __builtin_memcmp.
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    * @param __num The number of elements of type _Tp (not bytes).
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    */
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Up>
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline int
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __memcmp(const _Tp* __first1, const _Up* __first2, size_t __num)
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       static_assert(sizeof(_Tp) == sizeof(_Up), "can be compared with memcmp");
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (std::is_constant_evaluated())
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for(; __num > 0; ++__first1, ++__first2, --__num)
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    if (*__first1 != *__first2)
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      return *__first1 < *__first2 ? -1 : 1;
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return 0;
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       else
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __builtin_memcmp(__first1, __first2, sizeof(_Tp) * __num);
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus < 201103L
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _BoolType>
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __iter_swap
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static void
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  typedef typename iterator_traits<_ForwardIterator1>::value_type
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    _ValueType1;
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  _ValueType1 __tmp = *__a;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  *__a = *__b;
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  *__b = __tmp;
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 31


 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<>
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __iter_swap<true>
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static void
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  swap(*__a, *__b);
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif // C++03
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  An iterator.
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another iterator.
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   Nothing.
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  iterators themselves.
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline void
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator1>)
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator2>)
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus < 201103L
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ValueType1;
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ValueType2;
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ValueType2>)
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ValueType1>)
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ReferenceType1;
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ReferenceType2;
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	iter_swap(__a, __b);
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #else
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // 187. iter_swap underspecified
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 32


 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       swap(*__a, *__b);
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first1  A forward iterator.
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __last1   A forward iterator.
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first2  A forward iterator.
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  The ranges must not overlap.
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _ForwardIterator2
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		_ForwardIterator2 __first2)
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator1>)
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator2>)
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       for (; __first1 != __last1; ++__first1, (void)++__first2)
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __first2;
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The lesser of the parameters.
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  preprocessor macro.
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp>
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline const _Tp&
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       //return __b < __a ? __b : __a;
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__b < __a)
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __a;
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 33


 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The greater of the parameters.
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  preprocessor macro.
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp>
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline const _Tp&
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b)
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       //return  __a < __b ? __b : __a;
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__a < __b)
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __a;
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The lesser of the parameters.
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  once, unlike a preprocessor macro.
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Compare>
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline const _Tp&
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b, _Compare __comp)
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       //return __comp(__b, __a) ? __b : __a;
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__comp(__b, __a))
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __a;
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The greater of the parameters.
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  once, unlike a preprocessor macro.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 34


 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Compare>
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline const _Tp&
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b, _Compare __comp)
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       //return __comp(__a, __b) ? __b : __a;
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__comp(__a, __b))
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __a;
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // Fallback implementation of the function in bits/stl_iterator.h used to
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // remove the __normal_iterator wrapper. See copy, fill, ...
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Iterator>
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _Iterator
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __niter_base(_Iterator __it)
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX_NOEXCEPT_IF(std::is_nothrow_copy_constructible<_Iterator>::value)
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return __it; }
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // Reverse the __niter_base transformation to get a
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // __normal_iterator back again (this assumes that __normal_iterator
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // is only used to wrap random access iterators, like pointers).
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _From, typename _To>
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _From
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __niter_wrap(_From __from, _To __res)
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return __from + (__res - std::__niter_base(__from)); }
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // No need to wrap, iterator already has the right type.
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Iterator>
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _Iterator
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __niter_wrap(const _Iterator&, _Iterator __res)
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return __res; }
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // All of these auxiliary structs serve two purposes.  (1) Replace
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // calls to copy with memmove whenever possible.  (Memmove, not memcpy,
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // because the input and output ranges are permitted to overlap.)
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // (2) If we're using random access iterators, then write the loop as
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // a for loop with an explicit count.
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, bool _IsSimple, typename _Category>
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _OI
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *__result = *__first;
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 35


 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Category>
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move<true, false, _Category>
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _OI
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *__result = std::move(*__first);
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<>
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move<false, false, random_access_iterator_tag>
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _OI
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      *__result = *__first;
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__first;
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__result;
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    }
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<>
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move<true, false, random_access_iterator_tag>
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _OI
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      *__result = std::move(*__first);
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__first;
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__result;
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    }
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove>
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 36


 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move<_IsMove, true, random_access_iterator_tag>
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _Tp>
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _Tp*
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					   is_move_assignable<_Tp>,
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  // trivial types can have deleted assignment
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  if (_Num)
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // Helpers for streambuf iterators (either istream or ostream).
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // NB: avoid including <iosfwd>, relatively large.
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _CharT>
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct char_traits;
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _CharT, typename _Traits>
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     class istreambuf_iterator;
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _CharT, typename _Traits>
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     class ostreambuf_iterator;
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a2(_CharT*, _CharT*,
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a2(const _CharT*, const _CharT*,
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				    _CharT*>::__type
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >,
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT*);
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a2(_II __first, _II __last, _OI __result)
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_II>::iterator_category _Category;
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 37


 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (std::is_constant_evaluated())
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return std::__copy_move<_IsMove, false, _Category>::
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  __copy_m(__first, __last, __result);
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return std::__copy_move<_IsMove, __memcpyable<_OI, _II>::__value,
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 			      _Category>::__copy_m(__first, __last, __result);
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Ref, typename _Ptr>
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct _Deque_iterator;
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** _GLIBCXX_END_NAMESPACE_CONTAINER
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _Tp, typename _Ref, typename _Ptr, typename _OI>
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _OI
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a1(_GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   _OI);
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _ITp, typename _IRef, typename _IPtr, typename _OTp>
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a1(_GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>);
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _Tp>
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __is_random_access_iter<_II>::__value,
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*> >::__type
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a1(_II, _II, _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>);
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a1(_II __first, _II __last, _OI __result)
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a(_II __first, _II __last, _OI __result)
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return std::__niter_wrap(__result,
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		std::__copy_move_a1<_IsMove>(std::__niter_base(__first),
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					     std::__niter_base(__last),
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					     std::__niter_base(__result)));
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _Ite, typename _Seq, typename _Cat, typename _OI>
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _OI
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a(const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 38


 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  _OI);
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _II, typename _Ite, typename _Seq, typename _Cat>
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a(_II, _II,
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&);
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _IIte, typename _ISeq, typename _ICat,
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _OIte, typename _OSeq, typename _OCat>
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a(const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>&);
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first  An input iterator.
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __last   An input iterator.
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __result An output iterator.
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   result + (last - first)
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  [first,last); the copy_backward function should be used instead.
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  within [first,last).
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _II, typename _OI>
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     copy(_II __first, _II __last, _OI __result)
 159              		.loc 3 560 5 is_stmt 1 view .LVU29
 160              	.LBB2047:
 161              	.LBI2047:
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 162              		.loc 3 511 5 view .LVU30
 163              	.LBB2048:
 164              	.LBI2048:
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 165              		.loc 3 505 5 view .LVU31
 166              	.LBB2049:
 167              	.LBI2049:
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 168              		.loc 3 463 5 view .LVU32
 169              	.LBB2050:
 170              	.LBB2051:
 171              	.LBI2051:
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 172              		.loc 3 375 2 view .LVU33
 173              	.LBB2052:
 174              	.LBB2053:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 39


 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 175              		.loc 3 378 46 view .LVU34
 176 001c 002B     		cmp	r3, #0
 177 001e 40F35581 		ble	.L61
 178 0022 0139     		subs	r1, r1, #1
 179              	.LVL4:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 180              		.loc 3 378 46 is_stmt 0 view .LVU35
 181 0024 0022     		movs	r2, #0
 182              	.LVL5:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 183              		.loc 3 378 46 view .LVU36
 184 0026 CD18     		adds	r5, r1, r3
 185 0028 09E0     		b	.L8
 186              	.LVL6:
 187              	.L76:
 188              	.LBB2054:
 189              	.LBB2055:
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       else
 190              		.loc 1 93 2 is_stmt 1 view .LVU37
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       else
 191              		.loc 1 93 8 is_stmt 0 view .LVU38
 192 002a 2068     		ldr	r0, [r4]
 193              	.LBE2055:
 194              	.LBE2054:
 195              	.LBB2064:
 196              	.LBB2065:
 197              	.LBB2066:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 198              		.loc 1 154 7 view .LVU39
 199 002c 1F2A     		cmp	r2, #31
 200              	.LBE2066:
 201              	.LBE2065:
 202              	.LBE2064:
 203              	.LBB2081:
 204              	.LBB2060:
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       else
 205              		.loc 1 93 8 view .LVU40
 206 002e 43EA0003 		orr	r3, r3, r0
 207 0032 2360     		str	r3, [r4]
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 208              		.loc 1 96 7 is_stmt 1 view .LVU41
 209              	.LVL7:
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 210              		.loc 1 96 7 is_stmt 0 view .LVU42
 211              	.LBE2060:
 212              	.LBE2081:
 213              	.LBB2082:
 214              	.LBI2064:
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 215              		.loc 1 255 5 is_stmt 1 view .LVU43
 216              	.LBE2082:
 217              	.LBE2053:
 218              	.LBE2052:
 219              	.LBE2051:
 220              	.LBE2050:
 221              	.LBE2049:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 40


 222              	.LBE2048:
 223              	.LBE2047:
 224              	.LBE2046:
 225              	.LBE3315:
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 226              		.loc 1 257 7 view .LVU44
 227              	.LBB3316:
 228              	.LBB2132:
 229              	.LBB2127:
 230              	.LBB2122:
 231              	.LBB2117:
 232              	.LBB2112:
 233              	.LBB2107:
 234              	.LBB2102:
 235              	.LBB2097:
 236              	.LBB2083:
 237              	.LBB2076:
 238              	.LBI2065:
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 239              		.loc 1 152 5 view .LVU45
 240              	.LBB2071:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 241              		.loc 1 154 7 view .LVU46
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 242              		.loc 1 154 7 is_stmt 0 view .LVU47
 243 0034 0FD0     		beq	.L6
 244              	.LVL8:
 245              	.L77:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 246              		.loc 1 154 7 view .LVU48
 247              	.LBE2071:
 248              	.LBE2076:
 249              	.LBE2083:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 250              		.loc 3 378 46 view .LVU49
 251 0036 8D42     		cmp	r5, r1
 252              	.LBB2084:
 253              	.LBB2077:
 254              	.LBB2072:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 255              		.loc 1 154 20 view .LVU50
 256 0038 02F10102 		add	r2, r2, #1
 257              	.LVL9:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 258              		.loc 1 154 20 view .LVU51
 259              	.LBE2072:
 260              	.LBE2077:
 261              	.LBE2084:
 262              	.LBE2097:
 263              	.LBE2102:
 264              	.LBE2107:
 265              	.LBE2112:
 266              	.LBE2117:
 267              	.LBE2122:
 268              	.LBE2127:
 269              	.LBE2132:
 270              	.LBE3316:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 41


 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 271              		.loc 1 258 7 is_stmt 1 view .LVU52
 272              	.LBB3317:
 273              	.LBB2133:
 274              	.LBB2128:
 275              	.LBB2123:
 276              	.LBB2118:
 277              	.LBB2113:
 278              	.LBB2108:
 279              	.LBB2103:
 280              	.LBB2098:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 281              		.loc 3 378 4 view .LVU53
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 282              		.loc 3 378 46 view .LVU54
 283 003c 11D0     		beq	.L3
 284              	.LVL10:
 285              	.L8:
 286              	.LBB2085:
 287              	.LBI2085:
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return reference(_M_p, 1UL << _M_offset); }
 288              		.loc 1 251 5 view .LVU55
 289              	.LBB2086:
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 290              		.loc 1 252 7 view .LVU56
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 291              		.loc 1 252 46 is_stmt 0 view .LVU57
 292 003e 0123     		movs	r3, #1
 293              	.LBE2086:
 294              	.LBE2085:
 295              	.LBB2089:
 296              	.LBB2061:
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	*_M_p |= _M_mask;
 297              		.loc 1 92 7 view .LVU58
 298 0040 11F8010F 		ldrb	r0, [r1, #1]!	@ zero_extendqisi2
 299              	.LVL11:
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	*_M_p |= _M_mask;
 300              		.loc 1 92 7 view .LVU59
 301              	.LBE2061:
 302              	.LBE2089:
 303              	.LBB2090:
 304              	.LBB2088:
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 305              		.loc 1 252 46 view .LVU60
 306 0044 9340     		lsls	r3, r3, r2
 307              	.LVL12:
 308              	.LBB2087:
 309              	.LBI2087:
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_mask(__y) { }
 310              		.loc 1 77 5 is_stmt 1 view .LVU61
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_mask(__y) { }
 311              		.loc 1 77 5 is_stmt 0 view .LVU62
 312              	.LBE2087:
 313              	.LBE2088:
 314              	.LBE2090:
 315              	.LBB2091:
 316              	.LBI2054:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 42


  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 317              		.loc 1 90 5 is_stmt 1 view .LVU63
 318              	.LBB2062:
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	*_M_p |= _M_mask;
 319              		.loc 1 92 7 view .LVU64
 320 0046 0028     		cmp	r0, #0
 321 0048 EFD1     		bne	.L76
 322              	.LBB2056:
 323              	.LBI2056:
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 324              		.loc 1 90 5 view .LVU65
 325              	.LVL13:
 326              	.LBB2057:
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 327              		.loc 1 95 2 view .LVU66
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 328              		.loc 1 95 8 is_stmt 0 view .LVU67
 329 004a 2068     		ldr	r0, [r4]
 330              	.LBE2057:
 331              	.LBE2056:
 332              	.LBE2062:
 333              	.LBE2091:
 334              	.LBB2092:
 335              	.LBB2078:
 336              	.LBB2073:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 337              		.loc 1 154 7 view .LVU68
 338 004c 1F2A     		cmp	r2, #31
 339              	.LBE2073:
 340              	.LBE2078:
 341              	.LBE2092:
 342              	.LBB2093:
 343              	.LBB2063:
 344              	.LBB2059:
 345              	.LBB2058:
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 346              		.loc 1 95 8 view .LVU69
 347 004e 20EA0303 		bic	r3, r0, r3
 348 0052 2360     		str	r3, [r4]
 349              	.LVL14:
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 350              		.loc 1 95 8 view .LVU70
 351              	.LBE2058:
 352              	.LBE2059:
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 353              		.loc 1 96 7 is_stmt 1 view .LVU71
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 354              		.loc 1 96 7 is_stmt 0 view .LVU72
 355              	.LBE2063:
 356              	.LBE2093:
 357              	.LBB2094:
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 358              		.loc 1 255 5 is_stmt 1 view .LVU73
 359              	.LBE2094:
 360              	.LBE2098:
 361              	.LBE2103:
 362              	.LBE2108:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 43


 363              	.LBE2113:
 364              	.LBE2118:
 365              	.LBE2123:
 366              	.LBE2128:
 367              	.LBE2133:
 368              	.LBE3317:
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 369              		.loc 1 257 7 view .LVU74
 370              	.LBB3318:
 371              	.LBB2134:
 372              	.LBB2129:
 373              	.LBB2124:
 374              	.LBB2119:
 375              	.LBB2114:
 376              	.LBB2109:
 377              	.LBB2104:
 378              	.LBB2099:
 379              	.LBB2095:
 380              	.LBB2079:
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 381              		.loc 1 152 5 view .LVU75
 382              	.LBB2074:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 383              		.loc 1 154 7 view .LVU76
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 384              		.loc 1 154 7 is_stmt 0 view .LVU77
 385 0054 EFD1     		bne	.L77
 386              	.LVL15:
 387              	.L6:
 388              	.LBB2067:
 389              	.LBI2067:
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 390              		.loc 1 152 5 is_stmt 1 view .LVU78
 391              	.LBB2068:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  ++_M_p;
 392              		.loc 1 156 4 view .LVU79
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 393              		.loc 1 157 4 view .LVU80
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 394              		.loc 1 157 4 is_stmt 0 view .LVU81
 395              	.LBE2068:
 396              	.LBE2067:
 397              	.LBE2074:
 398              	.LBE2079:
 399              	.LBE2095:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 400              		.loc 3 378 46 view .LVU82
 401 0056 8D42     		cmp	r5, r1
 402              	.LBB2096:
 403              	.LBB2080:
 404              	.LBB2075:
 405              	.LBB2070:
 406              	.LBB2069:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 407              		.loc 1 157 4 view .LVU83
 408 0058 04F10404 		add	r4, r4, #4
 409              	.LVL16:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 44


 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  ++_M_p;
 410              		.loc 1 156 14 view .LVU84
 411 005c 4FF00002 		mov	r2, #0
 412              	.LVL17:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  ++_M_p;
 413              		.loc 1 156 14 view .LVU85
 414              	.LBE2069:
 415              	.LBE2070:
 416              	.LBE2075:
 417              	.LBE2080:
 418              	.LBE2096:
 419              	.LBE2099:
 420              	.LBE2104:
 421              	.LBE2109:
 422              	.LBE2114:
 423              	.LBE2119:
 424              	.LBE2124:
 425              	.LBE2129:
 426              	.LBE2134:
 427              	.LBE3318:
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 428              		.loc 1 258 7 is_stmt 1 view .LVU86
 429              	.LBB3319:
 430              	.LBB2135:
 431              	.LBB2130:
 432              	.LBB2125:
 433              	.LBB2120:
 434              	.LBB2115:
 435              	.LBB2110:
 436              	.LBB2105:
 437              	.LBB2100:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 438              		.loc 3 378 4 view .LVU87
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 439              		.loc 3 378 46 view .LVU88
 440 0060 EDD1     		bne	.L8
 441              	.LVL18:
 442              	.L3:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 443              		.loc 3 378 46 is_stmt 0 view .LVU89
 444              	.LBE2100:
 445              	.LBE2105:
 446              	.LBE2110:
 447              	.LBE2115:
 448              	.LBE2120:
 449              	.LBE2125:
 450              	.LBE2130:
 451              	.LBE2135:
 452              	.LBB2136:
 453              	.LBI2136:
1266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    _M_erase_at_end(std::copy(__first, __last, begin()));
1267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  else
1268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    {
1269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      _ForwardIterator __mid = __first;
1270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      std::advance(__mid, size());
1271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      std::copy(__first, __mid, begin());
1272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      insert(end(), __mid, __last);
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 45


1273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    }
1274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
1275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // Check whether it's an integral type.  If so, it's not an iterator.
1277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // 438. Ambiguity in the "do the right thing" clause
1280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename _Integer>
1281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
1282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_insert_dispatch(iterator __pos, _Integer __n, _Integer __x,
1283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			   __true_type)
1284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ _M_fill_insert(__pos, __n, __x); }
1285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename _InputIterator>
1287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
1288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_insert_dispatch(iterator __pos,
1289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			   _InputIterator __first, _InputIterator __last,
1290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			   __false_type)
1291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ _M_insert_range(__pos, __first, __last,
1292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			  std::__iterator_category(__first)); }
1293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
1295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_fill_insert(iterator __position, size_type __n, bool __x);
1296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename _InputIterator>
1298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
1299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_insert_range(iterator __pos, _InputIterator __first,
1300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			_InputIterator __last, std::input_iterator_tag)
1301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
1302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  for (; __first != __last; ++__first)
1303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    {
1304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      __pos = insert(__pos, *__first);
1305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      ++__pos;
1306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    }
1307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
1308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename _ForwardIterator>
1310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
1311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_insert_range(iterator __position, _ForwardIterator __first,
1312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			_ForwardIterator __last, std::forward_iterator_tag);
1313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
1315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_insert_aux(iterator __position, bool __x);
1316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       size_type
1318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_check_len(size_type __n, const char* __s) const
1319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
1320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (max_size() - size() < __n)
1321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  __throw_length_error(__N(__s));
1322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	const size_type __len = size() + std::max(size(), __n);
1324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	return (__len < size() || __len > max_size()) ? max_size() : __len;
1325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
1326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
1328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_erase_at_end(iterator __pos)
 454              		.loc 1 1328 7 is_stmt 1 view .LVU90
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 46


 455              	.LBB2137:
1329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { this->_M_impl._M_finish = __pos; }
 456              		.loc 1 1329 9 is_stmt 0 view .LVU91
 457 0062 C9E90242 		strd	r4, r2, [r9, #8]
 458              	.LVL19:
 459              	.L1:
 460              		.loc 1 1329 9 view .LVU92
 461              	.LBE2137:
 462              	.LBE2136:
 463              	.LBE3319:
1274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 464              		.loc 1 1274 2 view .LVU93
 465 0066 03B0     		add	sp, sp, #12
 466              		.cfi_remember_state
 467              		.cfi_def_cfa_offset 36
 468              		@ sp needed
 469 0068 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 470              	.LVL20:
 471              	.L2:
 472              		.cfi_restore_state
 473              	.LBB3320:
 474              	.LBB2138:
 475              	.LBB2139:
 476              	.LBI2139:
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return size_type(end() - begin()); }
 477              		.loc 1 884 7 is_stmt 1 view .LVU94
 478              	.LBB2140:
 479              	.LBI2140:
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl._M_finish; }
 480              		.loc 1 846 7 view .LVU95
 481              	.LBB2141:
 482              	.LBI2141:
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x._M_p, __x._M_offset) { }
 483              		.loc 1 339 5 view .LVU96
 484              	.LBB2142:
 485              	.LBI2142:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 486              		.loc 1 148 5 view .LVU97
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 487              		.loc 1 148 5 is_stmt 0 view .LVU98
 488              	.LBE2142:
 489              	.LBE2141:
 490              	.LBE2140:
 491              	.LBB2143:
 492              	.LBI2143:
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_iterator(this->_M_impl._M_start._M_p, 0); }
 493              		.loc 1 838 7 is_stmt 1 view .LVU99
 494              	.LBB2144:
 495              	.LBI2144:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 496              		.loc 1 336 5 view .LVU100
 497              	.LBB2145:
 498              	.LBI2145:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 499              		.loc 1 148 5 view .LVU101
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 500              		.loc 1 148 5 is_stmt 0 view .LVU102
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 47


 501              	.LBE2145:
 502              	.LBE2144:
 503              	.LBE2143:
 504              	.LBE2139:
 505              	.LBE2138:
 506              	.LBE3320:
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 507              		.loc 1 226 7 is_stmt 1 view .LVU103
 508              	.LBB3321:
 509              	.LBB3262:
 510              	.LBB2146:
 511              	.LBI2146:
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     {
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       // concept requirements -- taken care of in __distance
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       return std::__distance(__first, __last,
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 			     std::__iterator_category(__first));
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     }
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   template<typename _InputIterator, typename _Distance>
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     inline _GLIBCXX14_CONSTEXPR void
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     __advance(_InputIterator& __i, _Distance __n, input_iterator_tag)
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     {
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       // concept requirements
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       __glibcxx_assert(__n >= 0);
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       while (__n--)
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	++__i;
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     }
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   template<typename _BidirectionalIterator, typename _Distance>
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     inline _GLIBCXX14_CONSTEXPR void
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     __advance(_BidirectionalIterator& __i, _Distance __n,
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	      bidirectional_iterator_tag)
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     {
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       // concept requirements
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 				  _BidirectionalIterator>)
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       if (__n > 0)
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****         while (__n--)
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	  ++__i;
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       else
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****         while (__n++)
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	  --__i;
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     }
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   template<typename _RandomAccessIterator, typename _Distance>
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     inline _GLIBCXX14_CONSTEXPR void
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     __advance(_RandomAccessIterator& __i, _Distance __n,
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****               random_access_iterator_tag)
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     {
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       // concept requirements
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       __glibcxx_function_requires(_RandomAccessIteratorConcept<
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 				  _RandomAccessIterator>)
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       if (__builtin_constant_p(__n) && __n == 1)
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	++__i;
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       else if (__builtin_constant_p(__n) && __n == -1)
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	--__i;
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 48


 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       else
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	__i += __n;
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     }
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   /**
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  @brief A generalization of pointer arithmetic.
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  @param  __i  An input iterator.
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  @param  __n  The @a delta by which to change @p __i.
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  @return  Nothing.
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  This increments @p i by @p n.  For bidirectional and random access
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  iterators, @p __n may be negative, in which case @p __i is decremented.
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  For random access iterators, this uses their @c + and @c - operations
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  and are constant time.  For other %iterator classes they are linear time.
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   */
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   template<typename _InputIterator, typename _Distance>
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     inline _GLIBCXX17_CONSTEXPR void
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     advance(_InputIterator& __i, _Distance __n)
 512              		.loc 2 202 5 view .LVU104
 513              	.LBB2147:
 514              	.LBB2148:
 515              	.LBI2148:
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****               random_access_iterator_tag)
 516              		.loc 2 174 5 view .LVU105
 517              	.LBE2148:
 518              	.LBE2147:
 519              	.LBE2146:
 520              	.LBB2152:
 521              	.LBB2153:
 522              	.LBB2154:
 523              	.LBB2155:
 524              	.LBB2156:
 525              	.LBB2157:
 526              	.LBB2158:
 527              	.LBB2159:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 528              		.loc 3 378 46 is_stmt 0 view .LVU106
 529 006c BEF1000F 		cmp	lr, #0
 530              	.LBE2159:
 531              	.LBE2158:
 532              	.LBE2157:
 533              	.LBE2156:
 534              	.LBE2155:
 535              	.LBE2154:
 536              	.LBE2153:
 537              	.LBE2152:
 538              	.LBB2238:
 539              	.LBB2151:
 540              	.LBB2150:
 541              	.LBB2149:
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     }
 542              		.loc 2 185 6 view .LVU107
 543 0070 01EB0E07 		add	r7, r1, lr
 544              	.LVL21:
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     }
 545              		.loc 2 185 6 view .LVU108
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 49


 546              	.LBE2149:
 547              	.LBE2150:
 548              	.LBE2151:
 549              	.LBE2238:
 550              	.LBB2239:
 551              	.LBI2239:
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return iterator(this->_M_impl._M_start._M_p, 0); }
 552              		.loc 1 834 7 is_stmt 1 view .LVU109
 553              	.LBB2240:
 554              	.LBI2240:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 555              		.loc 1 243 5 view .LVU110
 556              	.LBB2241:
 557              	.LBI2241:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 558              		.loc 1 148 5 view .LVU111
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 559              		.loc 1 148 5 is_stmt 0 view .LVU112
 560              	.LBE2241:
 561              	.LBE2240:
 562              	.LBE2239:
 563              	.LBB2242:
 564              	.LBI2152:
 565              		.loc 3 560 5 is_stmt 1 view .LVU113
 566              	.LBB2233:
 567              	.LBI2153:
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 568              		.loc 3 511 5 view .LVU114
 569              	.LBB2228:
 570              	.LBI2154:
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 571              		.loc 3 505 5 view .LVU115
 572              	.LBB2223:
 573              	.LBI2155:
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 574              		.loc 3 463 5 view .LVU116
 575              	.LBB2218:
 576              	.LBB2213:
 577              	.LBI2157:
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 578              		.loc 3 375 2 view .LVU117
 579              	.LBB2208:
 580              	.LBB2203:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 581              		.loc 3 378 46 view .LVU118
 582 0074 25DD     		ble	.L17
 583 0076 0139     		subs	r1, r1, #1
 584              	.LVL22:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 585              		.loc 3 378 46 is_stmt 0 view .LVU119
 586 0078 A446     		mov	ip, r4
 587 007a 0020     		movs	r0, #0
 588              	.LVL23:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 589              		.loc 3 378 46 view .LVU120
 590 007c 01EB0E08 		add	r8, r1, lr
 591 0080 0BE0     		b	.L18
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 50


 592              	.LVL24:
 593              	.L78:
 594              	.LBB2160:
 595              	.LBB2161:
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       else
 596              		.loc 1 93 2 is_stmt 1 view .LVU121
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       else
 597              		.loc 1 93 8 is_stmt 0 view .LVU122
 598 0082 DCF80060 		ldr	r6, [ip]
 599              	.LBE2161:
 600              	.LBE2160:
 601              	.LBB2170:
 602              	.LBB2171:
 603              	.LBB2172:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 604              		.loc 1 154 7 view .LVU123
 605 0086 1F28     		cmp	r0, #31
 606              	.LBE2172:
 607              	.LBE2171:
 608              	.LBE2170:
 609              	.LBB2187:
 610              	.LBB2166:
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       else
 611              		.loc 1 93 8 view .LVU124
 612 0088 43EA0603 		orr	r3, r3, r6
 613 008c CCF80030 		str	r3, [ip]
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 614              		.loc 1 96 7 is_stmt 1 view .LVU125
 615              	.LVL25:
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 616              		.loc 1 96 7 is_stmt 0 view .LVU126
 617              	.LBE2166:
 618              	.LBE2187:
 619              	.LBB2188:
 620              	.LBI2170:
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 621              		.loc 1 255 5 is_stmt 1 view .LVU127
 622              	.LBE2188:
 623              	.LBE2203:
 624              	.LBE2208:
 625              	.LBE2213:
 626              	.LBE2218:
 627              	.LBE2223:
 628              	.LBE2228:
 629              	.LBE2233:
 630              	.LBE2242:
 631              	.LBE3262:
 632              	.LBE3321:
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 633              		.loc 1 257 7 view .LVU128
 634              	.LBB3322:
 635              	.LBB3263:
 636              	.LBB2243:
 637              	.LBB2234:
 638              	.LBB2229:
 639              	.LBB2224:
 640              	.LBB2219:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 51


 641              	.LBB2214:
 642              	.LBB2209:
 643              	.LBB2204:
 644              	.LBB2189:
 645              	.LBB2182:
 646              	.LBI2171:
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 647              		.loc 1 152 5 view .LVU129
 648              	.LBB2177:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 649              		.loc 1 154 7 view .LVU130
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 650              		.loc 1 154 7 is_stmt 0 view .LVU131
 651 0090 11D0     		beq	.L15
 652              	.LVL26:
 653              	.L79:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 654              		.loc 1 154 7 view .LVU132
 655              	.LBE2177:
 656              	.LBE2182:
 657              	.LBE2189:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 658              		.loc 3 378 46 view .LVU133
 659 0092 8845     		cmp	r8, r1
 660              	.LBB2190:
 661              	.LBB2183:
 662              	.LBB2178:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 663              		.loc 1 154 20 view .LVU134
 664 0094 00F10100 		add	r0, r0, #1
 665              	.LVL27:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 666              		.loc 1 154 20 view .LVU135
 667              	.LBE2178:
 668              	.LBE2183:
 669              	.LBE2190:
 670              	.LBE2204:
 671              	.LBE2209:
 672              	.LBE2214:
 673              	.LBE2219:
 674              	.LBE2224:
 675              	.LBE2229:
 676              	.LBE2234:
 677              	.LBE2243:
 678              	.LBE3263:
 679              	.LBE3322:
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 680              		.loc 1 258 7 is_stmt 1 view .LVU136
 681              	.LBB3323:
 682              	.LBB3264:
 683              	.LBB2244:
 684              	.LBB2235:
 685              	.LBB2230:
 686              	.LBB2225:
 687              	.LBB2220:
 688              	.LBB2215:
 689              	.LBB2210:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 52


 690              	.LBB2205:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 691              		.loc 3 378 4 view .LVU137
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 692              		.loc 3 378 46 view .LVU138
 693 0098 13D0     		beq	.L17
 694              	.LVL28:
 695              	.L18:
 696              	.LBB2191:
 697              	.LBI2191:
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return reference(_M_p, 1UL << _M_offset); }
 698              		.loc 1 251 5 view .LVU139
 699              	.LBB2192:
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 700              		.loc 1 252 7 view .LVU140
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 701              		.loc 1 252 46 is_stmt 0 view .LVU141
 702 009a 0123     		movs	r3, #1
 703              	.LBE2192:
 704              	.LBE2191:
 705              	.LBB2195:
 706              	.LBB2167:
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	*_M_p |= _M_mask;
 707              		.loc 1 92 7 view .LVU142
 708 009c 11F8016F 		ldrb	r6, [r1, #1]!	@ zero_extendqisi2
 709              	.LVL29:
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	*_M_p |= _M_mask;
 710              		.loc 1 92 7 view .LVU143
 711              	.LBE2167:
 712              	.LBE2195:
 713              	.LBB2196:
 714              	.LBB2194:
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 715              		.loc 1 252 46 view .LVU144
 716 00a0 8340     		lsls	r3, r3, r0
 717              	.LVL30:
 718              	.LBB2193:
 719              	.LBI2193:
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_mask(__y) { }
 720              		.loc 1 77 5 is_stmt 1 view .LVU145
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_mask(__y) { }
 721              		.loc 1 77 5 is_stmt 0 view .LVU146
 722              	.LBE2193:
 723              	.LBE2194:
 724              	.LBE2196:
 725              	.LBB2197:
 726              	.LBI2160:
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 727              		.loc 1 90 5 is_stmt 1 view .LVU147
 728              	.LBB2168:
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	*_M_p |= _M_mask;
 729              		.loc 1 92 7 view .LVU148
 730 00a2 002E     		cmp	r6, #0
 731 00a4 EDD1     		bne	.L78
 732              	.LBB2162:
 733              	.LBI2162:
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 53


 734              		.loc 1 90 5 view .LVU149
 735              	.LVL31:
 736              	.LBB2163:
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 737              		.loc 1 95 2 view .LVU150
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 738              		.loc 1 95 8 is_stmt 0 view .LVU151
 739 00a6 DCF80060 		ldr	r6, [ip]
 740              	.LBE2163:
 741              	.LBE2162:
 742              	.LBE2168:
 743              	.LBE2197:
 744              	.LBB2198:
 745              	.LBB2184:
 746              	.LBB2179:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 747              		.loc 1 154 7 view .LVU152
 748 00aa 1F28     		cmp	r0, #31
 749              	.LBE2179:
 750              	.LBE2184:
 751              	.LBE2198:
 752              	.LBB2199:
 753              	.LBB2169:
 754              	.LBB2165:
 755              	.LBB2164:
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 756              		.loc 1 95 8 view .LVU153
 757 00ac 26EA0303 		bic	r3, r6, r3
 758 00b0 CCF80030 		str	r3, [ip]
 759              	.LVL32:
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 760              		.loc 1 95 8 view .LVU154
 761              	.LBE2164:
 762              	.LBE2165:
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 763              		.loc 1 96 7 is_stmt 1 view .LVU155
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 764              		.loc 1 96 7 is_stmt 0 view .LVU156
 765              	.LBE2169:
 766              	.LBE2199:
 767              	.LBB2200:
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 768              		.loc 1 255 5 is_stmt 1 view .LVU157
 769              	.LBE2200:
 770              	.LBE2205:
 771              	.LBE2210:
 772              	.LBE2215:
 773              	.LBE2220:
 774              	.LBE2225:
 775              	.LBE2230:
 776              	.LBE2235:
 777              	.LBE2244:
 778              	.LBE3264:
 779              	.LBE3323:
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 780              		.loc 1 257 7 view .LVU158
 781              	.LBB3324:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 54


 782              	.LBB3265:
 783              	.LBB2245:
 784              	.LBB2236:
 785              	.LBB2231:
 786              	.LBB2226:
 787              	.LBB2221:
 788              	.LBB2216:
 789              	.LBB2211:
 790              	.LBB2206:
 791              	.LBB2201:
 792              	.LBB2185:
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 793              		.loc 1 152 5 view .LVU159
 794              	.LBB2180:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 795              		.loc 1 154 7 view .LVU160
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 796              		.loc 1 154 7 is_stmt 0 view .LVU161
 797 00b4 EDD1     		bne	.L79
 798              	.LVL33:
 799              	.L15:
 800              	.LBB2173:
 801              	.LBI2173:
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 802              		.loc 1 152 5 is_stmt 1 view .LVU162
 803              	.LBB2174:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  ++_M_p;
 804              		.loc 1 156 4 view .LVU163
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 805              		.loc 1 157 4 view .LVU164
 806              	.LBE2174:
 807              	.LBE2173:
 808              	.LBE2180:
 809              	.LBE2185:
 810              	.LBE2201:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 811              		.loc 3 378 46 is_stmt 0 view .LVU165
 812 00b6 8845     		cmp	r8, r1
 813              	.LBB2202:
 814              	.LBB2186:
 815              	.LBB2181:
 816              	.LBB2176:
 817              	.LBB2175:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 818              		.loc 1 157 4 view .LVU166
 819 00b8 0CF1040C 		add	ip, ip, #4
 820              	.LVL34:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  ++_M_p;
 821              		.loc 1 156 14 view .LVU167
 822 00bc 4FF00000 		mov	r0, #0
 823              	.LVL35:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  ++_M_p;
 824              		.loc 1 156 14 view .LVU168
 825              	.LBE2175:
 826              	.LBE2176:
 827              	.LBE2181:
 828              	.LBE2186:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 55


 829              	.LBE2202:
 830              	.LBE2206:
 831              	.LBE2211:
 832              	.LBE2216:
 833              	.LBE2221:
 834              	.LBE2226:
 835              	.LBE2231:
 836              	.LBE2236:
 837              	.LBE2245:
 838              	.LBE3265:
 839              	.LBE3324:
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 840              		.loc 1 258 7 is_stmt 1 view .LVU169
 841              	.LBB3325:
 842              	.LBB3266:
 843              	.LBB2246:
 844              	.LBB2237:
 845              	.LBB2232:
 846              	.LBB2227:
 847              	.LBB2222:
 848              	.LBB2217:
 849              	.LBB2212:
 850              	.LBB2207:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 851              		.loc 3 378 4 view .LVU170
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 852              		.loc 3 378 46 view .LVU171
 853 00c0 EBD1     		bne	.L18
 854              	.LVL36:
 855              	.L17:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 856              		.loc 3 378 46 is_stmt 0 view .LVU172
 857              	.LBE2207:
 858              	.LBE2212:
 859              	.LBE2217:
 860              	.LBE2222:
 861              	.LBE2227:
 862              	.LBE2232:
 863              	.LBE2237:
 864              	.LBE2246:
 865              	.LBB2247:
 866              	.LBI2247:
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x._M_p, __x._M_offset) { }
 867              		.loc 1 339 5 is_stmt 1 view .LVU173
 868              	.LBB2248:
 869              	.LBI2248:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 870              		.loc 1 148 5 view .LVU174
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 871              		.loc 1 148 5 is_stmt 0 view .LVU175
 872              	.LBE2248:
 873              	.LBE2247:
 874              	.LBB2249:
 875              	.LBI2249:
1024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	       _InputIterator __first, _InputIterator __last)
 876              		.loc 1 1024 2 is_stmt 1 view .LVU176
 877              	.LBB2250:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 56


 878              	.LBB2251:
 879              	.LBI2251:
 867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_iterator(this->_M_impl._M_start._M_p, 0); }
 880              		.loc 1 867 7 view .LVU177
 881              	.LBB2252:
 882              	.LBI2252:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 883              		.loc 1 336 5 view .LVU178
 884              	.LBB2253:
 885              	.LBI2253:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 886              		.loc 1 148 5 view .LVU179
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 887              		.loc 1 148 5 is_stmt 0 view .LVU180
 888              	.LBE2253:
 889              	.LBE2252:
 890              	.LBE2251:
 891              	.LBE2250:
 892              	.LBE2249:
 893              	.LBE3266:
 894              	.LBE3325:
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 895              		.loc 1 226 7 is_stmt 1 view .LVU181
 896              	.LBB3326:
 897              	.LBB3267:
 898              	.LBB3221:
 899              	.LBB3180:
 900              	.LBB2254:
 901              	.LBI2254:
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return _Bit_iterator(_M_p, _M_offset); }
 902              		.loc 1 343 5 view .LVU182
 903              	.LBE2254:
 904              	.LBE3180:
 905              	.LBE3221:
 906              	.LBE3267:
 907              	.LBE3326:
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 908              		.loc 1 344 7 view .LVU183
 909              	.LBB3327:
 910              	.LBB3268:
 911              	.LBB3222:
 912              	.LBB3181:
 913              	.LBB2257:
 914              	.LBB2255:
 915              	.LBI2255:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 916              		.loc 1 243 5 view .LVU184
 917              	.LBB2256:
 918              	.LBI2256:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 919              		.loc 1 148 5 view .LVU185
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 920              		.loc 1 148 5 is_stmt 0 view .LVU186
 921              	.LBE2256:
 922              	.LBE2255:
 923              	.LBE2257:
 924              	.LBB2258:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 57


 925              	.LBI2258:
1288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			   _InputIterator __first, _InputIterator __last,
 926              		.loc 1 1288 2 is_stmt 1 view .LVU187
 927              	.LBB2259:
 928              	.LBI2259:
 929              		.file 4 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\vector.tcc"
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // Vector implementation (out of line) -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Copyright (c) 1996
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * representations about the suitability of this  software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** /** @file bits/vector.tcc
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 58


  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *  Do not attempt to use it directly. @headername{vector}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #ifndef _VECTOR_TCC
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #define _VECTOR_TCC 1
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** namespace std _GLIBCXX_VISIBILITY(default)
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** {
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     void
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     reserve(size_type __n)
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (__n > this->max_size())
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	__throw_length_error(__N("vector::reserve"));
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (this->capacity() < __n)
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  const size_type __old_size = size();
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  pointer __tmp;
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __tmp = this->_M_allocate(__n);
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			  __tmp, _M_get_Tp_allocator());
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __tmp = _M_allocate_and_copy(__n,
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(this->_M_impl._M_start),
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(this->_M_impl._M_finish));
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    _M_get_Tp_allocator());
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _GLIBCXX_ASAN_ANNOTATE_REINIT;
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_deallocate(this->_M_impl._M_start,
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			this->_M_impl._M_end_of_storage
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			- this->_M_impl._M_start);
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_start = __tmp;
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_finish = __tmp + __old_size;
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename... _Args>
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       typename vector<_Tp, _Alloc>::reference
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 59


 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       {
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				     std::forward<_Args>(__args)...);
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    ++this->_M_impl._M_finish;
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	return back();
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       }
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     typename vector<_Tp, _Alloc>::iterator
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     insert(const_iterator __position, const value_type& __x)
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     insert(iterator __position, const value_type& __x)
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       const size_type __n = __position - begin();
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (__position == end())
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				     __x);
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    ++this->_M_impl._M_finish;
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    const auto __pos = begin() + (__position - cbegin());
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    // __x could be an existing element of this vector, so make a
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    // copy of it before _M_insert_aux moves elements around.
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _Temporary_value __x_copy(this, __x);
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _M_insert_aux(__pos, std::move(__x_copy._M_val()));
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _M_insert_aux(__position, __x);
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       else
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	_M_realloc_insert(begin() + (__position - cbegin()), __x);
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	_M_realloc_insert(__position, __x);
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 60


 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       return iterator(this->_M_impl._M_start + __n);
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     typename vector<_Tp, _Alloc>::iterator
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_erase(iterator __position)
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (__position + 1 != end())
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	_GLIBCXX_MOVE3(__position + 1, end(), __position);
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       --this->_M_impl._M_finish;
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _GLIBCXX_ASAN_ANNOTATE_SHRINK(1);
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       return __position;
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     typename vector<_Tp, _Alloc>::iterator
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_erase(iterator __first, iterator __last)
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (__first != __last)
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (__last != end())
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_MOVE3(__last, end(), __first);
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_erase_at_end(__first.base() + (end() - __last));
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       return __first;
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>&
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     operator=(const vector<_Tp, _Alloc>& __x)
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (&__x != this)
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _GLIBCXX_ASAN_ANNOTATE_REINIT;
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (_Alloc_traits::_S_propagate_on_copy_assign())
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      if (!_Alloc_traits::_S_always_equal()
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	          && _M_get_Tp_allocator() != __x._M_get_Tp_allocator())
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	        {
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  // replacement allocator cannot free existing storage
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  this->clear();
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  _M_deallocate(this->_M_impl._M_start,
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				this->_M_impl._M_end_of_storage
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				- this->_M_impl._M_start);
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  this->_M_impl._M_start = nullptr;
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  this->_M_impl._M_finish = nullptr;
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  this->_M_impl._M_end_of_storage = nullptr;
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		}
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::__alloc_on_copy(_M_get_Tp_allocator(),
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   __x._M_get_Tp_allocator());
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 61


 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  const size_type __xlen = __x.size();
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (__xlen > capacity())
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      pointer __tmp = _M_allocate_and_copy(__xlen, __x.begin(),
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						   __x.end());
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    _M_get_Tp_allocator());
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _M_deallocate(this->_M_impl._M_start,
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    this->_M_impl._M_end_of_storage
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    - this->_M_impl._M_start);
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      this->_M_impl._M_start = __tmp;
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __xlen;
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else if (size() >= __xlen)
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::_Destroy(std::copy(__x.begin(), __x.end(), begin()),
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    end(), _M_get_Tp_allocator());
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::copy(__x._M_impl._M_start, __x._M_impl._M_start + size(),
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			this->_M_impl._M_start);
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::__uninitialized_copy_a(__x._M_impl._M_start + size(),
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  __x._M_impl._M_finish,
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  this->_M_impl._M_finish,
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  _M_get_Tp_allocator());
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_finish = this->_M_impl._M_start + __xlen;
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       return *this;
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     void
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_fill_assign(size_t __n, const value_type& __val)
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (__n > capacity())
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  vector __tmp(__n, __val, _M_get_Tp_allocator());
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  __tmp._M_impl._M_swap_data(this->_M_impl);
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       else if (__n > size())
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  std::fill(begin(), end(), __val);
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  const size_type __add = __n - size();
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _GLIBCXX_ASAN_ANNOTATE_GROW(__add);
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_finish =
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    std::__uninitialized_fill_n_a(this->_M_impl._M_finish,
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  __add, __val, _M_get_Tp_allocator());
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _GLIBCXX_ASAN_ANNOTATE_GREW(__add);
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       else
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****         _M_erase_at_end(std::fill_n(this->_M_impl._M_start, __n, __val));
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 62


 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename _InputIterator>
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_assign_aux(_InputIterator __first, _InputIterator __last,
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::input_iterator_tag)
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       {
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	pointer __cur(this->_M_impl._M_start);
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	for (; __first != __last && __cur != this->_M_impl._M_finish;
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	     ++__cur, (void)++__first)
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  *__cur = *__first;
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (__first == __last)
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_erase_at_end(__cur);
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_range_insert(end(), __first, __last,
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			  std::__iterator_category(__first));
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       }
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename _ForwardIterator>
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::forward_iterator_tag)
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       {
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	const size_type __len = std::distance(__first, __last);
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (__len > capacity())
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _S_check_init_len(__len, _M_get_Tp_allocator());
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    pointer __tmp(_M_allocate_and_copy(__len, __first, __last));
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			  _M_get_Tp_allocator());
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_REINIT;
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _M_deallocate(this->_M_impl._M_start,
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			  this->_M_impl._M_end_of_storage
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			  - this->_M_impl._M_start);
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    this->_M_impl._M_start = __tmp;
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    this->_M_impl._M_finish = this->_M_impl._M_start + __len;
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    this->_M_impl._M_end_of_storage = this->_M_impl._M_finish;
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else if (size() >= __len)
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_erase_at_end(std::copy(__first, __last, this->_M_impl._M_start));
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _ForwardIterator __mid = __first;
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    std::advance(__mid, size());
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    std::copy(__first, __mid, this->_M_impl._M_start);
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    const size_type __attribute__((__unused__)) __n = __len - size();
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    this->_M_impl._M_finish =
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::__uninitialized_copy_a(__mid, __last,
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  this->_M_impl._M_finish,
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  _M_get_Tp_allocator());
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(__n);
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       }
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 63


 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     auto
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_insert_rval(const_iterator __position, value_type&& __v) -> iterator
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       const auto __n = __position - cbegin();
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (__position == cend())
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				     std::move(__v));
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    ++this->_M_impl._M_finish;
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_insert_aux(begin() + __n, std::move(__v));
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       else
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	_M_realloc_insert(begin() + __n, std::move(__v));
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       return iterator(this->_M_impl._M_start + __n);
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename... _Args>
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       auto
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_emplace_aux(const_iterator __position, _Args&&... __args)
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       -> iterator
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       {
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	const auto __n = __position - cbegin();
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (__position == cend())
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				       std::forward<_Args>(__args)...);
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      ++this->_M_impl._M_finish;
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      // We need to construct a temporary because something in __args...
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      // could alias one of the elements of the container and so we
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      // need to use it before _M_insert_aux moves elements around.
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _Temporary_value __tmp(this, std::forward<_Args>(__args)...);
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _M_insert_aux(begin() + __n, std::move(__tmp._M_val()));
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_realloc_insert(begin() + __n, std::forward<_Args>(__args)...);
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	return iterator(this->_M_impl._M_start + __n);
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       }
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename _Arg>
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 64


 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_insert_aux(iterator __position, _Arg&& __arg)
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     void
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_insert_aux(iterator __position, const _Tp& __x)
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			       _GLIBCXX_MOVE(*(this->_M_impl._M_finish - 1)));
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       ++this->_M_impl._M_finish;
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus < 201103L
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _Tp __x_copy = __x;
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _GLIBCXX_MOVE_BACKWARD3(__position.base(),
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			      this->_M_impl._M_finish - 2,
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			      this->_M_impl._M_finish - 1);
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus < 201103L
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       *__position = __x_copy;
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       *__position = std::forward<_Arg>(__arg);
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename... _Args>
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_realloc_insert(iterator __position, _Args&&... __args)
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     void
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_realloc_insert(iterator __position, const _Tp& __x)
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       const size_type __len =
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	_M_check_len(size_type(1), "vector::_M_realloc_insert");
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       pointer __old_start = this->_M_impl._M_start;
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       pointer __old_finish = this->_M_impl._M_finish;
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       const size_type __elems_before = __position - begin();
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       pointer __new_start(this->_M_allocate(__len));
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       pointer __new_finish(__new_start);
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       __try
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  // The order of the three operations is dictated by the C++11
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  // case, where the moves could alter a new element belonging
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  // to the existing vector.  This is an issue only for callers
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  // taking the element by lvalue ref (see last bullet of C++11
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  // [res.on.arguments]).
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _Alloc_traits::construct(this->_M_impl,
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   __new_start + __elems_before,
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 65


 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   std::forward<_Args>(__args)...);
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   __x);
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  __new_finish = pointer();
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __new_finish = _S_relocate(__old_start, __position.base(),
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					 __new_start, _M_get_Tp_allocator());
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      ++__new_finish;
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __new_finish = _S_relocate(__position.base(), __old_finish,
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					 __new_finish, _M_get_Tp_allocator());
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __new_finish
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		= std::__uninitialized_move_if_noexcept_a
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		(__old_start, __position.base(),
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		 __new_start, _M_get_Tp_allocator());
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      ++__new_finish;
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __new_finish
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		= std::__uninitialized_move_if_noexcept_a
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		(__position.base(), __old_finish,
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		 __new_finish, _M_get_Tp_allocator());
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       __catch(...)
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (!__new_finish)
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _Alloc_traits::destroy(this->_M_impl,
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   __new_start + __elems_before);
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    std::_Destroy(__new_start, __new_finish, _M_get_Tp_allocator());
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_deallocate(__new_start, __len);
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  __throw_exception_again;
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if _GLIBCXX17_CONSTEXPR (!_S_use_relocate())
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	std::_Destroy(__old_start, __old_finish, _M_get_Tp_allocator());
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _GLIBCXX_ASAN_ANNOTATE_REINIT;
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_deallocate(__old_start,
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    this->_M_impl._M_end_of_storage - __old_start);
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_start = __new_start;
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_finish = __new_finish;
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_end_of_storage = __new_start + __len;
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 66


 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     void
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_fill_insert(iterator __position, size_type __n, const value_type& __x)
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (__n != 0)
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (size_type(this->_M_impl._M_end_of_storage
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			- this->_M_impl._M_finish) >= __n)
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus < 201103L
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      value_type __x_copy = __x;
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _Temporary_value __tmp(this, __x);
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      value_type& __x_copy = __tmp._M_val();
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      const size_type __elems_after = end() - __position;
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      pointer __old_finish(this->_M_impl._M_finish);
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      if (__elems_after > __n)
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		{
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  std::__uninitialized_move_a(this->_M_impl._M_finish - __n,
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					      this->_M_impl._M_finish,
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					      this->_M_impl._M_finish,
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					      _M_get_Tp_allocator());
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  this->_M_impl._M_finish += __n;
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  _GLIBCXX_ASAN_ANNOTATE_GREW(__n);
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  _GLIBCXX_MOVE_BACKWARD3(__position.base(),
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  __old_finish - __n, __old_finish);
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  std::fill(__position.base(), __position.base() + __n,
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    __x_copy);
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		}
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      else
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		{
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  this->_M_impl._M_finish =
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::__uninitialized_fill_n_a(this->_M_impl._M_finish,
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						  __n - __elems_after,
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						  __x_copy,
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						  _M_get_Tp_allocator());
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  _GLIBCXX_ASAN_ANNOTATE_GREW(__n - __elems_after);
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  std::__uninitialized_move_a(__position.base(), __old_finish,
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					      this->_M_impl._M_finish,
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					      _M_get_Tp_allocator());
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  this->_M_impl._M_finish += __elems_after;
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  _GLIBCXX_ASAN_ANNOTATE_GREW(__elems_after);
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  std::fill(__position.base(), __old_finish, __x_copy);
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		}
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      const size_type __len =
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		_M_check_len(__n, "vector::_M_fill_insert");
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      const size_type __elems_before = __position - begin();
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      pointer __new_start(this->_M_allocate(__len));
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      pointer __new_finish(__new_start);
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __try
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		{
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 67


 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  // See _M_realloc_insert above.
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  std::__uninitialized_fill_n_a(__new_start + __elems_before,
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						__n, __x,
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						_M_get_Tp_allocator());
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  __new_finish = pointer();
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  __new_finish
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    = std::__uninitialized_move_if_noexcept_a
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    (this->_M_impl._M_start, __position.base(),
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		     __new_start, _M_get_Tp_allocator());
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  __new_finish += __n;
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  __new_finish
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    = std::__uninitialized_move_if_noexcept_a
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    (__position.base(), this->_M_impl._M_finish,
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		     __new_finish, _M_get_Tp_allocator());
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		}
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __catch(...)
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		{
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  if (!__new_finish)
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::_Destroy(__new_start + __elems_before,
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				  __new_start + __elems_before + __n,
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				  _M_get_Tp_allocator());
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  else
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::_Destroy(__new_start, __new_finish,
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				  _M_get_Tp_allocator());
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  _M_deallocate(__new_start, __len);
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  __throw_exception_again;
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		}
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    _M_get_Tp_allocator());
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _GLIBCXX_ASAN_ANNOTATE_REINIT;
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _M_deallocate(this->_M_impl._M_start,
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    this->_M_impl._M_end_of_storage
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    - this->_M_impl._M_start);
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      this->_M_impl._M_start = __new_start;
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      this->_M_impl._M_finish = __new_finish;
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      this->_M_impl._M_end_of_storage = __new_start + __len;
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     void
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_default_append(size_type __n)
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (__n != 0)
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  const size_type __size = size();
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					 - this->_M_impl._M_finish);
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (__size > max_size() || __navail > max_size() - __size)
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    __builtin_unreachable();
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 68


 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (__navail >= __n)
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      this->_M_impl._M_finish =
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						 __n, _M_get_Tp_allocator());
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _GLIBCXX_ASAN_ANNOTATE_GREW(__n);
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      const size_type __len =
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		_M_check_len(__n, "vector::_M_default_append");
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      pointer __new_start(this->_M_allocate(__len));
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		{
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  __try
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    {
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		      std::__uninitialized_default_n_a(__new_start + __size,
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			      __n, _M_get_Tp_allocator());
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    }
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  __catch(...)
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    {
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		      _M_deallocate(__new_start, __len);
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		      __throw_exception_again;
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    }
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			      __new_start, _M_get_Tp_allocator());
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		}
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      else
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		{
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  pointer __destroy_from = pointer();
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  __try
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    {
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		      std::__uninitialized_default_n_a(__new_start + __size,
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			      __n, _M_get_Tp_allocator());
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		      __destroy_from = __new_start + __size;
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		      std::__uninitialized_move_if_noexcept_a(
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			      this->_M_impl._M_start, this->_M_impl._M_finish,
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			      __new_start, _M_get_Tp_allocator());
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    }
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  __catch(...)
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    {
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		      if (__destroy_from)
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			std::_Destroy(__destroy_from, __destroy_from + __n,
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				      _M_get_Tp_allocator());
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		      _M_deallocate(__new_start, __len);
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		      __throw_exception_again;
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    }
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				_M_get_Tp_allocator());
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		}
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _GLIBCXX_ASAN_ANNOTATE_REINIT;
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _M_deallocate(this->_M_impl._M_start,
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    this->_M_impl._M_end_of_storage
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    - this->_M_impl._M_start);
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      this->_M_impl._M_start = __new_start;
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 69


 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      this->_M_impl._M_finish = __new_start + __size + __n;
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      this->_M_impl._M_end_of_storage = __new_start + __len;
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     bool
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_shrink_to_fit()
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (capacity() == size())
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	return false;
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _GLIBCXX_ASAN_ANNOTATE_REINIT;
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       return std::__shrink_to_fit_aux<vector>::_S_do_it(*this);
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename _InputIterator>
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_range_insert(iterator __pos, _InputIterator __first,
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		      _InputIterator __last, std::input_iterator_tag)
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       {
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (__pos == end())
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    for (; __first != __last; ++__first)
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      insert(end(), *__first);
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else if (__first != __last)
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    vector __tmp(__first, __last, _M_get_Tp_allocator());
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    insert(__pos,
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		   _GLIBCXX_MAKE_MOVE_ITERATOR(__tmp.begin()),
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		   _GLIBCXX_MAKE_MOVE_ITERATOR(__tmp.end()));
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       }
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename _ForwardIterator>
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_range_insert(iterator __position, _ForwardIterator __first,
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		      _ForwardIterator __last, std::forward_iterator_tag)
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       {
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (__first != __last)
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    const size_type __n = std::distance(__first, __last);
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    if (size_type(this->_M_impl._M_end_of_storage
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			  - this->_M_impl._M_finish) >= __n)
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      {
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		const size_type __elems_after = end() - __position;
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		pointer __old_finish(this->_M_impl._M_finish);
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		if (__elems_after > __n)
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  {
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 70


 736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::__uninitialized_move_a(this->_M_impl._M_finish - __n,
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						this->_M_impl._M_finish,
 738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						this->_M_impl._M_finish,
 739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						_M_get_Tp_allocator());
 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    this->_M_impl._M_finish += __n;
 741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    _GLIBCXX_ASAN_ANNOTATE_GREW(__n);
 742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    _GLIBCXX_MOVE_BACKWARD3(__position.base(),
 743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					    __old_finish - __n, __old_finish);
 744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::copy(__first, __last, __position);
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  }
 746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		else
 747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  {
 748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    _ForwardIterator __mid = __first;
 749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::advance(__mid, __elems_after);
 750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
 751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::__uninitialized_copy_a(__mid, __last,
 752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						this->_M_impl._M_finish,
 753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						_M_get_Tp_allocator());
 754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    this->_M_impl._M_finish += __n - __elems_after;
 755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    _GLIBCXX_ASAN_ANNOTATE_GREW(__n - __elems_after);
 756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::__uninitialized_move_a(__position.base(),
 757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						__old_finish,
 758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						this->_M_impl._M_finish,
 759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						_M_get_Tp_allocator());
 760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    this->_M_impl._M_finish += __elems_after;
 761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    _GLIBCXX_ASAN_ANNOTATE_GREW(__elems_after);
 762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::copy(__first, __mid, __position);
 763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  }
 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      }
 765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    else
 766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      {
 767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		const size_type __len =
 768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  _M_check_len(__n, "vector::_M_range_insert");
 769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		pointer __new_start(this->_M_allocate(__len));
 770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		pointer __new_finish(__new_start);
 771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		__try
 772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  {
 773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    __new_finish
 774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		      = std::__uninitialized_move_if_noexcept_a
 775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		      (this->_M_impl._M_start, __position.base(),
 776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		       __new_start, _M_get_Tp_allocator());
 777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    __new_finish
 778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		      = std::__uninitialized_copy_a(__first, __last,
 779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						    __new_finish,
 780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						    _M_get_Tp_allocator());
 781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    __new_finish
 782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		      = std::__uninitialized_move_if_noexcept_a
 783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		      (__position.base(), this->_M_impl._M_finish,
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		       __new_finish, _M_get_Tp_allocator());
 785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  }
 786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		__catch(...)
 787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  {
 788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::_Destroy(__new_start, __new_finish,
 789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				  _M_get_Tp_allocator());
 790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    _M_deallocate(__new_start, __len);
 791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    __throw_exception_again;
 792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 71


 793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			      _M_get_Tp_allocator());
 795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		_GLIBCXX_ASAN_ANNOTATE_REINIT;
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		_M_deallocate(this->_M_impl._M_start,
 797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			      this->_M_impl._M_end_of_storage
 798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			      - this->_M_impl._M_start);
 799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		this->_M_impl._M_start = __new_start;
 800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		this->_M_impl._M_finish = __new_finish;
 801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		this->_M_impl._M_end_of_storage = __new_start + __len;
 802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      }
 803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       }
 805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   // vector<bool>
 808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Alloc>
 809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     void
 810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<bool, _Alloc>::
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_reallocate(size_type __n)
 812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _Bit_pointer __q = this->_M_allocate(__n);
 814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       iterator __start(std::__addressof(*__q), 0);
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       iterator __finish(_M_copy_aligned(begin(), end(), __start));
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_deallocate();
 817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_start = __start;
 818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_finish = __finish;
 819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_end_of_storage = __q + _S_nword(__n);
 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Alloc>
 823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     void
 824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<bool, _Alloc>::
 825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_fill_insert(iterator __position, size_type __n, bool __x)
 826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (__n == 0)
 828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	return;
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (capacity() - size() >= __n)
 830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  std::copy_backward(__position, end(),
 832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			     this->_M_impl._M_finish + difference_type(__n));
 833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  std::fill(__position, __position + difference_type(__n), __x);
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_finish += difference_type(__n);
 835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       else
 837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  const size_type __len = 
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _M_check_len(__n, "vector<bool>::_M_fill_insert");
 840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _Bit_pointer __q = this->_M_allocate(__len);
 841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  iterator __start(std::__addressof(*__q), 0);
 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  iterator __i = _M_copy_aligned(begin(), __position, __start);
 843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  std::fill(__i, __i + difference_type(__n), __x);
 844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  iterator __finish = std::copy(__position, end(),
 845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					__i + difference_type(__n));
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_deallocate();
 847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_end_of_storage = __q + _S_nword(__len);
 848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_start = __start;
 849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_finish = __finish;
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 72


 850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Alloc>
 854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename _ForwardIterator>
 855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<bool, _Alloc>::
 930              		.loc 4 856 7 view .LVU188
 931              	.LBB2260:
 857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_insert_range(iterator __position, _ForwardIterator __first, 
 858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		      _ForwardIterator __last, std::forward_iterator_tag)
 859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       {
 860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (__first != __last)
 932              		.loc 4 860 2 is_stmt 0 view .LVU189
 933 00c2 BA42     		cmp	r2, r7
 934 00c4 CFD0     		beq	.L1
 935              	.LVL37:
 936              	.LBB2261:
 937              	.LBB2262:
 938              	.LBI2262:
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     {
 939              		.loc 2 138 5 is_stmt 1 view .LVU190
 940              	.LBB2263:
 941              	.LBI2263:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****                random_access_iterator_tag)
 942              		.loc 2 98 5 view .LVU191
 943              	.LBE2263:
 944              	.LBE2262:
 945              	.LBB2266:
 946              	.LBB2267:
 947              	.LBB2268:
 948              	.LBB2269:
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 949              		.loc 1 226 44 is_stmt 0 view .LVU192
 950 00c6 D9F81030 		ldr	r3, [r9, #16]
 951              	.LBE2269:
 952              	.LBE2268:
 953              	.LBE2267:
 954              	.LBE2266:
 955              	.LBB2976:
 956              	.LBB2265:
 957              	.LBB2264:
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     }
 958              		.loc 2 104 23 view .LVU193
 959 00ca A2EB0708 		sub	r8, r2, r7
 960              	.LVL38:
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     }
 961              		.loc 2 104 23 view .LVU194
 962              	.LBE2264:
 963              	.LBE2265:
 964              	.LBE2976:
 965              	.LBB2977:
 966              	.LBB2280:
 967              	.LBI2267:
 900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return size_type(const_iterator(this->_M_impl._M_end_addr(), 0)
 968              		.loc 1 900 7 is_stmt 1 view .LVU195
 969              	.LBB2272:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 73


 970              	.LBI2272:
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 971              		.loc 1 513 2 view .LVU196
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 972              		.loc 1 513 2 is_stmt 0 view .LVU197
 973              	.LBE2272:
 974              	.LBB2273:
 975              	.LBI2273:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 976              		.loc 1 336 5 is_stmt 1 view .LVU198
 977              	.LBB2274:
 978              	.LBI2274:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 979              		.loc 1 148 5 view .LVU199
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 980              		.loc 1 148 5 is_stmt 0 view .LVU200
 981              	.LBE2274:
 982              	.LBE2273:
 983              	.LBB2275:
 984              	.LBI2275:
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_iterator(this->_M_impl._M_start._M_p, 0); }
 985              		.loc 1 838 7 is_stmt 1 view .LVU201
 986              	.LBB2276:
 987              	.LBI2276:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 988              		.loc 1 336 5 view .LVU202
 989              	.LBB2277:
 990              	.LBI2277:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 991              		.loc 1 148 5 view .LVU203
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 992              		.loc 1 148 5 is_stmt 0 view .LVU204
 993              	.LBE2277:
 994              	.LBE2276:
 995              	.LBE2275:
 996              	.LBB2278:
 997              	.LBI2268:
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 998              		.loc 1 224 5 is_stmt 1 view .LVU205
 999              	.LBB2270:
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 1000              		.loc 1 226 7 view .LVU206
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 1001              		.loc 1 226 7 is_stmt 0 view .LVU207
 1002              	.LBE2270:
 1003              	.LBE2278:
 1004              	.LBE2280:
 1005              	.LBB2281:
 1006              	.LBI2281:
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return size_type(end() - begin()); }
 1007              		.loc 1 884 7 is_stmt 1 view .LVU208
 1008              	.LBB2282:
 1009              	.LBI2282:
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl._M_finish; }
 1010              		.loc 1 846 7 view .LVU209
 1011              	.LBB2283:
 1012              	.LBI2283:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 74


 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x._M_p, __x._M_offset) { }
 1013              		.loc 1 339 5 view .LVU210
 1014              	.LBB2284:
 1015              	.LBI2284:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1016              		.loc 1 148 5 view .LVU211
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1017              		.loc 1 148 5 is_stmt 0 view .LVU212
 1018              	.LBE2284:
 1019              	.LBE2283:
 1020              	.LBE2282:
 1021              	.LBB2285:
 1022              	.LBI2285:
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_iterator(this->_M_impl._M_start._M_p, 0); }
 1023              		.loc 1 838 7 is_stmt 1 view .LVU213
 1024              	.LBB2286:
 1025              	.LBI2286:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 1026              		.loc 1 336 5 view .LVU214
 1027              	.LBB2287:
 1028              	.LBI2287:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1029              		.loc 1 148 5 view .LVU215
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1030              		.loc 1 148 5 is_stmt 0 view .LVU216
 1031              	.LBE2287:
 1032              	.LBE2286:
 1033              	.LBE2285:
 1034              	.LBE2281:
 1035              	.LBE2977:
 1036              	.LBE2261:
 1037              	.LBE2260:
 1038              	.LBE2259:
 1039              	.LBE2258:
 1040              	.LBE3181:
 1041              	.LBE3222:
 1042              	.LBE3268:
 1043              	.LBE3327:
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 1044              		.loc 1 226 7 is_stmt 1 view .LVU217
 1045              	.LBB3328:
 1046              	.LBB3269:
 1047              	.LBB3223:
 1048              	.LBB3182:
 1049              	.LBB3134:
 1050              	.LBB3095:
 1051              	.LBB3056:
 1052              	.LBB3017:
 1053              	.LBB2978:
 1054              	.LBB2288:
 1055              	.LBB2279:
 1056              	.LBB2271:
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 1057              		.loc 1 226 44 is_stmt 0 view .LVU218
 1058 00ce 1B1B     		subs	r3, r3, r4
 1059              	.LBE2271:
 1060              	.LBE2279:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 75


 1061              	.LBE2288:
 861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    size_type __n = std::distance(__first, __last);
 863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    if (capacity() - size() >= __n)
 1062              		.loc 4 863 21 view .LVU219
 1063 00d0 CEEBC303 		rsb	r3, lr, r3, lsl #3
 1064              		.loc 4 863 6 view .LVU220
 1065 00d4 9845     		cmp	r8, r3
 1066 00d6 40F2B680 		bls	.L80
 1067              	.LVL39:
 1068              	.LBB2289:
 1069              	.LBB2290:
 1070              	.LBI2290:
1318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 1071              		.loc 1 1318 7 is_stmt 1 view .LVU221
 1072              	.LBB2291:
 1073              	.LBB2292:
 1074              	.LBI2292:
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return size_type(end() - begin()); }
 1075              		.loc 1 884 7 view .LVU222
 1076              	.LBB2293:
 1077              	.LBI2293:
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl._M_finish; }
 1078              		.loc 1 846 7 view .LVU223
 1079              	.LBB2294:
 1080              	.LBI2294:
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x._M_p, __x._M_offset) { }
 1081              		.loc 1 339 5 view .LVU224
 1082              	.LBB2295:
 1083              	.LBI2295:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1084              		.loc 1 148 5 view .LVU225
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1085              		.loc 1 148 5 is_stmt 0 view .LVU226
 1086              	.LBE2295:
 1087              	.LBE2294:
 1088              	.LBE2293:
 1089              	.LBB2296:
 1090              	.LBI2296:
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_iterator(this->_M_impl._M_start._M_p, 0); }
 1091              		.loc 1 838 7 is_stmt 1 view .LVU227
 1092              	.LBB2297:
 1093              	.LBI2297:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 1094              		.loc 1 336 5 view .LVU228
 1095              	.LBB2298:
 1096              	.LBI2298:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1097              		.loc 1 148 5 view .LVU229
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1098              		.loc 1 148 5 is_stmt 0 view .LVU230
 1099              	.LBE2298:
 1100              	.LBE2297:
 1101              	.LBE2296:
 1102              	.LBE2292:
 1103              	.LBE2291:
 1104              	.LBE2290:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 76


 1105              	.LBE2289:
 1106              	.LBE2978:
 1107              	.LBE3017:
 1108              	.LBE3056:
 1109              	.LBE3095:
 1110              	.LBE3134:
 1111              	.LBE3182:
 1112              	.LBE3223:
 1113              	.LBE3269:
 1114              	.LBE3328:
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 1115              		.loc 1 226 7 is_stmt 1 view .LVU231
 1116              	.LBB3329:
 1117              	.LBB3270:
 1118              	.LBB3224:
 1119              	.LBB3183:
 1120              	.LBB3135:
 1121              	.LBB3096:
 1122              	.LBB3057:
 1123              	.LBB3018:
 1124              	.LBB2979:
 1125              	.LBB2785:
 1126              	.LBB2316:
 1127              	.LBB2313:
1320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  __throw_length_error(__N(__s));
 1128              		.loc 1 1320 17 is_stmt 0 view .LVU232
 1129 00da 844A     		ldr	r2, .L91
 1130              	.LVL40:
1320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  __throw_length_error(__N(__s));
 1131              		.loc 1 1320 17 view .LVU233
 1132 00dc A2EB0E03 		sub	r3, r2, lr
1320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  __throw_length_error(__N(__s));
 1133              		.loc 1 1320 2 view .LVU234
 1134 00e0 9845     		cmp	r8, r3
 1135 00e2 00F20081 		bhi	.L81
 1136              	.LVL41:
 1137              	.LBB2299:
 1138              	.LBI2299:
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return size_type(end() - begin()); }
 1139              		.loc 1 884 7 is_stmt 1 view .LVU235
 1140              	.LBB2300:
 1141              	.LBI2300:
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl._M_finish; }
 1142              		.loc 1 846 7 view .LVU236
 1143              	.LBB2301:
 1144              	.LBI2301:
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x._M_p, __x._M_offset) { }
 1145              		.loc 1 339 5 view .LVU237
 1146              	.LBB2302:
 1147              	.LBI2302:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1148              		.loc 1 148 5 view .LVU238
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1149              		.loc 1 148 5 is_stmt 0 view .LVU239
 1150              	.LBE2302:
 1151              	.LBE2301:
 1152              	.LBE2300:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 77


 1153              	.LBB2303:
 1154              	.LBI2303:
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_iterator(this->_M_impl._M_start._M_p, 0); }
 1155              		.loc 1 838 7 is_stmt 1 view .LVU240
 1156              	.LBB2304:
 1157              	.LBI2304:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 1158              		.loc 1 336 5 view .LVU241
 1159              	.LBB2305:
 1160              	.LBI2305:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1161              		.loc 1 148 5 view .LVU242
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1162              		.loc 1 148 5 is_stmt 0 view .LVU243
 1163              	.LBE2305:
 1164              	.LBE2304:
 1165              	.LBE2303:
 1166              	.LBE2299:
 1167              	.LBE2313:
 1168              	.LBE2316:
 1169              	.LBE2785:
 1170              	.LBE2979:
 1171              	.LBE3018:
 1172              	.LBE3057:
 1173              	.LBE3096:
 1174              	.LBE3135:
 1175              	.LBE3183:
 1176              	.LBE3224:
 1177              	.LBE3270:
 1178              	.LBE3329:
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 1179              		.loc 1 226 7 is_stmt 1 view .LVU244
 1180              	.LBB3330:
 1181              	.LBB3271:
 1182              	.LBB3225:
 1183              	.LBB3184:
 1184              	.LBB3136:
 1185              	.LBB3097:
 1186              	.LBB3058:
 1187              	.LBB3019:
 1188              	.LBB2980:
 1189              	.LBB2786:
 1190              	.LBB2317:
 1191              	.LBB2314:
 1192              	.LBB2306:
 1193              	.LBI2306:
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return size_type(end() - begin()); }
 1194              		.loc 1 884 7 view .LVU245
 1195              	.LBB2307:
 1196              	.LBI2307:
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl._M_finish; }
 1197              		.loc 1 846 7 view .LVU246
 1198              	.LBB2308:
 1199              	.LBI2308:
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x._M_p, __x._M_offset) { }
 1200              		.loc 1 339 5 view .LVU247
 1201              	.LBB2309:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 78


 1202              	.LBI2309:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1203              		.loc 1 148 5 view .LVU248
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1204              		.loc 1 148 5 is_stmt 0 view .LVU249
 1205              	.LBE2309:
 1206              	.LBE2308:
 1207              	.LBE2307:
 1208              	.LBB2310:
 1209              	.LBI2310:
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_iterator(this->_M_impl._M_start._M_p, 0); }
 1210              		.loc 1 838 7 is_stmt 1 view .LVU250
 1211              	.LBB2311:
 1212              	.LBI2311:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 1213              		.loc 1 336 5 view .LVU251
 1214              	.LBB2312:
 1215              	.LBI2312:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1216              		.loc 1 148 5 view .LVU252
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1217              		.loc 1 148 5 is_stmt 0 view .LVU253
 1218              	.LBE2312:
 1219              	.LBE2311:
 1220              	.LBE2310:
 1221              	.LBE2306:
 1222              	.LBE2314:
 1223              	.LBE2317:
 1224              	.LBE2786:
 1225              	.LBE2980:
 1226              	.LBE3019:
 1227              	.LBE3058:
 1228              	.LBE3097:
 1229              	.LBE3136:
 1230              	.LBE3184:
 1231              	.LBE3225:
 1232              	.LBE3271:
 1233              	.LBE3330:
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 1234              		.loc 1 226 7 is_stmt 1 view .LVU254
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 1235              		.loc 1 226 7 is_stmt 0 view .LVU255
 1236 00e6 C645     		cmp	lr, r8
 1237 00e8 7346     		mov	r3, lr
 1238 00ea 38BF     		it	cc
 1239 00ec 4346     		movcc	r3, r8
 1240 00ee 1EEB0303 		adds	r3, lr, r3
 1241 00f2 80F0F580 		bcs	.L34
 1242              	.LVL42:
 1243              	.LBB3331:
 1244              	.LBB3272:
 1245              	.LBB3226:
 1246              	.LBB3185:
 1247              	.LBB3137:
 1248              	.LBB3098:
 1249              	.LBB3059:
 1250              	.LBB3020:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 79


 1251              	.LBB2981:
 1252              	.LBB2787:
 1253              	.LBB2318:
 1254              	.LBB2319:
 1255              	.LBB2320:
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     };
 1256              		.loc 1 580 40 view .LVU256
 1257 00f6 9342     		cmp	r3, r2
 1258 00f8 28BF     		it	cs
 1259 00fa 1346     		movcs	r3, r2
 1260 00fc 1F33     		adds	r3, r3, #31
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     };
 1261              		.loc 1 580 62 view .LVU257
 1262 00fe 5B09     		lsrs	r3, r3, #5
 1263              	.LBE2320:
 1264              	.LBE2319:
 1265              	.LBB2321:
 1266              	.LBB2322:
 1267              	.LBB2323:
 1268              		.file 5 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\ext\\new_allocato
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** /** @file ext/new_allocator.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****  */
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <bits/c++config.h>
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <new>
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <bits/functexcept.h>
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <bits/move.h>
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <type_traits>
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 80


  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** {
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****   /**
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  @brief  An allocator that uses global new, as per [20.4].
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  @ingroup allocators
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *    - all allocation calls operator new
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *    - all deallocation calls operator delete
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    */
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****   template<typename _Tp>
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     class new_allocator
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     {
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     public:
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef _Tp        value_type;
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef std::size_t     size_type;
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef std::ptrdiff_t  difference_type;
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus <= 201703L
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef _Tp*       pointer;
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef const _Tp* const_pointer;
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef _Tp&       reference;
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef const _Tp& const_reference;
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Tp1>
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	struct rebind
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	{ typedef new_allocator<_Tp1> other; };
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Tp1>
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	_GLIBCXX20_CONSTEXPR
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus <= 201703L
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       pointer
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       address(reference __x) const _GLIBCXX_NOEXCEPT
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       { return std::__addressof(__x); }
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 81


  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       const_pointer
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       address(const_reference __x) const _GLIBCXX_NOEXCEPT
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       { return std::__addressof(__x); }
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // about what the return value is when __n == 0.
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       _GLIBCXX_NODISCARD _Tp*
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       allocate(size_type __n, const void* = static_cast<const void*>(0))
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	if (__n > this->_M_max_size())
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  std::__throw_bad_alloc();
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_aligned_new
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  {
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  }
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 1269              		.loc 5 115 41 view .LVU258
 1270 0100 9B00     		lsls	r3, r3, #2
 1271 0102 0093     		str	r3, [sp]
 1272              	.LVL43:
 1273              	.L35:
 1274              		.loc 5 115 41 view .LVU259
 1275              	.LBE2323:
 1276              	.LBE2322:
 1277              	.LBE2321:
 1278              	.LBI2318:
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return _Bit_alloc_traits::allocate(_M_impl, _S_nword(__n)); }
 1279              		.loc 1 556 7 is_stmt 1 view .LVU260
 1280              	.LBB2328:
 1281              	.LBI2319:
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return (__n + int(_S_word_bit) - 1) / int(_S_word_bit); }
 1282              		.loc 1 579 7 view .LVU261
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return (__n + int(_S_word_bit) - 1) / int(_S_word_bit); }
 1283              		.loc 1 579 7 is_stmt 0 view .LVU262
 1284              	.LBE2328:
 1285              	.LBB2329:
 1286              	.LBI2321:
 1287              		.file 6 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\alloc_trait
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Copyright (C) 2011-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // GNU General Public License for more details.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 82


  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** /** @file bits/alloc_traits.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****  *  This is an internal header file, included by other library headers.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****  *  Do not attempt to use it directly. @headername{memory}
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****  */
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #ifndef _ALLOC_TRAITS_H
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #define _ALLOC_TRAITS_H 1
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #include <bits/stl_construct.h>
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #include <bits/memoryfwd.h>
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201103L
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # include <bits/allocator.h>
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # include <bits/ptr_traits.h>
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # include <ext/numeric_traits.h>
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** {
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201103L
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #define __cpp_lib_allocator_traits_is_always_equal 201411
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   struct __allocator_traits_base
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   {
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp, typename _Up, typename = void>
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       struct __rebind : __replace_first_arg<_Tp, _Up> { };
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp, typename _Up>
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       struct __rebind<_Tp, _Up,
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		      __void_t<typename _Tp::template rebind<_Up>::other>>
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { using type = typename _Tp::template rebind<_Up>::other; };
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   protected:
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pointer = typename _Tp::pointer;
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __c_pointer = typename _Tp::const_pointer;
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __v_pointer = typename _Tp::void_pointer;
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __cv_pointer = typename _Tp::const_void_pointer;
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pocca = typename _Tp::propagate_on_container_copy_assignment;
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pocma = typename _Tp::propagate_on_container_move_assignment;
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 83


  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pocs = typename _Tp::propagate_on_container_swap;
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __equal = typename _Tp::is_always_equal;
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   };
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc, typename _Up>
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     using __alloc_rebind
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       = typename __allocator_traits_base::template __rebind<_Alloc, _Up>::type;
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   /**
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * @brief  Uniform interface to all allocator types.
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * @ingroup allocators
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   */
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct allocator_traits : __allocator_traits_base
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator type
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef _Alloc allocator_type;
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocated type
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef typename _Alloc::value_type value_type;
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's pointer type.
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::pointer if that type exists, otherwise @c value_type*
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using pointer = __detected_or_t<value_type*, __pointer, _Alloc>;
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     private:
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       // Select _Func<_Alloc> or pointer_traits<pointer>::rebind<_Tp>
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<template<typename> class _Func, typename _Tp, typename = void>
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Ptr
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using type = typename pointer_traits<pointer>::template rebind<_Tp>;
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	};
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<template<typename> class _Func, typename _Tp>
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Ptr<_Func, _Tp, __void_t<_Func<_Alloc>>>
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using type = _Func<_Alloc>;
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	};
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       // Select _A2::difference_type or pointer_traits<_Ptr>::difference_type
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _PtrT, typename = void>
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Diff
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ using type = typename pointer_traits<_PtrT>::difference_type; };
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _PtrT>
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Diff<_A2, _PtrT, __void_t<typename _A2::difference_type>>
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ using type = typename _A2::difference_type; };
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       // Select _A2::size_type or make_unsigned<_DiffT>::type
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _DiffT, typename = void>
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Size : make_unsigned<_DiffT> { };
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _DiffT>
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Size<_A2, _DiffT, __void_t<typename _A2::size_type>>
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 84


 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ using type = typename _A2::size_type; };
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     public:
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's const pointer type.
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::const_pointer if that type exists, otherwise
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const value_type> </tt>
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_pointer = typename _Ptr<__c_pointer, const value_type>::type;
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's void pointer type.
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::void_pointer if that type exists, otherwise
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<void> </tt>
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using void_pointer = typename _Ptr<__v_pointer, void>::type;
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's const void pointer type.
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::const_void_pointer if that type exists, otherwise
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const void> </tt>
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_void_pointer = typename _Ptr<__cv_pointer, const void>::type;
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's difference type
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::difference_type if that type exists, otherwise
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::difference_type </tt>
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using difference_type = typename _Diff<_Alloc, pointer>::type;
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's size type
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::size_type if that type exists, otherwise
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> make_unsigned<difference_type>::type </tt>
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using size_type = typename _Size<_Alloc, difference_type>::type;
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   How the allocator is propagated on copy assignment
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::propagate_on_container_copy_assignment if that type exists,
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c false_type
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_copy_assignment
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<false_type, __pocca, _Alloc>;
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   How the allocator is propagated on move assignment
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::propagate_on_container_move_assignment if that type exists,
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c false_type
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 85


 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_move_assignment
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<false_type, __pocma, _Alloc>;
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   How the allocator is propagated on swap
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::propagate_on_container_swap if that type exists,
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c false_type
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_swap
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<false_type, __pocs, _Alloc>;
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   Whether all instances of the allocator type compare equal.
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::is_always_equal if that type exists,
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c is_empty<Alloc>::type
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using is_always_equal
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<typename is_empty<_Alloc>::type, __equal, _Alloc>;
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp>
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_alloc = __alloc_rebind<_Alloc, _Tp>;
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp>
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_traits = allocator_traits<rebind_alloc<_Tp>>;
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     private:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr auto
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer __hint, int)
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.allocate(__n, __hint))
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.allocate(__n, __hint); }
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr pointer
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer, ...)
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.allocate(__n); }
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct __construct_helper
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  template<typename _Alloc2,
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    typename = decltype(std::declval<_Alloc2*>()->construct(
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  std::declval<_Tp*>(), std::declval<_Args>()...))>
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    static true_type __test(int);
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  template<typename>
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    static false_type __test(...);
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using type = decltype(__test<_Alloc>(0));
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	};
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using __has_construct
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  = typename __construct_helper<_Tp, _Args...>::type;
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 86


 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR _Require<__has_construct<_Tp, _Args...>>
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_Require<__and_<__not_<__has_construct<_Tp, _Args...>>,
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 			       is_constructible<_Tp, _Args...>>>
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_construct(_Alloc&, _Tp* __p, _Args&&... __args)
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(std::is_nothrow_constructible<_Tp, _Args...>::value)
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  std::construct_at(__p, std::forward<_Args>(__args)...);
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR auto
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_destroy(_Alloc2& __a, _Tp* __p, int)
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(__a.destroy(__p)))
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.destroy(__p))
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ __a.destroy(__p); }
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR void
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_destroy(_Alloc2&, _Tp* __p, ...)
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(std::is_nothrow_destructible<_Tp>::value)
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ std::_Destroy(__p); }
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr auto
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_max_size(_Alloc2& __a, int)
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.max_size())
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.max_size(); }
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr size_type
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_max_size(_Alloc2&, ...)
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  // _GLIBCXX_RESOLVE_LIB_DEFECTS
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  // 2466. allocator_traits::max_size() default behavior is incorrect
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  return __gnu_cxx::__numeric_traits<size_type>::__max
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    / sizeof(value_type);
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr auto
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_select(_Alloc2& __a, int)
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.select_on_container_copy_construction())
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.select_on_container_copy_construction(); }
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr _Alloc2
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 87


 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_select(_Alloc2& __a, ...)
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a; }
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     public:
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c a.allocate(n)
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(_Alloc& __a, size_type __n)
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __hint Aid to locality.
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *          of type @c value_type
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt> if that expression is
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  well-formed, otherwise returns @c a.allocate(n)
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(_Alloc& __a, size_type __n, const_void_pointer __hint)
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return _S_allocate(__a, __n, __hint, 0); }
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Deallocate memory.
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR void
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       deallocate(_Alloc& __a, pointer __p, size_type __n)
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Construct an object of type @a _Tp
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for Tp
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __args Constructor arguments.
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls <tt> __a.construct(__p, std::forward<Args>(__args)...) </tt>
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  if that expression is well-formed, otherwise uses placement-new
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  to construct an object of type @a _Tp at location @a __p from the
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  arguments @a __args...
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR auto
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 88


 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(_S_construct(__a, __p,
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 				       std::forward<_Args>(__args)...)))
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(_S_construct(__a, __p, std::forward<_Args>(__args)...))
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ _S_construct(__a, __p, std::forward<_Args>(__args)...); }
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Destroy an object of type @a _Tp
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c __a.destroy(__p) if that expression is well-formed,
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  otherwise calls @c __p->~_Tp()
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp>
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	destroy(_Alloc& __a, _Tp* __p)
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(_S_destroy(__a, __p, 0)))
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ _S_destroy(__a, __p, 0); }
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  The maximum supported allocation size
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __a.max_size() or @c numeric_limits<size_type>::max()
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns @c __a.max_size() if that expression is well-formed,
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  otherwise returns @c numeric_limits<size_type>::max()
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR size_type
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       max_size(const _Alloc& __a) noexcept
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return _S_max_size(__a, 0); }
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __rhs  An allocator.
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __rhs.select_on_container_copy_construction() or @a __rhs
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns @c __rhs.select_on_container_copy_construction() if that
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  expression is well-formed, otherwise returns @a __rhs
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR _Alloc
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       select_on_container_copy_construction(const _Alloc& __rhs)
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return _S_select(__rhs, 0); }
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     };
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus > 201703L
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # define __cpp_lib_constexpr_dynamic_alloc 201907L
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   /// Partial specialization for std::allocator.
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Tp>
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct allocator_traits<allocator<_Tp>>
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator type
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using allocator_type = allocator<_Tp>;
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocated type
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using value_type = _Tp;
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 89


 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's pointer type.
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using pointer = _Tp*;
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's const pointer type.
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_pointer = const _Tp*;
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's void pointer type.
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using void_pointer = void*;
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's const void pointer type.
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_void_pointer = const void*;
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's difference type
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using difference_type = std::ptrdiff_t;
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's size type
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using size_type = std::size_t;
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// How the allocator is propagated on copy assignment
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_copy_assignment = false_type;
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// How the allocator is propagated on move assignment
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_move_assignment = true_type;
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// How the allocator is propagated on swap
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_swap = false_type;
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// Whether all instances of the allocator type compare equal.
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using is_always_equal = true_type;
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up>
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_alloc = allocator<_Up>;
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up>
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_traits = allocator_traits<allocator<_Up>>;
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c a.allocate(n)
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(allocator_type& __a, size_type __n)
 1288              		.loc 6 459 7 is_stmt 1 view .LVU263
 1289              	.LBB2326:
 1290              	.LBI2322:
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 1291              		.loc 5 103 7 view .LVU264
 1292              	.LBB2324:
 1293              		.loc 5 115 41 is_stmt 0 view .LVU265
 1294 0104 0098     		ldr	r0, [sp]
 1295 0106 FFF7FEFF 		bl	_Znwj
 1296              	.LVL44:
 1297              		.loc 5 115 41 view .LVU266
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 90


 1298              	.LBE2324:
 1299              	.LBE2326:
 1300              	.LBE2329:
 1301              	.LBE2318:
 1302              	.LBB2331:
 1303              	.LBB2332:
 835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 1304              		.loc 1 835 55 view .LVU267
 1305 010a D9F800B0 		ldr	fp, [r9]
 1306              	.LBE2332:
 1307              	.LBE2331:
 1308              	.LBB2336:
 1309              	.LBB2330:
 1310              	.LBB2327:
 1311              	.LBB2325:
 1312              		.loc 5 115 41 view .LVU268
 1313 010e 0190     		str	r0, [sp, #4]
 1314              	.LVL45:
 1315              		.loc 5 115 41 view .LVU269
 1316              	.LBE2325:
 1317              	.LBE2327:
 1318              	.LBE2330:
 1319              	.LBE2336:
 1320              	.LBB2337:
 1321              	.LBI2337:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 1322              		.loc 1 243 5 is_stmt 1 view .LVU270
 1323              	.LBB2338:
 1324              	.LBI2338:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1325              		.loc 1 148 5 view .LVU271
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1326              		.loc 1 148 5 is_stmt 0 view .LVU272
 1327              	.LBE2338:
 1328              	.LBE2337:
 1329              	.LBB2339:
 1330              	.LBI2331:
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return iterator(this->_M_impl._M_start._M_p, 0); }
 1331              		.loc 1 834 7 is_stmt 1 view .LVU273
 1332              	.LBB2335:
 1333              	.LBB2333:
 1334              	.LBI2333:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 1335              		.loc 1 243 5 view .LVU274
 1336              	.LBB2334:
 1337              	.LBI2334:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1338              		.loc 1 148 5 view .LVU275
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1339              		.loc 1 148 5 is_stmt 0 view .LVU276
 1340              	.LBE2334:
 1341              	.LBE2333:
 1342              	.LBE2335:
 1343              	.LBE2339:
 1344              	.LBB2340:
 1345              	.LBI2340:
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x._M_p, __x._M_offset) { }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 91


 1346              		.loc 1 339 5 is_stmt 1 view .LVU277
 1347              	.LBB2341:
 1348              	.LBI2341:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1349              		.loc 1 148 5 view .LVU278
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1350              		.loc 1 148 5 is_stmt 0 view .LVU279
 1351              	.LBE2341:
 1352              	.LBE2340:
 1353              	.LBB2342:
 1354              	.LBI2342:
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x._M_p, __x._M_offset) { }
 1355              		.loc 1 339 5 is_stmt 1 view .LVU280
 1356              	.LBB2343:
 1357              	.LBI2343:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1358              		.loc 1 148 5 view .LVU281
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1359              		.loc 1 148 5 is_stmt 0 view .LVU282
 1360              	.LBE2343:
 1361              	.LBE2342:
 1362              	.LBB2344:
 1363              	.LBI2344:
1134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 		      iterator __result)
 1364              		.loc 1 1134 7 is_stmt 1 view .LVU283
 1365              	.LBB2345:
 1366              	.LBB2346:
 1367              	.LBI2346:
 1368              		.loc 3 560 5 view .LVU284
 1369              	.LBB2347:
 1370              	.LBI2347:
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 1371              		.loc 3 511 5 view .LVU285
 1372              	.LBB2348:
 1373              	.LBI2348:
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 1374              		.loc 3 505 5 view .LVU286
 1375              	.LBB2349:
 1376              	.LBI2349:
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 1377              		.loc 3 463 5 view .LVU287
 1378              	.LBB2350:
 1379              	.LBB2351:
 1380              	.LBI2351:
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 1381              		.loc 3 415 2 view .LVU288
 1382              	.LBB2352:
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 1383              		.loc 3 425 4 is_stmt 0 view .LVU289
 1384 0110 DA45     		cmp	r10, fp
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  if (_Num)
 1385              		.loc 3 424 34 view .LVU290
 1386 0112 AAEB0B06 		sub	r6, r10, fp
 1387              	.LVL46:
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 1388              		.loc 3 425 4 view .LVU291
 1389 0116 03D0     		beq	.L37
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 92


 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 1390              		.loc 3 426 23 view .LVU292
 1391 0118 3246     		mov	r2, r6
 1392 011a 5946     		mov	r1, fp
 1393 011c FFF7FEFF 		bl	memmove
 1394              	.LVL47:
 1395              	.L37:
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 1396              		.loc 3 427 22 view .LVU293
 1397 0120 019B     		ldr	r3, [sp, #4]
 1398              	.LBE2352:
 1399              	.LBE2351:
 1400              	.LBE2350:
 1401              	.LBE2349:
 1402              	.LBE2348:
 1403              	.LBE2347:
 1404              	.LBE2346:
 1405              	.LBB2359:
 1406              	.LBB2360:
 1407              	.LBB2361:
 1408              	.LBB2362:
 1409              	.LBB2363:
 1410              	.LBB2364:
 1411              	.LBB2365:
 1412              	.LBB2366:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 1413              		.loc 3 378 46 view .LVU294
 1414 0122 002D     		cmp	r5, #0
 1415              	.LBB2367:
 1416              	.LBB2368:
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 1417              		.loc 1 227 39 view .LVU295
 1418 0124 2946     		mov	r1, r5
 1419              	.LBE2368:
 1420              	.LBE2367:
 1421              	.LBE2366:
 1422              	.LBE2365:
 1423              	.LBE2364:
 1424              	.LBE2363:
 1425              	.LBE2362:
 1426              	.LBE2361:
 1427              	.LBE2360:
 1428              	.LBE2359:
 1429              	.LBB2508:
 1430              	.LBB2358:
 1431              	.LBB2357:
 1432              	.LBB2356:
 1433              	.LBB2355:
 1434              	.LBB2354:
 1435              	.LBB2353:
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 1436              		.loc 3 427 22 view .LVU296
 1437 0126 1E44     		add	r6, r6, r3
 1438              	.LVL48:
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 1439              		.loc 3 427 22 view .LVU297
 1440              	.LBE2353:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 93


 1441              	.LBE2354:
 1442              	.LBE2355:
 1443              	.LBE2356:
 1444              	.LBE2357:
 1445              	.LBE2358:
 1446              	.LBE2508:
 1447              	.LBB2509:
 1448              	.LBI2509:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 1449              		.loc 1 336 5 is_stmt 1 view .LVU298
 1450              	.LBB2510:
 1451              	.LBI2510:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1452              		.loc 1 148 5 view .LVU299
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1453              		.loc 1 148 5 is_stmt 0 view .LVU300
 1454              	.LBE2510:
 1455              	.LBE2509:
 1456              	.LBB2511:
 1457              	.LBI2511:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 1458              		.loc 1 243 5 is_stmt 1 view .LVU301
 1459              	.LBB2512:
 1460              	.LBI2512:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1461              		.loc 1 148 5 view .LVU302
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1462              		.loc 1 148 5 is_stmt 0 view .LVU303
 1463              	.LBE2512:
 1464              	.LBE2511:
 1465              	.LBB2513:
 1466              	.LBI2359:
 1467              		.loc 3 560 5 is_stmt 1 view .LVU304
 1468              	.LBB2496:
 1469              	.LBI2360:
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 1470              		.loc 3 511 5 view .LVU305
 1471              	.LBB2484:
 1472              	.LBI2361:
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 1473              		.loc 3 505 5 view .LVU306
 1474              	.LBB2472:
 1475              	.LBI2362:
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 1476              		.loc 3 463 5 view .LVU307
 1477              	.LBB2460:
 1478              	.LBB2448:
 1479              	.LBI2364:
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 1480              		.loc 3 375 2 view .LVU308
 1481              	.LBB2436:
 1482              	.LBB2424:
 1483              	.LBB2370:
 1484              	.LBI2367:
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 1485              		.loc 1 224 5 view .LVU309
 1486              	.LBB2369:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 94


 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 1487              		.loc 1 226 7 view .LVU310
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 1488              		.loc 1 226 7 is_stmt 0 view .LVU311
 1489              	.LBE2369:
 1490              	.LBE2370:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 1491              		.loc 3 378 46 is_stmt 1 view .LVU312
 1492 0128 40F3D880 		ble	.L63
 1493              	.LVL49:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 1494              		.loc 3 378 46 is_stmt 0 view .LVU313
 1495              	.LBE2424:
 1496              	.LBE2436:
 1497              	.LBE2448:
 1498              	.LBE2460:
 1499              	.LBE2472:
 1500              	.LBE2484:
 1501              	.LBE2496:
 1502              	.LBE2513:
 1503              	.LBE2345:
 1504              	.LBE2344:
 1505              	.LBE2787:
 1506              	.LBE2981:
 1507              	.LBE3020:
 1508              	.LBE3059:
 1509              	.LBE3098:
 1510              	.LBE3137:
 1511              	.LBE3185:
 1512              	.LBE3226:
 1513              	.LBE3272:
 1514              	.LBB3273:
 1515              	.LBB2041:
 1516              	.LBB2031:
 1517              	.LBB2029:
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 1518              		.loc 1 340 30 view .LVU314
 1519 012c 5046     		mov	r0, r10
 1520              	.LBE2029:
 1521              	.LBE2031:
 1522              	.LBE2041:
 1523              	.LBE3273:
 1524              	.LBB3274:
 1525              	.LBB3227:
 1526              	.LBB3186:
 1527              	.LBB3138:
 1528              	.LBB3099:
 1529              	.LBB3060:
 1530              	.LBB3021:
 1531              	.LBB2982:
 1532              	.LBB2788:
 1533              	.LBB2536:
 1534              	.LBB2525:
 1535              	.LBB2514:
 1536              	.LBB2497:
 1537              	.LBB2485:
 1538              	.LBB2473:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 95


 1539              	.LBB2461:
 1540              	.LBB2449:
 1541              	.LBB2437:
 1542              	.LBB2425:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 1543              		.loc 3 378 46 view .LVU315
 1544 012e 0024     		movs	r4, #0
 1545              	.LVL50:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 1546              		.loc 3 378 46 view .LVU316
 1547 0130 03E0     		b	.L43
 1548              	.LVL51:
 1549              	.L82:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 1550              		.loc 3 378 46 view .LVU317
 1551 0132 0139     		subs	r1, r1, #1
 1552              	.LVL52:
 1553              	.LBB2371:
 1554              	.LBB2372:
 1555              	.LBB2373:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 1556              		.loc 1 154 20 view .LVU318
 1557 0134 04F10104 		add	r4, r4, #1
 1558              	.LVL53:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 1559              		.loc 1 154 20 view .LVU319
 1560              	.LBE2373:
 1561              	.LBE2372:
 1562              	.LBE2371:
 1563              	.LBE2425:
 1564              	.LBE2437:
 1565              	.LBE2449:
 1566              	.LBE2461:
 1567              	.LBE2473:
 1568              	.LBE2485:
 1569              	.LBE2497:
 1570              	.LBE2514:
 1571              	.LBE2525:
 1572              	.LBE2536:
 1573              	.LBE2788:
 1574              	.LBE2982:
 1575              	.LBE3021:
 1576              	.LBE3060:
 1577              	.LBE3099:
 1578              	.LBE3138:
 1579              	.LBE3186:
 1580              	.LBE3227:
 1581              	.LBE3274:
 1582              	.LBE3331:
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 1583              		.loc 1 354 7 is_stmt 1 view .LVU320
 1584              	.LBB3332:
 1585              	.LBB3275:
 1586              	.LBB3228:
 1587              	.LBB3187:
 1588              	.LBB3139:
 1589              	.LBB3100:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 96


 1590              	.LBB3061:
 1591              	.LBB3022:
 1592              	.LBB2983:
 1593              	.LBB2789:
 1594              	.LBB2537:
 1595              	.LBB2526:
 1596              	.LBB2515:
 1597              	.LBB2498:
 1598              	.LBB2486:
 1599              	.LBB2474:
 1600              	.LBB2462:
 1601              	.LBB2450:
 1602              	.LBB2438:
 1603              	.LBB2426:
 1604              	.LBB2388:
 1605              	.LBI2388:
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 1606              		.loc 1 255 5 view .LVU321
 1607              	.LBE2388:
 1608              	.LBE2426:
 1609              	.LBE2438:
 1610              	.LBE2450:
 1611              	.LBE2462:
 1612              	.LBE2474:
 1613              	.LBE2486:
 1614              	.LBE2498:
 1615              	.LBE2515:
 1616              	.LBE2526:
 1617              	.LBE2537:
 1618              	.LBE2789:
 1619              	.LBE2983:
 1620              	.LBE3022:
 1621              	.LBE3061:
 1622              	.LBE3100:
 1623              	.LBE3139:
 1624              	.LBE3187:
 1625              	.LBE3228:
 1626              	.LBE3275:
 1627              	.LBE3332:
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 1628              		.loc 1 257 7 view .LVU322
 1629              	.LBB3333:
 1630              	.LBB3276:
 1631              	.LBB3229:
 1632              	.LBB3188:
 1633              	.LBB3140:
 1634              	.LBB3101:
 1635              	.LBB3062:
 1636              	.LBB3023:
 1637              	.LBB2984:
 1638              	.LBB2790:
 1639              	.LBB2538:
 1640              	.LBB2527:
 1641              	.LBB2516:
 1642              	.LBB2499:
 1643              	.LBB2487:
 1644              	.LBB2475:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 97


 1645              	.LBB2463:
 1646              	.LBB2451:
 1647              	.LBB2439:
 1648              	.LBB2427:
 1649              	.LBB2394:
 1650              	.LBB2389:
 1651              	.LBI2389:
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 1652              		.loc 1 152 5 view .LVU323
 1653              	.LBE2389:
 1654              	.LBE2394:
 1655              	.LBE2427:
 1656              	.LBE2439:
 1657              	.LBE2451:
 1658              	.LBE2463:
 1659              	.LBE2475:
 1660              	.LBE2487:
 1661              	.LBE2499:
 1662              	.LBE2516:
 1663              	.LBE2527:
 1664              	.LBE2538:
 1665              	.LBE2790:
 1666              	.LBE2984:
 1667              	.LBE3023:
 1668              	.LBE3062:
 1669              	.LBE3101:
 1670              	.LBE3140:
 1671              	.LBE3188:
 1672              	.LBE3229:
 1673              	.LBE3276:
 1674              	.LBE3333:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 1675              		.loc 1 154 7 view .LVU324
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 1676              		.loc 1 258 7 view .LVU325
 1677              	.LBB3334:
 1678              	.LBB3277:
 1679              	.LBB3230:
 1680              	.LBB3189:
 1681              	.LBB3141:
 1682              	.LBB3102:
 1683              	.LBB3063:
 1684              	.LBB3024:
 1685              	.LBB2985:
 1686              	.LBB2791:
 1687              	.LBB2539:
 1688              	.LBB2528:
 1689              	.LBB2517:
 1690              	.LBB2500:
 1691              	.LBB2488:
 1692              	.LBB2476:
 1693              	.LBB2464:
 1694              	.LBB2452:
 1695              	.LBB2440:
 1696              	.LBB2428:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 1697              		.loc 3 378 4 view .LVU326
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 98


 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 1698              		.loc 3 378 46 view .LVU327
 1699 0138 12D0     		beq	.L38
 1700              	.LVL54:
 1701              	.L43:
 1702              	.LBB2395:
 1703              	.LBI2395:
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return reference(_M_p, 1UL << _M_offset); }
 1704              		.loc 1 251 5 view .LVU328
 1705              	.LBB2396:
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 1706              		.loc 1 252 7 view .LVU329
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 1707              		.loc 1 252 46 is_stmt 0 view .LVU330
 1708 013a 0123     		movs	r3, #1
 1709              	.LBE2396:
 1710              	.LBE2395:
 1711              	.LBB2399:
 1712              	.LBB2400:
 1713              	.LBB2401:
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 1714              		.loc 1 87 23 view .LVU331
 1715 013c 0268     		ldr	r2, [r0]
 1716              	.LBE2401:
 1717              	.LBE2400:
 1718              	.LBE2399:
 1719              	.LBB2405:
 1720              	.LBB2398:
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 1721              		.loc 1 252 46 view .LVU332
 1722 013e A340     		lsls	r3, r3, r4
 1723              	.LVL55:
 1724              	.LBB2397:
 1725              	.LBI2397:
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_mask(__y) { }
 1726              		.loc 1 77 5 is_stmt 1 view .LVU333
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_mask(__y) { }
 1727              		.loc 1 77 5 is_stmt 0 view .LVU334
 1728              	.LBE2397:
 1729              	.LBE2398:
 1730              	.LBE2405:
 1731              	.LBB2406:
 1732              	.LBI2399:
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return _Bit_reference(_M_p, 1UL << _M_offset); }
 1733              		.loc 1 347 5 is_stmt 1 view .LVU335
 1734              	.LBE2406:
 1735              	.LBE2428:
 1736              	.LBE2440:
 1737              	.LBE2452:
 1738              	.LBE2464:
 1739              	.LBE2476:
 1740              	.LBE2488:
 1741              	.LBE2500:
 1742              	.LBE2517:
 1743              	.LBE2528:
 1744              	.LBE2539:
 1745              	.LBE2791:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 99


 1746              	.LBE2985:
 1747              	.LBE3024:
 1748              	.LBE3063:
 1749              	.LBE3102:
 1750              	.LBE3141:
 1751              	.LBE3189:
 1752              	.LBE3230:
 1753              	.LBE3277:
 1754              	.LBE3334:
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 1755              		.loc 1 348 7 view .LVU336
 1756              	.LBB3335:
 1757              	.LBB3278:
 1758              	.LBB3231:
 1759              	.LBB3190:
 1760              	.LBB3142:
 1761              	.LBB3103:
 1762              	.LBB3064:
 1763              	.LBB3025:
 1764              	.LBB2986:
 1765              	.LBB2792:
 1766              	.LBB2540:
 1767              	.LBB2529:
 1768              	.LBB2518:
 1769              	.LBB2501:
 1770              	.LBB2489:
 1771              	.LBB2477:
 1772              	.LBB2465:
 1773              	.LBB2453:
 1774              	.LBB2441:
 1775              	.LBB2429:
 1776              	.LBB2407:
 1777              	.LBB2403:
 1778              	.LBI2403:
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_mask(__y) { }
 1779              		.loc 1 77 5 view .LVU337
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_mask(__y) { }
 1780              		.loc 1 77 5 is_stmt 0 view .LVU338
 1781              	.LBE2403:
 1782              	.LBB2404:
 1783              	.LBI2400:
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return !!(*_M_p & _M_mask); }
 1784              		.loc 1 86 5 is_stmt 1 view .LVU339
 1785              	.LBB2402:
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 1786              		.loc 1 87 7 view .LVU340
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 1787              		.loc 1 87 7 is_stmt 0 view .LVU341
 1788              	.LBE2402:
 1789              	.LBE2404:
 1790              	.LBE2407:
 1791              	.LBB2408:
 1792              	.LBI2408:
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 1793              		.loc 1 90 5 is_stmt 1 view .LVU342
 1794              	.LBB2409:
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	*_M_p |= _M_mask;
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 100


 1795              		.loc 1 92 7 view .LVU343
 1796 0140 1342     		tst	r3, r2
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       else
 1797              		.loc 1 93 8 is_stmt 0 view .LVU344
 1798 0142 3268     		ldr	r2, [r6]
 1799              	.LVL56:
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       else
 1800              		.loc 1 93 2 is_stmt 1 view .LVU345
 1801              	.LBB2410:
 1802              	.LBI2410:
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 1803              		.loc 1 90 5 view .LVU346
 1804              	.LBB2411:
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 1805              		.loc 1 95 2 view .LVU347
 1806              	.LBE2411:
 1807              	.LBE2410:
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       else
 1808              		.loc 1 93 8 is_stmt 0 view .LVU348
 1809 0144 14BF     		ite	ne
 1810 0146 1A43     		orrne	r2, r2, r3
 1811              	.LBB2413:
 1812              	.LBB2412:
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 1813              		.loc 1 95 8 view .LVU349
 1814 0148 9A43     		biceq	r2, r2, r3
 1815              	.LBE2412:
 1816              	.LBE2413:
 1817              	.LBE2409:
 1818              	.LBE2408:
 1819              	.LBB2415:
 1820              	.LBB2384:
 1821              	.LBB2380:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 1822              		.loc 1 154 7 view .LVU350
 1823 014a 1F2C     		cmp	r4, #31
 1824 014c 3260     		str	r2, [r6]
 1825              	.LVL57:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 1826              		.loc 1 154 7 view .LVU351
 1827              	.LBE2380:
 1828              	.LBE2384:
 1829              	.LBE2415:
 1830              	.LBB2416:
 1831              	.LBB2414:
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 1832              		.loc 1 96 7 is_stmt 1 view .LVU352
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 1833              		.loc 1 96 7 is_stmt 0 view .LVU353
 1834              	.LBE2414:
 1835              	.LBE2416:
 1836              	.LBB2417:
 1837              	.LBI2371:
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 1838              		.loc 1 351 5 is_stmt 1 view .LVU354
 1839              	.LBE2417:
 1840              	.LBE2429:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 101


 1841              	.LBE2441:
 1842              	.LBE2453:
 1843              	.LBE2465:
 1844              	.LBE2477:
 1845              	.LBE2489:
 1846              	.LBE2501:
 1847              	.LBE2518:
 1848              	.LBE2529:
 1849              	.LBE2540:
 1850              	.LBE2792:
 1851              	.LBE2986:
 1852              	.LBE3025:
 1853              	.LBE3064:
 1854              	.LBE3103:
 1855              	.LBE3142:
 1856              	.LBE3190:
 1857              	.LBE3231:
 1858              	.LBE3278:
 1859              	.LBE3335:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 1860              		.loc 1 353 7 view .LVU355
 1861              	.LBB3336:
 1862              	.LBB3279:
 1863              	.LBB3232:
 1864              	.LBB3191:
 1865              	.LBB3143:
 1866              	.LBB3104:
 1867              	.LBB3065:
 1868              	.LBB3026:
 1869              	.LBB2987:
 1870              	.LBB2793:
 1871              	.LBB2541:
 1872              	.LBB2530:
 1873              	.LBB2519:
 1874              	.LBB2502:
 1875              	.LBB2490:
 1876              	.LBB2478:
 1877              	.LBB2466:
 1878              	.LBB2454:
 1879              	.LBB2442:
 1880              	.LBB2430:
 1881              	.LBB2418:
 1882              	.LBB2385:
 1883              	.LBI2372:
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 1884              		.loc 1 152 5 view .LVU356
 1885              	.LBB2381:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 1886              		.loc 1 154 7 view .LVU357
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 1887              		.loc 1 154 7 is_stmt 0 view .LVU358
 1888 014e F0D1     		bne	.L82
 1889              	.LVL58:
 1890              	.LBB2374:
 1891              	.LBI2374:
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 1892              		.loc 1 152 5 is_stmt 1 view .LVU359
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 102


 1893              	.LBB2375:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  ++_M_p;
 1894              		.loc 1 156 4 view .LVU360
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 1895              		.loc 1 157 4 view .LVU361
 1896              	.LBE2375:
 1897              	.LBE2374:
 1898              	.LBE2381:
 1899              	.LBE2385:
 1900              	.LBE2418:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 1901              		.loc 3 378 46 is_stmt 0 view .LVU362
 1902 0150 0139     		subs	r1, r1, #1
 1903              	.LVL59:
 1904              	.LBB2419:
 1905              	.LBB2386:
 1906              	.LBB2382:
 1907              	.LBB2378:
 1908              	.LBB2376:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 1909              		.loc 1 157 4 view .LVU363
 1910 0152 00F10400 		add	r0, r0, #4
 1911              	.LVL60:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 1912              		.loc 1 157 4 view .LVU364
 1913              	.LBE2376:
 1914              	.LBE2378:
 1915              	.LBE2382:
 1916              	.LBE2386:
 1917              	.LBE2419:
 1918              	.LBE2430:
 1919              	.LBE2442:
 1920              	.LBE2454:
 1921              	.LBE2466:
 1922              	.LBE2478:
 1923              	.LBE2490:
 1924              	.LBE2502:
 1925              	.LBE2519:
 1926              	.LBE2530:
 1927              	.LBE2541:
 1928              	.LBE2793:
 1929              	.LBE2987:
 1930              	.LBE3026:
 1931              	.LBE3065:
 1932              	.LBE3104:
 1933              	.LBE3143:
 1934              	.LBE3191:
 1935              	.LBE3232:
 1936              	.LBE3279:
 1937              	.LBE3336:
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 1938              		.loc 1 354 7 is_stmt 1 view .LVU365
 1939              	.LBB3337:
 1940              	.LBB3280:
 1941              	.LBB3233:
 1942              	.LBB3192:
 1943              	.LBB3144:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 103


 1944              	.LBB3105:
 1945              	.LBB3066:
 1946              	.LBB3027:
 1947              	.LBB2988:
 1948              	.LBB2794:
 1949              	.LBB2542:
 1950              	.LBB2531:
 1951              	.LBB2520:
 1952              	.LBB2503:
 1953              	.LBB2491:
 1954              	.LBB2479:
 1955              	.LBB2467:
 1956              	.LBB2455:
 1957              	.LBB2443:
 1958              	.LBB2431:
 1959              	.LBB2420:
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 1960              		.loc 1 255 5 view .LVU366
 1961              	.LBE2420:
 1962              	.LBE2431:
 1963              	.LBE2443:
 1964              	.LBE2455:
 1965              	.LBE2467:
 1966              	.LBE2479:
 1967              	.LBE2491:
 1968              	.LBE2503:
 1969              	.LBE2520:
 1970              	.LBE2531:
 1971              	.LBE2542:
 1972              	.LBE2794:
 1973              	.LBE2988:
 1974              	.LBE3027:
 1975              	.LBE3066:
 1976              	.LBE3105:
 1977              	.LBE3144:
 1978              	.LBE3192:
 1979              	.LBE3233:
 1980              	.LBE3280:
 1981              	.LBE3337:
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 1982              		.loc 1 257 7 view .LVU367
 1983              	.LBB3338:
 1984              	.LBB3281:
 1985              	.LBB3234:
 1986              	.LBB3193:
 1987              	.LBB3145:
 1988              	.LBB3106:
 1989              	.LBB3067:
 1990              	.LBB3028:
 1991              	.LBB2989:
 1992              	.LBB2795:
 1993              	.LBB2543:
 1994              	.LBB2532:
 1995              	.LBB2521:
 1996              	.LBB2504:
 1997              	.LBB2492:
 1998              	.LBB2480:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 104


 1999              	.LBB2468:
 2000              	.LBB2456:
 2001              	.LBB2444:
 2002              	.LBB2432:
 2003              	.LBB2421:
 2004              	.LBB2392:
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 2005              		.loc 1 152 5 view .LVU368
 2006              	.LBE2392:
 2007              	.LBE2421:
 2008              	.LBE2432:
 2009              	.LBE2444:
 2010              	.LBE2456:
 2011              	.LBE2468:
 2012              	.LBE2480:
 2013              	.LBE2492:
 2014              	.LBE2504:
 2015              	.LBE2521:
 2016              	.LBE2532:
 2017              	.LBE2543:
 2018              	.LBE2795:
 2019              	.LBE2989:
 2020              	.LBE3028:
 2021              	.LBE3067:
 2022              	.LBE3106:
 2023              	.LBE3145:
 2024              	.LBE3193:
 2025              	.LBE3234:
 2026              	.LBE3281:
 2027              	.LBE3338:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 2028              		.loc 1 154 7 view .LVU369
 2029              	.LBB3339:
 2030              	.LBB3282:
 2031              	.LBB3235:
 2032              	.LBB3194:
 2033              	.LBB3146:
 2034              	.LBB3107:
 2035              	.LBB3068:
 2036              	.LBB3029:
 2037              	.LBB2990:
 2038              	.LBB2796:
 2039              	.LBB2544:
 2040              	.LBB2533:
 2041              	.LBB2522:
 2042              	.LBB2505:
 2043              	.LBB2493:
 2044              	.LBB2481:
 2045              	.LBB2469:
 2046              	.LBB2457:
 2047              	.LBB2445:
 2048              	.LBB2433:
 2049              	.LBB2422:
 2050              	.LBB2393:
 2051              	.LBB2390:
 2052              	.LBI2390:
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 105


 2053              		.loc 1 152 5 view .LVU370
 2054              	.LBB2391:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  ++_M_p;
 2055              		.loc 1 156 4 view .LVU371
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 2056              		.loc 1 157 4 view .LVU372
 2057 0156 06F10406 		add	r6, r6, #4
 2058              	.LVL61:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 2059              		.loc 1 157 4 is_stmt 0 view .LVU373
 2060              	.LBE2391:
 2061              	.LBE2390:
 2062              	.LBE2393:
 2063              	.LBE2422:
 2064              	.LBB2423:
 2065              	.LBB2387:
 2066              	.LBB2383:
 2067              	.LBB2379:
 2068              	.LBB2377:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  ++_M_p;
 2069              		.loc 1 156 14 view .LVU374
 2070 015a 4FF00004 		mov	r4, #0
 2071              	.LVL62:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  ++_M_p;
 2072              		.loc 1 156 14 view .LVU375
 2073              	.LBE2377:
 2074              	.LBE2379:
 2075              	.LBE2383:
 2076              	.LBE2387:
 2077              	.LBE2423:
 2078              	.LBE2433:
 2079              	.LBE2445:
 2080              	.LBE2457:
 2081              	.LBE2469:
 2082              	.LBE2481:
 2083              	.LBE2493:
 2084              	.LBE2505:
 2085              	.LBE2522:
 2086              	.LBE2533:
 2087              	.LBE2544:
 2088              	.LBE2796:
 2089              	.LBE2990:
 2090              	.LBE3029:
 2091              	.LBE3068:
 2092              	.LBE3107:
 2093              	.LBE3146:
 2094              	.LBE3194:
 2095              	.LBE3235:
 2096              	.LBE3282:
 2097              	.LBE3339:
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 2098              		.loc 1 258 7 is_stmt 1 view .LVU376
 2099              	.LBB3340:
 2100              	.LBB3283:
 2101              	.LBB3236:
 2102              	.LBB3195:
 2103              	.LBB3147:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 106


 2104              	.LBB3108:
 2105              	.LBB3069:
 2106              	.LBB3030:
 2107              	.LBB2991:
 2108              	.LBB2797:
 2109              	.LBB2545:
 2110              	.LBB2534:
 2111              	.LBB2523:
 2112              	.LBB2506:
 2113              	.LBB2494:
 2114              	.LBB2482:
 2115              	.LBB2470:
 2116              	.LBB2458:
 2117              	.LBB2446:
 2118              	.LBB2434:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 2119              		.loc 3 378 4 view .LVU377
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 2120              		.loc 3 378 46 view .LVU378
 2121 015e ECD1     		bne	.L43
 2122              	.LVL63:
 2123              	.L38:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 2124              		.loc 3 378 46 is_stmt 0 view .LVU379
 2125              	.LBE2434:
 2126              	.LBE2446:
 2127              	.LBE2458:
 2128              	.LBE2470:
 2129              	.LBE2482:
 2130              	.LBE2494:
 2131              	.LBE2506:
 2132              	.LBE2523:
 2133              	.LBE2534:
 2134              	.LBE2545:
 2135              	.LBB2546:
 2136              	.LBI2546:
 2137              		.loc 3 560 5 is_stmt 1 view .LVU380
 2138              	.LBB2547:
 2139              	.LBI2547:
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 2140              		.loc 3 511 5 view .LVU381
 2141              	.LBB2548:
 2142              	.LBI2548:
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 2143              		.loc 3 505 5 view .LVU382
 2144              	.LBB2549:
 2145              	.LBI2549:
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 2146              		.loc 3 463 5 view .LVU383
 2147              	.LBB2550:
 2148              	.LBB2551:
 2149              	.LBI2551:
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 2150              		.loc 3 375 2 view .LVU384
 2151              	.LBB2552:
 2152              	.LBB2553:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 107


 2153              		.loc 3 378 46 view .LVU385
 2154 0160 B8F1000F 		cmp	r8, #0
 2155 0164 1EDD     		ble	.L44
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 2156              		.loc 3 378 46 is_stmt 0 view .LVU386
 2157 0166 013F     		subs	r7, r7, #1
 2158              	.LVL64:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 2159              		.loc 3 378 46 view .LVU387
 2160 0168 B844     		add	r8, r8, r7
 2161              	.LVL65:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 2162              		.loc 3 378 46 view .LVU388
 2163 016a 09E0     		b	.L49
 2164              	.LVL66:
 2165              	.L83:
 2166              	.LBB2554:
 2167              	.LBB2555:
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       else
 2168              		.loc 1 93 2 is_stmt 1 view .LVU389
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       else
 2169              		.loc 1 93 8 is_stmt 0 view .LVU390
 2170 016c 3268     		ldr	r2, [r6]
 2171              	.LBE2555:
 2172              	.LBE2554:
 2173              	.LBB2564:
 2174              	.LBB2565:
 2175              	.LBB2566:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 2176              		.loc 1 154 7 view .LVU391
 2177 016e 1F2C     		cmp	r4, #31
 2178              	.LBE2566:
 2179              	.LBE2565:
 2180              	.LBE2564:
 2181              	.LBB2581:
 2182              	.LBB2560:
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       else
 2183              		.loc 1 93 8 view .LVU392
 2184 0170 43EA0203 		orr	r3, r3, r2
 2185 0174 3360     		str	r3, [r6]
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 2186              		.loc 1 96 7 is_stmt 1 view .LVU393
 2187              	.LVL67:
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 2188              		.loc 1 96 7 is_stmt 0 view .LVU394
 2189              	.LBE2560:
 2190              	.LBE2581:
 2191              	.LBB2582:
 2192              	.LBI2564:
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 2193              		.loc 1 255 5 is_stmt 1 view .LVU395
 2194              	.LBE2582:
 2195              	.LBE2553:
 2196              	.LBE2552:
 2197              	.LBE2551:
 2198              	.LBE2550:
 2199              	.LBE2549:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 108


 2200              	.LBE2548:
 2201              	.LBE2547:
 2202              	.LBE2546:
 2203              	.LBE2797:
 2204              	.LBE2991:
 2205              	.LBE3030:
 2206              	.LBE3069:
 2207              	.LBE3108:
 2208              	.LBE3147:
 2209              	.LBE3195:
 2210              	.LBE3236:
 2211              	.LBE3283:
 2212              	.LBE3340:
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 2213              		.loc 1 257 7 view .LVU396
 2214              	.LBB3341:
 2215              	.LBB3284:
 2216              	.LBB3237:
 2217              	.LBB3196:
 2218              	.LBB3148:
 2219              	.LBB3109:
 2220              	.LBB3070:
 2221              	.LBB3031:
 2222              	.LBB2992:
 2223              	.LBB2798:
 2224              	.LBB2625:
 2225              	.LBB2621:
 2226              	.LBB2617:
 2227              	.LBB2613:
 2228              	.LBB2609:
 2229              	.LBB2605:
 2230              	.LBB2601:
 2231              	.LBB2597:
 2232              	.LBB2583:
 2233              	.LBB2576:
 2234              	.LBI2565:
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 2235              		.loc 1 152 5 view .LVU397
 2236              	.LBB2571:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 2237              		.loc 1 154 7 view .LVU398
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 2238              		.loc 1 154 7 is_stmt 0 view .LVU399
 2239 0176 0FD0     		beq	.L47
 2240              	.LVL68:
 2241              	.L84:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 2242              		.loc 1 154 7 view .LVU400
 2243              	.LBE2571:
 2244              	.LBE2576:
 2245              	.LBE2583:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 2246              		.loc 3 378 46 view .LVU401
 2247 0178 B845     		cmp	r8, r7
 2248              	.LBB2584:
 2249              	.LBB2577:
 2250              	.LBB2572:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 109


 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 2251              		.loc 1 154 20 view .LVU402
 2252 017a 04F10104 		add	r4, r4, #1
 2253              	.LVL69:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 2254              		.loc 1 154 20 view .LVU403
 2255              	.LBE2572:
 2256              	.LBE2577:
 2257              	.LBE2584:
 2258              	.LBE2597:
 2259              	.LBE2601:
 2260              	.LBE2605:
 2261              	.LBE2609:
 2262              	.LBE2613:
 2263              	.LBE2617:
 2264              	.LBE2621:
 2265              	.LBE2625:
 2266              	.LBE2798:
 2267              	.LBE2992:
 2268              	.LBE3031:
 2269              	.LBE3070:
 2270              	.LBE3109:
 2271              	.LBE3148:
 2272              	.LBE3196:
 2273              	.LBE3237:
 2274              	.LBE3284:
 2275              	.LBE3341:
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 2276              		.loc 1 258 7 is_stmt 1 view .LVU404
 2277              	.LBB3342:
 2278              	.LBB3285:
 2279              	.LBB3238:
 2280              	.LBB3197:
 2281              	.LBB3149:
 2282              	.LBB3110:
 2283              	.LBB3071:
 2284              	.LBB3032:
 2285              	.LBB2993:
 2286              	.LBB2799:
 2287              	.LBB2626:
 2288              	.LBB2622:
 2289              	.LBB2618:
 2290              	.LBB2614:
 2291              	.LBB2610:
 2292              	.LBB2606:
 2293              	.LBB2602:
 2294              	.LBB2598:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 2295              		.loc 3 378 4 view .LVU405
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 2296              		.loc 3 378 46 view .LVU406
 2297 017e 11D0     		beq	.L44
 2298              	.L49:
 2299              	.LVL70:
 2300              	.LBB2585:
 2301              	.LBI2585:
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return reference(_M_p, 1UL << _M_offset); }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 110


 2302              		.loc 1 251 5 view .LVU407
 2303              	.LBB2586:
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 2304              		.loc 1 252 7 view .LVU408
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 2305              		.loc 1 252 46 is_stmt 0 view .LVU409
 2306 0180 0123     		movs	r3, #1
 2307              	.LBE2586:
 2308              	.LBE2585:
 2309              	.LBB2589:
 2310              	.LBB2561:
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	*_M_p |= _M_mask;
 2311              		.loc 1 92 7 view .LVU410
 2312 0182 17F8012F 		ldrb	r2, [r7, #1]!	@ zero_extendqisi2
 2313              	.LVL71:
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	*_M_p |= _M_mask;
 2314              		.loc 1 92 7 view .LVU411
 2315              	.LBE2561:
 2316              	.LBE2589:
 2317              	.LBB2590:
 2318              	.LBB2588:
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 2319              		.loc 1 252 46 view .LVU412
 2320 0186 A340     		lsls	r3, r3, r4
 2321              	.LVL72:
 2322              	.LBB2587:
 2323              	.LBI2587:
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_mask(__y) { }
 2324              		.loc 1 77 5 is_stmt 1 view .LVU413
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_mask(__y) { }
 2325              		.loc 1 77 5 is_stmt 0 view .LVU414
 2326              	.LBE2587:
 2327              	.LBE2588:
 2328              	.LBE2590:
 2329              	.LBB2591:
 2330              	.LBI2554:
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 2331              		.loc 1 90 5 is_stmt 1 view .LVU415
 2332              	.LBB2562:
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	*_M_p |= _M_mask;
 2333              		.loc 1 92 7 view .LVU416
 2334 0188 002A     		cmp	r2, #0
 2335 018a EFD1     		bne	.L83
 2336              	.LBB2556:
 2337              	.LBI2556:
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 2338              		.loc 1 90 5 view .LVU417
 2339              	.LVL73:
 2340              	.LBB2557:
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 2341              		.loc 1 95 2 view .LVU418
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 2342              		.loc 1 95 8 is_stmt 0 view .LVU419
 2343 018c 3268     		ldr	r2, [r6]
 2344              	.LBE2557:
 2345              	.LBE2556:
 2346              	.LBE2562:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 111


 2347              	.LBE2591:
 2348              	.LBB2592:
 2349              	.LBB2578:
 2350              	.LBB2573:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 2351              		.loc 1 154 7 view .LVU420
 2352 018e 1F2C     		cmp	r4, #31
 2353              	.LBE2573:
 2354              	.LBE2578:
 2355              	.LBE2592:
 2356              	.LBB2593:
 2357              	.LBB2563:
 2358              	.LBB2559:
 2359              	.LBB2558:
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 2360              		.loc 1 95 8 view .LVU421
 2361 0190 22EA0303 		bic	r3, r2, r3
 2362 0194 3360     		str	r3, [r6]
 2363              	.LVL74:
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 2364              		.loc 1 95 8 view .LVU422
 2365              	.LBE2558:
 2366              	.LBE2559:
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 2367              		.loc 1 96 7 is_stmt 1 view .LVU423
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 2368              		.loc 1 96 7 is_stmt 0 view .LVU424
 2369              	.LBE2563:
 2370              	.LBE2593:
 2371              	.LBB2594:
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 2372              		.loc 1 255 5 is_stmt 1 view .LVU425
 2373              	.LBE2594:
 2374              	.LBE2598:
 2375              	.LBE2602:
 2376              	.LBE2606:
 2377              	.LBE2610:
 2378              	.LBE2614:
 2379              	.LBE2618:
 2380              	.LBE2622:
 2381              	.LBE2626:
 2382              	.LBE2799:
 2383              	.LBE2993:
 2384              	.LBE3032:
 2385              	.LBE3071:
 2386              	.LBE3110:
 2387              	.LBE3149:
 2388              	.LBE3197:
 2389              	.LBE3238:
 2390              	.LBE3285:
 2391              	.LBE3342:
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 2392              		.loc 1 257 7 view .LVU426
 2393              	.LBB3343:
 2394              	.LBB3286:
 2395              	.LBB3239:
 2396              	.LBB3198:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 112


 2397              	.LBB3150:
 2398              	.LBB3111:
 2399              	.LBB3072:
 2400              	.LBB3033:
 2401              	.LBB2994:
 2402              	.LBB2800:
 2403              	.LBB2627:
 2404              	.LBB2623:
 2405              	.LBB2619:
 2406              	.LBB2615:
 2407              	.LBB2611:
 2408              	.LBB2607:
 2409              	.LBB2603:
 2410              	.LBB2599:
 2411              	.LBB2595:
 2412              	.LBB2579:
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 2413              		.loc 1 152 5 view .LVU427
 2414              	.LBB2574:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 2415              		.loc 1 154 7 view .LVU428
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 2416              		.loc 1 154 7 is_stmt 0 view .LVU429
 2417 0196 EFD1     		bne	.L84
 2418              	.LVL75:
 2419              	.L47:
 2420              	.LBB2567:
 2421              	.LBI2567:
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 2422              		.loc 1 152 5 is_stmt 1 view .LVU430
 2423              	.LBB2568:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  ++_M_p;
 2424              		.loc 1 156 4 view .LVU431
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 2425              		.loc 1 157 4 view .LVU432
 2426              	.LBE2568:
 2427              	.LBE2567:
 2428              	.LBE2574:
 2429              	.LBE2579:
 2430              	.LBE2595:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 2431              		.loc 3 378 46 is_stmt 0 view .LVU433
 2432 0198 B845     		cmp	r8, r7
 2433              	.LBB2596:
 2434              	.LBB2580:
 2435              	.LBB2575:
 2436              	.LBB2570:
 2437              	.LBB2569:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 2438              		.loc 1 157 4 view .LVU434
 2439 019a 06F10406 		add	r6, r6, #4
 2440              	.LVL76:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  ++_M_p;
 2441              		.loc 1 156 14 view .LVU435
 2442 019e 4FF00004 		mov	r4, #0
 2443              	.LVL77:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  ++_M_p;
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 113


 2444              		.loc 1 156 14 view .LVU436
 2445              	.LBE2569:
 2446              	.LBE2570:
 2447              	.LBE2575:
 2448              	.LBE2580:
 2449              	.LBE2596:
 2450              	.LBE2599:
 2451              	.LBE2603:
 2452              	.LBE2607:
 2453              	.LBE2611:
 2454              	.LBE2615:
 2455              	.LBE2619:
 2456              	.LBE2623:
 2457              	.LBE2627:
 2458              	.LBE2800:
 2459              	.LBE2994:
 2460              	.LBE3033:
 2461              	.LBE3072:
 2462              	.LBE3111:
 2463              	.LBE3150:
 2464              	.LBE3198:
 2465              	.LBE3239:
 2466              	.LBE3286:
 2467              	.LBE3343:
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 2468              		.loc 1 258 7 is_stmt 1 view .LVU437
 2469              	.LBB3344:
 2470              	.LBB3287:
 2471              	.LBB3240:
 2472              	.LBB3199:
 2473              	.LBB3151:
 2474              	.LBB3112:
 2475              	.LBB3073:
 2476              	.LBB3034:
 2477              	.LBB2995:
 2478              	.LBB2801:
 2479              	.LBB2628:
 2480              	.LBB2624:
 2481              	.LBB2620:
 2482              	.LBB2616:
 2483              	.LBB2612:
 2484              	.LBB2608:
 2485              	.LBB2604:
 2486              	.LBB2600:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 2487              		.loc 3 378 4 view .LVU438
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 2488              		.loc 3 378 46 view .LVU439
 2489 01a2 EDD1     		bne	.L49
 2490              	.L44:
 2491              	.LVL78:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 2492              		.loc 3 378 46 is_stmt 0 view .LVU440
 2493              	.LBE2600:
 2494              	.LBE2604:
 2495              	.LBE2608:
 2496              	.LBE2612:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 114


 2497              	.LBE2616:
 2498              	.LBE2620:
 2499              	.LBE2624:
 2500              	.LBE2628:
 2501              	.LBB2629:
 2502              	.LBI2629:
 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl._M_finish; }
 2503              		.loc 1 842 7 is_stmt 1 view .LVU441
 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl._M_finish; }
 2504              		.loc 1 842 7 is_stmt 0 view .LVU442
 2505              	.LBE2629:
 2506              	.LBB2630:
 2507              	.LBI2630:
 2508              		.loc 3 560 5 is_stmt 1 view .LVU443
 2509              	.LBB2631:
 2510              	.LBI2631:
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 2511              		.loc 3 511 5 view .LVU444
 2512              	.LBB2632:
 2513              	.LBI2632:
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 2514              		.loc 3 505 5 view .LVU445
 2515              	.LBB2633:
 2516              	.LBI2633:
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 2517              		.loc 3 463 5 view .LVU446
 2518              	.LBB2634:
 2519              	.LBB2635:
 2520              	.LBI2635:
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 2521              		.loc 3 375 2 view .LVU447
 2522              	.LBB2636:
 2523              	.LBB2637:
 2524              	.LBB2638:
 2525              	.LBI2638:
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 2526              		.loc 1 224 5 view .LVU448
 2527              	.LBB2639:
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 2528              		.loc 1 226 7 view .LVU449
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 2529              		.loc 1 226 44 is_stmt 0 view .LVU450
 2530 01a4 D9F80810 		ldr	r1, [r9, #8]
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 2531              		.loc 1 227 24 view .LVU451
 2532 01a8 D9F80C30 		ldr	r3, [r9, #12]
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 2533              		.loc 1 226 44 view .LVU452
 2534 01ac A1EB0A01 		sub	r1, r1, r10
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 2535              		.loc 1 227 24 view .LVU453
 2536 01b0 5B1B     		subs	r3, r3, r5
 2537 01b2 03EBC101 		add	r1, r3, r1, lsl #3
 2538              	.LVL79:
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 2539              		.loc 1 227 24 view .LVU454
 2540              	.LBE2639:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 115


 2541              	.LBE2638:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 2542              		.loc 3 378 46 is_stmt 1 view .LVU455
 2543 01b6 0029     		cmp	r1, #0
 2544 01b8 08DC     		bgt	.L57
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 2545              		.loc 3 378 46 is_stmt 0 view .LVU456
 2546 01ba 22E0     		b	.L50
 2547              	.LVL80:
 2548              	.L85:
 2549              	.LBB2640:
 2550              	.LBB2641:
 2551              	.LBB2642:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 2552              		.loc 1 154 7 view .LVU457
 2553 01bc 1F2C     		cmp	r4, #31
 2554              	.LBE2642:
 2555              	.LBE2641:
 2556              	.LBE2640:
 2557              	.LBB2657:
 2558              	.LBB2658:
 2559              	.LBB2659:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 2560              		.loc 1 154 20 view .LVU458
 2561 01be 05F10105 		add	r5, r5, #1
 2562              	.LVL81:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 2563              		.loc 1 154 20 view .LVU459
 2564              	.LBE2659:
 2565              	.LBE2658:
 2566              	.LBE2657:
 2567              	.LBE2637:
 2568              	.LBE2636:
 2569              	.LBE2635:
 2570              	.LBE2634:
 2571              	.LBE2633:
 2572              	.LBE2632:
 2573              	.LBE2631:
 2574              	.LBE2630:
 2575              	.LBE2801:
 2576              	.LBE2995:
 2577              	.LBE3034:
 2578              	.LBE3073:
 2579              	.LBE3112:
 2580              	.LBE3151:
 2581              	.LBE3199:
 2582              	.LBE3240:
 2583              	.LBE3287:
 2584              	.LBE3344:
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 2585              		.loc 1 258 7 is_stmt 1 view .LVU460
 2586              	.LBB3345:
 2587              	.LBB3288:
 2588              	.LBB3241:
 2589              	.LBB3200:
 2590              	.LBB3152:
 2591              	.LBB3113:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 116


 2592              	.LBB3074:
 2593              	.LBB3035:
 2594              	.LBB2996:
 2595              	.LBB2802:
 2596              	.LBB2763:
 2597              	.LBB2755:
 2598              	.LBB2747:
 2599              	.LBB2739:
 2600              	.LBB2731:
 2601              	.LBB2723:
 2602              	.LBB2715:
 2603              	.LBB2707:
 2604              	.LBB2670:
 2605              	.LBI2640:
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 2606              		.loc 1 255 5 view .LVU461
 2607              	.LBE2670:
 2608              	.LBE2707:
 2609              	.LBE2715:
 2610              	.LBE2723:
 2611              	.LBE2731:
 2612              	.LBE2739:
 2613              	.LBE2747:
 2614              	.LBE2755:
 2615              	.LBE2763:
 2616              	.LBE2802:
 2617              	.LBE2996:
 2618              	.LBE3035:
 2619              	.LBE3074:
 2620              	.LBE3113:
 2621              	.LBE3152:
 2622              	.LBE3200:
 2623              	.LBE3241:
 2624              	.LBE3288:
 2625              	.LBE3345:
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 2626              		.loc 1 257 7 view .LVU462
 2627              	.LBB3346:
 2628              	.LBB3289:
 2629              	.LBB3242:
 2630              	.LBB3201:
 2631              	.LBB3153:
 2632              	.LBB3114:
 2633              	.LBB3075:
 2634              	.LBB3036:
 2635              	.LBB2997:
 2636              	.LBB2803:
 2637              	.LBB2764:
 2638              	.LBB2756:
 2639              	.LBB2748:
 2640              	.LBB2740:
 2641              	.LBB2732:
 2642              	.LBB2724:
 2643              	.LBB2716:
 2644              	.LBB2708:
 2645              	.LBB2671:
 2646              	.LBB2652:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 117


 2647              	.LBI2641:
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 2648              		.loc 1 152 5 view .LVU463
 2649              	.LBB2647:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 2650              		.loc 1 154 7 view .LVU464
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 2651              		.loc 1 154 7 is_stmt 0 view .LVU465
 2652 01c2 18D0     		beq	.L55
 2653              	.LVL82:
 2654              	.L86:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 2655              		.loc 1 154 7 view .LVU466
 2656              	.LBE2647:
 2657              	.LBE2652:
 2658              	.LBE2671:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 2659              		.loc 3 378 46 view .LVU467
 2660 01c4 0139     		subs	r1, r1, #1
 2661              	.LVL83:
 2662              	.LBB2672:
 2663              	.LBB2653:
 2664              	.LBB2648:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 2665              		.loc 1 154 20 view .LVU468
 2666 01c6 04F10104 		add	r4, r4, #1
 2667              	.LVL84:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 2668              		.loc 1 154 20 view .LVU469
 2669              	.LBE2648:
 2670              	.LBE2653:
 2671              	.LBE2672:
 2672              	.LBE2708:
 2673              	.LBE2716:
 2674              	.LBE2724:
 2675              	.LBE2732:
 2676              	.LBE2740:
 2677              	.LBE2748:
 2678              	.LBE2756:
 2679              	.LBE2764:
 2680              	.LBE2803:
 2681              	.LBE2997:
 2682              	.LBE3036:
 2683              	.LBE3075:
 2684              	.LBE3114:
 2685              	.LBE3153:
 2686              	.LBE3201:
 2687              	.LBE3242:
 2688              	.LBE3289:
 2689              	.LBE3346:
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 2690              		.loc 1 258 7 is_stmt 1 view .LVU470
 2691              	.LBB3347:
 2692              	.LBB3290:
 2693              	.LBB3243:
 2694              	.LBB3202:
 2695              	.LBB3154:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 118


 2696              	.LBB3115:
 2697              	.LBB3076:
 2698              	.LBB3037:
 2699              	.LBB2998:
 2700              	.LBB2804:
 2701              	.LBB2765:
 2702              	.LBB2757:
 2703              	.LBB2749:
 2704              	.LBB2741:
 2705              	.LBB2733:
 2706              	.LBB2725:
 2707              	.LBB2717:
 2708              	.LBB2709:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 2709              		.loc 3 378 4 view .LVU471
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 2710              		.loc 3 378 46 view .LVU472
 2711 01ca 1AD0     		beq	.L50
 2712              	.L57:
 2713              	.LVL85:
 2714              	.LBB2673:
 2715              	.LBI2673:
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return reference(_M_p, 1UL << _M_offset); }
 2716              		.loc 1 251 5 view .LVU473
 2717              	.LBB2674:
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 2718              		.loc 1 252 7 view .LVU474
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 2719              		.loc 1 252 46 is_stmt 0 view .LVU475
 2720 01cc 0123     		movs	r3, #1
 2721              	.LBE2674:
 2722              	.LBE2673:
 2723              	.LBB2677:
 2724              	.LBB2678:
 2725              	.LBB2679:
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 2726              		.loc 1 87 23 view .LVU476
 2727 01ce DAF80020 		ldr	r2, [r10]
 2728              	.LBE2679:
 2729              	.LBE2678:
 2730              	.LBE2677:
 2731              	.LBB2690:
 2732              	.LBB2691:
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 2733              		.loc 1 252 46 view .LVU477
 2734 01d2 03FA05F0 		lsl	r0, r3, r5
 2735              	.LBE2691:
 2736              	.LBE2690:
 2737              	.LBB2694:
 2738              	.LBB2676:
 2739 01d6 A340     		lsls	r3, r3, r4
 2740              	.LVL86:
 2741              	.LBB2675:
 2742              	.LBI2675:
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_mask(__y) { }
 2743              		.loc 1 77 5 is_stmt 1 view .LVU478
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_mask(__y) { }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 119


 2744              		.loc 1 77 5 is_stmt 0 view .LVU479
 2745              	.LBE2675:
 2746              	.LBE2676:
 2747              	.LBE2694:
 2748              	.LBB2695:
 2749              	.LBI2690:
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return reference(_M_p, 1UL << _M_offset); }
 2750              		.loc 1 251 5 is_stmt 1 view .LVU480
 2751              	.LBB2693:
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 2752              		.loc 1 252 7 view .LVU481
 2753              	.LBB2692:
 2754              	.LBI2692:
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_mask(__y) { }
 2755              		.loc 1 77 5 view .LVU482
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_mask(__y) { }
 2756              		.loc 1 77 5 is_stmt 0 view .LVU483
 2757              	.LBE2692:
 2758              	.LBE2693:
 2759              	.LBE2695:
 2760              	.LBB2696:
 2761              	.LBI2677:
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return *this = bool(__x); }
 2762              		.loc 1 100 5 is_stmt 1 view .LVU484
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return *this = bool(__x); }
 2763              		.loc 1 100 5 is_stmt 0 view .LVU485
 2764              	.LBE2696:
 2765              	.LBE2709:
 2766              	.LBE2717:
 2767              	.LBE2725:
 2768              	.LBE2733:
 2769              	.LBE2741:
 2770              	.LBE2749:
 2771              	.LBE2757:
 2772              	.LBE2765:
 2773              	.LBE2804:
 2774              	.LBE2998:
 2775              	.LBE3037:
 2776              	.LBE3076:
 2777              	.LBE3115:
 2778              	.LBE3154:
 2779              	.LBE3202:
 2780              	.LBE3243:
 2781              	.LBE3290:
 2782              	.LBE3347:
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 2783              		.loc 1 101 7 is_stmt 1 view .LVU486
 2784              	.LBB3348:
 2785              	.LBB3291:
 2786              	.LBB3244:
 2787              	.LBB3203:
 2788              	.LBB3155:
 2789              	.LBB3116:
 2790              	.LBB3077:
 2791              	.LBB3038:
 2792              	.LBB2999:
 2793              	.LBB2805:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 120


 2794              	.LBB2766:
 2795              	.LBB2758:
 2796              	.LBB2750:
 2797              	.LBB2742:
 2798              	.LBB2734:
 2799              	.LBB2726:
 2800              	.LBB2718:
 2801              	.LBB2710:
 2802              	.LBB2697:
 2803              	.LBB2681:
 2804              	.LBI2678:
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return !!(*_M_p & _M_mask); }
 2805              		.loc 1 86 5 view .LVU487
 2806              	.LBB2680:
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 2807              		.loc 1 87 7 view .LVU488
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 2808              		.loc 1 87 7 is_stmt 0 view .LVU489
 2809              	.LBE2680:
 2810              	.LBE2681:
 2811              	.LBB2682:
 2812              	.LBI2682:
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 2813              		.loc 1 90 5 is_stmt 1 view .LVU490
 2814              	.LBB2683:
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	*_M_p |= _M_mask;
 2815              		.loc 1 92 7 view .LVU491
 2816 01d8 1042     		tst	r0, r2
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       else
 2817              		.loc 1 93 8 is_stmt 0 view .LVU492
 2818 01da 3268     		ldr	r2, [r6]
 2819              	.LVL87:
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       else
 2820              		.loc 1 93 2 is_stmt 1 view .LVU493
 2821              	.LBB2684:
 2822              	.LBI2684:
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 2823              		.loc 1 90 5 view .LVU494
 2824              	.LBB2685:
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 2825              		.loc 1 95 2 view .LVU495
 2826              	.LBE2685:
 2827              	.LBE2684:
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       else
 2828              		.loc 1 93 8 is_stmt 0 view .LVU496
 2829 01dc 14BF     		ite	ne
 2830 01de 1343     		orrne	r3, r3, r2
 2831              	.LBB2687:
 2832              	.LBB2686:
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 2833              		.loc 1 95 8 view .LVU497
 2834 01e0 22EA0303 		biceq	r3, r2, r3
 2835              	.LBE2686:
 2836              	.LBE2687:
 2837              	.LBE2683:
 2838              	.LBE2682:
 2839              	.LBE2697:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 121


 2840              	.LBB2698:
 2841              	.LBB2667:
 2842              	.LBB2664:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 2843              		.loc 1 154 7 view .LVU498
 2844 01e4 1F2D     		cmp	r5, #31
 2845 01e6 3360     		str	r3, [r6]
 2846              	.LVL88:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 2847              		.loc 1 154 7 view .LVU499
 2848              	.LBE2664:
 2849              	.LBE2667:
 2850              	.LBE2698:
 2851              	.LBB2699:
 2852              	.LBB2689:
 2853              	.LBB2688:
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 2854              		.loc 1 96 7 is_stmt 1 view .LVU500
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 2855              		.loc 1 96 7 is_stmt 0 view .LVU501
 2856              	.LBE2688:
 2857              	.LBE2689:
 2858              	.LBE2699:
 2859              	.LBB2700:
 2860              	.LBI2657:
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 2861              		.loc 1 255 5 is_stmt 1 view .LVU502
 2862              	.LBE2700:
 2863              	.LBE2710:
 2864              	.LBE2718:
 2865              	.LBE2726:
 2866              	.LBE2734:
 2867              	.LBE2742:
 2868              	.LBE2750:
 2869              	.LBE2758:
 2870              	.LBE2766:
 2871              	.LBE2805:
 2872              	.LBE2999:
 2873              	.LBE3038:
 2874              	.LBE3077:
 2875              	.LBE3116:
 2876              	.LBE3155:
 2877              	.LBE3203:
 2878              	.LBE3244:
 2879              	.LBE3291:
 2880              	.LBE3348:
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 2881              		.loc 1 257 7 view .LVU503
 2882              	.LBB3349:
 2883              	.LBB3292:
 2884              	.LBB3245:
 2885              	.LBB3204:
 2886              	.LBB3156:
 2887              	.LBB3117:
 2888              	.LBB3078:
 2889              	.LBB3039:
 2890              	.LBB3000:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 122


 2891              	.LBB2806:
 2892              	.LBB2767:
 2893              	.LBB2759:
 2894              	.LBB2751:
 2895              	.LBB2743:
 2896              	.LBB2735:
 2897              	.LBB2727:
 2898              	.LBB2719:
 2899              	.LBB2711:
 2900              	.LBB2701:
 2901              	.LBB2668:
 2902              	.LBI2658:
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 2903              		.loc 1 152 5 view .LVU504
 2904              	.LBB2665:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 2905              		.loc 1 154 7 view .LVU505
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 2906              		.loc 1 154 7 is_stmt 0 view .LVU506
 2907 01e8 E8D1     		bne	.L85
 2908              	.LVL89:
 2909              	.LBB2660:
 2910              	.LBI2660:
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 2911              		.loc 1 152 5 is_stmt 1 view .LVU507
 2912              	.LBB2661:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  ++_M_p;
 2913              		.loc 1 156 4 view .LVU508
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 2914              		.loc 1 157 4 view .LVU509
 2915              	.LBE2661:
 2916              	.LBE2660:
 2917              	.LBE2665:
 2918              	.LBE2668:
 2919              	.LBE2701:
 2920              	.LBB2702:
 2921              	.LBB2654:
 2922              	.LBB2649:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 2923              		.loc 1 154 7 is_stmt 0 view .LVU510
 2924 01ea 1F2C     		cmp	r4, #31
 2925              	.LBE2649:
 2926              	.LBE2654:
 2927              	.LBE2702:
 2928              	.LBB2703:
 2929              	.LBB2669:
 2930              	.LBB2666:
 2931              	.LBB2663:
 2932              	.LBB2662:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 2933              		.loc 1 157 4 view .LVU511
 2934 01ec 0AF1040A 		add	r10, r10, #4
 2935              	.LVL90:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  ++_M_p;
 2936              		.loc 1 156 14 view .LVU512
 2937 01f0 4FF00005 		mov	r5, #0
 2938              	.LVL91:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 123


 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  ++_M_p;
 2939              		.loc 1 156 14 view .LVU513
 2940              	.LBE2662:
 2941              	.LBE2663:
 2942              	.LBE2666:
 2943              	.LBE2669:
 2944              	.LBE2703:
 2945              	.LBE2711:
 2946              	.LBE2719:
 2947              	.LBE2727:
 2948              	.LBE2735:
 2949              	.LBE2743:
 2950              	.LBE2751:
 2951              	.LBE2759:
 2952              	.LBE2767:
 2953              	.LBE2806:
 2954              	.LBE3000:
 2955              	.LBE3039:
 2956              	.LBE3078:
 2957              	.LBE3117:
 2958              	.LBE3156:
 2959              	.LBE3204:
 2960              	.LBE3245:
 2961              	.LBE3292:
 2962              	.LBE3349:
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 2963              		.loc 1 258 7 is_stmt 1 view .LVU514
 2964              	.LBB3350:
 2965              	.LBB3293:
 2966              	.LBB3246:
 2967              	.LBB3205:
 2968              	.LBB3157:
 2969              	.LBB3118:
 2970              	.LBB3079:
 2971              	.LBB3040:
 2972              	.LBB3001:
 2973              	.LBB2807:
 2974              	.LBB2768:
 2975              	.LBB2760:
 2976              	.LBB2752:
 2977              	.LBB2744:
 2978              	.LBB2736:
 2979              	.LBB2728:
 2980              	.LBB2720:
 2981              	.LBB2712:
 2982              	.LBB2704:
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 2983              		.loc 1 255 5 view .LVU515
 2984              	.LBE2704:
 2985              	.LBE2712:
 2986              	.LBE2720:
 2987              	.LBE2728:
 2988              	.LBE2736:
 2989              	.LBE2744:
 2990              	.LBE2752:
 2991              	.LBE2760:
 2992              	.LBE2768:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 124


 2993              	.LBE2807:
 2994              	.LBE3001:
 2995              	.LBE3040:
 2996              	.LBE3079:
 2997              	.LBE3118:
 2998              	.LBE3157:
 2999              	.LBE3205:
 3000              	.LBE3246:
 3001              	.LBE3293:
 3002              	.LBE3350:
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 3003              		.loc 1 257 7 view .LVU516
 3004              	.LBB3351:
 3005              	.LBB3294:
 3006              	.LBB3247:
 3007              	.LBB3206:
 3008              	.LBB3158:
 3009              	.LBB3119:
 3010              	.LBB3080:
 3011              	.LBB3041:
 3012              	.LBB3002:
 3013              	.LBB2808:
 3014              	.LBB2769:
 3015              	.LBB2761:
 3016              	.LBB2753:
 3017              	.LBB2745:
 3018              	.LBB2737:
 3019              	.LBB2729:
 3020              	.LBB2721:
 3021              	.LBB2713:
 3022              	.LBB2705:
 3023              	.LBB2655:
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 3024              		.loc 1 152 5 view .LVU517
 3025              	.LBB2650:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 3026              		.loc 1 154 7 view .LVU518
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 3027              		.loc 1 154 7 is_stmt 0 view .LVU519
 3028 01f4 E6D1     		bne	.L86
 3029              	.LVL92:
 3030              	.L55:
 3031              	.LBB2643:
 3032              	.LBI2643:
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 3033              		.loc 1 152 5 is_stmt 1 view .LVU520
 3034              	.LBB2644:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  ++_M_p;
 3035              		.loc 1 156 4 view .LVU521
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 3036              		.loc 1 157 4 view .LVU522
 3037              	.LBE2644:
 3038              	.LBE2643:
 3039              	.LBE2650:
 3040              	.LBE2655:
 3041              	.LBE2705:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 125


 3042              		.loc 3 378 46 is_stmt 0 view .LVU523
 3043 01f6 0139     		subs	r1, r1, #1
 3044              	.LVL93:
 3045              	.LBB2706:
 3046              	.LBB2656:
 3047              	.LBB2651:
 3048              	.LBB2646:
 3049              	.LBB2645:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 3050              		.loc 1 157 4 view .LVU524
 3051 01f8 06F10406 		add	r6, r6, #4
 3052              	.LVL94:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  ++_M_p;
 3053              		.loc 1 156 14 view .LVU525
 3054 01fc 4FF00004 		mov	r4, #0
 3055              	.LVL95:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  ++_M_p;
 3056              		.loc 1 156 14 view .LVU526
 3057              	.LBE2645:
 3058              	.LBE2646:
 3059              	.LBE2651:
 3060              	.LBE2656:
 3061              	.LBE2706:
 3062              	.LBE2713:
 3063              	.LBE2721:
 3064              	.LBE2729:
 3065              	.LBE2737:
 3066              	.LBE2745:
 3067              	.LBE2753:
 3068              	.LBE2761:
 3069              	.LBE2769:
 3070              	.LBE2808:
 3071              	.LBE3002:
 3072              	.LBE3041:
 3073              	.LBE3080:
 3074              	.LBE3119:
 3075              	.LBE3158:
 3076              	.LBE3206:
 3077              	.LBE3247:
 3078              	.LBE3294:
 3079              	.LBE3351:
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 3080              		.loc 1 258 7 is_stmt 1 view .LVU527
 3081              	.LBB3352:
 3082              	.LBB3295:
 3083              	.LBB3248:
 3084              	.LBB3207:
 3085              	.LBB3159:
 3086              	.LBB3120:
 3087              	.LBB3081:
 3088              	.LBB3042:
 3089              	.LBB3003:
 3090              	.LBB2809:
 3091              	.LBB2770:
 3092              	.LBB2762:
 3093              	.LBB2754:
 3094              	.LBB2746:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 126


 3095              	.LBB2738:
 3096              	.LBB2730:
 3097              	.LBB2722:
 3098              	.LBB2714:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 3099              		.loc 3 378 4 view .LVU528
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 3100              		.loc 3 378 46 view .LVU529
 3101 0200 E4D1     		bne	.L57
 3102              	.L50:
 3103              	.LVL96:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 3104              		.loc 3 378 46 is_stmt 0 view .LVU530
 3105              	.LBE2714:
 3106              	.LBE2722:
 3107              	.LBE2730:
 3108              	.LBE2738:
 3109              	.LBE2746:
 3110              	.LBE2754:
 3111              	.LBE2762:
 3112              	.LBE2770:
 3113              	.LBB2771:
 3114              	.LBI2771:
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 3115              		.loc 1 560 7 is_stmt 1 view .LVU531
 3116              	.LBB2772:
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 3117              		.loc 1 562 2 is_stmt 0 view .LVU532
 3118 0202 BBF1000F 		cmp	fp, #0
 3119 0206 0FD0     		beq	.L58
 3120              	.LVL97:
 3121              	.LBB2773:
 3122              	.LBB2774:
 3123              	.LBI2774:
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 3124              		.loc 1 513 2 is_stmt 1 view .LVU533
 3125              	.LBB2775:
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    return std::__addressof(this->_M_end_of_storage[-1]) + 1;
 3126              		.loc 1 515 14 is_stmt 0 view .LVU534
 3127 0208 D9F81010 		ldr	r1, [r9, #16]
 3128              	.LVL98:
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    return std::__addressof(this->_M_end_of_storage[-1]) + 1;
 3129              		.loc 1 515 14 view .LVU535
 3130              	.LBE2775:
 3131              	.LBE2774:
 3132              	.LBB2776:
 3133              	.LBI2776:
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __hint Aid to locality.
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *          of type @c value_type
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 127


 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt>
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(allocator_type& __a, size_type __n, const_void_pointer __hint)
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       {
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return __a.allocate(__n, __hint);
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return __a.allocate(__n);
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       }
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Deallocate memory.
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR void
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       deallocate(allocator_type& __a, pointer __p, size_type __n)
 3134              		.loc 6 491 7 is_stmt 1 view .LVU536
 3135              	.LBB2777:
 3136              	.LBI2777:
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // __p is not permitted to be a null pointer.
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       void
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       deallocate(_Tp* __p, size_type __t)
 3137              		.loc 5 120 7 view .LVU537
 3138              	.LBB2778:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_aligned_new
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  {
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    ::operator delete(__p,
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** # if __cpp_sized_deallocation
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			      __t * sizeof(_Tp),
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** # endif
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			      std::align_val_t(alignof(_Tp)));
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    return;
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  }
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	::operator delete(__p
 3139              		.loc 5 133 19 is_stmt 0 view .LVU538
 3140 020c 5846     		mov	r0, fp
 3141 020e A1EB0B01 		sub	r1, r1, fp
 3142              	.LVL99:
 3143              		.loc 5 133 19 view .LVU539
 3144 0212 FFF7FEFF 		bl	_ZdlPvj
 3145              	.LVL100:
 3146              		.loc 5 133 19 view .LVU540
 3147              	.LBE2778:
 3148              	.LBE2777:
 3149              	.LBE2776:
 3150              	.LBB2779:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 128


 3151              	.LBI2779:
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 3152              		.loc 1 488 2 is_stmt 1 view .LVU541
 3153              	.LBB2780:
 3154              	.LBB2781:
 3155              	.LBI2781:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 3156              		.loc 1 241 5 view .LVU542
 3157              	.LBB2782:
 3158              	.LBI2782:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 3159              		.loc 1 148 5 view .LVU543
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 3160              		.loc 1 148 5 is_stmt 0 view .LVU544
 3161              	.LBE2782:
 3162              	.LBE2781:
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_end_of_storage = _Bit_pointer();
 3163              		.loc 1 490 4 view .LVU545
 3164 0216 0023     		movs	r3, #0
 3165 0218 C9E90233 		strd	r3, r3, [r9, #8]
 3166 021c 09F10803 		add	r3, r9, #8
 3167 0220 93E80300 		ldm	r3, {r0, r1}
 3168 0224 89E80300 		stm	r9, {r0, r1}
 3169              	.LVL101:
 3170              	.L58:
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_end_of_storage = _Bit_pointer();
 3171              		.loc 1 490 4 view .LVU546
 3172              	.LBE2780:
 3173              	.LBE2779:
 3174              	.LBE2773:
 3175              	.LBE2772:
 3176              	.LBE2771:
 864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      {
 865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		std::copy_backward(__position, end(),
 866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   this->_M_impl._M_finish
 867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   + difference_type(__n));
 868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		std::copy(__first, __last, __position);
 869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		this->_M_impl._M_finish += difference_type(__n);
 870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      }
 871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    else
 872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      {
 873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		const size_type __len =
 874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  _M_check_len(__n, "vector<bool>::_M_insert_range");
 875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		_Bit_pointer __q = this->_M_allocate(__len);
 876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		iterator __start(std::__addressof(*__q), 0);
 877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		iterator __i = _M_copy_aligned(begin(), __position, __start);
 878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		__i = std::copy(__first, __last, __i);
 879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		iterator __finish = std::copy(__position, end(), __i);
 880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		this->_M_deallocate();
 881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		this->_M_impl._M_end_of_storage = __q + _S_nword(__len);
 3177              		.loc 4 881 41 view .LVU547
 3178 0228 DDE90032 		ldrd	r3, r2, [sp]
 882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		this->_M_impl._M_start = __start;
 883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		this->_M_impl._M_finish = __finish;
 3179              		.loc 4 883 3 view .LVU548
 3180 022c C9F80860 		str	r6, [r9, #8]
 881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		this->_M_impl._M_start = __start;
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 129


 3181              		.loc 4 881 41 view .LVU549
 3182 0230 1344     		add	r3, r3, r2
 882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		this->_M_impl._M_start = __start;
 3183              		.loc 4 882 3 view .LVU550
 3184 0232 C9F80020 		str	r2, [r9]
 3185 0236 0022     		movs	r2, #0
 3186              		.loc 4 883 3 view .LVU551
 3187 0238 C9E90343 		strd	r4, r3, [r9, #12]
 3188              	.LVL102:
 3189              		.loc 4 883 3 view .LVU552
 3190              	.LBE2809:
 3191              	.LBE3003:
 3192              	.LBE3042:
 3193              	.LBE3081:
 3194              	.LBE3120:
 3195              	.LBE3159:
 3196              	.LBB3160:
 3197              	.LBI3160:
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return iterator(this->_M_impl._M_start._M_p, 0); }
 3198              		.loc 1 834 7 is_stmt 1 view .LVU553
 3199              	.LBB3161:
 3200              	.LBI3161:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 3201              		.loc 1 243 5 view .LVU554
 3202              	.LBB3162:
 3203              	.LBI3162:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 3204              		.loc 1 148 5 view .LVU555
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 3205              		.loc 1 148 5 is_stmt 0 view .LVU556
 3206              	.LBE3162:
 3207              	.LBE3161:
 3208              	.LBE3160:
 3209              	.LBB3163:
 3210              	.LBI3163:
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 3211              		.loc 1 303 5 is_stmt 1 view .LVU557
 3212              	.LBB3164:
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __tmp += __n;
 3213              		.loc 1 305 7 view .LVU558
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __tmp;
 3214              		.loc 1 306 7 view .LVU559
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __tmp;
 3215              		.loc 1 306 7 is_stmt 0 view .LVU560
 3216              	.LBE3164:
 3217              	.LBE3163:
 3218              	.LBE3207:
 3219              	.LBE3248:
 3220              	.LBE3295:
 3221              	.LBE3352:
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 3222              		.loc 1 287 7 is_stmt 1 view .LVU561
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_p += __n / int(_S_word_bit);
 3223              		.loc 1 174 7 view .LVU562
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 3224              		.loc 1 175 7 view .LVU563
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 130


 3225              		.loc 1 176 7 view .LVU564
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 3226              		.loc 1 177 7 view .LVU565
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 3227              		.loc 1 182 7 view .LVU566
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 3228              		.loc 1 288 7 view .LVU567
 3229              	.LBB3353:
 3230              	.LBB3296:
 3231              	.LBB3249:
 3232              	.LBB3208:
 3233              	.LBB3166:
 3234              	.LBB3165:
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 3235              		.loc 1 307 7 view .LVU568
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 3236              		.loc 1 307 7 is_stmt 0 view .LVU569
 3237              	.LBE3165:
 3238              	.LBE3166:
 3239              	.LBB3167:
 3240              	.LBB3121:
 3241              	.LBB3082:
 3242              	.LBB3043:
 3243              	.LBB3004:
 3244              	.LBB2810:
 882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		this->_M_impl._M_finish = __finish;
 3245              		.loc 4 882 3 view .LVU570
 3246 023c C9F80420 		str	r2, [r9, #4]
 3247              	.LBE2810:
 3248              	.LBE3004:
 3249              	.LBE3043:
 3250              	.LBE3082:
 3251              	.LBE3121:
 3252              	.LBE3167:
 3253              	.LBE3208:
 3254              	.LBE3249:
 3255              	.LBE3296:
 3256              	.LBE3353:
1274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 3257              		.loc 1 1274 2 view .LVU571
 3258 0240 03B0     		add	sp, sp, #12
 3259              		.cfi_remember_state
 3260              		.cfi_def_cfa_offset 36
 3261              		@ sp needed
 3262 0242 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3263              	.LVL103:
 3264              	.L80:
 3265              		.cfi_restore_state
 3266              	.LBB3354:
 3267              	.LBB3297:
 3268              	.LBB3250:
 3269              	.LBB3209:
 3270              	.LBB3168:
 3271              	.LBB3122:
 3272              	.LBB3083:
 3273              	.LBB3044:
 3274              	.LBB3005:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 131


 3275              	.LBB2811:
 3276              	.LBI2811:
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 3277              		.loc 1 303 5 is_stmt 1 view .LVU572
 3278              	.LBB2812:
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __tmp += __n;
 3279              		.loc 1 305 7 view .LVU573
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __tmp;
 3280              		.loc 1 306 7 view .LVU574
 3281              	.LBB2813:
 3282              	.LBI2813:
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 3283              		.loc 1 285 5 view .LVU575
 3284              	.LBE2813:
 3285              	.LBE2812:
 3286              	.LBE2811:
 3287              	.LBE3005:
 3288              	.LBE3044:
 3289              	.LBE3083:
 3290              	.LBE3122:
 3291              	.LBE3168:
 3292              	.LBE3209:
 3293              	.LBE3250:
 3294              	.LBE3297:
 3295              	.LBE3354:
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 3296              		.loc 1 287 7 view .LVU576
 3297              	.LBB3355:
 3298              	.LBB3298:
 3299              	.LBB3251:
 3300              	.LBB3210:
 3301              	.LBB3169:
 3302              	.LBB3123:
 3303              	.LBB3084:
 3304              	.LBB3045:
 3305              	.LBB3006:
 3306              	.LBB2832:
 3307              	.LBB2826:
 3308              	.LBB2822:
 3309              	.LBB2814:
 3310              	.LBI2814:
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 3311              		.loc 1 172 5 view .LVU577
 3312              	.LBB2815:
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_p += __n / int(_S_word_bit);
 3313              		.loc 1 174 7 view .LVU578
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_p += __n / int(_S_word_bit);
 3314              		.loc 1 174 33 is_stmt 0 view .LVU579
 3315 0246 05EB0802 		add	r2, r5, r8
 3316              	.LVL104:
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 3317              		.loc 1 175 7 is_stmt 1 view .LVU580
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 3318              		.loc 1 175 19 is_stmt 0 view .LVU581
 3319 024a 002A     		cmp	r2, #0
 3320 024c 1046     		mov	r0, r2
 3321 024e B8BF     		it	lt
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 132


 3322 0250 02F11F00 		addlt	r0, r2, #31
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 3323              		.loc 1 176 11 view .LVU582
 3324 0254 5342     		rsbs	r3, r2, #0
 3325 0256 02F01F02 		and	r2, r2, #31
 3326              	.LVL105:
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 3327              		.loc 1 176 11 view .LVU583
 3328 025a 03F01F03 		and	r3, r3, #31
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 3329              		.loc 1 175 19 view .LVU584
 3330 025e 4FEA6010 		asr	r0, r0, #5
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 3331              		.loc 1 176 11 view .LVU585
 3332 0262 58BF     		it	pl
 3333 0264 5A42     		rsbpl	r2, r3, #0
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 3334              		.loc 1 175 12 view .LVU586
 3335 0266 0AEB8000 		add	r0, r10, r0, lsl #2
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 3336              		.loc 1 176 7 is_stmt 1 view .LVU587
 3337              	.LVL106:
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 3338              		.loc 1 177 7 view .LVU588
 3339 026a 002A     		cmp	r2, #0
 3340 026c 30DB     		blt	.L87
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 3341              		.loc 1 182 7 view .LVU589
 3342              	.LBE2815:
 3343              	.LBE2814:
 3344              	.LBE2822:
 3345              	.LBE2826:
 3346              	.LBE2832:
 3347              	.LBB2833:
 3348              	.LBB2834:
 3349              	.LBB2835:
 3350              	.LBB2836:
 3351              	.LBB2837:
 3352              	.LBB2838:
 3353              	.LBB2839:
 3354              	.LBB2840:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 3355              		.loc 3 378 46 is_stmt 0 view .LVU590
 3356 026e B8F1000F 		cmp	r8, #0
 3357              	.LBE2840:
 3358              	.LBE2839:
 3359              	.LBE2838:
 3360              	.LBE2837:
 3361              	.LBE2836:
 3362              	.LBE2835:
 3363              	.LBE2834:
 3364              	.LBE2833:
 3365              	.LBB2933:
 3366              	.LBB2827:
 3367              	.LBB2823:
 3368              	.LBB2819:
 3369              	.LBB2816:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 133


 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 3370              		.loc 1 182 19 view .LVU591
 3371 0272 1446     		mov	r4, r2
 3372              	.LVL107:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 3373              		.loc 1 182 19 view .LVU592
 3374              	.LBE2816:
 3375              	.LBE2819:
 3376              	.LBE2823:
 3377              	.LBE2827:
 3378              	.LBE2933:
 3379              	.LBE3006:
 3380              	.LBE3045:
 3381              	.LBE3084:
 3382              	.LBE3123:
 3383              	.LBE3169:
 3384              	.LBE3210:
 3385              	.LBE3251:
 3386              	.LBE3298:
 3387              	.LBE3355:
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 3388              		.loc 1 288 7 is_stmt 1 view .LVU593
 3389              	.LBB3356:
 3390              	.LBB3299:
 3391              	.LBB3252:
 3392              	.LBB3211:
 3393              	.LBB3170:
 3394              	.LBB3124:
 3395              	.LBB3085:
 3396              	.LBB3046:
 3397              	.LBB3007:
 3398              	.LBB2934:
 3399              	.LBB2828:
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 3400              		.loc 1 307 7 view .LVU594
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 3401              		.loc 1 307 7 is_stmt 0 view .LVU595
 3402              	.LBE2828:
 3403              	.LBE2934:
 3404              	.LBB2935:
 3405              	.LBI2935:
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_requires_can_increment_range(__first, __last, __result);
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return std::__copy_move_a<__is_move_iterator<_II>::__value>
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first  An input iterator.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 134


 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __last   An input iterator.
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __result An output iterator.
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   result + (last - first)
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  [first,last); the move_backward function should be used instead.
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  within [first,last).
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _II, typename _OI>
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     move(_II __first, _II __last, _OI __result)
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_requires_can_increment_range(__first, __last, __result);
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return std::__copy_move_a<true>(std::__miter_base(__first),
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				      std::__miter_base(__last), __result);
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::move(_Tp, _Up, _Vp)
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #else
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::copy(_Tp, _Up, _Vp)
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, bool _IsSimple, typename _Category>
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move_backward
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _BI1, typename _BI2>
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _BI2
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  while (__first != __last)
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *--__result = *--__last;
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Category>
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move_backward<true, false, _Category>
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _BI1, typename _BI2>
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _BI2
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  while (__first != __last)
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 135


 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *--__result = std::move(*--__last);
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<>
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move_backward<false, false, random_access_iterator_tag>
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _BI1, typename _BI2>
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _BI2
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __n = __last - __first;
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for (; __n > 0; --__n)
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *--__result = *--__last;
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<>
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move_backward<true, false, random_access_iterator_tag>
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _BI1, typename _BI2>
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _BI2
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __n = __last - __first;
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for (; __n > 0; --__n)
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *--__result = std::move(*--__last);
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove>
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move_backward<_IsMove, true, random_access_iterator_tag>
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _Tp>
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _Tp*
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_move_b(const _Tp* __first, const _Tp* __last, _Tp* __result)
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					   is_move_assignable<_Tp>,
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  // trivial types can have deleted assignment
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  if (_Num)
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 136


 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result - _Num;
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _BI2
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_BI1>::iterator_category _Category;
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (std::is_constant_evaluated())
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return std::__copy_move_backward<_IsMove, false, _Category>::
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  __copy_move_b(__first, __last, __result);
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return std::__copy_move_backward<_IsMove,
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				       __memcpyable<_BI2, _BI1>::__value,
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				       _Category>::__copy_move_b(__first,
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 								 __last,
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 								 __result);
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _BI2
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_backward_a1(_BI1 __first, _BI1 __last, _BI2 __result)
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_backward_a2<_IsMove>(__first, __last, __result); }
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _Tp, typename _Ref, typename _Ptr, typename _OI>
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _OI
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_backward_a1(_GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 			    _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 			    _OI);
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _ITp, typename _IRef, typename _IPtr, typename _OTp>
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_backward_a1(
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 			_GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 			_GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 			_GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>);
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _Tp>
 736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __is_random_access_iter<_II>::__value,
 738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*> >::__type
 739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_backward_a1(_II, _II,
 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 			    _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>);
 741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_backward_a(_II __first, _II __last, _OI __result)
 746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return std::__niter_wrap(__result,
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 137


 748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		std::__copy_move_backward_a1<_IsMove>
 749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  (std::__niter_base(__first), std::__niter_base(__last),
 750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   std::__niter_base(__result)));
 751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _Ite, typename _Seq, typename _Cat, typename _OI>
 755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _OI
 756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_backward_a(
 757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		_OI);
 760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _II, typename _Ite, typename _Seq, typename _Cat>
 763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>
 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_backward_a(_II, _II,
 765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&);
 766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _IIte, typename _ISeq, typename _ICat,
 769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _OIte, typename _OSeq, typename _OCat>
 770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>
 771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_backward_a(
 772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>&);
 775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first  A bidirectional iterator.
 780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __last   A bidirectional iterator.
 781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __result A bidirectional iterator.
 782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   result - (last - first)
 783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  The function has the same effect as copy, but starts at the end of the
 785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  range and works its way to the start, returning the start of the result.
 786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  optimizations such as unrolling).
 790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  Result may not be in the range (first,last].  Use copy instead.  Note
 792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  that the start of the output range may overlap [first,last).
 793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _BI1, typename _BI2>
 795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _BI2
 797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 3406              		.loc 3 797 5 is_stmt 1 view .LVU596
 3407              	.LBB2936:
 3408              	.LBI2936:
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 3409              		.loc 3 745 5 view .LVU597
 3410              	.LBB2937:
 3411              	.LBI2937:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 138


 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_backward_a2<_IsMove>(__first, __last, __result); }
 3412              		.loc 3 717 5 view .LVU598
 3413              	.LBB2938:
 3414              	.LBI2938:
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 3415              		.loc 3 699 5 view .LVU599
 3416              	.LBB2939:
 3417              	.LBB2940:
 3418              	.LBI2940:
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 3419              		.loc 3 646 2 view .LVU600
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 3420              		.loc 3 646 2 is_stmt 0 view .LVU601
 3421              	.LBE2940:
 3422              	.LBE2939:
 3423              	.LBE2938:
 3424              	.LBE2937:
 3425              	.LBE2936:
 3426              	.LBE2935:
 3427              	.LBE3007:
 3428              	.LBE3046:
 3429              	.LBE3085:
 3430              	.LBE3124:
 3431              	.LBE3170:
 3432              	.LBE3211:
 3433              	.LBE3252:
 3434              	.LBE3299:
 3435              	.LBE3356:
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 3436              		.loc 1 226 7 is_stmt 1 view .LVU602
 3437              	.LBB3357:
 3438              	.LBB3300:
 3439              	.LBB3253:
 3440              	.LBB3212:
 3441              	.LBB3171:
 3442              	.LBB3125:
 3443              	.LBB3086:
 3444              	.LBB3047:
 3445              	.LBB3008:
 3446              	.LBB2958:
 3447              	.LBB2955:
 3448              	.LBB2952:
 3449              	.LBB2949:
 3450              	.LBB2946:
 3451              	.LBB2943:
 3452              	.LBB2941:
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *--__result = *--__last;
 3453              		.loc 3 650 15 view .LVU603
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *--__result = *--__last;
 3454              		.loc 3 650 15 is_stmt 0 view .LVU604
 3455              	.LBE2941:
 3456              	.LBE2943:
 3457              	.LBE2946:
 3458              	.LBE2949:
 3459              	.LBE2952:
 3460              	.LBE2955:
 3461              	.LBE2958:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 139


 3462              	.LBB2959:
 3463              	.LBI2833:
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 3464              		.loc 3 560 5 is_stmt 1 view .LVU605
 3465              	.LBB2926:
 3466              	.LBI2834:
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 3467              		.loc 3 511 5 view .LVU606
 3468              	.LBB2919:
 3469              	.LBI2835:
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 3470              		.loc 3 505 5 view .LVU607
 3471              	.LBB2912:
 3472              	.LBI2836:
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 3473              		.loc 3 463 5 view .LVU608
 3474              	.LBB2905:
 3475              	.LBB2898:
 3476              	.LBI2838:
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 3477              		.loc 3 375 2 view .LVU609
 3478              	.LBB2891:
 3479              	.LBB2884:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 3480              		.loc 3 378 46 view .LVU610
 3481 0274 25DD     		ble	.L74
 3482              	.LVL108:
 3483              	.L23:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 3484              		.loc 3 378 46 is_stmt 0 view .LVU611
 3485 0276 013F     		subs	r7, r7, #1
 3486              	.LVL109:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 3487              		.loc 3 378 46 view .LVU612
 3488 0278 B844     		add	r8, r8, r7
 3489              	.LVL110:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 3490              		.loc 3 378 46 view .LVU613
 3491 027a 0BE0     		b	.L31
 3492              	.LVL111:
 3493              	.L89:
 3494              	.LBB2841:
 3495              	.LBB2842:
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       else
 3496              		.loc 1 93 2 is_stmt 1 view .LVU614
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       else
 3497              		.loc 1 93 8 is_stmt 0 view .LVU615
 3498 027c DAF80010 		ldr	r1, [r10]
 3499              	.LBE2842:
 3500              	.LBE2841:
 3501              	.LBB2851:
 3502              	.LBB2852:
 3503              	.LBB2853:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 3504              		.loc 1 154 7 view .LVU616
 3505 0280 1F2D     		cmp	r5, #31
 3506              	.LBE2853:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 140


 3507              	.LBE2852:
 3508              	.LBE2851:
 3509              	.LBB2868:
 3510              	.LBB2847:
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       else
 3511              		.loc 1 93 8 view .LVU617
 3512 0282 43EA0103 		orr	r3, r3, r1
 3513 0286 CAF80030 		str	r3, [r10]
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 3514              		.loc 1 96 7 is_stmt 1 view .LVU618
 3515              	.LVL112:
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 3516              		.loc 1 96 7 is_stmt 0 view .LVU619
 3517              	.LBE2847:
 3518              	.LBE2868:
 3519              	.LBB2869:
 3520              	.LBI2851:
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 3521              		.loc 1 255 5 is_stmt 1 view .LVU620
 3522              	.LBE2869:
 3523              	.LBE2884:
 3524              	.LBE2891:
 3525              	.LBE2898:
 3526              	.LBE2905:
 3527              	.LBE2912:
 3528              	.LBE2919:
 3529              	.LBE2926:
 3530              	.LBE2959:
 3531              	.LBE3008:
 3532              	.LBE3047:
 3533              	.LBE3086:
 3534              	.LBE3125:
 3535              	.LBE3171:
 3536              	.LBE3212:
 3537              	.LBE3253:
 3538              	.LBE3300:
 3539              	.LBE3357:
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 3540              		.loc 1 257 7 view .LVU621
 3541              	.LBB3358:
 3542              	.LBB3301:
 3543              	.LBB3254:
 3544              	.LBB3213:
 3545              	.LBB3172:
 3546              	.LBB3126:
 3547              	.LBB3087:
 3548              	.LBB3048:
 3549              	.LBB3009:
 3550              	.LBB2960:
 3551              	.LBB2927:
 3552              	.LBB2920:
 3553              	.LBB2913:
 3554              	.LBB2906:
 3555              	.LBB2899:
 3556              	.LBB2892:
 3557              	.LBB2885:
 3558              	.LBB2870:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 141


 3559              	.LBB2863:
 3560              	.LBI2852:
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 3561              		.loc 1 152 5 view .LVU622
 3562              	.LBB2858:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 3563              		.loc 1 154 7 view .LVU623
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 3564              		.loc 1 154 7 is_stmt 0 view .LVU624
 3565 028a 11D0     		beq	.L28
 3566              	.LVL113:
 3567              	.L90:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 3568              		.loc 1 154 7 view .LVU625
 3569              	.LBE2858:
 3570              	.LBE2863:
 3571              	.LBE2870:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 3572              		.loc 3 378 46 view .LVU626
 3573 028c B845     		cmp	r8, r7
 3574              	.LBB2871:
 3575              	.LBB2864:
 3576              	.LBB2859:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 3577              		.loc 1 154 20 view .LVU627
 3578 028e 05F10105 		add	r5, r5, #1
 3579              	.LVL114:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 3580              		.loc 1 154 20 view .LVU628
 3581              	.LBE2859:
 3582              	.LBE2864:
 3583              	.LBE2871:
 3584              	.LBE2885:
 3585              	.LBE2892:
 3586              	.LBE2899:
 3587              	.LBE2906:
 3588              	.LBE2913:
 3589              	.LBE2920:
 3590              	.LBE2927:
 3591              	.LBE2960:
 3592              	.LBE3009:
 3593              	.LBE3048:
 3594              	.LBE3087:
 3595              	.LBE3126:
 3596              	.LBE3172:
 3597              	.LBE3213:
 3598              	.LBE3254:
 3599              	.LBE3301:
 3600              	.LBE3358:
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 3601              		.loc 1 258 7 is_stmt 1 view .LVU629
 3602              	.LBB3359:
 3603              	.LBB3302:
 3604              	.LBB3255:
 3605              	.LBB3214:
 3606              	.LBB3173:
 3607              	.LBB3127:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 142


 3608              	.LBB3088:
 3609              	.LBB3049:
 3610              	.LBB3010:
 3611              	.LBB2961:
 3612              	.LBB2928:
 3613              	.LBB2921:
 3614              	.LBB2914:
 3615              	.LBB2907:
 3616              	.LBB2900:
 3617              	.LBB2893:
 3618              	.LBB2886:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 3619              		.loc 3 378 4 view .LVU630
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 3620              		.loc 3 378 46 view .LVU631
 3621 0292 13D0     		beq	.L88
 3622              	.LVL115:
 3623              	.L31:
 3624              	.LBB2872:
 3625              	.LBI2872:
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return reference(_M_p, 1UL << _M_offset); }
 3626              		.loc 1 251 5 view .LVU632
 3627              	.LBB2873:
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 3628              		.loc 1 252 7 view .LVU633
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 3629              		.loc 1 252 46 is_stmt 0 view .LVU634
 3630 0294 0123     		movs	r3, #1
 3631              	.LBE2873:
 3632              	.LBE2872:
 3633              	.LBB2876:
 3634              	.LBB2848:
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	*_M_p |= _M_mask;
 3635              		.loc 1 92 7 view .LVU635
 3636 0296 17F8011F 		ldrb	r1, [r7, #1]!	@ zero_extendqisi2
 3637              	.LVL116:
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	*_M_p |= _M_mask;
 3638              		.loc 1 92 7 view .LVU636
 3639              	.LBE2848:
 3640              	.LBE2876:
 3641              	.LBB2877:
 3642              	.LBB2875:
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 3643              		.loc 1 252 46 view .LVU637
 3644 029a AB40     		lsls	r3, r3, r5
 3645              	.LVL117:
 3646              	.LBB2874:
 3647              	.LBI2874:
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_mask(__y) { }
 3648              		.loc 1 77 5 is_stmt 1 view .LVU638
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_mask(__y) { }
 3649              		.loc 1 77 5 is_stmt 0 view .LVU639
 3650              	.LBE2874:
 3651              	.LBE2875:
 3652              	.LBE2877:
 3653              	.LBB2878:
 3654              	.LBI2841:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 143


  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 3655              		.loc 1 90 5 is_stmt 1 view .LVU640
 3656              	.LBB2849:
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	*_M_p |= _M_mask;
 3657              		.loc 1 92 7 view .LVU641
 3658 029c 0029     		cmp	r1, #0
 3659 029e EDD1     		bne	.L89
 3660              	.LBB2843:
 3661              	.LBI2843:
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 3662              		.loc 1 90 5 view .LVU642
 3663              	.LVL118:
 3664              	.LBB2844:
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 3665              		.loc 1 95 2 view .LVU643
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 3666              		.loc 1 95 8 is_stmt 0 view .LVU644
 3667 02a0 DAF80010 		ldr	r1, [r10]
 3668              	.LBE2844:
 3669              	.LBE2843:
 3670              	.LBE2849:
 3671              	.LBE2878:
 3672              	.LBB2879:
 3673              	.LBB2865:
 3674              	.LBB2860:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 3675              		.loc 1 154 7 view .LVU645
 3676 02a4 1F2D     		cmp	r5, #31
 3677              	.LBE2860:
 3678              	.LBE2865:
 3679              	.LBE2879:
 3680              	.LBB2880:
 3681              	.LBB2850:
 3682              	.LBB2846:
 3683              	.LBB2845:
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 3684              		.loc 1 95 8 view .LVU646
 3685 02a6 21EA0303 		bic	r3, r1, r3
 3686 02aa CAF80030 		str	r3, [r10]
 3687              	.LVL119:
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 3688              		.loc 1 95 8 view .LVU647
 3689              	.LBE2845:
 3690              	.LBE2846:
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 3691              		.loc 1 96 7 is_stmt 1 view .LVU648
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 3692              		.loc 1 96 7 is_stmt 0 view .LVU649
 3693              	.LBE2850:
 3694              	.LBE2880:
 3695              	.LBB2881:
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 3696              		.loc 1 255 5 is_stmt 1 view .LVU650
 3697              	.LBE2881:
 3698              	.LBE2886:
 3699              	.LBE2893:
 3700              	.LBE2900:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 144


 3701              	.LBE2907:
 3702              	.LBE2914:
 3703              	.LBE2921:
 3704              	.LBE2928:
 3705              	.LBE2961:
 3706              	.LBE3010:
 3707              	.LBE3049:
 3708              	.LBE3088:
 3709              	.LBE3127:
 3710              	.LBE3173:
 3711              	.LBE3214:
 3712              	.LBE3255:
 3713              	.LBE3302:
 3714              	.LBE3359:
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 3715              		.loc 1 257 7 view .LVU651
 3716              	.LBB3360:
 3717              	.LBB3303:
 3718              	.LBB3256:
 3719              	.LBB3215:
 3720              	.LBB3174:
 3721              	.LBB3128:
 3722              	.LBB3089:
 3723              	.LBB3050:
 3724              	.LBB3011:
 3725              	.LBB2962:
 3726              	.LBB2929:
 3727              	.LBB2922:
 3728              	.LBB2915:
 3729              	.LBB2908:
 3730              	.LBB2901:
 3731              	.LBB2894:
 3732              	.LBB2887:
 3733              	.LBB2882:
 3734              	.LBB2866:
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 3735              		.loc 1 152 5 view .LVU652
 3736              	.LBB2861:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 3737              		.loc 1 154 7 view .LVU653
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 3738              		.loc 1 154 7 is_stmt 0 view .LVU654
 3739 02ae EDD1     		bne	.L90
 3740              	.LVL120:
 3741              	.L28:
 3742              	.LBB2854:
 3743              	.LBI2854:
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 3744              		.loc 1 152 5 is_stmt 1 view .LVU655
 3745              	.LBB2855:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  ++_M_p;
 3746              		.loc 1 156 4 view .LVU656
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 3747              		.loc 1 157 4 view .LVU657
 3748              	.LBE2855:
 3749              	.LBE2854:
 3750              	.LBE2861:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 145


 3751              	.LBE2866:
 3752              	.LBE2882:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 3753              		.loc 3 378 46 is_stmt 0 view .LVU658
 3754 02b0 B845     		cmp	r8, r7
 3755              	.LBB2883:
 3756              	.LBB2867:
 3757              	.LBB2862:
 3758              	.LBB2857:
 3759              	.LBB2856:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 3760              		.loc 1 157 4 view .LVU659
 3761 02b2 0AF1040A 		add	r10, r10, #4
 3762              	.LVL121:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  ++_M_p;
 3763              		.loc 1 156 14 view .LVU660
 3764 02b6 4FF00005 		mov	r5, #0
 3765              	.LVL122:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  ++_M_p;
 3766              		.loc 1 156 14 view .LVU661
 3767              	.LBE2856:
 3768              	.LBE2857:
 3769              	.LBE2862:
 3770              	.LBE2867:
 3771              	.LBE2883:
 3772              	.LBE2887:
 3773              	.LBE2894:
 3774              	.LBE2901:
 3775              	.LBE2908:
 3776              	.LBE2915:
 3777              	.LBE2922:
 3778              	.LBE2929:
 3779              	.LBE2962:
 3780              	.LBE3011:
 3781              	.LBE3050:
 3782              	.LBE3089:
 3783              	.LBE3128:
 3784              	.LBE3174:
 3785              	.LBE3215:
 3786              	.LBE3256:
 3787              	.LBE3303:
 3788              	.LBE3360:
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 3789              		.loc 1 258 7 is_stmt 1 view .LVU662
 3790              	.LBB3361:
 3791              	.LBB3304:
 3792              	.LBB3257:
 3793              	.LBB3216:
 3794              	.LBB3175:
 3795              	.LBB3129:
 3796              	.LBB3090:
 3797              	.LBB3051:
 3798              	.LBB3012:
 3799              	.LBB2963:
 3800              	.LBB2930:
 3801              	.LBB2923:
 3802              	.LBB2916:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 146


 3803              	.LBB2909:
 3804              	.LBB2902:
 3805              	.LBB2895:
 3806              	.LBB2888:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 3807              		.loc 3 378 4 view .LVU663
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 3808              		.loc 3 378 46 view .LVU664
 3809 02ba EBD1     		bne	.L31
 3810              	.LVL123:
 3811              	.L88:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 3812              		.loc 3 378 46 is_stmt 0 view .LVU665
 3813              	.LBE2888:
 3814              	.LBE2895:
 3815              	.LBE2902:
 3816              	.LBE2909:
 3817              	.LBE2916:
 3818              	.LBE2923:
 3819              	.LBE2930:
 3820              	.LBE2963:
 3821              	.LBB2964:
 3822              	.LBI2964:
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 3823              		.loc 1 285 5 is_stmt 1 view .LVU666
 3824              	.LBE2964:
 3825              	.LBE3012:
 3826              	.LBE3051:
 3827              	.LBE3090:
 3828              	.LBE3129:
 3829              	.LBE3175:
 3830              	.LBE3216:
 3831              	.LBE3257:
 3832              	.LBE3304:
 3833              	.LBE3361:
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 3834              		.loc 1 287 7 view .LVU667
 3835              	.LBB3362:
 3836              	.LBB3305:
 3837              	.LBB3258:
 3838              	.LBB3217:
 3839              	.LBB3176:
 3840              	.LBB3130:
 3841              	.LBB3091:
 3842              	.LBB3052:
 3843              	.LBB3013:
 3844              	.LBB2967:
 3845              	.LBB2965:
 3846              	.LBI2965:
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 3847              		.loc 1 172 5 view .LVU668
 3848              	.LBB2966:
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_p += __n / int(_S_word_bit);
 3849              		.loc 1 174 7 view .LVU669
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 3850              		.loc 1 175 7 view .LVU670
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 147


 3851              		.loc 1 176 7 view .LVU671
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 3852              		.loc 1 177 7 view .LVU672
 3853 02bc 002A     		cmp	r2, #0
 3854 02be 00DA     		bge	.L74
 3855              	.LVL124:
 3856              	.L24:
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  --_M_p;
 3857              		.loc 1 179 4 view .LVU673
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 3858              		.loc 1 180 4 view .LVU674
 3859 02c0 0438     		subs	r0, r0, #4
 3860              	.LVL125:
 3861              	.L74:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 3862              		.loc 1 182 17 is_stmt 0 view .LVU675
 3863 02c2 C9E90204 		strd	r0, r4, [r9, #8]
 3864              	.LVL126:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 3865              		.loc 1 182 17 view .LVU676
 3866              	.LBE2966:
 3867              	.LBE2965:
 3868              	.LBE2967:
 3869              	.LBE3013:
 3870              	.LBE3052:
 3871              	.LBE3091:
 3872              	.LBE3130:
 3873              	.LBE3176:
 3874              	.LBE3217:
 3875              	.LBE3258:
 3876              	.LBE3305:
 3877              	.LBE3362:
1274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 3878              		.loc 1 1274 2 view .LVU677
 3879 02c6 03B0     		add	sp, sp, #12
 3880              		.cfi_remember_state
 3881              		.cfi_def_cfa_offset 36
 3882              		@ sp needed
 3883 02c8 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3884              	.LVL127:
 3885              	.L61:
 3886              		.cfi_restore_state
 3887              	.LBB3363:
 3888              	.LBB3306:
 3889              	.LBB2131:
 3890              	.LBB2126:
 3891              	.LBB2121:
 3892              	.LBB2116:
 3893              	.LBB2111:
 3894              	.LBB2106:
 3895              	.LBB2101:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 3896              		.loc 3 378 46 view .LVU678
 3897 02cc 0022     		movs	r2, #0
 3898              	.LVL128:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 3899              		.loc 3 378 46 view .LVU679
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 148


 3900 02ce C8E6     		b	.L3
 3901              	.LVL129:
 3902              	.L87:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 3903              		.loc 3 378 46 view .LVU680
 3904              	.LBE2101:
 3905              	.LBE2106:
 3906              	.LBE2111:
 3907              	.LBE2116:
 3908              	.LBE2121:
 3909              	.LBE2126:
 3910              	.LBE2131:
 3911              	.LBE3306:
 3912              	.LBB3307:
 3913              	.LBB3259:
 3914              	.LBB3218:
 3915              	.LBB3177:
 3916              	.LBB3131:
 3917              	.LBB3092:
 3918              	.LBB3053:
 3919              	.LBB3014:
 3920              	.LBB2968:
 3921              	.LBB2829:
 3922              	.LBB2824:
 3923              	.LBB2820:
 3924              	.LBB2817:
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  --_M_p;
 3925              		.loc 1 179 4 is_stmt 1 view .LVU681
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 3926              		.loc 1 180 4 view .LVU682
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 3927              		.loc 1 182 7 view .LVU683
 3928              	.LBE2817:
 3929              	.LBE2820:
 3930              	.LBE2824:
 3931              	.LBE2829:
 3932              	.LBE2968:
 3933              	.LBB2969:
 3934              	.LBB2931:
 3935              	.LBB2924:
 3936              	.LBB2917:
 3937              	.LBB2910:
 3938              	.LBB2903:
 3939              	.LBB2896:
 3940              	.LBB2889:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 3941              		.loc 3 378 46 is_stmt 0 view .LVU684
 3942 02d0 B8F1000F 		cmp	r8, #0
 3943              	.LBE2889:
 3944              	.LBE2896:
 3945              	.LBE2903:
 3946              	.LBE2910:
 3947              	.LBE2917:
 3948              	.LBE2924:
 3949              	.LBE2931:
 3950              	.LBE2969:
 3951              	.LBB2970:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 149


 3952              	.LBB2830:
 3953              	.LBB2825:
 3954              	.LBB2821:
 3955              	.LBB2818:
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  --_M_p;
 3956              		.loc 1 179 8 view .LVU685
 3957 02d4 02F12004 		add	r4, r2, #32
 3958              	.LVL130:
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  --_M_p;
 3959              		.loc 1 179 8 view .LVU686
 3960              	.LBE2818:
 3961              	.LBE2821:
 3962              	.LBE2825:
 3963              	.LBE2830:
 3964              	.LBE2970:
 3965              	.LBE3014:
 3966              	.LBE3053:
 3967              	.LBE3092:
 3968              	.LBE3131:
 3969              	.LBE3177:
 3970              	.LBE3218:
 3971              	.LBE3259:
 3972              	.LBE3307:
 3973              	.LBE3363:
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 3974              		.loc 1 288 7 is_stmt 1 view .LVU687
 3975              	.LBB3364:
 3976              	.LBB3308:
 3977              	.LBB3260:
 3978              	.LBB3219:
 3979              	.LBB3178:
 3980              	.LBB3132:
 3981              	.LBB3093:
 3982              	.LBB3054:
 3983              	.LBB3015:
 3984              	.LBB2971:
 3985              	.LBB2831:
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 3986              		.loc 1 307 7 view .LVU688
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 3987              		.loc 1 307 7 is_stmt 0 view .LVU689
 3988              	.LBE2831:
 3989              	.LBE2971:
 3990              	.LBB2972:
 3991              		.loc 3 797 5 is_stmt 1 view .LVU690
 3992              	.LBB2956:
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 3993              		.loc 3 745 5 view .LVU691
 3994              	.LBB2953:
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_backward_a2<_IsMove>(__first, __last, __result); }
 3995              		.loc 3 717 5 view .LVU692
 3996              	.LBB2950:
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 3997              		.loc 3 699 5 view .LVU693
 3998              	.LBB2947:
 3999              	.LBB2944:
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 150


 4000              		.loc 3 646 2 view .LVU694
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 4001              		.loc 3 646 2 is_stmt 0 view .LVU695
 4002              	.LBE2944:
 4003              	.LBE2947:
 4004              	.LBE2950:
 4005              	.LBE2953:
 4006              	.LBE2956:
 4007              	.LBE2972:
 4008              	.LBE3015:
 4009              	.LBE3054:
 4010              	.LBE3093:
 4011              	.LBE3132:
 4012              	.LBE3178:
 4013              	.LBE3219:
 4014              	.LBE3260:
 4015              	.LBE3308:
 4016              	.LBE3364:
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 4017              		.loc 1 226 7 is_stmt 1 view .LVU696
 4018              	.LBB3365:
 4019              	.LBB3309:
 4020              	.LBB3261:
 4021              	.LBB3220:
 4022              	.LBB3179:
 4023              	.LBB3133:
 4024              	.LBB3094:
 4025              	.LBB3055:
 4026              	.LBB3016:
 4027              	.LBB2973:
 4028              	.LBB2957:
 4029              	.LBB2954:
 4030              	.LBB2951:
 4031              	.LBB2948:
 4032              	.LBB2945:
 4033              	.LBB2942:
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *--__result = *--__last;
 4034              		.loc 3 650 15 view .LVU697
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *--__result = *--__last;
 4035              		.loc 3 650 15 is_stmt 0 view .LVU698
 4036              	.LBE2942:
 4037              	.LBE2945:
 4038              	.LBE2948:
 4039              	.LBE2951:
 4040              	.LBE2954:
 4041              	.LBE2957:
 4042              	.LBE2973:
 4043              	.LBB2974:
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 4044              		.loc 3 560 5 is_stmt 1 view .LVU699
 4045              	.LBB2932:
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 4046              		.loc 3 511 5 view .LVU700
 4047              	.LBB2925:
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 4048              		.loc 3 505 5 view .LVU701
 4049              	.LBB2918:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 151


 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 4050              		.loc 3 463 5 view .LVU702
 4051              	.LBB2911:
 4052              	.LBB2904:
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 4053              		.loc 3 375 2 view .LVU703
 4054              	.LBB2897:
 4055              	.LBB2890:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 4056              		.loc 3 378 46 view .LVU704
 4057 02d8 CDDC     		bgt	.L23
 4058 02da F1E7     		b	.L24
 4059              	.LVL131:
 4060              	.L63:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 4061              		.loc 3 378 46 is_stmt 0 view .LVU705
 4062              	.LBE2890:
 4063              	.LBE2897:
 4064              	.LBE2904:
 4065              	.LBE2911:
 4066              	.LBE2918:
 4067              	.LBE2925:
 4068              	.LBE2932:
 4069              	.LBE2974:
 4070              	.LBB2975:
 4071              	.LBB2783:
 4072              	.LBB2535:
 4073              	.LBB2524:
 4074              	.LBB2507:
 4075              	.LBB2495:
 4076              	.LBB2483:
 4077              	.LBB2471:
 4078              	.LBB2459:
 4079              	.LBB2447:
 4080              	.LBB2435:
 4081 02dc 0024     		movs	r4, #0
 4082              	.LVL132:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 4083              		.loc 3 378 46 view .LVU706
 4084 02de 3FE7     		b	.L38
 4085              	.LVL133:
 4086              	.L34:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 4087              		.loc 3 378 46 view .LVU707
 4088              	.LBE2435:
 4089              	.LBE2447:
 4090              	.LBE2459:
 4091              	.LBE2471:
 4092              	.LBE2483:
 4093              	.LBE2495:
 4094              	.LBE2507:
 4095              	.LBE2524:
 4096              	.LBE2535:
 4097              	.LBE2783:
 4098              	.LBB2784:
 4099              	.LBB2315:
 4100 02e0 034B     		ldr	r3, .L91+4
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 152


 4101 02e2 0093     		str	r3, [sp]
 4102 02e4 0EE7     		b	.L35
 4103              	.L81:
1321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 4104              		.loc 1 1321 24 view .LVU708
 4105 02e6 0348     		ldr	r0, .L91+8
 4106 02e8 FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 4107              	.LVL134:
 4108              	.L92:
1321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 4109              		.loc 1 1321 24 view .LVU709
 4110              		.align	2
 4111              	.L91:
 4112 02ec E0FFFF7F 		.word	2147483616
 4113 02f0 FCFFFF0F 		.word	268435452
 4114 02f4 00000000 		.word	.LC3
 4115              	.LBE2315:
 4116              	.LBE2784:
 4117              	.LBE2975:
 4118              	.LBE3016:
 4119              	.LBE3055:
 4120              	.LBE3094:
 4121              	.LBE3133:
 4122              	.LBE3179:
 4123              	.LBE3220:
 4124              	.LBE3261:
 4125              	.LBE3309:
 4126              	.LBE3365:
 4127              		.cfi_endproc
 4128              	.LFE4571:
 4130              		.section	.text._ZN9Sequencer4tickEv,"ax",%progbits
 4131              		.align	1
 4132              		.p2align 2,,3
 4133              		.global	_ZN9Sequencer4tickEv
 4134              		.syntax unified
 4135              		.thumb
 4136              		.thumb_func
 4137              		.fpu fpv5-d16
 4139              	_ZN9Sequencer4tickEv:
 4140              	.LVL135:
 4141              	.LFB3628:
 4142              		.file 7 "Sequencer.cpp"
   1:Sequencer.cpp **** /*
   2:Sequencer.cpp **** GNU General Public License v3.0
   3:Sequencer.cpp **** Author: Jack Payne
   4:Sequencer.cpp **** 
   5:Sequencer.cpp ****  _______             __                                __                                  __ 
   6:Sequencer.cpp **** /       \           /  |                              /  |                                /  |
   7:Sequencer.cpp **** BBBBBBB  |  ______  BB/  ________   ______    _______ BB |____    ______    ______    ____BB |
   8:Sequencer.cpp **** BB |__BB | /      \ /  |/        | /      \  /       |BB      \  /      \  /      \  /    BB |
   9:Sequencer.cpp **** BB    BB< /BBBBBB  |BB |BBBBBBBB/  BBBBBB  |/BBBBBBB/ BBBBBBB  |/BBBBBB  |/BBBBBB  |/BBBBBBB |
  10:Sequencer.cpp **** BBBBBBB  |BB |  BB/ BB |  /  BB/   /    BB |BB |      BB |  BB |BB |  BB |BB |  BB/ BB |  BB |
  11:Sequencer.cpp **** BB |__BB |BB |      BB | /BBBB/__ /BBBBBBB |BB \_____ BB |  BB |BB \__BB |BB |      BB \__BB |
  12:Sequencer.cpp **** BB    BB/ BB |      BB |/BB      |BB    BB |BB       |BB |  BB |BB    BB/ BB |      BB    BB |
  13:Sequencer.cpp **** BBBBBBB/  BB/       BB/ BBBBBBBB/  BBBBBBB/  BBBBBBB/ BB/   BB/  BBBBBB/  BB/        BBBBBBB/	v1.0
  14:Sequencer.cpp **** */
  15:Sequencer.cpp **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 153


  16:Sequencer.cpp **** #include "Sequencer.h"
  17:Sequencer.cpp **** 
  18:Sequencer.cpp **** Sequencer::Sequencer(float sample_rate, DrumSynth& drum_synth, ChordSynth& chord_synth) 
  19:Sequencer.cpp ****     : sample_rate(sample_rate), drum_synth(drum_synth), chord_synth(chord_synth), bpm(105) {
  20:Sequencer.cpp ****         DrumPatternBeat pat{};
  21:Sequencer.cpp ****         drum_patterns.clear();
  22:Sequencer.cpp ****         pat.kick_steps = {  true, false, false, false, 
  23:Sequencer.cpp ****                             true, false, false, false, 
  24:Sequencer.cpp ****                             true, false, false, false, 
  25:Sequencer.cpp ****                             true, false, false, false, };
  26:Sequencer.cpp **** 
  27:Sequencer.cpp ****         pat.snare_steps = {false, false, false, false, 
  28:Sequencer.cpp ****                             true, false, false, false, 
  29:Sequencer.cpp ****                             false, false, false, false, 
  30:Sequencer.cpp ****                             true, false, false, false, };
  31:Sequencer.cpp **** 
  32:Sequencer.cpp ****         pat.hat_steps = {true, false, true, false, 
  33:Sequencer.cpp ****                         true, false, true, false, 
  34:Sequencer.cpp ****                         true, false, true, false, 
  35:Sequencer.cpp ****                         true, false, true, false, };
  36:Sequencer.cpp ****         drum_patterns.push_back(pat);
  37:Sequencer.cpp **** 
  38:Sequencer.cpp ****         chord_patterns.push_back({true, true, true, false, true, false, true, false, true, true, tr
  39:Sequencer.cpp ****     }
  40:Sequencer.cpp **** 
  41:Sequencer.cpp **** void Sequencer::tick() {
 4143              		.loc 7 41 24 is_stmt 1 view -0
 4144              		.cfi_startproc
 4145              		@ args = 0, pretend = 0, frame = 0
 4146              		@ frame_needed = 0, uses_anonymous_args = 0
  42:Sequencer.cpp ****     int SAMPLES_IN_BAR = static_cast<int>(sample_rate * ((60.f * 4.f )/ bpm));
 4147              		.loc 7 42 5 view .LVU711
  41:Sequencer.cpp ****     int SAMPLES_IN_BAR = static_cast<int>(sample_rate * ((60.f * 4.f )/ bpm));
 4148              		.loc 7 41 24 is_stmt 0 view .LVU712
 4149 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4150              		.cfi_def_cfa_offset 24
 4151              		.cfi_offset 4, -24
 4152              		.cfi_offset 5, -20
 4153              		.cfi_offset 6, -16
 4154              		.cfi_offset 7, -12
 4155              		.cfi_offset 8, -8
 4156              		.cfi_offset 14, -4
 4157              		.loc 7 42 73 view .LVU713
 4158 0004 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
  41:Sequencer.cpp ****     int SAMPLES_IN_BAR = static_cast<int>(sample_rate * ((60.f * 4.f )/ bpm));
 4159              		.loc 7 41 24 view .LVU714
 4160 0006 0446     		mov	r4, r0
 4161              		.loc 7 42 71 view .LVU715
 4162 0008 9FED376A 		vldr.32	s12, .L124
 4163              		.loc 7 42 73 view .LVU716
 4164 000c 07EE103A 		vmov	s14, r3	@ int
 4165              		.loc 7 42 55 view .LVU717
 4166 0010 D0ED016A 		vldr.32	s13, [r0, #4]
  43:Sequencer.cpp ****     int step_duration = SAMPLES_IN_BAR / 16;
  44:Sequencer.cpp ****     int current_step = current_tick / step_duration;
 4167              		.loc 7 44 24 view .LVU718
 4168 0014 8268     		ldr	r2, [r0, #8]
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 154


  42:Sequencer.cpp ****     int step_duration = SAMPLES_IN_BAR / 16;
 4169              		.loc 7 42 71 view .LVU719
 4170 0016 B8EEC77A 		vcvt.f32.s32	s14, s14
 4171 001a C6EE077A 		vdiv.f32	s15, s12, s14
  42:Sequencer.cpp ****     int step_duration = SAMPLES_IN_BAR / 16;
 4172              		.loc 7 42 55 view .LVU720
 4173 001e 67EEA67A 		vmul.f32	s15, s15, s13
  42:Sequencer.cpp ****     int step_duration = SAMPLES_IN_BAR / 16;
 4174              		.loc 7 42 9 view .LVU721
 4175 0022 FDEEE77A 		vcvt.s32.f32	s15, s15
 4176 0026 17EE905A 		vmov	r5, s15	@ int
 4177              	.LVL136:
  43:Sequencer.cpp ****     int step_duration = SAMPLES_IN_BAR / 16;
 4178              		.loc 7 43 5 is_stmt 1 view .LVU722
  43:Sequencer.cpp ****     int step_duration = SAMPLES_IN_BAR / 16;
 4179              		.loc 7 43 9 is_stmt 0 view .LVU723
 4180 002a 002D     		cmp	r5, #0
 4181 002c B4BF     		ite	lt
 4182 002e 05F10F03 		addlt	r3, r5, #15
 4183 0032 17EE903A 		vmovge	r3, s15	@ int
 4184 0036 1B11     		asrs	r3, r3, #4
 4185              	.LVL137:
 4186              		.loc 7 44 5 is_stmt 1 view .LVU724
 4187              		.loc 7 44 9 is_stmt 0 view .LVU725
 4188 0038 92FBF3F6 		sdiv	r6, r2, r3
 4189              	.LVL138:
  45:Sequencer.cpp **** 
  46:Sequencer.cpp ****     // If at a 16th note
  47:Sequencer.cpp ****     if (current_tick % step_duration == 0 && current_step < 16) {
 4190              		.loc 7 47 5 is_stmt 1 view .LVU726
 4191              		.loc 7 47 22 is_stmt 0 view .LVU727
 4192 003c 03FB1623 		mls	r3, r3, r6, r2
 4193              	.LVL139:
 4194              		.loc 7 47 43 view .LVU728
 4195 0040 0BB9     		cbnz	r3, .L95
 4196              	.LVL140:
 4197              		.loc 7 47 43 view .LVU729
 4198 0042 0F2E     		cmp	r6, #15
 4199 0044 09DD     		ble	.L119
 4200              	.LVL141:
 4201              	.L95:
  48:Sequencer.cpp ****         if (drum_patterns[pattern_idx].kick_steps[current_step])    drum_synth.trigger_kick();
  49:Sequencer.cpp ****         if (drum_patterns[pattern_idx].snare_steps[current_step])   drum_synth.trigger_snare();
  50:Sequencer.cpp ****         if (drum_patterns[pattern_idx].hat_steps[current_step])     drum_synth.trigger_hat();
  51:Sequencer.cpp **** 
  52:Sequencer.cpp ****         chord_synth.disable();
  53:Sequencer.cpp ****         if (chord_patterns[pattern_idx][current_step])
  54:Sequencer.cpp ****             chord_synth.enable();
  55:Sequencer.cpp ****     }
  56:Sequencer.cpp **** 
  57:Sequencer.cpp ****     current_tick++;
 4202              		.loc 7 57 5 is_stmt 1 view .LVU730
 4203              		.loc 7 57 17 is_stmt 0 view .LVU731
 4204 0046 0132     		adds	r2, r2, #1
  58:Sequencer.cpp ****     if (current_tick >= SAMPLES_IN_BAR)
 4205              		.loc 7 58 5 is_stmt 1 view .LVU732
 4206 0048 AA42     		cmp	r2, r5
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 155


 4207 004a 02DA     		bge	.L100
  57:Sequencer.cpp ****     if (current_tick >= SAMPLES_IN_BAR)
 4208              		.loc 7 57 17 is_stmt 0 view .LVU733
 4209 004c A260     		str	r2, [r4, #8]
  59:Sequencer.cpp ****         current_tick = 0;
  60:Sequencer.cpp **** }...
 4210              		.loc 7 60 1 view .LVU734
 4211 004e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4212              	.LVL142:
 4213              	.L100:
  59:Sequencer.cpp ****         current_tick = 0;
 4214              		.loc 7 59 9 is_stmt 1 view .LVU735
  59:Sequencer.cpp ****         current_tick = 0;
 4215              		.loc 7 59 22 is_stmt 0 view .LVU736
 4216 0052 0023     		movs	r3, #0
 4217 0054 A360     		str	r3, [r4, #8]
 4218              		.loc 7 60 1 view .LVU737
 4219 0056 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4220              	.LVL143:
 4221              	.L119:
  48:Sequencer.cpp ****         if (drum_patterns[pattern_idx].kick_steps[current_step])    drum_synth.trigger_kick();
 4222              		.loc 7 48 9 is_stmt 1 view .LVU738
  48:Sequencer.cpp ****         if (drum_patterns[pattern_idx].kick_steps[current_step])    drum_synth.trigger_kick();
 4223              		.loc 7 48 27 is_stmt 0 view .LVU739
 4224 005a 90F83020 		ldrb	r2, [r0, #48]	@ zero_extendqisi2
 4225              	.LVL144:
 4226              	.LBB3366:
 4227              	.LBI3366:
 4228              		.file 8 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_vector.
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Vector implementation -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Hewlett-Packard Company
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 156


  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Copyright (c) 1996
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * representations about the suitability of this  software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** /** @file bits/stl_vector.h
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *  Do not attempt to use it directly. @headername{vector}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #ifndef _STL_VECTOR_H
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _STL_VECTOR_H 1
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <bits/stl_iterator_base_funcs.h>
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <bits/functexcept.h>
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <bits/concept_check.h>
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <initializer_list>
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus > 201703L
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # include <compare>
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <debug/assertions.h>
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** extern "C" void
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** __sanitizer_annotate_contiguous_container(const void*, const void*,
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  const void*, const void*);
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** namespace std _GLIBCXX_VISIBILITY(default)
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** {
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   /// See bits/stl_deque.h's _Deque_base for an explanation.
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   template<typename _Tp, typename _Alloc>
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     struct _Vector_base
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     {
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 157


  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	rebind<_Tp>::other _Tp_alloc_type;
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        	pointer;
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       struct _Vector_impl_data
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer _M_start;
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer _M_finish;
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer _M_end_of_storage;
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl_data() _GLIBCXX_NOEXCEPT
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl_data(_Vector_impl_data&& __x) noexcept
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage(__x._M_end_of_storage)
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_copy_data(_Vector_impl_data const& __x) _GLIBCXX_NOEXCEPT
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_start = __x._M_start;
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_finish = __x._M_finish;
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage = __x._M_end_of_storage;
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_swap_data(_Vector_impl_data& __x) _GLIBCXX_NOEXCEPT
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Do not use std::swap(_M_start, __x._M_start), etc as it loses
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // information used by TBAA.
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Vector_impl_data __tmp;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __tmp._M_copy_data(*this);
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_copy_data(__x);
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __x._M_copy_data(__tmp);
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       };
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       struct _Vector_impl
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    is_nothrow_default_constructible<_Tp_alloc_type>::value)
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type()
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(__a)
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// Not defaulted, to enforce noexcept(true) even when
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// !is_nothrow_move_constructible<_Tp_alloc_type>.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 158


 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Vector_impl&& __x) noexcept
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a) noexcept
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__a))
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a, _Vector_impl&& __rv) noexcept
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__a)), _Vector_impl_data(std::move(__rv))
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	template<typename = _Tp_alloc_type>
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  struct _Asan
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ::size_type size_type;
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void _S_shrink(_Vector_impl&, size_type) { }
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void _S_on_dealloc(_Vector_impl&) { }
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    typedef _Vector_impl& _Reinit;
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    struct _Grow
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow(_Vector_impl&, size_type) { }
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      void _M_grew(size_type) { }
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    };
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  };
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// Enable ASan annotations for memory obtained from std::allocator.
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	template<typename _Up>
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  struct _Asan<allocator<_Up> >
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ::size_type size_type;
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // Adjust ASan annotation for [_M_start, _M_end_of_storage) to
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // mark end of valid region as __curr instead of __prev.
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_adjust(_Vector_impl& __impl, pointer __prev, pointer __curr)
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __sanitizer_annotate_contiguous_container(__impl._M_start,
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  __impl._M_end_of_storage, __prev, __curr);
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_grow(_Vector_impl& __impl, size_type __n)
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    { _S_adjust(__impl, __impl._M_finish, __impl._M_finish + __n); }
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_shrink(_Vector_impl& __impl, size_type __n)
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    { _S_adjust(__impl, __impl._M_finish + __n, __impl._M_finish); }
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 159


 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_on_dealloc(_Vector_impl& __impl)
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      if (__impl._M_start)
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		_S_adjust(__impl, __impl._M_finish, __impl._M_end_of_storage);
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // Used on reallocation to tell ASan unused capacity is invalid.
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    struct _Reinit
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      explicit _Reinit(_Vector_impl& __impl) : _M_impl(__impl)
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      {
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		// Mark unused capacity as valid again before deallocating it.
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		_S_on_dealloc(_M_impl);
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      }
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ~_Reinit()
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      {
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		// Mark unused capacity as invalid after reallocation.
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		if (_M_impl._M_start)
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _S_adjust(_M_impl, _M_impl._M_end_of_storage,
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    _M_impl._M_finish);
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      }
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Vector_impl& _M_impl;
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Reinit(const _Reinit&) = delete;
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Reinit& operator=(const _Reinit&) = delete;
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    };
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // Tell ASan when unused capacity is initialized to be valid.
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    struct _Grow
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow(_Vector_impl& __impl, size_type __n)
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      : _M_impl(__impl), _M_n(__n)
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      { _S_grow(_M_impl, __n); }
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ~_Grow() { if (_M_n) _S_shrink(_M_impl, _M_n); }
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      void _M_grew(size_type __n) { _M_n -= __n; }
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow(const _Grow&) = delete;
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow& operator=(const _Grow&) = delete;
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    private:
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Vector_impl& _M_impl;
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      size_type _M_n;
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    };
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  };
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_REINIT \
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   typename _Base::_Vector_impl::template _Asan<>::_Reinit const \
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__attribute__((__unused__)) __reinit_guard(this->_M_impl)
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GROW(n) \
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   typename _Base::_Vector_impl::template _Asan<>::_Grow \
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 160


 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__attribute__((__unused__)) __grow_guard(this->_M_impl, (n))
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GREW(n) __grow_guard._M_grew(n)
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_SHRINK(n) \
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   _Base::_Vector_impl::template _Asan<>::_S_shrink(this->_M_impl, n)
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC \
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   _Base::_Vector_impl::template _Asan<>::_S_on_dealloc(this->_M_impl)
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else // ! (_GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR)
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_REINIT
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GROW(n)
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GREW(n)
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_SHRINK(n)
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif // _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       };
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Alloc allocator_type;
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Tp_alloc_type&
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const _Tp_alloc_type&
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       allocator_type
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return allocator_type(_M_get_Tp_allocator()); }
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base() = default;
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base() { }
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a) { }
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Kept for ABI compatibility.
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if !_GLIBCXX_INLINE_VERSION
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(size_t __n)
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl()
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_create_storage(__n); }
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(size_t __n, const allocator_type& __a)
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a)
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_create_storage(__n); }
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(_Vector_base&&) = default;
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Kept for ABI compatibility.
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # if !_GLIBCXX_INLINE_VERSION
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(_Tp_alloc_type&& __a) noexcept
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(std::move(__a)) { }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 161


 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(_Vector_base&& __x, const allocator_type& __a)
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a)
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__x.get_allocator() == __a)
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_swap_data(__x._M_impl);
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    size_t __n = __x._M_impl._M_finish - __x._M_impl._M_start;
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _M_create_storage(__n);
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # endif
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(const allocator_type& __a, _Vector_base&& __x)
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(_Tp_alloc_type(__a), std::move(__x._M_impl))
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { }
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       ~_Vector_base() _GLIBCXX_NOEXCEPT
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_deallocate(_M_impl._M_start,
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_impl _M_impl;
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       pointer
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_allocate(size_t __n)
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_deallocate(pointer __p, size_t __n)
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__p)
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_create_storage(size_t __n)
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_start = this->_M_allocate(__n);
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     };
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   /**
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @brief A standard container which offers fixed time access to
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  individual elements in any order.
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 162


 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @ingroup sequences
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @tparam _Tp  Type of element.
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_Tp>.
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  <a href="tables.html#66">reversible container</a>, and a
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  <a href="tables.html#67">sequence</a>, including the
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  <a href="tables.html#68">optional sequence requirements</a> with the
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  %exception of @c push_front and @c pop_front.
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  In some terminology a %vector can be described as a dynamic
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  C-style array, it offers fast and efficient access to individual
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  elements in any order and saves the user from worrying about
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  memory and size allocation.  Subscripting ( @c [] ) access is
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  also provided as with C-style arrays.
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   */
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   template<typename _Tp, typename _Alloc = std::allocator<_Tp> >
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     class vector : protected _Vector_base<_Tp, _Alloc>
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     {
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #ifdef _GLIBCXX_CONCEPT_CHECKS
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Concept requirements.
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc::value_type		_Alloc_value_type;
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # if __cplusplus < 201103L
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # endif
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       __glibcxx_class_requires2(_Tp, _Alloc_value_type, _SameTypeConcept)
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static_assert(is_same<typename remove_cv<_Tp>::type, _Tp>::value,
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  "std::vector must have a non-const, non-volatile value_type");
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # if __cplusplus > 201703L || defined __STRICT_ANSI__
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static_assert(is_same<typename _Alloc::value_type, _Tp>::value,
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  "std::vector must have the same value_type as its allocator");
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # endif
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Vector_base<_Tp, _Alloc>			_Base;
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Base::_Tp_alloc_type		_Tp_alloc_type;
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>	_Alloc_traits;
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Tp					value_type;
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Base::pointer			pointer;
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc_traits::reference		reference;
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<pointer, vector> iterator;
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, vector>
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator;
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef size_t					size_type;
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef ptrdiff_t					difference_type;
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Alloc					allocator_type;
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 163


 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     private:
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static constexpr bool
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_nothrow_relocate(true_type)
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return noexcept(std::__relocate_a(std::declval<pointer>(),
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  std::declval<pointer>(),
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  std::declval<pointer>(),
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  std::declval<_Tp_alloc_type&>()));
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static constexpr bool
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_nothrow_relocate(false_type)
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return false; }
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static constexpr bool
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_use_relocate()
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// Instantiating std::__relocate_a might cause an error outside the
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// immediate context (in __relocate_object_a's noexcept-specifier),
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// so only do it if we know the type can be move-inserted into *this.
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return _S_nothrow_relocate(__is_move_insertable<_Tp_alloc_type>{});
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static pointer
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_do_relocate(pointer __first, pointer __last, pointer __result,
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return std::__relocate_a(__first, __last, __result, __alloc);
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static pointer
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_do_relocate(pointer, pointer, pointer __result,
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type&, false_type) noexcept
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return __result; }
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static pointer
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_relocate(pointer __first, pointer __last, pointer __result,
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	using __do_it = __bool_constant<_S_use_relocate()>;
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif // C++11
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_allocate;
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_deallocate;
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_impl;
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_get_Tp_allocator;
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // [23.2.4.1] construct/copy/destroy
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // (assign() and get_allocator() are also listed in this section)
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with no elements.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 164


 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector() = default;
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector() { }
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator object.
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       explicit
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__a) { }
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with default constructed elements.
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n default
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  constructed elements.
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       explicit
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(size_type __n, const allocator_type& __a = allocator_type())
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_default_initialize(__n); }
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __value  An element to copy.
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(size_type __n, const value_type& __value,
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __value  An element to copy.
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       explicit
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(size_type __n, const value_type& __value = value_type(),
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 165


 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector copy constructor.
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  All the elements of @a __x are copied, but any unused capacity in
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @a __x  will not be copied
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  (i.e. capacity() == size() in the new %vector).
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The newly-created %vector uses a copy of the allocator object used
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  by @a __x (unless the allocator traits dictate a different object).
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(const vector& __x)
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(),
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      this->_M_impl._M_start,
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      _M_get_Tp_allocator());
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector move constructor.
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The newly-created %vector contains the exact contents of the
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  moved instance.
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The contents of the moved instance are a valid, but unspecified
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector.
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&&) noexcept = default;
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Copy constructor with alternative allocator
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(const vector& __x, const allocator_type& __a)
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(), __a)
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      this->_M_impl._M_start,
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      _M_get_Tp_allocator());
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     private:
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m, true_type) noexcept
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__m, std::move(__rv))
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { }
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m, false_type)
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__m)
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__rv.get_allocator() == __m)
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_swap_data(__rv._M_impl);
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (!__rv.empty())
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_create_storage(__rv.size());
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_impl._M_finish =
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      std::__uninitialized_move_a(__rv.begin(), __rv.end(),
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 166


 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  this->_M_impl._M_start,
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  _M_get_Tp_allocator());
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    __rv.clear();
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Move constructor with alternative allocator
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m)
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       noexcept( noexcept(
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector(std::declval<vector&&>(), std::declval<const allocator_type&>(),
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       std::declval<typename _Alloc_traits::is_always_equal>())) )
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : vector(std::move(__rv), __m, typename _Alloc_traits::is_always_equal{})
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { }
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Builds a %vector from an initializer list.
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Create a %vector consisting of copies of the elements in the
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer_list @a __l.
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This will call the element type's copy constructor N times
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  (where N is @a __l.size()) and do no memory reallocation.
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(initializer_list<value_type> __l,
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__a)
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_initialize(__l.begin(), __l.end(),
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Builds a %vector from a range.
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last  An input iterator.
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Create a %vector consisting of copies of the elements from
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [first,last).
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  If the iterators are forward, bidirectional, or
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  random-access, then this will call the elements' copy
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  constructor N times (where N is distance(first,last)) and do
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  no memory reallocation.  But if only input iterators are
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used, then this will do at most 2N calls to the copy
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  constructor, and logN memory reallocations.
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator,
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Base(__a)
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 167


 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_range_initialize(__first, __last,
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			      std::__iterator_category(__first));
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Base(__a)
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_initialize_dispatch(__first, __last, _Integral());
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The dtor only erases the elements, and note that if the
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  elements themselves are pointers, the pointed-to memory is
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  not touched in any way.  Managing the pointer is the user's
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  responsibility.
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       ~vector() _GLIBCXX_NOEXCEPT
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_get_Tp_allocator());
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector assignment operator.
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  All the elements of @a __x are copied, but any unused capacity in
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @a __x will not be copied.
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Whether the allocator is copied depends on the allocator traits.
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector&
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator=(const vector& __x);
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector move assignment operator.
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The contents of @a __x are moved into this %vector (without copying,
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  if the allocators permit it).
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Afterwards @a __x is a valid, but unspecified %vector.
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Whether the allocator is moved depends on the allocator traits.
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector&
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	constexpr bool __move_storage =
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Alloc_traits::_S_propagate_on_move_assign()
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 168


 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  || _Alloc_traits::_S_always_equal();
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *this;
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector list assignment operator.
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer list @a __l.
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  of elements assigned.
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector&
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator=(initializer_list<value_type> __l)
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_assign_aux(__l.begin(), __l.end(),
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *this;
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Assigns a given value to a %vector.
 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements to be assigned.
 741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __val  Value to be assigned.
 742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with @a __n copies of the given
 744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  value.  Note that the assignment completely changes the
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and that the resulting %vector's size is the same as
 746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the number of elements assigned.
 747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       assign(size_type __n, const value_type& __val)
 750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_assign(__n, __val); }
 751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Assigns a range to a %vector.
 754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
 755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last   An input iterator.
 756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  range [__first,__last).
 759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  of elements assigned.
 763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator,
 766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	assign(_InputIterator __first, _InputIterator __last)
 769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_assign_dispatch(__first, __last, __false_type()); }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 169


 770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
 772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	assign(_InputIterator __first, _InputIterator __last)
 774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_assign_dispatch(__first, __last, _Integral());
 778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Assigns an initializer list to a %vector.
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer list @a __l.
 788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  of elements assigned.
 792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       assign(initializer_list<value_type> __l)
 795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_assign_aux(__l.begin(), __l.end(),
 797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Get a copy of the memory allocation object.
 802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::get_allocator;
 803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // iterators
 805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write iterator that points to the first
 807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       begin() _GLIBCXX_NOEXCEPT
 812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       begin() const _GLIBCXX_NOEXCEPT
 821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write iterator that points one past the last
 825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 170


 827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       end() _GLIBCXX_NOEXCEPT
 830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  ordinary element order.
 836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       end() const _GLIBCXX_NOEXCEPT
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reverse iterator that points to the
 843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  last element in the %vector.  Iteration is done in reverse
 844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reverse_iterator
 847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rbegin() _GLIBCXX_NOEXCEPT
 848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return reverse_iterator(end()); }
 849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  reverse element order.
 854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(end()); }
 858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reverse iterator that points to one
 861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  before the first element in the %vector.  Iteration is done
 862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  in reverse element order.
 863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reverse_iterator
 865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rend() _GLIBCXX_NOEXCEPT
 866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return reverse_iterator(begin()); }
 867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is done in reverse element order.
 872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rend() const _GLIBCXX_NOEXCEPT
 875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(begin()); }
 876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 171


 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       cbegin() const noexcept
 885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  ordinary element order.
 891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       cend() const noexcept
 894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  reverse element order.
 900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       crbegin() const noexcept
 903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(end()); }
 904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is done in reverse element order.
 909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       crend() const noexcept
 912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(begin()); }
 913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // [23.2.4.2] capacity
 916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**  Returns the number of elements in the %vector.  */
 917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size() const _GLIBCXX_NOEXCEPT
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**  Returns the size() of the largest possible %vector.  */
 922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
 923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       max_size() const _GLIBCXX_NOEXCEPT
 924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _S_max_size(_M_get_Tp_allocator()); }
 925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will %resize the %vector to the specified
 932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number of elements.  If the number is smaller than the
 933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  default constructed elements are appended.
 935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       resize(size_type __new_size)
 938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__new_size > size())
 940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_default_append(__new_size - size());
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 172


 941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (__new_size < size())
 942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will %resize the %vector to the specified
 951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number of elements.  If the number is smaller than the
 952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the %vector is extended and new elements are populated with
 954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  given data.
 955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       resize(size_type __new_size, const value_type& __x)
 958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__new_size > size())
 960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_fill_insert(end(), __new_size - size(), __x);
 961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (__new_size < size())
 962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will %resize the %vector to the specified
 971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number of elements.  If the number is smaller than the
 972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the %vector is extended and new elements are populated with
 974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  given data.
 975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       resize(size_type __new_size, value_type __x = value_type())
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__new_size > size())
 980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_fill_insert(end(), __new_size - size(), __x);
 981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (__new_size < size())
 982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**  A non-binding request to reduce capacity() to size().  */
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       shrink_to_fit()
 990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_shrink_to_fit(); }
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns the total number of elements that the %vector can
 995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  hold before needing to allocate more memory.
 996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 173


 998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       capacity() const _GLIBCXX_NOEXCEPT
 999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_end_of_storage
1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			 - this->_M_impl._M_start); }
1001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns true if the %vector is empty.  (Thus begin() would
1004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  equal end().)
1005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _GLIBCXX_NODISCARD bool
1007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       empty() const _GLIBCXX_NOEXCEPT
1008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return begin() == end(); }
1009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
1012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *          elements.
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements required.
1014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @throw  std::length_error  If @a n exceeds @c max_size().
1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function attempts to reserve enough memory for the
1017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector to hold the specified number of elements.  If the
1018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number requested is more than max_size(), length_error is
1019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  thrown.
1020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The advantage of this function is that if optimal code is a
1022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  necessity and the user can determine the number of elements
1023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that will be required, the user can reserve the memory in
1024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %advance, and thus prevent a possible reallocation of memory
1025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  and copying of %vector data.
1026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reserve(size_type __n);
1029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // element access
1031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
1033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read/write reference to data.
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This operator allows for easy, array-style, data access.
1038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that data access with this operator is unchecked and
1039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
1040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  see at().)
1041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator[](size_type __n) _GLIBCXX_NOEXCEPT
 4229              		.loc 8 1043 7 is_stmt 1 view .LVU740
 4230              	.LBE3366:
 4231              	.LBB3370:
 4232              	.LBB3371:
 4233              	.LBB3372:
 4234              	.LBB3373:
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 4235              		.loc 1 252 46 is_stmt 0 view .LVU741
 4236 005e 0127     		movs	r7, #1
 4237              	.LBE3373:
 4238              	.LBE3372:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 174


 4239              	.LBE3371:
 4240              	.LBE3370:
 4241              	.LBB3384:
 4242              	.LBB3367:
1044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_subscript(__n);
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(this->_M_impl._M_start + __n);
 4243              		.loc 8 1046 39 view .LVU742
 4244 0060 C368     		ldr	r3, [r0, #12]
 4245              	.LBE3367:
 4246              	.LBE3384:
 4247              	.LBB3385:
 4248              	.LBB3381:
 911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			 + __n / int(_S_word_bit), __n % int(_S_word_bit));
 4249              		.loc 1 911 10 view .LVU743
 4250 0062 06F01F00 		and	r0, r6, #31
 4251              	.LVL145:
 911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			 + __n / int(_S_word_bit), __n % int(_S_word_bit));
 4252              		.loc 1 911 10 view .LVU744
 4253              	.LBE3381:
 4254              	.LBE3385:
 4255              	.LBB3386:
 4256              	.LBB3368:
 4257              		.loc 8 1046 34 view .LVU745
 4258 0066 C2EB0211 		rsb	r1, r2, r2, lsl #4
 4259              	.LBE3368:
 4260              	.LBE3386:
 4261              	.LBB3387:
 4262              	.LBB3382:
 4263              	.LBB3377:
 4264              	.LBB3375:
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 4265              		.loc 1 252 46 view .LVU746
 4266 006a 8740     		lsls	r7, r7, r0
 4267              	.LBE3375:
 4268              	.LBE3377:
 912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 4269              		.loc 1 912 11 view .LVU747
 4270 006c 4FEA5618 		lsr	r8, r6, #5
 4271              	.LBE3382:
 4272              	.LBE3387:
 4273              	.LBB3388:
 4274              	.LBB3389:
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 4275              		.loc 1 87 17 view .LVU748
 4276 0070 53F82100 		ldr	r0, [r3, r1, lsl #2]
 4277              	.LBE3389:
 4278              	.LBE3388:
 4279              	.LBB3391:
 4280              	.LBB3369:
 4281              		.loc 8 1046 39 view .LVU749
 4282 0074 03EB8103 		add	r3, r3, r1, lsl #2
 4283              	.LVL146:
 4284              		.loc 8 1046 39 view .LVU750
 4285              	.LBE3369:
 4286              	.LBE3391:
 4287              	.LBB3392:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 175


 4288              	.LBI3370:
 909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 4289              		.loc 1 909 7 is_stmt 1 view .LVU751
 4290              	.LBB3383:
 4291              	.LBB3378:
 4292              	.LBI3378:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 4293              		.loc 1 243 5 view .LVU752
 4294              	.LBB3379:
 4295              	.LBI3379:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 4296              		.loc 1 148 5 view .LVU753
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 4297              		.loc 1 148 5 is_stmt 0 view .LVU754
 4298              	.LBE3379:
 4299              	.LBE3378:
 4300              	.LBB3380:
 4301              	.LBI3372:
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return reference(_M_p, 1UL << _M_offset); }
 4302              		.loc 1 251 5 is_stmt 1 view .LVU755
 4303              	.LBB3376:
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 4304              		.loc 1 252 7 view .LVU756
 4305              	.LBB3374:
 4306              	.LBI3374:
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_mask(__y) { }
 4307              		.loc 1 77 5 view .LVU757
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_mask(__y) { }
 4308              		.loc 1 77 5 is_stmt 0 view .LVU758
 4309              	.LBE3374:
 4310              	.LBE3376:
 4311              	.LBE3380:
 4312              	.LBE3383:
 4313              	.LBE3392:
 4314              	.LBB3393:
 4315              	.LBI3388:
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return !!(*_M_p & _M_mask); }
 4316              		.loc 1 86 5 is_stmt 1 view .LVU759
 4317              	.LBB3390:
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 4318              		.loc 1 87 7 view .LVU760
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 4319              		.loc 1 87 23 is_stmt 0 view .LVU761
 4320 0078 50F82810 		ldr	r1, [r0, r8, lsl #2]
 4321              	.LBE3390:
 4322              	.LBE3393:
  48:Sequencer.cpp ****         if (drum_patterns[pattern_idx].kick_steps[current_step])    drum_synth.trigger_kick();
 4323              		.loc 7 48 9 view .LVU762
 4324 007c 0F42     		tst	r7, r1
 4325 007e 28D1     		bne	.L120
 4326              	.LVL147:
 4327              	.L96:
  49:Sequencer.cpp ****         if (drum_patterns[pattern_idx].snare_steps[current_step])   drum_synth.trigger_snare();
 4328              		.loc 7 49 9 is_stmt 1 view .LVU763
 4329              	.LBB3394:
 4330              	.LBI3394:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 176


 4331              		.loc 8 1043 7 view .LVU764
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 4332              		.loc 8 1043 7 is_stmt 0 view .LVU765
 4333              	.LBE3394:
 4334              	.LBB3396:
 4335              	.LBI3396:
 909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 4336              		.loc 1 909 7 is_stmt 1 view .LVU766
 4337              	.LBB3397:
 4338              	.LBB3398:
 4339              	.LBI3398:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 4340              		.loc 1 243 5 view .LVU767
 4341              	.LBB3399:
 4342              	.LBI3399:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 4343              		.loc 1 148 5 view .LVU768
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 4344              		.loc 1 148 5 is_stmt 0 view .LVU769
 4345              	.LBE3399:
 4346              	.LBE3398:
 4347              	.LBB3400:
 4348              	.LBI3400:
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return reference(_M_p, 1UL << _M_offset); }
 4349              		.loc 1 251 5 is_stmt 1 view .LVU770
 4350              	.LBE3400:
 4351              	.LBE3397:
 4352              	.LBE3396:
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 4353              		.loc 1 252 7 view .LVU771
 4354              	.LBB3404:
 4355              	.LBB3403:
 4356              	.LBB3402:
 4357              	.LBB3401:
 4358              	.LBI3401:
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_mask(__y) { }
 4359              		.loc 1 77 5 view .LVU772
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_mask(__y) { }
 4360              		.loc 1 77 5 is_stmt 0 view .LVU773
 4361              	.LBE3401:
 4362              	.LBE3402:
 4363              	.LBE3403:
 4364              	.LBE3404:
 4365              	.LBB3405:
 4366              	.LBI3405:
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return !!(*_M_p & _M_mask); }
 4367              		.loc 1 86 5 is_stmt 1 view .LVU774
 4368              	.LBB3406:
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 4369              		.loc 1 87 7 view .LVU775
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 4370              		.loc 1 87 17 is_stmt 0 view .LVU776
 4371 0080 996A     		ldr	r1, [r3, #40]
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 4372              		.loc 1 87 23 view .LVU777
 4373 0082 51F82810 		ldr	r1, [r1, r8, lsl #2]
 4374              	.LBE3406:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 177


 4375              	.LBE3405:
  49:Sequencer.cpp ****         if (drum_patterns[pattern_idx].snare_steps[current_step])   drum_synth.trigger_snare();
 4376              		.loc 7 49 9 view .LVU778
 4377 0086 0F42     		tst	r7, r1
 4378 0088 18D1     		bne	.L121
 4379              	.L97:
  50:Sequencer.cpp ****         if (drum_patterns[pattern_idx].hat_steps[current_step])     drum_synth.trigger_hat();
 4380              		.loc 7 50 9 is_stmt 1 view .LVU779
 4381              	.LVL148:
 4382              	.LBB3407:
 4383              	.LBI3407:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 4384              		.loc 8 1043 7 view .LVU780
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 4385              		.loc 8 1043 7 is_stmt 0 view .LVU781
 4386              	.LBE3407:
 4387              	.LBB3409:
 4388              	.LBI3409:
 909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 4389              		.loc 1 909 7 is_stmt 1 view .LVU782
 4390              	.LBB3410:
 4391              	.LBB3411:
 4392              	.LBI3411:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 4393              		.loc 1 243 5 view .LVU783
 4394              	.LBB3412:
 4395              	.LBI3412:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 4396              		.loc 1 148 5 view .LVU784
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 4397              		.loc 1 148 5 is_stmt 0 view .LVU785
 4398              	.LBE3412:
 4399              	.LBE3411:
 4400              	.LBB3413:
 4401              	.LBI3413:
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return reference(_M_p, 1UL << _M_offset); }
 4402              		.loc 1 251 5 is_stmt 1 view .LVU786
 4403              	.LBE3413:
 4404              	.LBE3410:
 4405              	.LBE3409:
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 4406              		.loc 1 252 7 view .LVU787
 4407              	.LBB3417:
 4408              	.LBB3416:
 4409              	.LBB3415:
 4410              	.LBB3414:
 4411              	.LBI3414:
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_mask(__y) { }
 4412              		.loc 1 77 5 view .LVU788
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_mask(__y) { }
 4413              		.loc 1 77 5 is_stmt 0 view .LVU789
 4414              	.LBE3414:
 4415              	.LBE3415:
 4416              	.LBE3416:
 4417              	.LBE3417:
 4418              	.LBB3418:
 4419              	.LBI3418:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 178


  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return !!(*_M_p & _M_mask); }
 4420              		.loc 1 86 5 is_stmt 1 view .LVU790
 4421              	.LBB3419:
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 4422              		.loc 1 87 7 view .LVU791
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 4423              		.loc 1 87 17 is_stmt 0 view .LVU792
 4424 008a 5B69     		ldr	r3, [r3, #20]
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 4425              		.loc 1 87 23 view .LVU793
 4426 008c 53F82830 		ldr	r3, [r3, r8, lsl #2]
 4427              	.LBE3419:
 4428              	.LBE3418:
  50:Sequencer.cpp ****         if (drum_patterns[pattern_idx].hat_steps[current_step])     drum_synth.trigger_hat();
 4429              		.loc 7 50 9 view .LVU794
 4430 0090 1F42     		tst	r7, r3
 4431 0092 0DD1     		bne	.L122
 4432              	.L98:
  52:Sequencer.cpp ****         chord_synth.disable();
 4433              		.loc 7 52 9 is_stmt 1 view .LVU795
  53:Sequencer.cpp ****         if (chord_patterns[pattern_idx][current_step])
 4434              		.loc 7 53 9 is_stmt 0 view .LVU796
 4435 0094 A369     		ldr	r3, [r4, #24]
  52:Sequencer.cpp ****         chord_synth.disable();
 4436              		.loc 7 52 9 view .LVU797
 4437 0096 A16B     		ldr	r1, [r4, #56]
 4438              	.LVL149:
 4439              	.LBB3420:
 4440              	.LBI3420:
 4441              		.file 9 "ChordSynth.h"
   1:ChordSynth.h  **** #pragma once
   2:ChordSynth.h  **** #include "daisysp.h"
   3:ChordSynth.h  **** #include <vector>
   4:ChordSynth.h  **** 
   5:ChordSynth.h  **** using namespace daisysp;
   6:ChordSynth.h  **** 
   7:ChordSynth.h  **** class ChordSynth
   8:ChordSynth.h  **** {
   9:ChordSynth.h  **** public:
  10:ChordSynth.h  ****     ChordSynth(float sample_rate) : sample_rate(sample_rate) {};
  11:ChordSynth.h  **** 
  12:ChordSynth.h  ****     void set_chord(std::vector<int> midi_notes);
  13:ChordSynth.h  ****     float process();
  14:ChordSynth.h  **** 
  15:ChordSynth.h  ****     void enable()  {enabled  = true;}
  16:ChordSynth.h  ****     void disable() {enabled  = false;}
 4442              		.loc 9 16 10 is_stmt 1 view .LVU798
 4443              	.LBB3421:
 4444              		.loc 9 16 21 view .LVU799
 4445              	.LBE3421:
 4446              	.LBE3420:
  53:Sequencer.cpp ****         if (chord_patterns[pattern_idx][current_step])
 4447              		.loc 7 53 9 is_stmt 0 view .LVU800
 4448 0098 03EB0213 		add	r3, r3, r2, lsl #4
 4449              	.LBB3423:
 4450              	.LBB3422:
 4451              		.loc 9 16 30 view .LVU801
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 179


 4452 009c 0022     		movs	r2, #0
 4453 009e 0A71     		strb	r2, [r1, #4]
 4454              	.LVL150:
 4455              		.loc 9 16 30 view .LVU802
 4456              	.LBE3422:
 4457              	.LBE3423:
  53:Sequencer.cpp ****         if (chord_patterns[pattern_idx][current_step])
 4458              		.loc 7 53 9 is_stmt 1 view .LVU803
 4459              	.LBB3424:
 4460              	.LBI3424:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 4461              		.loc 8 1043 7 view .LVU804
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 4462              		.loc 8 1043 7 is_stmt 0 view .LVU805
 4463              	.LBE3424:
 4464              	.LBB3425:
 4465              	.LBI3425:
 4466              		.file 10 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\array"
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // <array> -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // Copyright (C) 2007-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** /** @file include/array
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****  *  This is a Standard C++ Library header.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****  */
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** #ifndef _GLIBCXX_ARRAY
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** #define _GLIBCXX_ARRAY 1
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** #pragma GCC system_header
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** #if __cplusplus < 201103L
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** # include <bits/c++0x_warning.h>
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** #else
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** #include <utility>
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** #include <bits/functexcept.h>
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 180


  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** #include <bits/stl_algobase.h>
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** #include <bits/range_access.h>
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** namespace std _GLIBCXX_VISIBILITY(default)
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** {
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****   template<typename _Tp, std::size_t _Nm>
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****     struct __array_traits
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****     {
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       typedef _Tp _Type[_Nm];
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       typedef __is_swappable<_Tp> _Is_swappable;
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       typedef __is_nothrow_swappable<_Tp> _Is_nothrow_swappable;
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       static constexpr _Tp&
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _S_ref(const _Type& __t, std::size_t __n) noexcept
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       static constexpr _Tp*
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _S_ptr(const _Type& __t) noexcept
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp*>(__t); }
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****     };
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****  template<typename _Tp>
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****    struct __array_traits<_Tp, 0>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****    {
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****      struct _Type { };
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****      typedef true_type _Is_swappable;
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****      typedef true_type _Is_nothrow_swappable;
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****      static constexpr _Tp&
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****      _S_ref(const _Type&, std::size_t) noexcept
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****      { return *static_cast<_Tp*>(nullptr); }
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****      static constexpr _Tp*
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****      _S_ptr(const _Type&) noexcept
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****      { return nullptr; }
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****    };
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****   /**
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****    *  @brief A standard container for storing a fixed size sequence of elements.
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****    *
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****    *  @ingroup sequences
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****    *
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****    *  <a href="tables.html#66">reversible container</a>, and a
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****    *  <a href="tables.html#67">sequence</a>.
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****    *
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****    *  Sets support random access iterators.
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****    *
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****    *  @tparam  Tp  Type of element. Required to be a complete type.
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****    *  @tparam  Nm  Number of elements.
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****   */
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****   template<typename _Tp, std::size_t _Nm>
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****     struct array
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****     {
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       typedef _Tp 	    			      value_type;
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 181


  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       typedef value_type*			      pointer;
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       typedef const value_type*                       const_pointer;
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       typedef value_type&                   	      reference;
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       typedef const value_type&             	      const_reference;
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       typedef value_type*          		      iterator;
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       typedef const value_type*			      const_iterator;
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       typedef std::size_t                    	      size_type;
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       typedef std::ptrdiff_t                   	      difference_type;
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       typedef std::reverse_iterator<iterator>	      reverse_iterator;
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       typedef std::reverse_iterator<const_iterator>   const_reverse_iterator;
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       // Support for zero-sized arrays mandatory.
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       typedef _GLIBCXX_STD_C::__array_traits<_Tp, _Nm> _AT_Type;
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       typename _AT_Type::_Type                         _M_elems;
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       // No explicit construct/copy/destroy for aggregate type.
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       // DR 776.
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX20_CONSTEXPR void
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       fill(const value_type& __u)
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { std::fill_n(begin(), size(), __u); }
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX20_CONSTEXPR void
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       swap(array& __other)
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       noexcept(_AT_Type::_Is_nothrow_swappable::value)
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { std::swap_ranges(begin(), end(), __other.begin()); }
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       // Iterators.
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR iterator
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       begin() noexcept
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { return iterator(data()); }
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_iterator
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       begin() const noexcept
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { return const_iterator(data()); }
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR iterator
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       end() noexcept
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { return iterator(data() + _Nm); }
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_iterator
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       end() const noexcept
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { return const_iterator(data() + _Nm); }
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       rbegin() noexcept
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { return reverse_iterator(end()); }
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       rbegin() const noexcept
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { return const_reverse_iterator(end()); }
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       rend() noexcept
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { return reverse_iterator(begin()); }
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 182


 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       rend() const noexcept
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { return const_reverse_iterator(begin()); }
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_iterator
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       cbegin() const noexcept
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { return const_iterator(data()); }
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_iterator
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       cend() const noexcept
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { return const_iterator(data() + _Nm); }
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       crbegin() const noexcept
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { return const_reverse_iterator(end()); }
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       crend() const noexcept
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { return const_reverse_iterator(begin()); }
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       // Capacity.
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       constexpr size_type
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       size() const noexcept { return _Nm; }
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       constexpr size_type
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       max_size() const noexcept { return _Nm; }
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX_NODISCARD constexpr bool
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       empty() const noexcept { return size() == 0; }
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       // Element access.
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR reference
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       operator[](size_type __n) noexcept
 4467              		.loc 10 185 7 is_stmt 1 view .LVU806
 4468              	.LBB3426:
 4469              	.LBI3426:
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 4470              		.loc 10 55 7 view .LVU807
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 4471              		.loc 10 55 7 is_stmt 0 view .LVU808
 4472              	.LBE3426:
 4473              	.LBE3425:
  53:Sequencer.cpp ****         if (chord_patterns[pattern_idx][current_step])
 4474              		.loc 7 53 9 view .LVU809
 4475 00a0 9B5D     		ldrb	r3, [r3, r6]	@ zero_extendqisi2
 4476 00a2 1BB1     		cbz	r3, .L123
  54:Sequencer.cpp ****             chord_synth.enable();
 4477              		.loc 7 54 13 is_stmt 1 view .LVU810
 4478              	.LVL151:
 4479              	.LBB3427:
 4480              	.LBI3427:
  15:ChordSynth.h  ****     void disable() {enabled  = false;}
 4481              		.loc 9 15 10 view .LVU811
 4482              	.LBB3428:
  15:ChordSynth.h  ****     void disable() {enabled  = false;}
 4483              		.loc 9 15 21 view .LVU812
  15:ChordSynth.h  ****     void disable() {enabled  = false;}
 4484              		.loc 9 15 30 is_stmt 0 view .LVU813
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 183


 4485 00a4 0123     		movs	r3, #1
 4486              	.LBE3428:
 4487              	.LBE3427:
  57:Sequencer.cpp ****     current_tick++;
 4488              		.loc 7 57 5 view .LVU814
 4489 00a6 A268     		ldr	r2, [r4, #8]
 4490              	.LBB3430:
 4491              	.LBB3429:
  15:ChordSynth.h  ****     void disable() {enabled  = false;}
 4492              		.loc 9 15 30 view .LVU815
 4493 00a8 0B71     		strb	r3, [r1, #4]
  15:ChordSynth.h  ****     void disable() {enabled  = false;}
 4494              		.loc 9 15 37 view .LVU816
 4495 00aa CCE7     		b	.L95
 4496              	.LVL152:
 4497              	.L123:
  15:ChordSynth.h  ****     void disable() {enabled  = false;}
 4498              		.loc 9 15 37 view .LVU817
 4499              	.LBE3429:
 4500              	.LBE3430:
  57:Sequencer.cpp ****     current_tick++;
 4501              		.loc 7 57 5 view .LVU818
 4502 00ac A268     		ldr	r2, [r4, #8]
 4503 00ae CAE7     		b	.L95
 4504              	.L122:
  50:Sequencer.cpp ****         if (drum_patterns[pattern_idx].hat_steps[current_step])     drum_synth.trigger_hat();
 4505              		.loc 7 50 69 is_stmt 1 discriminator 1 view .LVU819
  50:Sequencer.cpp ****         if (drum_patterns[pattern_idx].hat_steps[current_step])     drum_synth.trigger_hat();
 4506              		.loc 7 50 91 is_stmt 0 discriminator 1 view .LVU820
 4507 00b0 606B     		ldr	r0, [r4, #52]
 4508 00b2 FFF7FEFF 		bl	_ZN9DrumSynth11trigger_hatEv
 4509              	.LVL153:
  53:Sequencer.cpp ****         if (chord_patterns[pattern_idx][current_step])
 4510              		.loc 7 53 39 discriminator 1 view .LVU821
 4511 00b6 94F83020 		ldrb	r2, [r4, #48]	@ zero_extendqisi2
 4512 00ba EBE7     		b	.L98
 4513              	.L121:
  49:Sequencer.cpp ****         if (drum_patterns[pattern_idx].snare_steps[current_step])   drum_synth.trigger_snare();
 4514              		.loc 7 49 69 is_stmt 1 discriminator 1 view .LVU822
  49:Sequencer.cpp ****         if (drum_patterns[pattern_idx].snare_steps[current_step])   drum_synth.trigger_snare();
 4515              		.loc 7 49 93 is_stmt 0 discriminator 1 view .LVU823
 4516 00bc 606B     		ldr	r0, [r4, #52]
 4517 00be FFF7FEFF 		bl	_ZN9DrumSynth13trigger_snareEv
 4518              	.LVL154:
  50:Sequencer.cpp ****         if (drum_patterns[pattern_idx].hat_steps[current_step])     drum_synth.trigger_hat();
 4519              		.loc 7 50 27 discriminator 1 view .LVU824
 4520 00c2 94F83020 		ldrb	r2, [r4, #48]	@ zero_extendqisi2
 4521              	.LBB3431:
 4522              	.LBB3408:
 4523              		.loc 8 1046 39 discriminator 1 view .LVU825
 4524 00c6 E368     		ldr	r3, [r4, #12]
 4525              		.loc 8 1046 34 discriminator 1 view .LVU826
 4526 00c8 C2EB0211 		rsb	r1, r2, r2, lsl #4
 4527              		.loc 8 1046 39 discriminator 1 view .LVU827
 4528 00cc 03EB8103 		add	r3, r3, r1, lsl #2
 4529              	.LBE3408:
 4530              	.LBE3431:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 184


 4531 00d0 DBE7     		b	.L97
 4532              	.LVL155:
 4533              	.L120:
  48:Sequencer.cpp ****         if (drum_patterns[pattern_idx].kick_steps[current_step])    drum_synth.trigger_kick();
 4534              		.loc 7 48 69 is_stmt 1 discriminator 1 view .LVU828
  48:Sequencer.cpp ****         if (drum_patterns[pattern_idx].kick_steps[current_step])    drum_synth.trigger_kick();
 4535              		.loc 7 48 92 is_stmt 0 discriminator 1 view .LVU829
 4536 00d2 606B     		ldr	r0, [r4, #52]
 4537 00d4 FFF7FEFF 		bl	_ZN9DrumSynth12trigger_kickEv
 4538              	.LVL156:
  49:Sequencer.cpp ****         if (drum_patterns[pattern_idx].snare_steps[current_step])   drum_synth.trigger_snare();
 4539              		.loc 7 49 27 discriminator 1 view .LVU830
 4540 00d8 94F83020 		ldrb	r2, [r4, #48]	@ zero_extendqisi2
 4541              	.LBB3432:
 4542              	.LBB3395:
 4543              		.loc 8 1046 39 discriminator 1 view .LVU831
 4544 00dc E368     		ldr	r3, [r4, #12]
 4545              		.loc 8 1046 34 discriminator 1 view .LVU832
 4546 00de C2EB0211 		rsb	r1, r2, r2, lsl #4
 4547              		.loc 8 1046 39 discriminator 1 view .LVU833
 4548 00e2 03EB8103 		add	r3, r3, r1, lsl #2
 4549              	.LBE3395:
 4550              	.LBE3432:
 4551 00e6 CBE7     		b	.L96
 4552              	.L125:
 4553              		.align	2
 4554              	.L124:
 4555 00e8 00007043 		.word	1131413504
 4556              		.cfi_endproc
 4557              	.LFE3628:
 4559              		.section	.rodata._ZNSt6vectorISt5arrayIbLj16EESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__n
 4560              		.align	2
 4561              	.LC4:
 4562 0000 76656374 		.ascii	"vector::_M_realloc_insert\000"
 4562      6F723A3A 
 4562      5F4D5F72 
 4562      65616C6C 
 4562      6F635F69 
 4563              		.section	.text._ZNSt6vectorISt5arrayIbLj16EESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__nor
 4564              		.align	1
 4565              		.p2align 2,,3
 4566              		.weak	_ZNSt6vectorISt5arrayIbLj16EESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_itera
 4567              		.syntax unified
 4568              		.thumb
 4569              		.thumb_func
 4570              		.fpu fpv5-d16
 4572              	_ZNSt6vectorISt5arrayIbLj16EESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1
 4573              	.LVL157:
 4574              	.LFB4253:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_realloc_insert(iterator __position, _Args&&... __args)
 4575              		.loc 4 426 7 is_stmt 1 view -0
 4576              		.cfi_startproc
 4577              		@ args = 0, pretend = 0, frame = 0
 4578              		@ frame_needed = 0, uses_anonymous_args = 0
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_realloc_insert(iterator __position, _Args&&... __args)
 4579              		.loc 4 426 7 is_stmt 0 view .LVU835
 4580 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 185


 4581              		.cfi_def_cfa_offset 40
 4582              		.cfi_offset 3, -40
 4583              		.cfi_offset 4, -36
 4584              		.cfi_offset 5, -32
 4585              		.cfi_offset 6, -28
 4586              		.cfi_offset 7, -24
 4587              		.cfi_offset 8, -20
 4588              		.cfi_offset 9, -16
 4589              		.cfi_offset 10, -12
 4590              		.cfi_offset 11, -8
 4591              		.cfi_offset 14, -4
 4592 0004 D0E9008A 		ldrd	r8, r10, [r0]
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_realloc_insert(iterator __position, _Args&&... __args)
 4593              		.loc 4 426 7 view .LVU836
 4594 0008 0F46     		mov	r7, r1
 4595              	.LVL158:
 4596              	.LBB3470:
 4597              	.LBI3470:
1047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
1051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read-only (constant) reference to data.
1054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This operator allows for easy, array-style, data access.
1056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that data access with this operator is unchecked and
1057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
1058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  see at().)
1059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
1062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_subscript(__n);
1064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(this->_M_impl._M_start + __n);
1065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
1068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Safety check used only from at().
1069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_range_check(size_type __n) const
1071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__n >= this->size())
1073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_out_of_range_fmt(__N("vector::_M_range_check: __n "
1074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				       "(which is %zu) >= this->size() "
1075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				       "(which is %zu)"),
1076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				   __n, this->size());
1077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
1080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
1082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read/write reference to data.
1085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 186


1086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function provides for safer data access.  The parameter
1088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
1089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  function throws out_of_range if the check fails.
1090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       at(size_type __n)
1093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_check(__n);
1095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (*this)[__n];
1096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
1100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read-only (constant) reference to data.
1103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
1104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function provides for safer data access.  The parameter
1106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
1107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  function throws out_of_range if the check fails.
1108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       at(size_type __n) const
1111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_check(__n);
1113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (*this)[__n];
1114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reference to the data at the first
1118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element of the %vector.
1119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       front() _GLIBCXX_NOEXCEPT
1122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *begin();
1125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the first
1129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element of the %vector.
1130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       front() const _GLIBCXX_NOEXCEPT
1133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *begin();
1136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reference to the data at the last
1140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element of the %vector.
1141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 187


1143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       back() _GLIBCXX_NOEXCEPT
1144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(end() - 1);
1147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the
1151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  last element of the %vector.
1152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       back() const _GLIBCXX_NOEXCEPT
1155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(end() - 1);
1158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // DR 464. Suggestion for new member functions in standard containers.
1162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // data access
1163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *   Returns a pointer such that [data(), data() + size()) is a valid
1165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *   range.  For a non-empty %vector, data() == &front().
1166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Tp*
1168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       data() _GLIBCXX_NOEXCEPT
1169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
1170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const _Tp*
1172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       data() const _GLIBCXX_NOEXCEPT
1173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
1174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // [23.2.4.3] modifiers
1176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Add data to the end of the %vector.
1178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be added.
1179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This is a typical stack operation.  The function creates an
1181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element at the end of the %vector and assigns the given data
1182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to it.  Due to the nature of a %vector this operation can be
1183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  done in constant time if the %vector has preallocated space
1184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  available.
1185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       push_back(const value_type& __x)
1188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
1190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
1191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
1192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
1193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				     __x);
1194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    ++this->_M_impl._M_finish;
1195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
1196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
1197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else
1198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_realloc_insert(end(), __x);
1199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 188


1200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       push_back(value_type&& __x)
1204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
1205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus > 201402L
1208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	reference
1209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	emplace_back(_Args&&... __args);
1213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Removes last element.
1217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This is a typical stack operation. It shrinks the %vector by one.
1219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that no data is returned, and if the last element's
1221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  data is needed, it should be retrieved before pop_back() is
1222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  called.
1223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       pop_back() _GLIBCXX_NOEXCEPT
1226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	--this->_M_impl._M_finish;
1229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
1230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_GLIBCXX_ASAN_ANNOTATE_SHRINK(1);
1231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts an object in %vector before specified iterator.
1236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __args  Arguments.
1238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert an object of type T constructed
1241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  with T(std::forward<Args>(args)...) before the specified location.
1242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a %vector
1243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  and if it is frequently used the user should consider using
1244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  std::list.
1245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	iterator
1248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	emplace(const_iterator __position, _Args&&... __args)
1249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ return _M_emplace_aux(__position, std::forward<_Args>(__args)...); }
1250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
1253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 189


1257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a copy of the given value before
1258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the specified location.  Note that this kind of operation
1259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used the user should consider using std::list.
1261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, const value_type& __x);
1264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
1267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a copy of the given value before
1272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the specified location.  Note that this kind of operation
1273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used the user should consider using std::list.
1275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(iterator __position, const value_type& __x);
1278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts given rvalue into %vector before specified iterator.
1283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a copy of the given rvalue before
1288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the specified location.  Note that this kind of operation
1289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used the user should consider using std::list.
1291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, value_type&& __x)
1294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_insert_rval(__position, std::move(__x)); }
1295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts an initializer_list into the %vector.
1298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
1300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert copies of the data in the
1302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer_list @a l into the %vector before the location
1303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  specified by @a position.
1304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, initializer_list<value_type> __l)
1311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	auto __offset = __position - cbegin();
1313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_insert(begin() + __offset, __l.begin(), __l.end(),
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 190


1314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			std::random_access_iterator_tag());
1315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return begin() + __offset;
1316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a specified number of copies of
1328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the given data before the location specified by @a position.
1329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, size_type __n, const value_type& __x)
1336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	difference_type __offset = __position - cbegin();
1338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_fill_insert(begin() + __offset, __n, __x);
1339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return begin() + __offset;
1340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a specified number of copies of
1349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the given data before the location specified by @a position.
1350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(iterator __position, size_type __n, const value_type& __x)
1357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_insert(__position, __n, __x); }
1358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
1365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last   An input iterator.
1366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert copies of the data in the range
1369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  by @a pos.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 191


1371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator,
1377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	iterator
1379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	insert(const_iterator __position, _InputIterator __first,
1380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       _InputIterator __last)
1381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  difference_type __offset = __position - cbegin();
1383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_insert_dispatch(begin() + __offset,
1384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			     __first, __last, __false_type());
1385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  return begin() + __offset;
1386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
1392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last   An input iterator.
1393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert copies of the data in the range
1395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  by @a pos.
1397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	insert(iterator __position, _InputIterator __first,
1405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       _InputIterator __last)
1406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
1408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
1409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_insert_dispatch(__position, __first, __last, _Integral());
1410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Remove element at given position.
1415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  Iterator pointing to element to be erased.
1416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator pointing to the next element (or end()).
1417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will erase the element at the given position and thus
1419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  shorten the %vector by one.
1420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note This operation could be expensive and if it is
1422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  frequently used the user should consider using std::list.
1423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The user is also cautioned that this function only erases
1424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the element, and that if the element is itself a pointer,
1425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the pointed-to memory is not touched in any way.  Managing
1426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the pointer is the user's responsibility.
1427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 192


1428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(const_iterator __position)
1431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_erase(begin() + (__position - cbegin())); }
1432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(iterator __position)
1434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_erase(__position); }
1435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Remove a range of elements.
1439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  Iterator pointing to the first element to be erased.
1440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last  Iterator pointing to one past the last element to be
1441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *                  erased.
1442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator pointing to the element pointed to by @a __last
1443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *           prior to erasing (or end()).
1444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will erase the elements in the range
1446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [__first,__last) and shorten the %vector accordingly.
1447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note This operation could be expensive and if it is
1449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  frequently used the user should consider using std::list.
1450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The user is also cautioned that this function only erases
1451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the elements, and that if the elements themselves are
1452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  pointers, the pointed-to memory is not touched in any way.
1453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Managing the pointer is the user's responsibility.
1454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(const_iterator __first, const_iterator __last)
1458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const auto __beg = begin();
1460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const auto __cbeg = cbegin();
1461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return _M_erase(__beg + (__first - __cbeg), __beg + (__last - __cbeg));
1462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(iterator __first, iterator __last)
1465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_erase(__first, __last); }
1466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Swaps data with another %vector.
1470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of the same element and allocator types.
1471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This exchanges the elements between two vectors in constant time.
1473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  (Three pointers, so it should be quite fast.)
1474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the global std::swap() function is specialized such that
1475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  std::swap(v1,v2) will feed to this function.
1476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Whether the allocators are swapped depends on the allocator traits.
1478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       swap(vector& __x) _GLIBCXX_NOEXCEPT
1481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_assert(_Alloc_traits::propagate_on_container_swap::value
1484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			 || _M_get_Tp_allocator() == __x._M_get_Tp_allocator());
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 193


1485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_swap_data(__x._M_impl);
1487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Alloc_traits::_S_on_swap(_M_get_Tp_allocator(),
1488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				  __x._M_get_Tp_allocator());
1489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Erases all the elements.  Note that this function only erases the
1493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  elements, and that if the elements themselves are pointers, the
1494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  pointed-to memory is not touched in any way.  Managing the pointer is
1495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the user's responsibility.
1496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       clear() _GLIBCXX_NOEXCEPT
1499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_erase_at_end(this->_M_impl._M_start); }
1500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
1502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Memory expansion handler.  Uses the member allocation function to
1504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  obtain @a n bytes of memory, and then copies [first,last) into it.
1505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer
1508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_allocate_and_copy(size_type __n,
1509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			     _ForwardIterator __first, _ForwardIterator __last)
1510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  pointer __result = this->_M_allocate(__n);
1512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __try
1513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
1514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      std::__uninitialized_copy_a(__first, __last, __result,
1515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  _M_get_Tp_allocator());
1516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      return __result;
1517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
1518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __catch(...)
1519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
1520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _M_deallocate(__result, __n);
1521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __throw_exception_again;
1522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
1523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Internal constructor functions follow.
1527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus < 201103L
1531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Integer>
1534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_initialize_dispatch(_Integer __n, _Integer __value, __true_type)
1536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_start = _M_allocate(_S_check_init_len(
1538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		static_cast<size_type>(__n), _M_get_Tp_allocator()));
1539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_end_of_storage =
1540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_impl._M_start + static_cast<size_type>(__n);
1541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_fill_initialize(static_cast<size_type>(__n), __value);
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 194


1542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_initialize_dispatch(_InputIterator __first, _InputIterator __last,
1548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			       __false_type)
1549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_range_initialize(__first, __last,
1551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			      std::__iterator_category(__first));
1552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second initialize_dispatch above
1556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_initialize(_InputIterator __first, _InputIterator __last,
1559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    std::input_iterator_tag)
1560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __try {
1562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    for (; __first != __last; ++__first)
1563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      emplace_back(*__first);
1565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      push_back(*__first);
1567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  } __catch(...) {
1569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    clear();
1570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    __throw_exception_again;
1571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
1572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second initialize_dispatch above
1575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
1578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    std::forward_iterator_tag)
1579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  const size_type __n = std::distance(__first, __last);
1581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_start
1582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
1583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
1584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_finish =
1585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
1586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					this->_M_impl._M_start,
1587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					_M_get_Tp_allocator());
1588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the first initialize_dispatch above and by the
1591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // vector(n,value,a) constructor.
1592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_fill_initialize(size_type __n, const value_type& __value)
1594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
1596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_fill_n_a(this->_M_impl._M_start, __n, __value,
1597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					_M_get_Tp_allocator());
1598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 195


1599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the vector(n) constructor.
1602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_default_initialize(size_type __n)
1604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
1606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
1607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					   _M_get_Tp_allocator());
1608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Internal assign functions follow.  The *_aux functions do the actual
1612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // assignment work for the range versions.
1613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range assign to implement [23.1.1]/9
1615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Integer>
1619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_dispatch(_Integer __n, _Integer __val, __true_type)
1621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_fill_assign(__n, __val); }
1622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range assign to implement [23.1.1]/9
1624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_dispatch(_InputIterator __first, _InputIterator __last,
1627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			   __false_type)
1628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_assign_aux(__first, __last, std::__iterator_category(__first)); }
1629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second assign_dispatch above
1631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_aux(_InputIterator __first, _InputIterator __last,
1634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      std::input_iterator_tag);
1635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second assign_dispatch above
1637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,
1640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      std::forward_iterator_tag);
1641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by assign(n,t), and the range assign when it turns out
1643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // to be the same thing.
1644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_fill_assign(size_type __n, const value_type& __val);
1646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Internal insert functions follow.
1648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range insert to implement [23.1.1]/9
1650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Integer>
1654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_insert_dispatch(iterator __pos, _Integer __n, _Integer __val,
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 196


1656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			   __true_type)
1657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_fill_insert(__pos, __n, __val); }
1658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range insert to implement [23.1.1]/9
1660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_insert_dispatch(iterator __pos, _InputIterator __first,
1663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			   _InputIterator __last, __false_type)
1664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_range_insert(__pos, __first, __last,
1666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			  std::__iterator_category(__first));
1667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second insert_dispatch above
1670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_insert(iterator __pos, _InputIterator __first,
1673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			_InputIterator __last, std::input_iterator_tag);
1674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second insert_dispatch above
1676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_insert(iterator __pos, _ForwardIterator __first,
1679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			_ForwardIterator __last, std::forward_iterator_tag);
1680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by insert(p,n,x), and the range insert when it turns out to be
1682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // the same thing.
1683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_fill_insert(iterator __pos, size_type __n, const value_type& __x);
1685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by resize(n).
1688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_default_append(size_type __n);
1690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       bool
1692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_shrink_to_fit();
1693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus < 201103L
1696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by insert(p,x)
1697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_insert_aux(iterator __position, const value_type& __x);
1699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_realloc_insert(iterator __position, const value_type& __x);
1702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // A value_type object constructed with _Alloc_traits::construct()
1704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // and destroyed with _Alloc_traits::destroy().
1705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       struct _Temporary_value
1706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	template<typename... _Args>
1708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  explicit
1709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Temporary_value(vector* __vec, _Args&&... __args) : _M_this(__vec)
1710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
1711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _Alloc_traits::construct(_M_this->_M_impl, _M_ptr(),
1712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				     std::forward<_Args>(__args)...);
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 197


1713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
1714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	~_Temporary_value()
1716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _Alloc_traits::destroy(_M_this->_M_impl, _M_ptr()); }
1717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	value_type&
1719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_val() { return *_M_ptr(); }
1720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       private:
1722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Tp*
1723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_ptr() { return reinterpret_cast<_Tp*>(&__buf); }
1724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector* _M_this;
1726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	typename aligned_storage<sizeof(_Tp), alignof(_Tp)>::type __buf;
1727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       };
1728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by insert(p,x) and other functions when insertion needs to
1730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // reallocate or move existing elements. _Arg is either _Tp& or _Tp.
1731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Arg>
1732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_insert_aux(iterator __position, _Arg&& __arg);
1734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_realloc_insert(iterator __position, _Args&&... __args);
1738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Either move-construct at the end, or forward to _M_insert_aux.
1740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_insert_rval(const_iterator __position, value_type&& __v);
1742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Try to emplace at the end, otherwise forward to _M_insert_aux.
1744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	iterator
1746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_emplace_aux(const_iterator __position, _Args&&... __args);
1747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Emplacing an rvalue of the correct type can use _M_insert_rval.
1749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_emplace_aux(const_iterator __position, value_type&& __v)
1751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_insert_rval(__position, std::move(__v)); }
1752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by _M_fill_insert, _M_insert_aux etc.
1755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
1756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_check_len(size_type __n, const char* __s) const
 4598              		.loc 8 1756 7 is_stmt 1 view .LVU837
 4599              	.LBB3471:
 4600              	.LBB3472:
 4601              	.LBI3472:
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 4602              		.loc 8 918 7 view .LVU838
 4603              	.LBE3472:
 4604              	.LBE3471:
 4605              	.LBE3470:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_realloc_insert(iterator __position, _Args&&... __args)
 4606              		.loc 4 426 7 is_stmt 0 view .LVU839
 4607 000a 9146     		mov	r9, r2
 4608              	.LBB3477:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 198


 4609              	.LBB3475:
1757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (max_size() - size() < __n)
 4610              		.loc 8 1758 2 view .LVU840
 4611 000c 6FF07841 		mvn	r1, #-134217728
 4612              	.LBB3474:
 4613              	.LBB3473:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 4614              		.loc 8 919 50 view .LVU841
 4615 0010 AAEB0802 		sub	r2, r10, r8
 4616              	.LVL159:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 4617              		.loc 8 919 50 view .LVU842
 4618              	.LBE3473:
 4619              	.LBE3474:
 4620              		.loc 8 1758 2 view .LVU843
 4621 0014 B1EB221F 		cmp	r1, r2, asr #4
 4622 0018 5FD0     		beq	.L147
 4623 001a 1311     		asrs	r3, r2, #4
 4624 001c 0646     		mov	r6, r0
 4625              	.LBE3475:
 4626              	.LBE3477:
 4627              	.LBB3478:
 4628              	.LBB3479:
 4629              		.file 11 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_iterat
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // Iterators -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * provided that the above copyright notice appear in all copies and
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 199


  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Copyright (c) 1996-1998
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * representations about the suitability of this software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** /** @file bits/stl_iterator.h
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  Do not attempt to use it directly. @headername{iterator}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  This file implements reverse_iterator, back_insert_iterator,
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  front_insert_iterator, insert_iterator, __normal_iterator, and their
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  supporting functions and overloaded operators.
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  */
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #ifndef _STL_ITERATOR_H
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #define _STL_ITERATOR_H 1
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #include <bits/cpp_type_traits.h>
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #include <ext/type_traits.h>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #include <bits/move.h>
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #include <bits/ptr_traits.h>
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus >= 201103L
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # include <type_traits>
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # define __cpp_lib_array_constexpr 201811L
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # define __cpp_lib_constexpr_iterator 201811L
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #elif __cplusplus == 201703L
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # define __cpp_lib_array_constexpr 201803L
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # include <compare>
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # include <new>
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # include <bits/iterator_concepts.h>
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** {
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 200


  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    * @addtogroup iterators
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    * @{
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    */
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   namespace __detail
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   {
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     // Weaken iterator_category _Cat to _Limit if it is derived from that,
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     // otherwise use _Otherwise.
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     template<typename _Cat, typename _Limit, typename _Otherwise = _Cat>
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using __clamp_iter_cat
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	= conditional_t<derived_from<_Cat, _Limit>, _Limit, _Otherwise>;
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   }
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // 24.4.1 Reverse iterators
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Bidirectional and random access iterators have corresponding reverse
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  %iterator adaptors that iterate through the data structure in the
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  opposite direction.  They have the same signatures as the corresponding
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  iterators.  The fundamental relation between a reverse %iterator and its
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  corresponding %iterator @c i is established by the identity:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @code
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *      &*(reverse_iterator(i)) == &*(i - 1)
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @endcode
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  <em>This mapping is dictated by the fact that while there is always a
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  pointer past the end of an array, there might not be a valid pointer
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  before the beginning of an array.</em> [24.4.1]/1,2
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Reverse iterators can be tricky and surprising at first.  Their
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  semantics make sense, however, and the trickiness is a side effect of
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  the requirement that the iterators must be safe.
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class reverse_iterator
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : public iterator<typename iterator_traits<_Iterator>::iterator_category,
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		      typename iterator_traits<_Iterator>::value_type,
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		      typename iterator_traits<_Iterator>::difference_type,
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		      typename iterator_traits<_Iterator>::pointer,
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****                       typename iterator_traits<_Iterator>::reference>
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Iterator current;
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef iterator_traits<_Iterator>		__traits_type;
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Iterator					iterator_type;
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::difference_type	difference_type;
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::pointer		pointer;
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::reference		reference;
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using iterator_concept
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	= conditional_t<random_access_iterator<_Iterator>,
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 			random_access_iterator_tag,
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 201


 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 			bidirectional_iterator_tag>;
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using iterator_category
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	= __detail::__clamp_iter_cat<typename __traits_type::iterator_category,
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 				     random_access_iterator_tag>;
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The default constructor value-initializes member @p current.
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  If it is a pointer, that means it is zero-initialized.
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // 235 No specification of default ctor for reverse_iterator
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // 1012. reverse_iterator default ctor should value initialize
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reverse_iterator() : current() { }
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This %iterator will move in the opposite direction that @p x does.
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       explicit _GLIBCXX17_CONSTEXPR
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reverse_iterator(iterator_type __x) : current(__x) { }
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The copy constructor is normal.
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reverse_iterator(const reverse_iterator& __x)
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : current(__x.current) { }
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus >= 201103L
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reverse_iterator& operator=(const reverse_iterator&) = default;
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  A %reverse_iterator across other types can be copied if the
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  underlying %iterator can be converted to the type of @c current.
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _Iter>
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_GLIBCXX17_CONSTEXPR
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         reverse_iterator(const reverse_iterator<_Iter>& __x)
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	: current(__x.base()) { }
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  @c current, the %iterator used for underlying work.
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR iterator_type
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       base() const
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return current; }
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A reference to the value at @c --current
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This requires that @c --current is dereferenceable.
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @warning This implementation requires that for an iterator of the
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *           underlying iterator type, @c x, a reference obtained by
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *           @c *x remains valid after @c x has been modified or
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 202


 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *           destroyed. This is a bug: http://gcc.gnu.org/PR51823
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reference
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*() const
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_Iterator __tmp = current;
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *--__tmp;
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A pointer to the value at @c --current
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This requires that @c --current is dereferenceable.
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR pointer
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator->() const
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_concepts >= 201907L
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       requires is_pointer_v<_Iterator>
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	|| requires(const _Iterator __i) { __i.operator->(); }
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	// 1052. operator-> should also support smart pointers
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_Iterator __tmp = current;
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	--__tmp;
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return _S_to_pointer(__tmp);
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  @c *this
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Decrements the underlying iterator.
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++()
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	--current;
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  The original value of @c *this
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Decrements the underlying iterator.
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int)
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	reverse_iterator __tmp = *this;
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	--current;
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return __tmp;
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  @c *this
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Increments the underlying iterator.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 203


 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator--()
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++current;
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A reverse_iterator with the previous value of @c *this
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Increments the underlying iterator.
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator--(int)
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	reverse_iterator __tmp = *this;
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++current;
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return __tmp;
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A reverse_iterator that refers to @c current - @a __n
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator+(difference_type __n) const
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return reverse_iterator(current - __n); }
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  *this
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Moves the underlying iterator backwards @a __n steps.
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator+=(difference_type __n)
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	current -= __n;
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A reverse_iterator that refers to @c current - @a __n
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator-(difference_type __n) const
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return reverse_iterator(current + __n); }
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  *this
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Moves the underlying iterator forwards @a __n steps.
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 204


 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator-=(difference_type __n)
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	current += __n;
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  The value at @c current - @a __n - 1
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reference
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator[](difference_type __n) const
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *(*this + __n); }
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       friend constexpr iter_rvalue_reference_t<_Iterator>
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       iter_move(const reverse_iterator& __i)
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       noexcept(is_nothrow_copy_constructible_v<_Iterator>
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       && noexcept(ranges::iter_move(--std::declval<_Iterator&>())))
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	auto __tmp = __i.base();
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return ranges::iter_move(--__tmp);
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<indirectly_swappable<_Iterator> _Iter2>
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	friend constexpr void
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	iter_swap(const reverse_iterator& __x,
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		  const reverse_iterator<_Iter2>& __y)
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	noexcept(is_nothrow_copy_constructible_v<_Iterator>
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		 && is_nothrow_copy_constructible_v<_Iter2>
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		 && noexcept(ranges::iter_swap(--std::declval<_Iterator&>(),
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 					       --std::declval<_Iter2&>())))
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	{
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  auto __xtmp = __x.base();
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  auto __ytmp = __y.base();
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  ranges::iter_swap(--__xtmp, --__ytmp);
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	}
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     private:
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _Tp>
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	static _GLIBCXX17_CONSTEXPR _Tp*
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_S_to_pointer(_Tp* __p)
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         { return __p; }
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _Tp>
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	static _GLIBCXX17_CONSTEXPR pointer
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_S_to_pointer(_Tp __t)
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         { return __t.operator->(); }
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   //@{
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param  __x  A %reverse_iterator.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 205


 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param  __y  A %reverse_iterator.
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @return  A simple bool.
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Reverse iterators forward comparisons to their underlying base()
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  iterators.
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus <= 201703L || ! defined __cpp_lib_concepts
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const reverse_iterator<_Iterator>& __x,
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() == __y.base(); }
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const reverse_iterator<_Iterator>& __x,
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() < __x.base(); }
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const reverse_iterator<_Iterator>& __x,
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x == __y); }
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const reverse_iterator<_Iterator>& __x,
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y < __x; }
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const reverse_iterator<_Iterator>& __x,
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__y < __x); }
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const reverse_iterator<_Iterator>& __x,
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x < __y); }
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // DR 280. Comparison of reverse_iterator to const reverse_iterator.
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const reverse_iterator<_IteratorL>& __x,
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() == __y.base(); }
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const reverse_iterator<_IteratorL>& __x,
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() < __x.base(); }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 206


 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const reverse_iterator<_IteratorL>& __x,
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x == __y); }
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const reverse_iterator<_IteratorL>& __x,
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y < __x; }
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const reverse_iterator<_IteratorL>& __x,
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__y < __x); }
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const reverse_iterator<_IteratorL>& __x,
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x < __y); }
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else // C++20
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const reverse_iterator<_IteratorL>& __x,
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() == __y.base() } -> convertible_to<bool>; }
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() == __y.base(); }
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const reverse_iterator<_IteratorL>& __x,
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() != __y.base() } -> convertible_to<bool>; }
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() != __y.base(); }
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const reverse_iterator<_IteratorL>& __x,
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() > __y.base() } -> convertible_to<bool>; }
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() > __y.base(); }
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const reverse_iterator<_IteratorL>& __x,
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() < __y.base() } -> convertible_to<bool>; }
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() < __y.base(); }
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const reverse_iterator<_IteratorL>& __x,
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 207


 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() >= __y.base() } -> convertible_to<bool>; }
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() >= __y.base(); }
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const reverse_iterator<_IteratorL>& __x,
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() <= __y.base() } -> convertible_to<bool>; }
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() <= __y.base(); }
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL,
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	   three_way_comparable_with<_IteratorL> _IteratorR>
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr compare_three_way_result_t<_IteratorL, _IteratorR>
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=>(const reverse_iterator<_IteratorL>& __x,
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		const reverse_iterator<_IteratorR>& __y)
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() <=> __x.base(); }
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif // C++20
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   //@}
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus < 201103L
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline typename reverse_iterator<_Iterator>::difference_type
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const reverse_iterator<_Iterator>& __x,
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() - __x.base(); }
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline typename reverse_iterator<_IteratorL>::difference_type
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const reverse_iterator<_IteratorL>& __x,
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() - __x.base(); }
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // DR 685. reverse_iterator/move_iterator difference has invalid signatures
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR auto
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const reverse_iterator<_IteratorL>& __x,
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     -> decltype(__y.base() - __x.base())
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() - __x.base(); }
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR reverse_iterator<_Iterator>
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator+(typename reverse_iterator<_Iterator>::difference_type __n,
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __x)
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return reverse_iterator<_Iterator>(__x.base() - __n); }
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus >= 201103L
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // Same as C++14 make_reverse_iterator but used in C++11 mode too.
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR reverse_iterator<_Iterator>
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     __make_reverse_iterator(_Iterator __i)
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return reverse_iterator<_Iterator>(__i); }
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # if __cplusplus >= 201402L
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #  define __cpp_lib_make_reverse_iterator 201402
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 208


 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // DR 2285. make_reverse_iterator
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /// Generator function for reverse_iterator.
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR reverse_iterator<_Iterator>
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     make_reverse_iterator(_Iterator __i)
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return reverse_iterator<_Iterator>(__i); }
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #  if __cplusplus > 201703L && defined __cpp_lib_concepts
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator1, typename _Iterator2>
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires (!sized_sentinel_for<_Iterator1, _Iterator2>)
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline constexpr bool
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     disable_sized_sentinel_for<reverse_iterator<_Iterator1>,
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 			       reverse_iterator<_Iterator2>> = true;
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #  endif // C++20
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # endif // C++14
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     auto
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     __niter_base(reverse_iterator<_Iterator> __it)
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     -> decltype(__make_reverse_iterator(__niter_base(__it.base())))
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __make_reverse_iterator(__niter_base(__it.base())); }
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     struct __is_move_iterator<reverse_iterator<_Iterator> >
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : __is_move_iterator<_Iterator>
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { };
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     auto
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     __miter_base(reverse_iterator<_Iterator> __it)
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     -> decltype(__make_reverse_iterator(__miter_base(__it.base())))
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __make_reverse_iterator(__miter_base(__it.base())); }
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif // C++11
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // 24.4.2.2.1 back_insert_iterator
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Assigning a T to the iterator appends it to the container using
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  push_back.
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Tip:  Using the back_inserter function to create these iterators can
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  save typing.
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class back_insert_iterator
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Container* container;
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 209


 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Container          container_type;
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using difference_type = ptrdiff_t;
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       constexpr back_insert_iterator() noexcept : container(nullptr) { }
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// The only way to create this %iterator is with a container.
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       explicit _GLIBCXX20_CONSTEXPR
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator(_Container& __x)
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : container(std::__addressof(__x)) { }
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @param  __value  An instance of whatever type
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 reference-to-const T for container<T>.
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This kind of %iterator doesn't really have a @a position in the
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  container (you can think of the position as being permanently at
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  the end, if you like).  Assigning a value to the %iterator will
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  always append the value to the end of the container.
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus < 201103L
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_back(__value);
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_back(__value);
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_back(std::move(__value));
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*()
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 210


 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++()
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int)
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param  __x  A container of arbitrary type.
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @return  An instance of back_insert_iterator working on @p __x.
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  This wrapper function helps in creating back_insert_iterator instances.
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  types for you.
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline back_insert_iterator<_Container>
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     back_inserter(_Container& __x)
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return back_insert_iterator<_Container>(__x); }
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Assigning a T to the iterator prepends it to the container using
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  push_front.
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Tip:  Using the front_inserter function to create these iterators can
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  save typing.
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class front_insert_iterator
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Container* container;
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Container          container_type;
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using difference_type = ptrdiff_t;
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       constexpr front_insert_iterator() noexcept : container(nullptr) { }
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// The only way to create this %iterator is with a container.
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       explicit _GLIBCXX20_CONSTEXPR
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator(_Container& __x)
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 211


 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : container(std::__addressof(__x)) { }
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @param  __value  An instance of whatever type
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 reference-to-const T for container<T>.
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This kind of %iterator doesn't really have a @a position in the
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  container (you can think of the position as being permanently at
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  the front, if you like).  Assigning a value to the %iterator will
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  always prepend the value to the front of the container.
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus < 201103L
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_front(__value);
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_front(__value);
 743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_front(std::move(__value));
 751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.
 756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*()
 759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++()
 765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator
 770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int)
 771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
 773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 212


 774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param  __x  A container of arbitrary type.
 776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @return  An instance of front_insert_iterator working on @p x.
 777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  This wrapper function helps in creating front_insert_iterator instances.
 779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  types for you.
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
 787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline front_insert_iterator<_Container>
 788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     front_inserter(_Container& __x)
 789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return front_insert_iterator<_Container>(__x); }
 790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Assigning a T to the iterator inserts it in the container at the
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  %iterator's position, rather than overwriting the value at that
 797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  position.
 798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  (Sequences will actually insert a @e copy of the value before the
 800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  %iterator's position.)
 801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Tip:  Using the inserter function to create these iterators can
 803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  save typing.
 804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class insert_iterator
 807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && defined __cpp_lib_concepts
 810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using _Iter = std::__detail::__range_iter_t<_Container>;
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Container* container = nullptr;
 814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Iter iter = _Iter();
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename _Container::iterator		_Iter;
 817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Container* container;
 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Iter iter;
 821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Container          container_type;
 826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && defined __cpp_lib_concepts
 828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using difference_type = ptrdiff_t;
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator() = default;
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 213


 831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The only way to create this %iterator is with a container and an
 835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  initial position (a normal %iterator into the container).
 836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator(_Container& __x, _Iter __i)
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : container(std::__addressof(__x)), iter(__i) {}
 840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @param  __value  An instance of whatever type
 843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 reference-to-const T for container<T>.
 845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This kind of %iterator maintains its own position in the
 848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  container.  Assigning a value to the %iterator will insert the
 849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  value into the container at the place before the %iterator.
 850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The position is maintained such that subsequent assignments will
 852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  insert values immediately after one another.  For example,
 853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @code
 854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     // vector v contains A and Z
 855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     insert_iterator i (v, ++v.begin());
 857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     i = 1;
 858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     i = 2;
 859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     i = 3;
 860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     // vector v contains A, 1, 2, 3, and Z
 862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @endcode
 863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus < 201103L
 865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	iter = container->insert(iter, __value);
 869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++iter;
 870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	iter = container->insert(iter, __value);
 878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++iter;
 879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	iter = container->insert(iter, std::move(__value));
 887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++iter;
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 214


 888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.
 893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*()
 896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++()
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int)
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
 910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param __x  A container of arbitrary type.
 913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param __i  An iterator into the container.
 914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @return  An instance of insert_iterator working on @p __x.
 915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  This wrapper function helps in creating insert_iterator instances.
 917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  types for you.
 922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && defined __cpp_lib_concepts
 924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr insert_iterator<_Container>
 926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inserter(_Container& __x, std::__detail::__range_iter_t<_Container> __i)
 927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return insert_iterator<_Container>(__x, __i); }
 928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container, typename _Iterator>
 930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline insert_iterator<_Container>
 931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inserter(_Container& __x, _Iterator __i)
 932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       return insert_iterator<_Container>(__x,
 934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 					 typename _Container::iterator(__i));
 935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     }
 936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // @} group iterators
 939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** _GLIBCXX_END_NAMESPACE_VERSION
 941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** } // namespace
 942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
 944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** {
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 215


 945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // This iterator adapter is @a normal in the sense that it does not
 948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // change the semantics of any of the operators of its iterator
 949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // parameter.  Its primary purpose is to convert an iterator that is
 950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // not a class, e.g. a pointer, into an iterator that is a class.
 951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // The _Container parameter exists solely so that different containers
 952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // using this template can instantiate different types, even if the
 953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _Iterator parameter is the same.
 954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
 955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class __normal_iterator
 956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Iterator _M_current;
 959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef std::iterator_traits<_Iterator>		__traits_type;
 961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Iterator					iterator_type;
 964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::iterator_category iterator_category;
 965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::value_type  	value_type;
 966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::difference_type 	difference_type;
 967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::reference 	reference;
 968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::pointer   	pointer;
 969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
 971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using iterator_concept = std::__detail::__iter_concept<_Iterator>;
 972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX_CONSTEXPR __normal_iterator() _GLIBCXX_NOEXCEPT
 975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(_Iterator()) { }
 976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       explicit _GLIBCXX20_CONSTEXPR
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // Allow iterator to const_iterator conversion
 982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _Iter>
 983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         _GLIBCXX20_CONSTEXPR
 984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         __normal_iterator(const __normal_iterator<_Iter,
 985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 			  typename __enable_if<
 986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       	       (std::__are_same<_Iter, typename _Container::pointer>::__value),
 987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		      _Container>::__type>& __i) _GLIBCXX_NOEXCEPT
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         : _M_current(__i.base()) { }
 989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // Forward iterator requirements
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reference
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*() const _GLIBCXX_NOEXCEPT
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *_M_current; }
 995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       pointer
 998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator->() const _GLIBCXX_NOEXCEPT
 999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return _M_current; }
1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 216


1002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator&
1003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++() _GLIBCXX_NOEXCEPT
1004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
1005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++_M_current;
1006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
1007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
1008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator
1011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int) _GLIBCXX_NOEXCEPT
1012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return __normal_iterator(_M_current++); }
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // Bidirectional iterator requirements
1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator&
1017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator--() _GLIBCXX_NOEXCEPT
1018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
1019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	--_M_current;
1020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
1021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
1022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator
1025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator--(int) _GLIBCXX_NOEXCEPT
1026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return __normal_iterator(_M_current--); }
1027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // Random access iterator requirements
1029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reference
1031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator[](difference_type __n) const _GLIBCXX_NOEXCEPT
1032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return _M_current[__n]; }
1033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator&
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator+=(difference_type __n) _GLIBCXX_NOEXCEPT
1037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { _M_current += __n; return *this; }
1038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator
1041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT
1042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return __normal_iterator(_M_current + __n); }
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator&
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator-=(difference_type __n) _GLIBCXX_NOEXCEPT
1047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { _M_current -= __n; return *this; }
1048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator
1051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
1052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return __normal_iterator(_M_current - __n); }
1053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       const _Iterator&
1056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       base() const _GLIBCXX_NOEXCEPT
1057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return _M_current; }
1058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 217


1059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // Note: In what follows, the left- and right-hand-side iterators are
1061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // allowed to vary in types (conceptually in cv-qualification) so that
1062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // comparison between cv-qualified and non-cv-qualified iterators be
1063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // valid.  However, the greedy and unfriendly operators in std::rel_ops
1064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // will make overload resolution ambiguous (when in scope) if we don't
1065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // provide overloads whose operands are of the same type.  Can someone
1066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // remind me what generic programming is about? -- Gaby
1067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cpp_lib_three_way_comparison
1069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires (_IteratorL __lhs, _IteratorR __rhs)
1071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { { __lhs == __rhs } -> std::convertible_to<bool>; }
1072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
1073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
1074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
1075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     noexcept(noexcept(__lhs.base() == __rhs.base()))
1076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() == __rhs.base(); }
1077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr std::__detail::__synth3way_t<_IteratorR, _IteratorL>
1080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=>(const __normal_iterator<_IteratorL, _Container>& __lhs,
1081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		const __normal_iterator<_IteratorR, _Container>& __rhs)
1082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     noexcept(noexcept(std::__detail::__synth3way(__lhs.base(), __rhs.base())))
1083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return std::__detail::__synth3way(__lhs.base(), __rhs.base()); }
1084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
1085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    // Forward iterator requirements
1086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
1090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
1091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() == __rhs.base(); }
1093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
1098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
1099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() == __rhs.base(); }
1101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const __normal_iterator<_IteratorL, _Container>& __lhs,
1106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
1107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() != __rhs.base(); }
1109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
1114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
1115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 218


1116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() != __rhs.base(); }
1117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // Random access iterator requirements
1119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const __normal_iterator<_IteratorL, _Container>& __lhs,
1122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs)
1123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() < __rhs.base(); }
1125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const __normal_iterator<_Iterator, _Container>& __lhs,
1130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
1131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() < __rhs.base(); }
1133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const __normal_iterator<_IteratorL, _Container>& __lhs,
1137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs)
1138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() > __rhs.base(); }
1140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const __normal_iterator<_Iterator, _Container>& __lhs,
1145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
1146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() > __rhs.base(); }
1148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const __normal_iterator<_IteratorL, _Container>& __lhs,
1152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
1153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() <= __rhs.base(); }
1155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const __normal_iterator<_Iterator, _Container>& __lhs,
1160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
1161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() <= __rhs.base(); }
1163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const __normal_iterator<_IteratorL, _Container>& __lhs,
1167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
1168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() >= __rhs.base(); }
1170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 219


1173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const __normal_iterator<_Iterator, _Container>& __lhs,
1175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
1176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() >= __rhs.base(); }
1178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif // three-way comparison
1179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
1181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // According to the resolution of DR179 not only the various comparison
1182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // operators but also operator- must accept mixed iterator/const_iterator
1183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // parameters.
1184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus >= 201103L
1186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     // DR 685.
1187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline auto
1189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const __normal_iterator<_IteratorL, _Container>& __lhs,
1190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs) noexcept
1191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     -> decltype(__lhs.base() - __rhs.base())
1192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
1193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline typename __normal_iterator<_IteratorL, _Container>::difference_type
1194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const __normal_iterator<_IteratorL, _Container>& __lhs,
1195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs)
1196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
1197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() - __rhs.base(); }
1198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline typename __normal_iterator<_Iterator, _Container>::difference_type
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
1204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() - __rhs.base(); }
 4630              		.loc 11 1205 27 view .LVU844
 4631 001e A7EB0804 		sub	r4, r7, r8
 4632 0022 012B     		cmp	r3, #1
 4633 0024 1D46     		mov	r5, r3
 4634 0026 38BF     		it	cc
 4635 0028 0125     		movcc	r5, #1
 4636 002a 5D19     		adds	r5, r3, r5
 4637 002c 53D2     		bcs	.L129
 4638              	.LVL160:
 4639              		.loc 11 1205 27 view .LVU845
 4640              	.LBE3479:
 4641              	.LBE3478:
 4642              	.LBB3481:
 4643              	.LBI3481:
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 4644              		.loc 8 811 7 is_stmt 1 view .LVU846
 4645              	.LBB3482:
 4646              	.LBI3482:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 4647              		.loc 11 978 7 view .LVU847
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 4648              		.loc 11 978 7 is_stmt 0 view .LVU848
 4649              	.LBE3482:
 4650              	.LBE3481:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 220


 4651              	.LBB3484:
 4652              	.LBI3478:
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 4653              		.loc 11 1202 5 is_stmt 1 view .LVU849
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 4654              		.loc 11 1202 5 is_stmt 0 view .LVU850
 4655              	.LBE3484:
 4656              	.LBB3485:
 4657              	.LBI3485:
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 4658              		.loc 8 343 7 is_stmt 1 view .LVU851
 4659              	.LBB3486:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 4660              		.loc 8 346 18 is_stmt 0 view .LVU852
 4661 002e 002D     		cmp	r5, #0
 4662 0030 47D1     		bne	.L148
 4663 0032 AB46     		mov	fp, r5
 4664              	.LVL161:
 4665              	.L138:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 4666              		.loc 8 346 18 view .LVU853
 4667              	.LBE3486:
 4668              	.LBE3485:
 4669              	.LBB3494:
 4670              	.LBI3494:
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Construct an object of type `_Up`
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *	       an object of type `_Up`.
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __args Constructor arguments.
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls `__a.construct(__p, std::forward<_Args>(__args)...)`
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  in C++11, C++14 and C++17. Changed in C++20 to call
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  `std::construct_at(__p, std::forward<_Args>(__args)...)` instead.
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up, typename... _Args>
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
 4671              		.loc 6 507 2 is_stmt 1 view .LVU854
 4672              	.LBB3495:
 4673              	.LBI3495:
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			  , __t * sizeof(_Tp)
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			 );
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus <= 201703L
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       size_type
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       max_size() const _GLIBCXX_USE_NOEXCEPT
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       { return _M_max_size(); }
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Up, typename... _Args>
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 221


 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	void
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	construct(_Up* __p, _Args&&... __args)
 4674              		.loc 5 148 2 view .LVU855
 4675              		.loc 5 148 2 is_stmt 0 view .LVU856
 4676              	.LBE3495:
 4677              	.LBE3494:
 4678              		.file 12 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\new"
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // The -*- C++ -*- dynamic memory management header.
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // Copyright (C) 1994-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // This file is part of GCC.
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** //
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // GCC is free software; you can redistribute it and/or modify
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // it under the terms of the GNU General Public License as published by
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // the Free Software Foundation; either version 3, or (at your option)
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // any later version.
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // 
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // GCC is distributed in the hope that it will be useful,
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // GNU General Public License for more details.
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // 
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // Under Section 7 of GPL version 3, you are granted additional
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // permissions described in the GCC Runtime Library Exception, version
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // 3.1, as published by the Free Software Foundation.
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // You should have received a copy of the GNU General Public License and
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // a copy of the GCC Runtime Library Exception along with this program;
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // <http://www.gnu.org/licenses/>.
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** /** @file new
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  This is a Standard C++ Library header.
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  The header @c new defines several functions to manage dynamic memory and
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  handling memory allocation errors; see
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  https://gcc.gnu.org/onlinedocs/libstdc++/manual/dynamic_memory.html
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  for more.
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  */
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #ifndef _NEW
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #define _NEW
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #pragma GCC system_header
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #include <bits/c++config.h>
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #include <exception>
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #pragma GCC visibility push(default)
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** extern "C++" {
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** namespace std 
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** {
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   /**
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****    *  @brief  Exception possibly thrown by @c new.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 222


  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****    *  @ingroup exceptions
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****    *
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****    *  @c bad_alloc (or classes derived from it) is used to report allocation
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****    *  errors from the throwing forms of @c new.  */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   class bad_alloc : public exception 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   {
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   public:
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     bad_alloc() throw() { }
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     bad_alloc(const bad_alloc&) = default;
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     bad_alloc& operator=(const bad_alloc&) = default;
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     // This declaration is not useless:
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     // http://gcc.gnu.org/onlinedocs/gcc-3.0.2/gcc_6.html#SEC118
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     virtual ~bad_alloc() throw();
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     // See comment in eh_exception.cc.
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     virtual const char* what() const throw();
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   };
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   class bad_array_new_length : public bad_alloc
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   {
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   public:
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     bad_array_new_length() throw() { }
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     // This declaration is not useless:
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     // http://gcc.gnu.org/onlinedocs/gcc-3.0.2/gcc_6.html#SEC118
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     virtual ~bad_array_new_length() throw();
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     // See comment in eh_exception.cc.
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     virtual const char* what() const throw();
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   };
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_aligned_new
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   enum class align_val_t: size_t {};
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   struct nothrow_t
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   {
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     explicit nothrow_t() = default;
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   };
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   extern const nothrow_t nothrow;
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   /** If you write your own error handler to be called by @c new, it must
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****    *  be of this type.  */
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   typedef void (*new_handler)();
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   /// Takes a replacement handler as the argument, returns the
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   /// previous handler.
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   new_handler set_new_handler(new_handler) throw();
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 223


 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   /// Return the current new handler.
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   new_handler get_new_handler() noexcept;
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** } // namespace std
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** //@{
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** /** These are replaceable signatures:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  - normal single new and delete (no arguments, throw @c bad_alloc on error)
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  - normal array new and delete (same)
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  - @c nothrow single new and delete (take a @c nothrow argument, return
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *    @c NULL on error)
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  - @c nothrow array new and delete (same)
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  Placement new and delete signatures (take a memory address argument,
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  does nothing) may not be replaced by a user's program.
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** */
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t) _GLIBCXX_THROW (std::bad_alloc)
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t) _GLIBCXX_THROW (std::bad_alloc)
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*) _GLIBCXX_USE_NOEXCEPT
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*) _GLIBCXX_USE_NOEXCEPT
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_sized_deallocation
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::size_t) _GLIBCXX_USE_NOEXCEPT
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::size_t) _GLIBCXX_USE_NOEXCEPT
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__, __malloc__));
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__, __malloc__));
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_aligned_new
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t, std::align_val_t)
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t, std::align_val_t, const std::nothrow_t&)
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__, __malloc__));
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::align_val_t)
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::align_val_t, const std::nothrow_t&)
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t, std::align_val_t)
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t, std::align_val_t, const std::nothrow_t&)
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__, __malloc__));
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::align_val_t)
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::align_val_t, const std::nothrow_t&)
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 224


 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_sized_deallocation
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::size_t, std::align_val_t)
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::size_t, std::align_val_t)
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif // __cpp_sized_deallocation
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif // __cpp_aligned_new
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // Default placement versions of operator new.
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** { return __p; }
 4679              		.loc 12 175 3 is_stmt 1 view .LVU857
 4680              	.LBB3500:
 4681              	.LBB3498:
 4682              	.LBB3496:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 4683              		.loc 5 150 4 is_stmt 0 view .LVU858
 4684 0034 D9F80020 		ldr	r2, [r9]	@ unaligned
 4685 0038 0BEB0403 		add	r3, fp, r4
 4686              	.LVL162:
 4687              		.loc 5 150 4 view .LVU859
 4688              	.LBE3496:
 4689              	.LBE3498:
 4690              	.LBE3500:
 4691              	.LBB3501:
 4692              	.LBB3502:
 4693              	.LBB3503:
 4694              	.LBB3504:
 4695              	.LBB3505:
 4696              	.LBB3506:
 4697              		.file 13 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_uninit
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Raw memory manipulators -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** /*
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 225


  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Copyright (c) 1996,1997
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * representations about the suitability of this software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** /** @file bits/stl_uninitialized.h
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #ifndef _STL_UNINITIALIZED_H
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #define _STL_UNINITIALIZED_H 1
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus > 201402L
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #include <bits/stl_pair.h>
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus >= 201103L
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #include <type_traits>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #include <ext/alloc_traits.h>
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** namespace std _GLIBCXX_VISIBILITY(default)
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** {
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /** @addtogroup memory
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @{
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    */
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueTypes>
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_copy
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 226


  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __result;
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __first != __last; ++__first, (void)++__cur)
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      return __cur;
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__result, __cur);
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_copy<true>
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         { return std::copy(__first, __last, __result); }
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Copies the range [first,last) into result.
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __last   An input iterator.
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __result An output iterator.
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   __result + (__first - __last)
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  Like copy(), but does not require an initialized output range.
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator>
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_copy(_InputIterator __first, _InputIterator __last,
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       _ForwardIterator __result)
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::value_type
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType1;
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType2;
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus < 201103L
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = true;
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #else
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted copy constructor, but the std::copy
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // optimization that uses memmove would happily "copy" them anyway.
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       static_assert(is_constructible<_ValueType2, decltype(*__first)>::value,
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  "result type must be constructible from value type of input range");
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 227


 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::reference _RefType1;
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::reference _RefType2;
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted assignment, so using std::copy
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // would be ill-formed. Require assignability before using std::copy:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return std::__uninitialized_copy<__is_trivial(_ValueType1)
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       && __is_trivial(_ValueType2)
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       && __assignable>::
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_copy(__first, __last, __result);
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static void
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      const _Tp& __x)
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __cur != __last; ++__cur)
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill<true>
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static void
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      const _Tp& __x)
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         { std::fill(__first, __last, __x); }
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,last).
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __last   An input iterator.
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __x      The source value.
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   Nothing.
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  Like fill(), but does not require an initialized output range.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 228


 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp>
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_fill(_ForwardIterator __first, _ForwardIterator __last,
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       const _Tp& __x)
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus < 201103L
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = true;
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #else
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted copy constructor, but the std::fill
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // optimization that uses memmove would happily "copy" them anyway.
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       static_assert(is_constructible<_ValueType, const _Tp&>::value,
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  "result type must be constructible from input type");
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted assignment, so using std::fill
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // would be ill-formed. Require assignability before using std::fill:
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       std::__uninitialized_fill<__is_trivial(_ValueType) && __assignable>::
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_fill(__first, __last, __x);
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill_n
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			const _Tp& __x)
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __n > 0; --__n, (void) ++__cur)
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      return __cur;
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill_n<true>
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			const _Tp& __x)
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 229


 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         { return std::fill_n(__first, __n, __x); }
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    // _GLIBCXX_RESOLVE_LIB_DEFECTS
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    // DR 1339. uninitialized_fill_n should return the end of its range
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,first+n).
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __n      The number of copies to make.
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __x      The source value.
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   Nothing.
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  Like fill_n(), but does not require an initialized output range.
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp>
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_fill_n(_ForwardIterator __first, _Size __n, const _Tp& __x)
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus < 201103L
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = true;
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #else
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted copy constructor, but the std::fill
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // optimization that uses memmove would happily "copy" them anyway.
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       static_assert(is_constructible<_ValueType, const _Tp&>::value,
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  "result type must be constructible from input type");
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted assignment, so using std::fill
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // would be ill-formed. Require assignability before using std::fill:
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __uninitialized_fill_n<__is_trivial(_ValueType) && __assignable>::
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_fill_n(__first, __n, __x);
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Extensions: versions of uninitialized_copy, uninitialized_fill,
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  and uninitialized_fill_n that take an allocator parameter.
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  We dispatch back to the standard versions when we're given the
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  default allocator.  For nondefault allocators we do not use 
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  any of the POD optimizations.
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     _ForwardIterator
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, _Allocator& __alloc)
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __result;
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __first != __last; ++__first, (void)++__cur)
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 230


 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), *__first);
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return __cur;
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __cur, __alloc);
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator, typename _Tp>
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, allocator<_Tp>&)
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { return std::uninitialized_copy(__first, __last, __result); }
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_move_a(_InputIterator __first, _InputIterator __last,
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, _Allocator& __alloc)
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return std::__uninitialized_copy_a(_GLIBCXX_MAKE_MOVE_ITERATOR(__first),
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 					 _GLIBCXX_MAKE_MOVE_ITERATOR(__last),
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 					 __result, __alloc);
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_move_if_noexcept_a(_InputIterator __first,
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       _InputIterator __last,
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       _ForwardIterator __result,
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       _Allocator& __alloc)
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return std::__uninitialized_copy_a
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	(_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(__first),
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	 _GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(__last), __result, __alloc);
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp, typename _Allocator>
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     void
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last,
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   const _Tp& __x, _Allocator& __alloc)
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __first;
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __cur != __last; ++__cur)
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), __x);
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 231


 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp, typename _Tp2>
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last,
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   const _Tp& __x, allocator<_Tp2>&)
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { std::uninitialized_fill(__first, __last, __x); }
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp,
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     _ForwardIterator
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, 
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			     const _Tp& __x, _Allocator& __alloc)
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __first;
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __n > 0; --__n, (void) ++__cur)
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), __x);
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return __cur;
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp,
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Tp2>
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, 
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			     const _Tp& __x, allocator<_Tp2>&)
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { return std::uninitialized_fill_n(__first, __n, __x); }
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Extensions: __uninitialized_copy_move, __uninitialized_move_copy,
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_fill_move, __uninitialized_move_fill.
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // All of these algorithms take a user-supplied allocator, which is used
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // for construction and destruction.
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_copy_move
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Copies [first1, last1) into [result, result + (last1 - first1)), and
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  move [first2, last2) into
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  [result, result + (last1 - first1) + (last2 - first2)).
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator1, typename _InputIterator2,
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _ForwardIterator, typename _Allocator>
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_move(_InputIterator1 __first1,
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator1 __last1,
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator2 __first2,
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator2 __last2,
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __result,
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _Allocator& __alloc)
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __mid = std::__uninitialized_copy_a(__first1, __last1,
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 232


 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 							   __result,
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 							   __alloc);
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return std::__uninitialized_move_a(__first2, __last2, __mid, __alloc);
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __mid, __alloc);
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_move_copy
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Moves [first1, last1) into [result, result + (last1 - first1)), and
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  copies [first2, last2) into
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  [result, result + (last1 - first1) + (last2 - first2)).
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator1, typename _InputIterator2,
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _ForwardIterator, typename _Allocator>
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_move_copy(_InputIterator1 __first1,
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator1 __last1,
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator2 __first2,
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator2 __last2,
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __result,
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _Allocator& __alloc)
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __mid = std::__uninitialized_move_a(__first1, __last1,
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 							   __result,
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 							   __alloc);
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return std::__uninitialized_copy_a(__first2, __last2, __mid, __alloc);
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __mid, __alloc);
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_fill_move
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [result, mid) with x, and moves [first, last) into
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  [mid, mid + (last - first)).
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp, typename _InputIterator,
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_fill_move(_ForwardIterator __result, _ForwardIterator __mid,
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      const _Tp& __x, _InputIterator __first,
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator __last, _Allocator& __alloc)
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       std::__uninitialized_fill_a(__result, __mid, __x, __alloc);
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return std::__uninitialized_move_a(__first, __last, __mid, __alloc);
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 233


 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __mid, __alloc);
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_move_fill
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Moves [first1, last1) into [first2, first2 + (last1 - first1)), and
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  fills [first2 + (last1 - first1), last2) with x.
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator, typename _Tp,
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_move_fill(_InputIterator __first1, _InputIterator __last1,
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __first2,
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __last2, const _Tp& __x,
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _Allocator& __alloc)
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __mid2 = std::__uninitialized_move_a(__first1, __last1,
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 							    __first2,
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 							    __alloc);
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::__uninitialized_fill_a(__mid2, __last2, __x, __alloc);
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__first2, __mid2, __alloc);
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus >= 201103L
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Extensions: __uninitialized_default, __uninitialized_default_n,
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default_a, __uninitialized_default_n_a.
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_1
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator>
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static void
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_default(_ForwardIterator __first, _ForwardIterator __last)
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __cur != __last; ++__cur)
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur));
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 234


 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_1<true>
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator>
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static void
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_default(_ForwardIterator __first, _ForwardIterator __last)
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef typename iterator_traits<_ForwardIterator>::value_type
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    _ValueType;
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::fill(__first, __last, _ValueType());
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_n_1
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size>
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_default_n(_ForwardIterator __first, _Size __n)
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __n > 0; --__n, (void) ++__cur)
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur));
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      return __cur;
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_n_1<true>
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size>
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_default_n(_ForwardIterator __first, _Size __n)
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef typename iterator_traits<_ForwardIterator>::value_type
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    _ValueType;
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return std::fill_n(__first, __n, _ValueType());
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [first, last) with std::distance(first, last) default
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // constructed value_types(s).
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator>
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 235


 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default(_ForwardIterator __first,
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			    _ForwardIterator __last)
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // trivial types can have deleted assignment
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       std::__uninitialized_default_1<__is_trivial(_ValueType)
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				     && __assignable>::
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_default(__first, __last);
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default_n
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [first, first + n) with n default constructed value_type(s).
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size>
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_n(_ForwardIterator __first, _Size __n)
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // trivial types can have deleted assignment
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __uninitialized_default_n_1<__is_trivial(_ValueType)
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       && __assignable>::
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_default_n(__first, __n);
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default_a
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [first, last) with std::distance(first, last) default
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // constructed value_types(s), constructed with the allocator alloc.
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Allocator>
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     void
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_a(_ForwardIterator __first,
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __last,
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _Allocator& __alloc)
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __first;
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __cur != __last; ++__cur)
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur));
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp>
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_a(_ForwardIterator __first,
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 236


 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __last,
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      allocator<_Tp>&)
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { std::__uninitialized_default(__first, __last); }
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default_n_a
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [first, first + n) with n default constructed value_types(s),
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // constructed with the allocator alloc.
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Allocator>
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     _ForwardIterator
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_n_a(_ForwardIterator __first, _Size __n, 
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				_Allocator& __alloc)
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __first;
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __n > 0; --__n, (void) ++__cur)
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur));
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return __cur;
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp>
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_n_a(_ForwardIterator __first, _Size __n, 
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				allocator<_Tp>&)
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { return std::__uninitialized_default_n(__first, __n); }
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_novalue_1
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator>
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	static void
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_default_novalue(_ForwardIterator __first,
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				 _ForwardIterator __last)
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __cur != __last; ++__cur)
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct_novalue(std::__addressof(*__cur));
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 237


 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_novalue_1<true>
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator>
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static void
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_default_novalue(_ForwardIterator __first,
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				 _ForwardIterator __last)
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_novalue_n_1
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size>
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	static _ForwardIterator
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_default_novalue_n(_ForwardIterator __first, _Size __n)
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __n > 0; --__n, (void) ++__cur)
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct_novalue(std::__addressof(*__cur));
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      return __cur;
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_novalue_n_1<true>
 744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size>
 746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	static _ForwardIterator
 747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_default_novalue_n(_ForwardIterator __first, _Size __n)
 748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{ return std::next(__first, __n); }
 749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default_novalue
 752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [first, last) with std::distance(first, last) default-initialized
 753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // value_types(s).
 754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator>
 755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_novalue(_ForwardIterator __first,
 757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				    _ForwardIterator __last)
 758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       std::__uninitialized_default_novalue_1<
 763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	is_trivially_default_constructible<_ValueType>::value>::
 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_default_novalue(__first, __last);
 765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 238


 767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default_n
 768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [first, first + n) with n default-initialized value_type(s).
 769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size>
 770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_novalue_n(_ForwardIterator __first, _Size __n)
 772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __uninitialized_default_novalue_n_1<
 777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	is_trivially_default_constructible<_ValueType>::value>::
 778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_default_novalue_n(__first, __n);
 779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _Size,
 782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _ForwardIterator>
 783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     _ForwardIterator
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_n(_InputIterator __first, _Size __n,
 785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, input_iterator_tag)
 786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __result;
 788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __n > 0; --__n, (void) ++__first, ++__cur)
 791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    std::_Construct(std::__addressof(*__cur), *__first);
 792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return __cur;
 793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __cur);
 797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _RandomAccessIterator, typename _Size,
 802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _ForwardIterator>
 803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_n(_RandomAccessIterator __first, _Size __n,
 805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result,
 806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   random_access_iterator_tag)
 807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { return std::uninitialized_copy(__first, __first + __n, __result); }
 808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _Size,
 810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _ForwardIterator>
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     pair<_InputIterator, _ForwardIterator>
 812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_n_pair(_InputIterator __first, _Size __n,
 813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, input_iterator_tag)
 814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __result;
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __n > 0; --__n, (void) ++__first, ++__cur)
 819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    std::_Construct(std::__addressof(*__cur), *__first);
 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return {__first, __cur};
 821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 239


 824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __cur);
 825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _RandomAccessIterator, typename _Size,
 830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _ForwardIterator>
 831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline pair<_RandomAccessIterator, _ForwardIterator>
 832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_n_pair(_RandomAccessIterator __first, _Size __n,
 833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result,
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   random_access_iterator_tag)
 835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       auto __second_res = uninitialized_copy(__first, __first + __n, __result);
 837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       auto __first_res = std::next(__first, __n);
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return {__first_res, __second_res};
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Copies the range [first,first+n) into result.
 845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __n      The number of elements to copy.
 847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __result An output iterator.
 848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return  __result + __n
 849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *
 850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  Like copy_n(), but does not require an initialized output range.
 851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _Size, typename _ForwardIterator>
 853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_copy_n(_InputIterator __first, _Size __n,
 855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			 _ForwardIterator __result)
 856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { return std::__uninitialized_copy_n(__first, __n, __result,
 857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 					 std::__iterator_category(__first)); }
 858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _Size, typename _ForwardIterator>
 861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline pair<_InputIterator, _ForwardIterator>
 862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_n_pair(_InputIterator __first, _Size __n,
 863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __result)
 864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return
 866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	std::__uninitialized_copy_n_pair(__first, __n, __result,
 867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 					 std::__iterator_category(__first));
 868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
 871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus >= 201703L
 873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** # define __cpp_lib_raw_memory_algorithms 201606L
 874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Default-initializes objects in the range [first,last).
 877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  A forward iterator.
 878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __last   A forward iterator.
 879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _ForwardIterator>
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 240


 881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_default_construct(_ForwardIterator __first,
 883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				    _ForwardIterator __last)
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __uninitialized_default_novalue(__first, __last);
 886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Default-initializes objects in the range [first,first+count).
 890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  A forward iterator.
 891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __count  The number of objects to construct.
 892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   __first + __count
 893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _ForwardIterator, typename _Size>
 895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_default_construct_n(_ForwardIterator __first, _Size __count)
 897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __uninitialized_default_novalue_n(__first, __count);
 899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Value-initializes objects in the range [first,last).
 903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  A forward iterator.
 904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __last   A forward iterator.
 905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _ForwardIterator>
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_value_construct(_ForwardIterator __first,
 909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				  _ForwardIterator __last)
 910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __uninitialized_default(__first, __last);
 912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Value-initializes objects in the range [first,first+count).
 916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  A forward iterator.
 917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __count  The number of objects to construct.
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   __result + __count
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _ForwardIterator, typename _Size>
 921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_value_construct_n(_ForwardIterator __first, _Size __count)
 923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __uninitialized_default_n(__first, __count);
 925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Move-construct from the range [first,last) into result.
 929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __last   An input iterator.
 931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __result An output iterator.
 932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   __result + (__first - __last)
 933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _InputIterator, typename _ForwardIterator>
 935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_move(_InputIterator __first, _InputIterator __last,
 937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       _ForwardIterator __result)
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 241


 938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return std::uninitialized_copy
 940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	(_GLIBCXX_MAKE_MOVE_ITERATOR(__first),
 941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	 _GLIBCXX_MAKE_MOVE_ITERATOR(__last), __result);
 942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Move-construct from the range [first,first+count) into result.
 946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __count  The number of objects to initialize.
 948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __result An output iterator.
 949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return  __result + __count
 950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _InputIterator, typename _Size, typename _ForwardIterator>
 952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline pair<_InputIterator, _ForwardIterator>
 953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_move_n(_InputIterator __first, _Size __count,
 954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			 _ForwardIterator __result)
 955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       auto __res = std::__uninitialized_copy_n_pair
 957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	(_GLIBCXX_MAKE_MOVE_ITERATOR(__first),
 958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	 __count, __result);
 959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return {__res.first.base(), __res.second};
 960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif // C++17
 962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus >= 201103L
 964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _Tp, typename _Up, typename _Allocator>
 967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __relocate_object_a(_Tp* __restrict __dest, _Up* __restrict __orig,
 969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			_Allocator& __alloc)
 970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     noexcept(noexcept(std::allocator_traits<_Allocator>::construct(__alloc,
 971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			 __dest, std::move(*__orig)))
 972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	     && noexcept(std::allocator_traits<_Allocator>::destroy(
 973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			    __alloc, std::__addressof(*__orig))))
 974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef std::allocator_traits<_Allocator> __traits;
 976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __traits::construct(__alloc, __dest, std::move(*__orig));
 977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __traits::destroy(__alloc, std::__addressof(*__orig));
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // This class may be specialized for specific types.
 981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Also known as is_trivially_relocatable.
 982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _Tp, typename = void>
 983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __is_bitwise_relocatable
 984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     : is_trivial<_Tp> { };
 985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _Tp, typename _Up>
 987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline __enable_if_t<std::__is_bitwise_relocatable<_Tp>::value, _Tp*>
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __relocate_a_1(_Tp* __first, _Tp* __last,
 989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		   _Tp* __result, allocator<_Up>&) noexcept
 990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       ptrdiff_t __count = __last - __first;
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       if (__count > 0)
 4698              		.loc 13 992 7 view .LVU860
 4699 003c 002C     		cmp	r4, #0
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 242


 4700              	.LBE3506:
 4701              	.LBE3505:
 4702              	.LBE3504:
 4703              	.LBE3503:
 4704              	.LBE3502:
 4705              	.LBE3501:
 4706              	.LBB3522:
 4707              	.LBB3499:
 4708              	.LBB3497:
 4709              		.loc 5 150 4 view .LVU861
 4710 003e 4BF80420 		str	r2, [fp, r4]	@ unaligned
 4711 0042 D9F80420 		ldr	r2, [r9, #4]	@ unaligned
 4712 0046 5A60     		str	r2, [r3, #4]	@ unaligned
 4713 0048 D9F80820 		ldr	r2, [r9, #8]	@ unaligned
 4714 004c 9A60     		str	r2, [r3, #8]	@ unaligned
 4715 004e D9F80C20 		ldr	r2, [r9, #12]	@ unaligned
 4716 0052 DA60     		str	r2, [r3, #12]	@ unaligned
 4717              	.LVL163:
 4718              		.loc 5 150 4 view .LVU862
 4719              	.LBE3497:
 4720              	.LBE3499:
 4721              	.LBE3522:
 4722              	.LBB3523:
 4723              	.LBI3501:
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 4724              		.loc 8 465 7 is_stmt 1 view .LVU863
 4725              	.LBB3519:
 4726              	.LBB3516:
 4727              	.LBI3503:
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 4728              		.loc 8 453 7 view .LVU864
 4729              	.LBB3513:
 4730              	.LBI3504:
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __result + __count;
 995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _InputIterator, typename _ForwardIterator,
 998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    typename _Allocator>
 999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __relocate_a_1(_InputIterator __first, _InputIterator __last,
1001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		   _ForwardIterator __result, _Allocator& __alloc)
1002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     noexcept(noexcept(std::__relocate_object_a(std::addressof(*__result),
1003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 					       std::addressof(*__first),
1004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 					       __alloc)))
1005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
1006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::value_type
1007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
1008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
1009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType2;
1010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       static_assert(std::is_same<_ValueType, _ValueType2>::value,
1011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  "relocation is only possible for values of the same type");
1012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __result;
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       for (; __first != __last; ++__first, (void)++__cur)
1014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				 std::__addressof(*__first), __alloc);
1016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __cur;
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 243


1017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
1018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
1019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _InputIterator, typename _ForwardIterator,
1020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    typename _Allocator>
1021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
1022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __relocate_a(_InputIterator __first, _InputIterator __last,
 4731              		.loc 13 1022 5 view .LVU865
 4732              	.LBB3510:
 4733              	.LBI3505:
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		   _Tp* __result, allocator<_Up>&) noexcept
 4734              		.loc 13 988 5 view .LVU866
 4735              	.LBB3507:
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 4736              		.loc 13 992 7 is_stmt 0 view .LVU867
 4737 0054 24DC     		bgt	.L149
 4738              	.LVL164:
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 4739              		.loc 13 992 7 view .LVU868
 4740              	.LBE3507:
 4741              	.LBE3510:
 4742              	.LBE3513:
 4743              	.LBE3516:
 4744              	.LBE3519:
 4745              	.LBE3523:
 4746              	.LBB3524:
 4747              	.LBB3525:
 4748              	.LBB3526:
 4749              	.LBB3527:
 4750              	.LBB3528:
 4751              	.LBB3529:
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       if (__count > 0)
 4752              		.loc 13 991 34 view .LVU869
 4753 0056 AAEB070A 		sub	r10, r10, r7
 4754              	.LVL165:
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       if (__count > 0)
 4755              		.loc 13 991 34 view .LVU870
 4756              	.LBE3529:
 4757              	.LBE3528:
 4758              	.LBE3527:
 4759              	.LBE3526:
 4760              	.LBE3525:
 4761              	.LBE3524:
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 4762              		.loc 4 464 8 view .LVU871
 4763 005a 1034     		adds	r4, r4, #16
 4764              	.LVL166:
 4765              	.LBB3565:
 4766              	.LBB3558:
 4767              	.LBB3551:
 4768              	.LBB3544:
 4769              	.LBB3537:
 4770              	.LBB3530:
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 4771              		.loc 13 992 7 view .LVU872
 4772 005c BAF1000F 		cmp	r10, #0
 4773              	.LBE3530:
 4774              	.LBE3537:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 244


 4775              	.LBE3544:
 4776              	.LBE3551:
 4777              	.LBE3558:
 4778              	.LBE3565:
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 4779              		.loc 4 464 8 view .LVU873
 4780 0060 5C44     		add	r4, r4, fp
 4781              	.LVL167:
 4782              	.LBB3566:
 4783              	.LBI3524:
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 4784              		.loc 8 465 7 is_stmt 1 view .LVU874
 4785              	.LBB3559:
 4786              	.LBB3552:
 4787              	.LBI3526:
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 4788              		.loc 8 453 7 view .LVU875
 4789              	.LBB3545:
 4790              	.LBI3527:
 4791              		.loc 13 1022 5 view .LVU876
 4792              	.LBB3538:
 4793              	.LBI3528:
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		   _Tp* __result, allocator<_Up>&) noexcept
 4794              		.loc 13 988 5 view .LVU877
 4795              	.LBB3531:
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 4796              		.loc 13 992 7 is_stmt 0 view .LVU878
 4797 0062 13DC     		bgt	.L134
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 4798              		.loc 13 994 25 view .LVU879
 4799 0064 5444     		add	r4, r4, r10
 4800              	.LVL168:
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 4801              		.loc 13 994 25 view .LVU880
 4802              	.LBE3531:
 4803              	.LBE3538:
 4804              	.LBE3545:
 4805              	.LBE3552:
 4806              	.LBE3559:
 4807              	.LBE3566:
 4808              	.LBB3567:
 4809              	.LBI3567:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 4810              		.loc 8 350 7 is_stmt 1 view .LVU881
 4811              	.LBB3568:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 4812              		.loc 8 353 2 is_stmt 0 view .LVU882
 4813 0066 B8F1000F 		cmp	r8, #0
 4814 006a 04D1     		bne	.L150
 4815              	.LVL169:
 4816              	.L137:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 4817              		.loc 8 353 2 view .LVU883
 4818              	.LBE3568:
 4819              	.LBE3567:
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 4820              		.loc 4 504 39 view .LVU884
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 245


 4821 006c B560     		str	r5, [r6, #8]
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_end_of_storage = __new_start + __len;
 4822              		.loc 4 503 31 view .LVU885
 4823 006e C6E900B4 		strd	fp, r4, [r6]
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 4824              		.loc 4 505 5 view .LVU886
 4825 0072 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4826              	.LVL170:
 4827              	.L150:
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_start = __new_start;
 4828              		.loc 4 501 39 view .LVU887
 4829 0076 B168     		ldr	r1, [r6, #8]
 4830 0078 A1EB0801 		sub	r1, r1, r8
 4831              	.L139:
 4832              	.LVL171:
 4833              	.LBB3575:
 4834              	.LBB3573:
 4835              	.LBB3569:
 4836              	.LBI3569:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 4837              		.loc 6 491 7 is_stmt 1 view .LVU888
 4838              	.LBB3570:
 4839              	.LBB3571:
 4840              	.LBI3571:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 4841              		.loc 5 120 7 view .LVU889
 4842              	.LBB3572:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 4843              		.loc 5 133 19 is_stmt 0 view .LVU890
 4844 007c 4046     		mov	r0, r8
 4845 007e FFF7FEFF 		bl	_ZdlPvj
 4846              	.LVL172:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 4847              		.loc 5 133 19 view .LVU891
 4848              	.LBE3572:
 4849              	.LBE3571:
 4850              	.LBE3570:
 4851              	.LBE3569:
 4852              	.LBE3573:
 4853              	.LBE3575:
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 4854              		.loc 4 504 39 view .LVU892
 4855 0082 B560     		str	r5, [r6, #8]
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_end_of_storage = __new_start + __len;
 4856              		.loc 4 503 31 view .LVU893
 4857 0084 C6E900B4 		strd	fp, r4, [r6]
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 4858              		.loc 4 505 5 view .LVU894
 4859 0088 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4860              	.LVL173:
 4861              	.L134:
 4862              	.LBB3576:
 4863              	.LBB3560:
 4864              	.LBB3553:
 4865              	.LBB3546:
 4866              	.LBB3539:
 4867              	.LBB3532:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 246


 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __result + __count;
 4868              		.loc 13 993 19 view .LVU895
 4869 008c 2046     		mov	r0, r4
 4870 008e 3946     		mov	r1, r7
 4871 0090 5246     		mov	r2, r10
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 4872              		.loc 13 994 25 view .LVU896
 4873 0092 5444     		add	r4, r4, r10
 4874              	.LVL174:
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __result + __count;
 4875              		.loc 13 993 19 view .LVU897
 4876 0094 FFF7FEFF 		bl	memcpy
 4877              	.LVL175:
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __result + __count;
 4878              		.loc 13 993 19 view .LVU898
 4879              	.LBE3532:
 4880              	.LBE3539:
 4881              	.LBE3546:
 4882              	.LBE3553:
 4883              	.LBE3560:
 4884              	.LBE3576:
 4885              	.LBB3577:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 4886              		.loc 8 350 7 is_stmt 1 view .LVU899
 4887              	.LBB3574:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 4888              		.loc 8 353 2 is_stmt 0 view .LVU900
 4889 0098 B8F1000F 		cmp	r8, #0
 4890 009c E6D0     		beq	.L137
 4891 009e EAE7     		b	.L150
 4892              	.LVL176:
 4893              	.L149:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 4894              		.loc 8 353 2 view .LVU901
 4895              	.LBE3574:
 4896              	.LBE3577:
 4897              	.LBB3578:
 4898              	.LBB3561:
 4899              	.LBB3554:
 4900              	.LBB3547:
 4901              	.LBB3540:
 4902              	.LBB3533:
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       if (__count > 0)
 4903              		.loc 13 991 34 view .LVU902
 4904 00a0 AAEB070A 		sub	r10, r10, r7
 4905              	.LVL177:
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       if (__count > 0)
 4906              		.loc 13 991 34 view .LVU903
 4907              	.LBE3533:
 4908              	.LBE3540:
 4909              	.LBE3547:
 4910              	.LBE3554:
 4911              	.LBE3561:
 4912              	.LBE3578:
 4913              	.LBB3579:
 4914              	.LBB3520:
 4915              	.LBB3517:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 247


 4916              	.LBB3514:
 4917              	.LBB3511:
 4918              	.LBB3508:
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __result + __count;
 4919              		.loc 13 993 19 view .LVU904
 4920 00a4 2246     		mov	r2, r4
 4921 00a6 4146     		mov	r1, r8
 4922 00a8 5846     		mov	r0, fp
 4923              	.LBE3508:
 4924              	.LBE3511:
 4925              	.LBE3514:
 4926              	.LBE3517:
 4927              	.LBE3520:
 4928              	.LBE3579:
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 4929              		.loc 4 464 8 view .LVU905
 4930 00aa 1034     		adds	r4, r4, #16
 4931              	.LVL178:
 4932              	.LBB3580:
 4933              	.LBB3521:
 4934              	.LBB3518:
 4935              	.LBB3515:
 4936              	.LBB3512:
 4937              	.LBB3509:
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __result + __count;
 4938              		.loc 13 993 19 view .LVU906
 4939 00ac FFF7FEFF 		bl	memmove
 4940              	.LVL179:
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __result + __count;
 4941              		.loc 13 993 19 view .LVU907
 4942              	.LBE3509:
 4943              	.LBE3512:
 4944              	.LBE3515:
 4945              	.LBE3518:
 4946              	.LBE3521:
 4947              	.LBE3580:
 4948              	.LBB3581:
 4949              	.LBB3562:
 4950              	.LBB3555:
 4951              	.LBB3548:
 4952              	.LBB3541:
 4953              	.LBB3534:
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 4954              		.loc 13 992 7 view .LVU908
 4955 00b0 BAF1000F 		cmp	r10, #0
 4956              	.LBE3534:
 4957              	.LBE3541:
 4958              	.LBE3548:
 4959              	.LBE3555:
 4960              	.LBE3562:
 4961              	.LBE3581:
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 4962              		.loc 4 464 8 view .LVU909
 4963 00b4 5C44     		add	r4, r4, fp
 4964              	.LVL180:
 4965              	.LBB3582:
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 248


 4966              		.loc 8 465 7 is_stmt 1 view .LVU910
 4967              	.LBB3563:
 4968              	.LBB3556:
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 4969              		.loc 8 453 7 view .LVU911
 4970              	.LBB3549:
 4971              		.loc 13 1022 5 view .LVU912
 4972              	.LBB3542:
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		   _Tp* __result, allocator<_Up>&) noexcept
 4973              		.loc 13 988 5 view .LVU913
 4974              	.LBB3535:
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 4975              		.loc 13 992 7 is_stmt 0 view .LVU914
 4976 00b6 E9DC     		bgt	.L134
 4977              	.LBE3535:
 4978              	.LBE3542:
 4979              	.LBE3549:
 4980              	.LBE3556:
 4981              	.LBE3563:
 4982              	.LBE3582:
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_start = __new_start;
 4983              		.loc 4 501 39 view .LVU915
 4984 00b8 B168     		ldr	r1, [r6, #8]
 4985              	.LBB3583:
 4986              	.LBB3564:
 4987              	.LBB3557:
 4988              	.LBB3550:
 4989              	.LBB3543:
 4990              	.LBB3536:
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 4991              		.loc 13 994 25 view .LVU916
 4992 00ba 5444     		add	r4, r4, r10
 4993              	.LVL181:
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 4994              		.loc 13 994 25 view .LVU917
 4995              	.LBE3536:
 4996              	.LBE3543:
 4997              	.LBE3550:
 4998              	.LBE3557:
 4999              	.LBE3564:
 5000              	.LBE3583:
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_start = __new_start;
 5001              		.loc 4 501 39 view .LVU918
 5002 00bc A1EB0801 		sub	r1, r1, r8
 5003              	.LVL182:
 5004              	.LBB3584:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 5005              		.loc 8 350 7 is_stmt 1 view .LVU919
 5006 00c0 DCE7     		b	.L139
 5007              	.LVL183:
 5008              	.L148:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 5009              		.loc 8 350 7 is_stmt 0 view .LVU920
 5010              	.LBE3584:
 5011              	.LBB3585:
 5012              	.LBB3492:
 5013              	.LBB3487:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 249


 5014              	.LBB3488:
 5015              	.LBB3489:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 5016              		.loc 5 115 41 view .LVU921
 5017 00c2 8D42     		cmp	r5, r1
 5018 00c4 28BF     		it	cs
 5019 00c6 0D46     		movcs	r5, r1
 5020              	.LVL184:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 5021              		.loc 5 115 41 view .LVU922
 5022 00c8 2D01     		lsls	r5, r5, #4
 5023              	.LVL185:
 5024              	.L131:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 5025              		.loc 5 115 41 view .LVU923
 5026              	.LBE3489:
 5027              	.LBE3488:
 5028              	.LBI3487:
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 5029              		.loc 6 459 7 is_stmt 1 view .LVU924
 5030              	.LBB3491:
 5031              	.LBI3488:
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 5032              		.loc 5 103 7 view .LVU925
 5033              	.LBB3490:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 5034              		.loc 5 115 41 is_stmt 0 view .LVU926
 5035 00ca 2846     		mov	r0, r5
 5036              	.LVL186:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 5037              		.loc 5 115 41 view .LVU927
 5038 00cc FFF7FEFF 		bl	_Znwj
 5039              	.LVL187:
 5040 00d0 8346     		mov	fp, r0
 5041              	.LVL188:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 5042              		.loc 5 115 41 view .LVU928
 5043              	.LBE3490:
 5044              	.LBE3491:
 5045              	.LBE3487:
 5046              	.LBE3492:
 5047              	.LBE3585:
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 5048              		.loc 4 504 53 view .LVU929
 5049 00d2 0544     		add	r5, r5, r0
 5050              	.LBB3586:
 5051              	.LBB3493:
 5052 00d4 AEE7     		b	.L138
 5053              	.LVL189:
 5054              	.L129:
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 5055              		.loc 4 504 53 view .LVU930
 5056              	.LBE3493:
 5057              	.LBE3586:
 5058              	.LBB3587:
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 5059              		.loc 8 811 7 is_stmt 1 view .LVU931
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 250


 5060              	.LBB3483:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 5061              		.loc 11 978 7 view .LVU932
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 5062              		.loc 11 978 7 is_stmt 0 view .LVU933
 5063              	.LBE3483:
 5064              	.LBE3587:
 5065              	.LBB3588:
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 5066              		.loc 11 1202 5 is_stmt 1 view .LVU934
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 5067              		.loc 11 1202 5 is_stmt 0 view .LVU935
 5068              	.LBE3588:
 5069              	.LBB3589:
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 5070              		.loc 8 343 7 is_stmt 1 view .LVU936
 5071              	.LBE3589:
 5072              	.LBB3590:
 5073              	.LBB3480:
 5074              		.loc 11 1205 27 is_stmt 0 view .LVU937
 5075 00d6 024D     		ldr	r5, .L151
 5076 00d8 F7E7     		b	.L131
 5077              	.LVL190:
 5078              	.L147:
 5079              		.loc 11 1205 27 view .LVU938
 5080              	.LBE3480:
 5081              	.LBE3590:
 5082              	.LBB3591:
 5083              	.LBB3476:
1759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(__N(__s));
 5084              		.loc 8 1759 24 view .LVU939
 5085 00da 0248     		ldr	r0, .L151+4
 5086              	.LVL191:
 5087              		.loc 8 1759 24 view .LVU940
 5088 00dc FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 5089              	.LVL192:
 5090              	.L152:
 5091              		.align	2
 5092              	.L151:
 5093 00e0 F0FFFF7F 		.word	2147483632
 5094 00e4 00000000 		.word	.LC4
 5095              	.LBE3476:
 5096              	.LBE3591:
 5097              		.cfi_endproc
 5098              	.LFE4253:
 5100              		.section	.text._ZNSt6vectorIbSaIbEEC2ERKS1_,"axG",%progbits,_ZNSt6vectorIbSaIbEEC5ERKS1_,comdat
 5101              		.align	1
 5102              		.p2align 2,,3
 5103              		.weak	_ZNSt6vectorIbSaIbEEC2ERKS1_
 5104              		.syntax unified
 5105              		.thumb
 5106              		.thumb_func
 5107              		.fpu fpv5-d16
 5109              	_ZNSt6vectorIbSaIbEEC2ERKS1_:
 5110              	.LVL193:
 5111              	.LFB4314:
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       : _Base(_Bit_alloc_traits::_S_select_on_copy(__x._M_get_Bit_allocator()))
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 251


 5112              		.loc 1 679 7 is_stmt 1 view -0
 5113              		.cfi_startproc
 5114              		@ args = 0, pretend = 0, frame = 0
 5115              		@ frame_needed = 0, uses_anonymous_args = 0
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       : _Base(_Bit_alloc_traits::_S_select_on_copy(__x._M_get_Bit_allocator()))
 5116              		.loc 1 679 7 is_stmt 0 view .LVU942
 5117 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 5118              		.cfi_def_cfa_offset 32
 5119              		.cfi_offset 3, -32
 5120              		.cfi_offset 4, -28
 5121              		.cfi_offset 5, -24
 5122              		.cfi_offset 6, -20
 5123              		.cfi_offset 7, -16
 5124              		.cfi_offset 8, -12
 5125              		.cfi_offset 9, -8
 5126              		.cfi_offset 14, -4
 5127              	.LBB3737:
 5128              	.LBB3738:
 5129              	.LBB3739:
 5130              	.LBB3740:
 5131              	.LBB3741:
 5132              	.LBB3742:
 5133              	.LBB3743:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 5134              		.loc 1 149 31 view .LVU943
 5135 0004 0025     		movs	r5, #0
 5136              	.LBE3743:
 5137              	.LBE3742:
 5138              	.LBE3741:
 5139              	.LBE3740:
 5140              	.LBE3739:
 5141              	.LBE3738:
 5142              	.LBE3737:
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       : _Base(_Bit_alloc_traits::_S_select_on_copy(__x._M_get_Bit_allocator()))
 5143              		.loc 1 679 7 view .LVU944
 5144 0006 0F46     		mov	r7, r1
 5145 0008 0646     		mov	r6, r0
 5146              	.LVL194:
 5147              	.LBB3771:
 5148              	.LBI3771:
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl; }
 5149              		.loc 1 529 7 is_stmt 1 view .LVU945
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl; }
 5150              		.loc 1 529 7 is_stmt 0 view .LVU946
 5151              	.LBE3771:
 5152              	.LBB3772:
 5153              	.LBI3772:
 5154              		.file 14 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\ext\\alloc_trait
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // Copyright (C) 2011-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // any later version.
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 252


  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** /** @file ext/alloc_traits.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****  */
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #ifndef _EXT_ALLOC_TRAITS_H
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #define _EXT_ALLOC_TRAITS_H 1
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #pragma GCC system_header
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** # include <bits/alloc_traits.h>
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #if __cplusplus < 201103L
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** # include <bits/allocator.h>  // for __alloc_swap
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #endif
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** {
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** /**
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****  * @brief  Uniform interface to C++98 and C++11 allocators.
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****  * @ingroup allocators
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** */
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** template<typename _Alloc, typename = typename _Alloc::value_type>
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   struct __alloc_traits
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #if __cplusplus >= 201103L
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   : std::allocator_traits<_Alloc>
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #endif
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   {
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef _Alloc allocator_type;
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #if __cplusplus >= 201103L
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef std::allocator_traits<_Alloc>           _Base_type;
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::value_type         value_type;
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::pointer            pointer;
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::const_pointer      const_pointer;
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::size_type          size_type;
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::difference_type    difference_type;
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     // C++11 allocators do not define reference or const_reference
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef value_type&                             reference;
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef const value_type&                       const_reference;
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::allocate;
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::deallocate;
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::construct;
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 253


  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::destroy;
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::max_size;
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   private:
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     template<typename _Ptr>
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       using __is_custom_pointer
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 	= std::__and_<std::is_same<pointer, _Ptr>,
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 		      std::__not_<std::is_pointer<_Ptr>>>;
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   public:
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     // overload construct for non-standard pointer types
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     template<typename _Ptr, typename... _Args>
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       static _GLIBCXX14_CONSTEXPR
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       std::__enable_if_t<__is_custom_pointer<_Ptr>::value>
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       construct(_Alloc& __a, _Ptr __p, _Args&&... __args)
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       noexcept(noexcept(_Base_type::construct(__a, std::__to_address(__p),
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 					      std::forward<_Args>(__args)...)))
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       {
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 	_Base_type::construct(__a, std::__to_address(__p),
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 			      std::forward<_Args>(__args)...);
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       }
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     // overload destroy for non-standard pointer types
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     template<typename _Ptr>
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       static _GLIBCXX14_CONSTEXPR
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       std::__enable_if_t<__is_custom_pointer<_Ptr>::value>
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       destroy(_Alloc& __a, _Ptr __p)
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       noexcept(noexcept(_Base_type::destroy(__a, std::__to_address(__p))))
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       { _Base_type::destroy(__a, std::__to_address(__p)); }
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     static constexpr _Alloc _S_select_on_copy(const _Alloc& __a)
 5155              		.loc 14 97 29 is_stmt 1 view .LVU947
 5156              	.LBB3773:
 5157              	.LBI3773:
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  __a.construct(__p, std::forward<_Args>(__args)...);
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  std::construct_at(__p, std::forward<_Args>(__args)...);
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Destroy an object of type @a _Up
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c __a.destroy(__p).
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up>
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(is_nothrow_destructible<_Up>::value)
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 254


 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  __a.destroy(__p);
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  std::destroy_at(__p);
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  The maximum supported allocation size
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __a.max_size()
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR size_type
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       {
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return __a.max_size();
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return size_t(-1) / sizeof(value_type);
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       }
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __rhs  An allocator.
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __rhs
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR allocator_type
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       select_on_container_copy_construction(const allocator_type& __rhs)
 5158              		.loc 6 558 7 view .LVU948
 5159              	.LBB3774:
 5160              	.LBI3774:
 5161              		.file 15 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\allocator.
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Allocators -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** /*
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 255


  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * Copyright (c) 1996-1997
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * Silicon Graphics Computer Systems, Inc.
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  *
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * provided that the above copyright notice appear in all copies and
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * that both that copyright notice and this permission notice appear
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * in supporting documentation.  Silicon Graphics makes no
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * representations about the suitability of this software for any
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  */
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** /** @file bits/allocator.h
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  *  This is an internal header file, included by other library headers.
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  *  Do not attempt to use it directly. @headername{memory}
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  */
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #ifndef _ALLOCATOR_H
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #define _ALLOCATOR_H 1
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #include <bits/c++allocator.h> // Define the base class to std::allocator.
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #include <bits/memoryfwd.h>
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #include <type_traits>
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #define __cpp_lib_incomplete_container_elements 201505
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** {
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   /**
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  @addtogroup allocators
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  @{
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    */
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   /// allocator<void> specialization.
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   template<>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     class allocator<void>
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     {
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     public:
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef void        value_type;
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef size_t      size_type;
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef ptrdiff_t   difference_type;
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus <= 201703L
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef void*       pointer;
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef const void* const_pointer;
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Tp1>
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	struct rebind
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ typedef allocator<_Tp1> other; };
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #else
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator() = default;
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Up>
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	constexpr
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 256


  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	allocator(const allocator<_Up>&) { }
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif // ! C++20
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L && __cplusplus <= 201703L
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type propagate_on_container_move_assignment;
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type is_always_equal;
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Up, typename... _Args>
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	void
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	construct(_Up* __p, _Args&&... __args)
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Up>
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	void
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	destroy(_Up* __p)
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	noexcept(std::is_nothrow_destructible<_Up>::value)
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ __p->~_Up(); }
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif // C++11 to C++17
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     };
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   /**
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    * @brief  The @a standard allocator, as per [20.4].
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/memory.html#std.util.memory.allocator
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  for further details.
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  @tparam  _Tp  Type of allocated object.
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    */
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   template<typename _Tp>
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     class allocator : public __allocator_base<_Tp>
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     {
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     public:
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef _Tp        value_type;
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef size_t     size_type;
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef ptrdiff_t  difference_type;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus <= 201703L
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef _Tp*       pointer;
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef const _Tp* const_pointer;
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef _Tp&       reference;
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef const _Tp& const_reference;
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Tp1>
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	struct rebind
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ typedef allocator<_Tp1> other; };
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type propagate_on_container_move_assignment;
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type is_always_equal;
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 257


 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // 3035. std::allocator's constructors should be constexpr
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       _GLIBCXX20_CONSTEXPR
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator() _GLIBCXX_NOTHROW { }
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       _GLIBCXX20_CONSTEXPR
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator(const allocator& __a) _GLIBCXX_NOTHROW
 5162              		.loc 15 147 7 view .LVU949
 5163              	.LBB3775:
 5164              	.LBI3775:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5165              		.loc 5 82 7 view .LVU950
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5166              		.loc 5 82 7 is_stmt 0 view .LVU951
 5167              	.LBE3775:
 5168              	.LBE3774:
 5169              	.LBE3773:
 5170              	.LBE3772:
 5171              	.LBB3776:
 5172              	.LBI3776:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // Avoid implicit deprecation.
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator& operator=(const allocator&) = default;
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Tp1>
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	_GLIBCXX20_CONSTEXPR
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 5173              		.loc 15 157 2 is_stmt 1 view .LVU952
 5174              	.LBB3777:
 5175              	.LBI3777:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5176              		.loc 5 79 7 view .LVU953
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5177              		.loc 5 79 7 is_stmt 0 view .LVU954
 5178              	.LBE3777:
 5179              	.LBE3776:
 5180              	.LBB3778:
 5181              	.LBI3737:
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       : _M_impl(__a) { }
 5182              		.loc 1 542 7 is_stmt 1 view .LVU955
 5183              	.LBB3764:
 5184              	.LBI3764:
 5185              		.loc 15 157 2 view .LVU956
 5186              	.LBB3765:
 5187              	.LBI3765:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5188              		.loc 5 79 7 view .LVU957
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5189              		.loc 5 79 7 is_stmt 0 view .LVU958
 5190              	.LBE3765:
 5191              	.LBE3764:
 5192              	.LBB3766:
 5193              	.LBI3738:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 258


 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  : _Bit_alloc_type(__a)
 5194              		.loc 1 504 4 is_stmt 1 view .LVU959
 5195              	.LBB3759:
 5196              	.LBI3759:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 5197              		.loc 15 147 7 view .LVU960
 5198              	.LBB3760:
 5199              	.LBI3760:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5200              		.loc 5 82 7 view .LVU961
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5201              		.loc 5 82 7 is_stmt 0 view .LVU962
 5202              	.LBE3760:
 5203              	.LBE3759:
 5204              	.LBB3761:
 5205              	.LBI3739:
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 5206              		.loc 1 467 2 is_stmt 1 view .LVU963
 5207              	.LBB3756:
 5208              	.LBB3748:
 5209              	.LBI3741:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 5210              		.loc 1 241 5 view .LVU964
 5211              	.LBB3746:
 5212              	.LBI3742:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 5213              		.loc 1 148 5 view .LVU965
 5214              	.LBB3744:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 5215              		.loc 1 149 31 is_stmt 0 view .LVU966
 5216 000a 0560     		str	r5, [r0]
 5217              	.LBE3744:
 5218              	.LBE3746:
 5219              	.LBE3748:
 5220              	.LBB3749:
 5221              	.LBB3750:
 5222              	.LBB3751:
 5223 000c 8560     		str	r5, [r0, #8]
 5224              	.LBE3751:
 5225              	.LBE3750:
 5226              	.LBE3749:
 5227              	.LBE3756:
 5228              	.LBE3761:
 5229              	.LBE3766:
 5230              	.LBE3778:
 5231              	.LBB3779:
 5232              	.LBB3780:
 5233              	.LBB3781:
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 5234              		.loc 1 226 44 view .LVU967
 5235 000e 8B68     		ldr	r3, [r1, #8]
 5236 0010 0968     		ldr	r1, [r1]
 5237              	.LVL195:
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 5238              		.loc 1 226 44 view .LVU968
 5239              	.LBE3781:
 5240              	.LBE3780:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 259


 5241              	.LBE3779:
 5242              	.LBB3794:
 5243              	.LBB3767:
 5244              	.LBB3762:
 5245              	.LBB3757:
 5246              	.LBB3754:
 5247              	.LBB3747:
 5248              	.LBB3745:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 5249              		.loc 1 149 31 view .LVU969
 5250 0012 4560     		str	r5, [r0, #4]
 5251              	.LVL196:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 5252              		.loc 1 149 31 view .LVU970
 5253              	.LBE3745:
 5254              	.LBE3747:
 5255              	.LBE3754:
 5256              	.LBB3755:
 5257              	.LBI3749:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 5258              		.loc 1 241 5 is_stmt 1 view .LVU971
 5259              	.LBB3753:
 5260              	.LBI3750:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 5261              		.loc 1 148 5 view .LVU972
 5262              	.LBB3752:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 5263              		.loc 1 149 31 is_stmt 0 view .LVU973
 5264 0014 C560     		str	r5, [r0, #12]
 5265              	.LVL197:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 5266              		.loc 1 149 31 view .LVU974
 5267              	.LBE3752:
 5268              	.LBE3753:
 5269              	.LBE3755:
 5270              	.LBE3757:
 5271              	.LBE3762:
 5272              	.LBE3767:
 5273              	.LBE3794:
 5274              	.LBB3795:
 5275              	.LBB3784:
 5276              	.LBB3782:
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 5277              		.loc 1 226 44 view .LVU975
 5278 0016 5B1A     		subs	r3, r3, r1
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 5279              		.loc 1 227 8 view .LVU976
 5280 0018 FC68     		ldr	r4, [r7, #12]
 5281              	.LBE3782:
 5282              	.LBE3784:
 5283              	.LBE3795:
 5284              	.LBB3796:
 5285              	.LBB3768:
 5286              	.LBB3763:
 5287              	.LBB3758:
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ }
 5288              		.loc 1 468 47 view .LVU977
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 260


 5289 001a 0561     		str	r5, [r0, #16]
 5290              	.LVL198:
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ }
 5291              		.loc 1 468 47 view .LVU978
 5292              	.LBE3758:
 5293              	.LBE3763:
 5294              	.LBE3768:
 5295              	.LBB3769:
 5296              	.LBI3769:
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cpp_constexpr_dynamic_alloc
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       constexpr
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       ~allocator() _GLIBCXX_NOTHROW { }
 5297              		.loc 15 162 7 is_stmt 1 view .LVU979
 5298              	.LBB3770:
 5299              	.LBI3770:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5300              		.loc 5 89 7 view .LVU980
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5301              		.loc 5 89 7 is_stmt 0 view .LVU981
 5302              	.LBE3770:
 5303              	.LBE3769:
 5304              	.LBE3796:
 5305              	.LBB3797:
 5306              	.LBI3797:
 5307              		.loc 15 162 7 is_stmt 1 view .LVU982
 5308              	.LBB3798:
 5309              	.LBI3798:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5310              		.loc 5 89 7 view .LVU983
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5311              		.loc 5 89 7 is_stmt 0 view .LVU984
 5312              	.LBE3798:
 5313              	.LBE3797:
 5314              	.LBB3799:
 5315              	.LBI3799:
 5316              		.loc 15 162 7 is_stmt 1 view .LVU985
 5317              	.LBB3800:
 5318              	.LBI3800:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5319              		.loc 5 89 7 view .LVU986
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5320              		.loc 5 89 7 is_stmt 0 view .LVU987
 5321              	.LBE3800:
 5322              	.LBE3799:
 5323              	.LBB3801:
 5324              	.LBI3779:
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return size_type(end() - begin()); }
 5325              		.loc 1 884 7 is_stmt 1 view .LVU988
 5326              	.LBB3785:
 5327              	.LBI3785:
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl._M_finish; }
 5328              		.loc 1 846 7 view .LVU989
 5329              	.LBB3786:
 5330              	.LBI3786:
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x._M_p, __x._M_offset) { }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 261


 5331              		.loc 1 339 5 view .LVU990
 5332              	.LBB3787:
 5333              	.LBB3788:
 5334              	.LBI3788:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 5335              		.loc 1 148 5 view .LVU991
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 5336              		.loc 1 148 5 is_stmt 0 view .LVU992
 5337              	.LBE3788:
 5338              	.LBE3787:
 5339              	.LBE3786:
 5340              	.LBE3785:
 5341              	.LBB3789:
 5342              	.LBI3789:
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_iterator(this->_M_impl._M_start._M_p, 0); }
 5343              		.loc 1 838 7 is_stmt 1 view .LVU993
 5344              	.LBB3790:
 5345              	.LBB3791:
 5346              	.LBI3791:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 5347              		.loc 1 336 5 view .LVU994
 5348              	.LBB3792:
 5349              	.LBI3792:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 5350              		.loc 1 148 5 view .LVU995
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 5351              		.loc 1 148 5 is_stmt 0 view .LVU996
 5352              	.LBE3792:
 5353              	.LBE3791:
 5354              	.LBE3790:
 5355              	.LBE3789:
 5356              	.LBB3793:
 5357              	.LBI3780:
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 5358              		.loc 1 224 5 is_stmt 1 view .LVU997
 5359              	.LBB3783:
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 5360              		.loc 1 226 7 view .LVU998
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 5361              		.loc 1 226 7 is_stmt 0 view .LVU999
 5362              	.LBE3783:
 5363              	.LBE3793:
 5364              	.LBE3801:
 5365              	.LBB3802:
 5366              	.LBI3802:
1143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 5367              		.loc 1 1143 7 is_stmt 1 view .LVU1000
 5368              	.LBB3803:
 5369              	.LBB3804:
1145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 5370              		.loc 1 1145 2 is_stmt 0 view .LVU1001
 5371 001c 14EBC304 		adds	r4, r4, r3, lsl #3
 5372              	.LVL199:
1145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 5373              		.loc 1 1145 2 view .LVU1002
 5374 0020 2ED1     		bne	.L174
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 262


 5375              		.loc 1 1154 6 view .LVU1003
 5376 0022 2346     		mov	r3, r4
 5377              	.LBE3804:
 5378              	.LBB3833:
 5379              	.LBB3834:
 5380              	.LBB3835:
 5381              	.LBB3836:
 5382              	.LBB3837:
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 5383              		.loc 1 175 12 view .LVU1004
 5384 0024 2246     		mov	r2, r4
 5385              	.LBE3837:
 5386              	.LBE3836:
 5387              	.LBE3835:
 5388              	.LBE3834:
 5389              	.LBE3833:
 5390              	.LBB3871:
1153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    this->_M_impl._M_start = iterator(0, 0);
 5391              		.loc 1 1153 38 view .LVU1005
 5392 0026 0461     		str	r4, [r0, #16]
 5393              	.LVL200:
 5394              	.LBB3805:
 5395              	.LBI3805:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 5396              		.loc 1 243 5 is_stmt 1 view .LVU1006
 5397              	.LBB3806:
 5398              	.LBI3806:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 5399              		.loc 1 148 5 view .LVU1007
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 5400              		.loc 1 148 5 is_stmt 0 view .LVU1008
 5401              	.LBE3806:
 5402              	.LBE3805:
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 5403              		.loc 1 1154 6 view .LVU1009
 5404 0028 C0E90044 		strd	r4, r4, [r0]
 5405              	.LVL201:
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 5406              		.loc 1 1154 6 view .LVU1010
 5407              	.LBE3871:
 5408              	.LBB3872:
 5409              	.LBI3833:
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 5410              		.loc 1 303 5 is_stmt 1 view .LVU1011
 5411              	.LBB3861:
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __tmp += __n;
 5412              		.loc 1 305 7 view .LVU1012
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __tmp;
 5413              		.loc 1 306 7 view .LVU1013
 5414              	.LBB3852:
 5415              	.LBI3835:
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 5416              		.loc 1 285 5 view .LVU1014
 5417              	.LBE3852:
 5418              	.LBE3861:
 5419              	.LBE3872:
 5420              	.LBE3803:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 263


 5421              	.LBE3802:
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 5422              		.loc 1 287 7 view .LVU1015
 5423              	.LBB3892:
 5424              	.LBB3888:
 5425              	.LBB3873:
 5426              	.LBB3862:
 5427              	.LBB3853:
 5428              	.LBB3845:
 5429              	.LBI3836:
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 5430              		.loc 1 172 5 view .LVU1016
 5431              	.LBB3838:
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_p += __n / int(_S_word_bit);
 5432              		.loc 1 174 7 view .LVU1017
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 5433              		.loc 1 175 7 view .LVU1018
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 5434              		.loc 1 176 7 view .LVU1019
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 5435              		.loc 1 177 7 view .LVU1020
 5436              	.L157:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 5437              		.loc 1 182 7 view .LVU1021
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 5438              		.loc 1 182 7 is_stmt 0 view .LVU1022
 5439              	.LBE3838:
 5440              	.LBE3845:
 5441              	.LBE3853:
 5442              	.LBE3862:
 5443              	.LBE3873:
 5444              	.LBE3888:
 5445              	.LBE3892:
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 5446              		.loc 1 288 7 is_stmt 1 view .LVU1023
 5447              	.LBB3893:
 5448              	.LBB3889:
 5449              	.LBB3874:
 5450              	.LBB3863:
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 5451              		.loc 1 307 7 view .LVU1024
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 5452              		.loc 1 307 7 is_stmt 0 view .LVU1025
 5453              	.LBE3863:
 5454              	.LBE3874:
1156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 5455              		.loc 1 1156 51 view .LVU1026
 5456 002c C6E90224 		strd	r2, r4, [r6, #8]
 5457              	.LVL202:
1156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 5458              		.loc 1 1156 51 view .LVU1027
 5459              	.LBE3889:
 5460              	.LBE3893:
 5461              	.LBB3894:
 5462              	.LBI3894:
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_iterator(this->_M_impl._M_start._M_p, 0); }
 5463              		.loc 1 838 7 is_stmt 1 view .LVU1028
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 264


 5464              	.LBB3895:
 5465              	.LBB3896:
 5466              	.LBI3896:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 5467              		.loc 1 336 5 view .LVU1029
 5468              	.LBB3897:
 5469              	.LBI3897:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 5470              		.loc 1 148 5 view .LVU1030
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 5471              		.loc 1 148 5 is_stmt 0 view .LVU1031
 5472              	.LBE3897:
 5473              	.LBE3896:
 5474              	.LBE3895:
 5475              	.LBE3894:
 5476              	.LBB3898:
 5477              	.LBI3898:
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl._M_finish; }
 5478              		.loc 1 846 7 is_stmt 1 view .LVU1032
 5479              	.LBB3899:
 5480              	.LBI3899:
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x._M_p, __x._M_offset) { }
 5481              		.loc 1 339 5 view .LVU1033
 5482              	.LBB3900:
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 5483              		.loc 1 340 40 is_stmt 0 view .LVU1034
 5484 0030 D7E90254 		ldrd	r5, r4, [r7, #8]
 5485              	.LVL203:
 5486              	.LBB3901:
 5487              	.LBI3901:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 5488              		.loc 1 148 5 is_stmt 1 view .LVU1035
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 5489              		.loc 1 148 5 is_stmt 0 view .LVU1036
 5490              	.LBE3901:
 5491              	.LBE3900:
 5492              	.LBE3899:
 5493              	.LBE3898:
 5494              	.LBB3902:
 5495              	.LBI3902:
1134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 		      iterator __result)
 5496              		.loc 1 1134 7 is_stmt 1 view .LVU1037
 5497              	.LBB3903:
 5498              	.LBB3904:
 5499              	.LBI3904:
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 5500              		.loc 3 560 5 view .LVU1038
 5501              	.LBB3905:
 5502              	.LBI3905:
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 5503              		.loc 3 511 5 view .LVU1039
 5504              	.LBB3906:
 5505              	.LBI3906:
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 5506              		.loc 3 505 5 view .LVU1040
 5507              	.LBB3907:
 5508              	.LBI3907:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 265


 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 5509              		.loc 3 463 5 view .LVU1041
 5510              	.LBB3908:
 5511              	.LBB3909:
 5512              	.LBI3909:
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 5513              		.loc 3 415 2 view .LVU1042
 5514              	.LBB3910:
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 5515              		.loc 3 425 4 is_stmt 0 view .LVU1043
 5516 0034 A942     		cmp	r1, r5
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  if (_Num)
 5517              		.loc 3 424 34 view .LVU1044
 5518 0036 A5EB0107 		sub	r7, r5, r1
 5519              	.LVL204:
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 5520              		.loc 3 425 4 view .LVU1045
 5521 003a 04D0     		beq	.L159
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 5522              		.loc 3 426 23 view .LVU1046
 5523 003c 1846     		mov	r0, r3
 5524 003e 3A46     		mov	r2, r7
 5525 0040 FFF7FEFF 		bl	memmove
 5526              	.LVL205:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 5527              		.loc 3 426 23 view .LVU1047
 5528 0044 0346     		mov	r3, r0
 5529              	.L159:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 5530              		.loc 3 426 23 view .LVU1048
 5531              	.LBE3910:
 5532              	.LBE3909:
 5533              	.LBE3908:
 5534              	.LBE3907:
 5535              	.LBE3906:
 5536              	.LBE3905:
 5537              	.LBE3904:
 5538              	.LBB3917:
 5539              	.LBB3918:
 5540              	.LBB3919:
 5541              	.LBB3920:
 5542              	.LBB3921:
 5543              	.LBB3922:
 5544              	.LBB3923:
 5545              	.LBB3924:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 5546              		.loc 3 378 46 view .LVU1049
 5547 0046 B4F1000C 		subs	ip, r4, #0
 5548              	.LBE3924:
 5549              	.LBE3923:
 5550              	.LBE3922:
 5551              	.LBE3921:
 5552              	.LBE3920:
 5553              	.LBE3919:
 5554              	.LBE3918:
 5555              	.LBE3917:
 5556              	.LBB4049:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 266


 5557              	.LBB3916:
 5558              	.LBB3915:
 5559              	.LBB3914:
 5560              	.LBB3913:
 5561              	.LBB3912:
 5562              	.LBB3911:
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 5563              		.loc 3 427 22 view .LVU1050
 5564 004a 03EB0702 		add	r2, r3, r7
 5565              	.LVL206:
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 5566              		.loc 3 427 22 view .LVU1051
 5567              	.LBE3911:
 5568              	.LBE3912:
 5569              	.LBE3913:
 5570              	.LBE3914:
 5571              	.LBE3915:
 5572              	.LBE3916:
 5573              	.LBE4049:
 5574              	.LBB4050:
 5575              	.LBI4050:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 5576              		.loc 1 336 5 is_stmt 1 view .LVU1052
 5577              	.LBB4051:
 5578              	.LBI4051:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 5579              		.loc 1 148 5 view .LVU1053
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 5580              		.loc 1 148 5 is_stmt 0 view .LVU1054
 5581              	.LBE4051:
 5582              	.LBE4050:
 5583              	.LBB4052:
 5584              	.LBI4052:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 5585              		.loc 1 243 5 is_stmt 1 view .LVU1055
 5586              	.LBB4053:
 5587              	.LBI4053:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 5588              		.loc 1 148 5 view .LVU1056
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 5589              		.loc 1 148 5 is_stmt 0 view .LVU1057
 5590              	.LBE4053:
 5591              	.LBE4052:
 5592              	.LBB4054:
 5593              	.LBI3917:
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 5594              		.loc 3 560 5 is_stmt 1 view .LVU1058
 5595              	.LBB4039:
 5596              	.LBI3918:
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 5597              		.loc 3 511 5 view .LVU1059
 5598              	.LBB4029:
 5599              	.LBI3919:
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 5600              		.loc 3 505 5 view .LVU1060
 5601              	.LBB4019:
 5602              	.LBI3920:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 267


 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 5603              		.loc 3 463 5 view .LVU1061
 5604              	.LBB4009:
 5605              	.LBB3999:
 5606              	.LBI3922:
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 5607              		.loc 3 375 2 view .LVU1062
 5608              	.LBB3989:
 5609              	.LBB3979:
 5610              	.LBB3925:
 5611              	.LBI3925:
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 5612              		.loc 1 224 5 view .LVU1063
 5613              	.LBB3926:
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 5614              		.loc 1 226 7 view .LVU1064
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 5615              		.loc 1 226 7 is_stmt 0 view .LVU1065
 5616              	.LBE3926:
 5617              	.LBE3925:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 5618              		.loc 3 378 46 is_stmt 1 view .LVU1066
 5619 004e 14DD     		ble	.L168
 5620              	.LVL207:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 5621              		.loc 3 378 46 is_stmt 0 view .LVU1067
 5622 0050 0021     		movs	r1, #0
 5623              	.LVL208:
 5624              	.L160:
 5625              	.LBB3927:
 5626              	.LBI3927:
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return reference(_M_p, 1UL << _M_offset); }
 5627              		.loc 1 251 5 is_stmt 1 view .LVU1068
 5628              	.LBB3928:
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 5629              		.loc 1 252 7 view .LVU1069
 5630              	.LBE3928:
 5631              	.LBE3927:
 5632              	.LBB3932:
 5633              	.LBB3933:
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       else
 5634              		.loc 1 93 2 view .LVU1070
 5635              	.LBB3934:
 5636              	.LBI3934:
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 5637              		.loc 1 90 5 view .LVU1071
 5638              	.LBB3935:
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 5639              		.loc 1 95 2 view .LVU1072
 5640              	.LBE3935:
 5641              	.LBE3934:
 5642              	.LBE3933:
 5643              	.LBE3932:
 5644              	.LBB3940:
 5645              	.LBB3930:
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 5646              		.loc 1 252 46 is_stmt 0 view .LVU1073
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 268


 5647 0052 0123     		movs	r3, #1
 5648              	.LBE3930:
 5649              	.LBE3940:
 5650              	.LBB3941:
 5651              	.LBB3942:
 5652              	.LBB3943:
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 5653              		.loc 1 87 23 view .LVU1074
 5654 0054 2868     		ldr	r0, [r5]
 5655              	.LBE3943:
 5656              	.LBE3942:
 5657              	.LBE3941:
 5658              	.LBB3947:
 5659              	.LBB3931:
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 5660              		.loc 1 252 46 view .LVU1075
 5661 0056 8B40     		lsls	r3, r3, r1
 5662              	.LVL209:
 5663              	.LBB3929:
 5664              	.LBI3929:
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_mask(__y) { }
 5665              		.loc 1 77 5 is_stmt 1 view .LVU1076
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_mask(__y) { }
 5666              		.loc 1 77 5 is_stmt 0 view .LVU1077
 5667              	.LBE3929:
 5668              	.LBE3931:
 5669              	.LBE3947:
 5670              	.LBB3948:
 5671              	.LBI3941:
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return _Bit_reference(_M_p, 1UL << _M_offset); }
 5672              		.loc 1 347 5 is_stmt 1 view .LVU1078
 5673              	.LBE3948:
 5674              	.LBE3979:
 5675              	.LBE3989:
 5676              	.LBE3999:
 5677              	.LBE4009:
 5678              	.LBE4019:
 5679              	.LBE4029:
 5680              	.LBE4039:
 5681              	.LBE4054:
 5682              	.LBE3903:
 5683              	.LBE3902:
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 5684              		.loc 1 348 7 view .LVU1079
 5685              	.LBB4073:
 5686              	.LBB4064:
 5687              	.LBB4055:
 5688              	.LBB4040:
 5689              	.LBB4030:
 5690              	.LBB4020:
 5691              	.LBB4010:
 5692              	.LBB4000:
 5693              	.LBB3990:
 5694              	.LBB3980:
 5695              	.LBB3949:
 5696              	.LBB3945:
 5697              	.LBI3945:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 269


  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_mask(__y) { }
 5698              		.loc 1 77 5 view .LVU1080
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_mask(__y) { }
 5699              		.loc 1 77 5 is_stmt 0 view .LVU1081
 5700              	.LBE3945:
 5701              	.LBB3946:
 5702              	.LBI3942:
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return !!(*_M_p & _M_mask); }
 5703              		.loc 1 86 5 is_stmt 1 view .LVU1082
 5704              	.LBB3944:
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 5705              		.loc 1 87 7 view .LVU1083
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 5706              		.loc 1 87 7 is_stmt 0 view .LVU1084
 5707              	.LBE3944:
 5708              	.LBE3946:
 5709              	.LBE3949:
 5710              	.LBB3950:
 5711              	.LBI3932:
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 5712              		.loc 1 90 5 is_stmt 1 view .LVU1085
 5713              	.LBB3938:
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	*_M_p |= _M_mask;
 5714              		.loc 1 92 7 view .LVU1086
 5715 0058 0342     		tst	r3, r0
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       else
 5716              		.loc 1 93 8 is_stmt 0 view .LVU1087
 5717 005a 1068     		ldr	r0, [r2]
 5718              	.LVL210:
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       else
 5719              		.loc 1 93 8 view .LVU1088
 5720 005c 14BF     		ite	ne
 5721 005e 0343     		orrne	r3, r3, r0
 5722              	.LVL211:
 5723              	.LBB3937:
 5724              	.LBB3936:
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 5725              		.loc 1 95 8 view .LVU1089
 5726 0060 20EA0303 		biceq	r3, r0, r3
 5727              	.LBE3936:
 5728              	.LBE3937:
 5729              	.LBE3938:
 5730              	.LBE3950:
 5731              	.LBB3951:
 5732              	.LBB3952:
 5733              	.LBB3953:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 5734              		.loc 1 154 7 view .LVU1090
 5735 0064 1F29     		cmp	r1, #31
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 5736              		.loc 1 154 20 view .LVU1091
 5737 0066 01F10101 		add	r1, r1, #1
 5738              	.LVL212:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 5739              		.loc 1 154 20 view .LVU1092
 5740 006a 1360     		str	r3, [r2]
 5741              	.LVL213:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 270


 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 5742              		.loc 1 154 20 view .LVU1093
 5743              	.LBE3953:
 5744              	.LBE3952:
 5745              	.LBE3951:
 5746              	.LBB3964:
 5747              	.LBB3939:
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 5748              		.loc 1 96 7 is_stmt 1 view .LVU1094
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 5749              		.loc 1 96 7 is_stmt 0 view .LVU1095
 5750              	.LBE3939:
 5751              	.LBE3964:
 5752              	.LBB3965:
 5753              	.LBI3951:
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 5754              		.loc 1 351 5 is_stmt 1 view .LVU1096
 5755              	.LBE3965:
 5756              	.LBE3980:
 5757              	.LBE3990:
 5758              	.LBE4000:
 5759              	.LBE4010:
 5760              	.LBE4020:
 5761              	.LBE4030:
 5762              	.LBE4040:
 5763              	.LBE4055:
 5764              	.LBE4064:
 5765              	.LBE4073:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 5766              		.loc 1 353 7 view .LVU1097
 5767              	.LBB4074:
 5768              	.LBB4065:
 5769              	.LBB4056:
 5770              	.LBB4041:
 5771              	.LBB4031:
 5772              	.LBB4021:
 5773              	.LBB4011:
 5774              	.LBB4001:
 5775              	.LBB3991:
 5776              	.LBB3981:
 5777              	.LBB3966:
 5778              	.LBB3961:
 5779              	.LBI3952:
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 5780              		.loc 1 152 5 view .LVU1098
 5781              	.LBB3958:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 5782              		.loc 1 154 7 view .LVU1099
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 5783              		.loc 1 154 7 is_stmt 0 view .LVU1100
 5784              	.LBE3958:
 5785              	.LBE3961:
 5786              	.LBE3966:
 5787              	.LBE3981:
 5788              	.LBE3991:
 5789              	.LBE4001:
 5790              	.LBE4011:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 271


 5791              	.LBE4021:
 5792              	.LBE4031:
 5793              	.LBE4041:
 5794              	.LBE4056:
 5795              	.LBE4065:
 5796              	.LBE4074:
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 5797              		.loc 1 354 7 is_stmt 1 view .LVU1101
 5798              	.LBB4075:
 5799              	.LBB4066:
 5800              	.LBB4057:
 5801              	.LBB4042:
 5802              	.LBB4032:
 5803              	.LBB4022:
 5804              	.LBB4012:
 5805              	.LBB4002:
 5806              	.LBB3992:
 5807              	.LBB3982:
 5808              	.LBB3967:
 5809              	.LBI3967:
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 5810              		.loc 1 255 5 view .LVU1102
 5811              	.LBE3967:
 5812              	.LBE3982:
 5813              	.LBE3992:
 5814              	.LBE4002:
 5815              	.LBE4012:
 5816              	.LBE4022:
 5817              	.LBE4032:
 5818              	.LBE4042:
 5819              	.LBE4057:
 5820              	.LBE4066:
 5821              	.LBE4075:
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 5822              		.loc 1 257 7 view .LVU1103
 5823              	.LBB4076:
 5824              	.LBB4067:
 5825              	.LBB4058:
 5826              	.LBB4043:
 5827              	.LBB4033:
 5828              	.LBB4023:
 5829              	.LBB4013:
 5830              	.LBB4003:
 5831              	.LBB3993:
 5832              	.LBB3983:
 5833              	.LBB3973:
 5834              	.LBB3968:
 5835              	.LBI3968:
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 5836              		.loc 1 152 5 view .LVU1104
 5837              	.LBE3968:
 5838              	.LBE3973:
 5839              	.LBE3983:
 5840              	.LBE3993:
 5841              	.LBE4003:
 5842              	.LBE4013:
 5843              	.LBE4023:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 272


 5844              	.LBE4033:
 5845              	.LBE4043:
 5846              	.LBE4058:
 5847              	.LBE4067:
 5848              	.LBE4076:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 5849              		.loc 1 154 7 view .LVU1105
 5850              	.LBB4077:
 5851              	.LBB4068:
 5852              	.LBB4059:
 5853              	.LBB4044:
 5854              	.LBB4034:
 5855              	.LBB4024:
 5856              	.LBB4014:
 5857              	.LBB4004:
 5858              	.LBB3994:
 5859              	.LBB3984:
 5860              	.LBB3974:
 5861              	.LBB3962:
 5862              	.LBB3959:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 5863              		.loc 1 154 7 is_stmt 0 view .LVU1106
 5864 006c 02D1     		bne	.L164
 5865              	.LVL214:
 5866              	.LBB3954:
 5867              	.LBI3954:
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 5868              		.loc 1 152 5 is_stmt 1 view .LVU1107
 5869              	.LBB3955:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  ++_M_p;
 5870              		.loc 1 156 4 view .LVU1108
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 5871              		.loc 1 157 4 view .LVU1109
 5872 006e 0435     		adds	r5, r5, #4
 5873              	.LVL215:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 5874              		.loc 1 157 4 is_stmt 0 view .LVU1110
 5875              	.LBE3955:
 5876              	.LBE3954:
 5877              	.LBE3959:
 5878              	.LBE3962:
 5879              	.LBE3974:
 5880              	.LBE3984:
 5881              	.LBE3994:
 5882              	.LBE4004:
 5883              	.LBE4014:
 5884              	.LBE4024:
 5885              	.LBE4034:
 5886              	.LBE4044:
 5887              	.LBE4059:
 5888              	.LBE4068:
 5889              	.LBE4077:
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 5890              		.loc 1 354 7 is_stmt 1 view .LVU1111
 5891              	.LBB4078:
 5892              	.LBB4069:
 5893              	.LBB4060:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 273


 5894              	.LBB4045:
 5895              	.LBB4035:
 5896              	.LBB4025:
 5897              	.LBB4015:
 5898              	.LBB4005:
 5899              	.LBB3995:
 5900              	.LBB3985:
 5901              	.LBB3975:
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 5902              		.loc 1 255 5 view .LVU1112
 5903              	.LBE3975:
 5904              	.LBE3985:
 5905              	.LBE3995:
 5906              	.LBE4005:
 5907              	.LBE4015:
 5908              	.LBE4025:
 5909              	.LBE4035:
 5910              	.LBE4045:
 5911              	.LBE4060:
 5912              	.LBE4069:
 5913              	.LBE4078:
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 5914              		.loc 1 257 7 view .LVU1113
 5915              	.LBB4079:
 5916              	.LBB4070:
 5917              	.LBB4061:
 5918              	.LBB4046:
 5919              	.LBB4036:
 5920              	.LBB4026:
 5921              	.LBB4016:
 5922              	.LBB4006:
 5923              	.LBB3996:
 5924              	.LBB3986:
 5925              	.LBB3976:
 5926              	.LBB3971:
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 5927              		.loc 1 152 5 view .LVU1114
 5928              	.LBE3971:
 5929              	.LBE3976:
 5930              	.LBE3986:
 5931              	.LBE3996:
 5932              	.LBE4006:
 5933              	.LBE4016:
 5934              	.LBE4026:
 5935              	.LBE4036:
 5936              	.LBE4046:
 5937              	.LBE4061:
 5938              	.LBE4070:
 5939              	.LBE4079:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 5940              		.loc 1 154 7 view .LVU1115
 5941              	.LBB4080:
 5942              	.LBB4071:
 5943              	.LBB4062:
 5944              	.LBB4047:
 5945              	.LBB4037:
 5946              	.LBB4027:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 274


 5947              	.LBB4017:
 5948              	.LBB4007:
 5949              	.LBB3997:
 5950              	.LBB3987:
 5951              	.LBB3977:
 5952              	.LBB3972:
 5953              	.LBB3969:
 5954              	.LBI3969:
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 5955              		.loc 1 152 5 view .LVU1116
 5956              	.LBB3970:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  ++_M_p;
 5957              		.loc 1 156 4 view .LVU1117
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 5958              		.loc 1 157 4 view .LVU1118
 5959 0070 0432     		adds	r2, r2, #4
 5960              	.LVL216:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 5961              		.loc 1 157 4 is_stmt 0 view .LVU1119
 5962              	.LBE3970:
 5963              	.LBE3969:
 5964              	.LBE3972:
 5965              	.LBE3977:
 5966              	.LBB3978:
 5967              	.LBB3963:
 5968              	.LBB3960:
 5969              	.LBB3957:
 5970              	.LBB3956:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  ++_M_p;
 5971              		.loc 1 156 14 view .LVU1120
 5972 0072 0021     		movs	r1, #0
 5973              	.LVL217:
 5974              	.L164:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  ++_M_p;
 5975              		.loc 1 156 14 view .LVU1121
 5976              	.LBE3956:
 5977              	.LBE3957:
 5978              	.LBE3960:
 5979              	.LBE3963:
 5980              	.LBE3978:
 5981              	.LBE3987:
 5982              	.LBE3997:
 5983              	.LBE4007:
 5984              	.LBE4017:
 5985              	.LBE4027:
 5986              	.LBE4037:
 5987              	.LBE4047:
 5988              	.LBE4062:
 5989              	.LBE4071:
 5990              	.LBE4080:
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 5991              		.loc 1 258 7 is_stmt 1 view .LVU1122
 5992              	.LBB4081:
 5993              	.LBB4072:
 5994              	.LBB4063:
 5995              	.LBB4048:
 5996              	.LBB4038:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 275


 5997              	.LBB4028:
 5998              	.LBB4018:
 5999              	.LBB4008:
 6000              	.LBB3998:
 6001              	.LBB3988:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 6002              		.loc 3 378 4 view .LVU1123
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 6003              		.loc 3 378 46 view .LVU1124
 6004 0074 BCF1010C 		subs	ip, ip, #1
 6005              	.LVL218:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 6006              		.loc 3 378 46 is_stmt 0 view .LVU1125
 6007 0078 EBD1     		bne	.L160
 6008              	.LVL219:
 6009              	.L168:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 6010              		.loc 3 378 46 view .LVU1126
 6011              	.LBE3988:
 6012              	.LBE3998:
 6013              	.LBE4008:
 6014              	.LBE4018:
 6015              	.LBE4028:
 6016              	.LBE4038:
 6017              	.LBE4048:
 6018              	.LBE4063:
 6019              	.LBE4072:
 6020              	.LBE4081:
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 6021              		.loc 1 684 7 view .LVU1127
 6022 007a 3046     		mov	r0, r6
 6023 007c BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 6024              	.LVL220:
 6025              	.L174:
 6026              	.LBB4082:
 6027              	.LBB3890:
 6028              	.LBB3875:
 6029              	.LBB3807:
 6030              	.LBB3808:
 6031              	.LBI3808:
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return _Bit_alloc_traits::allocate(_M_impl, _S_nword(__n)); }
 6032              		.loc 1 556 7 is_stmt 1 view .LVU1128
 6033              	.LBB3809:
 6034              	.LBI3809:
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return (__n + int(_S_word_bit) - 1) / int(_S_word_bit); }
 6035              		.loc 1 579 7 view .LVU1129
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return (__n + int(_S_word_bit) - 1) / int(_S_word_bit); }
 6036              		.loc 1 579 7 is_stmt 0 view .LVU1130
 6037              	.LBE3809:
 6038              	.LBB3811:
 6039              	.LBI3811:
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 6040              		.loc 6 459 7 is_stmt 1 view .LVU1131
 6041              	.LBB3812:
 6042              	.LBI3812:
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 6043              		.loc 5 103 7 view .LVU1132
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 276


 6044              	.LBE3812:
 6045              	.LBE3811:
 6046              	.LBB3819:
 6047              	.LBB3810:
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     };
 6048              		.loc 1 580 40 is_stmt 0 view .LVU1133
 6049 0080 04F11F08 		add	r8, r4, #31
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     };
 6050              		.loc 1 580 62 view .LVU1134
 6051 0084 4FEA5819 		lsr	r9, r8, #5
 6052              	.LVL221:
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     };
 6053              		.loc 1 580 62 view .LVU1135
 6054              	.LBE3810:
 6055              	.LBE3819:
 6056              	.LBE3808:
 6057              	.LBE3807:
 6058              	.LBE3875:
 6059              	.LBB3876:
 6060              	.LBB3864:
 6061              	.LBB3854:
 6062              	.LBB3846:
 6063              	.LBB3839:
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 6064              		.loc 1 175 19 view .LVU1136
 6065 0088 AC42     		cmp	r4, r5
 6066 008a A8BF     		it	ge
 6067 008c A046     		movge	r8, r4
 6068              	.LBE3839:
 6069              	.LBE3846:
 6070              	.LBE3854:
 6071              	.LBE3864:
 6072              	.LBE3876:
 6073              	.LBB3877:
 6074              	.LBB3828:
 6075              	.LBB3823:
 6076              	.LBB3820:
 6077              	.LBB3816:
 6078              	.LBB3813:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 6079              		.loc 5 115 41 view .LVU1137
 6080 008e 4FEA8909 		lsl	r9, r9, #2
 6081              	.LVL222:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 6082              		.loc 5 115 41 view .LVU1138
 6083              	.LBE3813:
 6084              	.LBE3816:
 6085              	.LBE3820:
 6086              	.LBE3823:
 6087              	.LBE3828:
 6088              	.LBE3877:
 6089              	.LBB3878:
 6090              	.LBB3865:
 6091              	.LBB3855:
 6092              	.LBB3847:
 6093              	.LBB3840:
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 277


 6094              		.loc 1 175 19 view .LVU1139
 6095 0092 4FEA6818 		asr	r8, r8, #5
 6096              	.LBE3840:
 6097              	.LBE3847:
 6098              	.LBE3855:
 6099              	.LBE3865:
 6100              	.LBE3878:
 6101              	.LBB3879:
 6102              	.LBB3829:
 6103              	.LBB3824:
 6104              	.LBB3821:
 6105              	.LBB3817:
 6106              	.LBB3814:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 6107              		.loc 5 115 41 view .LVU1140
 6108 0096 4846     		mov	r0, r9
 6109              	.LVL223:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 6110              		.loc 5 115 41 view .LVU1141
 6111 0098 FFF7FEFF 		bl	_Znwj
 6112              	.LVL224:
 6113              	.LBE3814:
 6114              	.LBE3817:
 6115              	.LBE3821:
 6116              	.LBE3824:
 6117              	.LBE3829:
 6118              	.LBE3879:
 6119              	.LBB3880:
 6120              	.LBB3866:
 6121              	.LBB3856:
 6122              	.LBB3848:
 6123              	.LBB3841:
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 6124              		.loc 1 176 11 view .LVU1142
 6125 009c 291B     		subs	r1, r5, r4
 6126 009e 04F01F04 		and	r4, r4, #31
 6127              	.LVL225:
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 6128              		.loc 1 176 11 view .LVU1143
 6129              	.LBE3841:
 6130              	.LBE3848:
 6131              	.LBE3856:
 6132              	.LBE3866:
 6133              	.LBE3880:
 6134              	.LBB3881:
 6135              	.LBB3830:
1148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    this->_M_impl._M_start = iterator(std::__addressof(*__q), 0);
 6136              		.loc 1 1148 44 view .LVU1144
 6137 00a2 00EB0902 		add	r2, r0, r9
 6138              	.LBE3830:
 6139              	.LBE3881:
 6140              	.LBB3882:
 6141              	.LBB3867:
 6142              	.LBB3857:
 6143              	.LBB3849:
 6144              	.LBB3842:
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 278


 6145              		.loc 1 176 11 view .LVU1145
 6146 00a6 01F01F01 		and	r1, r1, #31
 6147              	.LBE3842:
 6148              	.LBE3849:
 6149              	.LBE3857:
 6150              	.LBE3867:
 6151              	.LBE3882:
 6152              	.LBB3883:
 6153              	.LBB3831:
 6154              	.LBB3825:
 6155              	.LBB3822:
 6156              	.LBB3818:
 6157              	.LBB3815:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 6158              		.loc 5 115 41 view .LVU1146
 6159 00aa 0346     		mov	r3, r0
 6160              	.LVL226:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 6161              		.loc 5 115 41 view .LVU1147
 6162              	.LBE3815:
 6163              	.LBE3818:
 6164              	.LBE3822:
 6165              	.LBE3825:
1148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    this->_M_impl._M_start = iterator(std::__addressof(*__q), 0);
 6166              		.loc 1 1148 38 view .LVU1148
 6167 00ac 3261     		str	r2, [r6, #16]
 6168              	.LVL227:
 6169              	.LBB3826:
 6170              	.LBI3826:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 6171              		.loc 1 243 5 is_stmt 1 view .LVU1149
 6172              	.LBB3827:
 6173              	.LBI3827:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 6174              		.loc 1 148 5 view .LVU1150
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 6175              		.loc 1 148 5 is_stmt 0 view .LVU1151
 6176              	.LBE3827:
 6177              	.LBE3826:
 6178              	.LBE3831:
 6179              	.LBE3883:
 6180              	.LBB3884:
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 6181              		.loc 1 303 5 is_stmt 1 view .LVU1152
 6182              	.LBB3868:
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __tmp += __n;
 6183              		.loc 1 305 7 view .LVU1153
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __tmp;
 6184              		.loc 1 306 7 view .LVU1154
 6185              	.LBB3858:
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 6186              		.loc 1 285 5 view .LVU1155
 6187              	.LBE3858:
 6188              	.LBE3868:
 6189              	.LBE3884:
 6190              	.LBE3890:
 6191              	.LBE4082:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 279


 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 6192              		.loc 1 287 7 view .LVU1156
 6193              	.LBB4083:
 6194              	.LBB3891:
 6195              	.LBB3885:
 6196              	.LBB3869:
 6197              	.LBB3859:
 6198              	.LBB3850:
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 6199              		.loc 1 172 5 view .LVU1157
 6200              	.LBB3843:
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_p += __n / int(_S_word_bit);
 6201              		.loc 1 174 7 view .LVU1158
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 6202              		.loc 1 175 7 view .LVU1159
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 6203              		.loc 1 175 12 is_stmt 0 view .LVU1160
 6204 00ae 00EB8802 		add	r2, r0, r8, lsl #2
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 6205              		.loc 1 176 7 is_stmt 1 view .LVU1161
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 6206              		.loc 1 176 11 is_stmt 0 view .LVU1162
 6207 00b2 58BF     		it	pl
 6208 00b4 4C42     		rsbpl	r4, r1, #0
 6209              	.LVL228:
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 6210              		.loc 1 177 7 is_stmt 1 view .LVU1163
 6211              	.LBE3843:
 6212              	.LBE3850:
 6213              	.LBE3859:
 6214              	.LBE3869:
 6215              	.LBE3885:
 6216              	.LBB3886:
 6217              	.LBB3832:
1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 6218              		.loc 1 1149 6 is_stmt 0 view .LVU1164
 6219 00b6 7560     		str	r5, [r6, #4]
 6220 00b8 3060     		str	r0, [r6]
 6221              	.LBE3832:
 6222              	.LBE3886:
 6223              	.LBB3887:
 6224              	.LBB3870:
 6225              	.LBB3860:
 6226              	.LBB3851:
 6227              	.LBB3844:
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 6228              		.loc 1 177 7 view .LVU1165
 6229 00ba AC42     		cmp	r4, r5
 6230 00bc 01DA     		bge	.L173
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  --_M_p;
 6231              		.loc 1 179 4 is_stmt 1 view .LVU1166
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  --_M_p;
 6232              		.loc 1 179 8 is_stmt 0 view .LVU1167
 6233 00be 2034     		adds	r4, r4, #32
 6234              	.LVL229:
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 6235              		.loc 1 180 4 is_stmt 1 view .LVU1168
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 280


 6236 00c0 043A     		subs	r2, r2, #4
 6237              	.L173:
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 6238              		.loc 1 180 4 is_stmt 0 view .LVU1169
 6239 00c2 3968     		ldr	r1, [r7]
 6240 00c4 B2E7     		b	.L157
 6241              	.LBE3844:
 6242              	.LBE3851:
 6243              	.LBE3860:
 6244              	.LBE3870:
 6245              	.LBE3887:
 6246              	.LBE3891:
 6247              	.LBE4083:
 6248              		.cfi_endproc
 6249              	.LFE4314:
 6251              		.weak	_ZNSt6vectorIbSaIbEEC1ERKS1_
 6252              		.thumb_set _ZNSt6vectorIbSaIbEEC1ERKS1_,_ZNSt6vectorIbSaIbEEC2ERKS1_
 6253 00c6 00BF     		.section	.text._ZNSt6vectorIN9Sequencer15DrumPatternBeatESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9_
 6254              		.align	1
 6255              		.p2align 2,,3
 6256              		.weak	_ZNSt6vectorIN9Sequencer15DrumPatternBeatESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx1
 6257              		.syntax unified
 6258              		.thumb
 6259              		.thumb_func
 6260              		.fpu fpv5-d16
 6262              	_ZNSt6vectorIN9Sequencer15DrumPatternBeatESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__norm
 6263              	.LVL230:
 6264              	.LFB4164:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_realloc_insert(iterator __position, _Args&&... __args)
 6265              		.loc 4 426 7 is_stmt 1 view -0
 6266              		.cfi_startproc
 6267              		@ args = 0, pretend = 0, frame = 32
 6268              		@ frame_needed = 0, uses_anonymous_args = 0
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_realloc_insert(iterator __position, _Args&&... __args)
 6269              		.loc 4 426 7 is_stmt 0 view .LVU1171
 6270 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 6271              		.cfi_def_cfa_offset 36
 6272              		.cfi_offset 4, -36
 6273              		.cfi_offset 5, -32
 6274              		.cfi_offset 6, -28
 6275              		.cfi_offset 7, -24
 6276              		.cfi_offset 8, -20
 6277              		.cfi_offset 9, -16
 6278              		.cfi_offset 10, -12
 6279              		.cfi_offset 11, -8
 6280              		.cfi_offset 14, -4
 6281 0004 89B0     		sub	sp, sp, #36
 6282              		.cfi_def_cfa_offset 72
 6283 0006 0368     		ldr	r3, [r0]
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_realloc_insert(iterator __position, _Args&&... __args)
 6284              		.loc 4 426 7 view .LVU1172
 6285 0008 1446     		mov	r4, r2
 6286              	.LBB4346:
 6287              	.LBB4347:
 6288              	.LBB4348:
 6289              	.LBB4349:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 281


 6290              		.loc 8 919 50 view .LVU1173
 6291 000a A44A     		ldr	r2, .L222
 6292              	.LVL231:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 6293              		.loc 8 919 50 view .LVU1174
 6294              	.LBE4349:
 6295              	.LBE4348:
 6296              	.LBE4347:
 6297              	.LBE4346:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_realloc_insert(iterator __position, _Args&&... __args)
 6298              		.loc 4 426 7 view .LVU1175
 6299 000c 0490     		str	r0, [sp, #16]
 6300 000e 4068     		ldr	r0, [r0, #4]
 6301              	.LVL232:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_realloc_insert(iterator __position, _Args&&... __args)
 6302              		.loc 4 426 7 view .LVU1176
 6303 0010 0293     		str	r3, [sp, #8]
 6304              	.LBB4360:
 6305              	.LBB4356:
 6306              	.LBB4353:
 6307              	.LBB4350:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 6308              		.loc 8 919 50 view .LVU1177
 6309 0012 C31A     		subs	r3, r0, r3
 6310              	.LBE4350:
 6311              	.LBE4353:
 6312              	.LBE4356:
 6313              	.LBE4360:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_realloc_insert(iterator __position, _Args&&... __args)
 6314              		.loc 4 426 7 view .LVU1178
 6315 0014 0191     		str	r1, [sp, #4]
 6316              	.LBB4361:
 6317              	.LBB4357:
 6318              	.LBB4354:
 6319              	.LBB4351:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 6320              		.loc 8 919 50 view .LVU1179
 6321 0016 9B10     		asrs	r3, r3, #2
 6322 0018 CDE90601 		strd	r0, r1, [sp, #24]
 6323              	.LVL233:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 6324              		.loc 8 919 50 view .LVU1180
 6325              	.LBE4351:
 6326              	.LBE4354:
 6327              	.LBE4357:
 6328              	.LBI4346:
1756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 6329              		.loc 8 1756 7 is_stmt 1 view .LVU1181
 6330              	.LBB4358:
 6331              	.LBB4355:
 6332              	.LBI4348:
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 6333              		.loc 8 918 7 view .LVU1182
 6334              	.LBB4352:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 6335              		.loc 8 919 50 is_stmt 0 view .LVU1183
 6336 001c 02FB03F3 		mul	r3, r2, r3
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 282


 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 6337              		.loc 8 919 50 view .LVU1184
 6338              	.LBE4352:
 6339              	.LBE4355:
1758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(__N(__s));
 6340              		.loc 8 1758 2 view .LVU1185
 6341 0020 9F49     		ldr	r1, .L222+4
 6342              	.LVL234:
1758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(__N(__s));
 6343              		.loc 8 1758 2 view .LVU1186
 6344 0022 8B42     		cmp	r3, r1
 6345 0024 00F03681 		beq	.L220
 6346 0028 012B     		cmp	r3, #1
 6347 002a 1A46     		mov	r2, r3
 6348 002c 38BF     		it	cc
 6349 002e 0122     		movcc	r2, #1
 6350 0030 9B18     		adds	r3, r3, r2
 6351 0032 80F02A81 		bcs	.L178
 6352              	.LVL235:
1758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(__N(__s));
 6353              		.loc 8 1758 2 view .LVU1187
 6354              	.LBE4358:
 6355              	.LBE4361:
 6356              	.LBB4362:
 6357              	.LBI4362:
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 6358              		.loc 8 811 7 is_stmt 1 view .LVU1188
 6359              	.LBB4363:
 6360              	.LBI4363:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 6361              		.loc 11 978 7 view .LVU1189
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 6362              		.loc 11 978 7 is_stmt 0 view .LVU1190
 6363              	.LBE4363:
 6364              	.LBE4362:
 6365              	.LBB4365:
 6366              	.LBI4365:
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 6367              		.loc 11 1202 5 is_stmt 1 view .LVU1191
 6368              	.LBB4366:
 6369              		.loc 11 1205 27 is_stmt 0 view .LVU1192
 6370 0036 DDE90120 		ldrd	r2, r0, [sp, #4]
 6371              	.LVL236:
 6372              		.loc 11 1205 27 view .LVU1193
 6373 003a 161A     		subs	r6, r2, r0
 6374              	.LVL237:
 6375              		.loc 11 1205 27 view .LVU1194
 6376              	.LBE4366:
 6377              	.LBE4365:
 6378              	.LBB4368:
 6379              	.LBI4368:
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 6380              		.loc 8 343 7 is_stmt 1 view .LVU1195
 6381              	.LBB4369:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 6382              		.loc 8 346 18 is_stmt 0 view .LVU1196
 6383 003c 002B     		cmp	r3, #0
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 283


 6384 003e 40F01581 		bne	.L221
 6385 0042 3C25     		movs	r5, #60
 6386 0044 0593     		str	r3, [sp, #20]
 6387 0046 0393     		str	r3, [sp, #12]
 6388              	.LVL238:
 6389              	.L193:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 6390              		.loc 8 346 18 view .LVU1197
 6391              	.LBE4369:
 6392              	.LBE4368:
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   __new_start + __elems_before,
 6393              		.loc 4 449 28 view .LVU1198
 6394 0048 039F     		ldr	r7, [sp, #12]
 6395              	.LBB4381:
 6396              	.LBB4382:
 6397              	.LBB4383:
 6398              	.LBB4384:
 6399              		.file 16 "Sequencer.h"
   1:Sequencer.h   **** #pragma once
   2:Sequencer.h   **** #include <cstdint>
   3:Sequencer.h   **** #include <vector>
   4:Sequencer.h   **** #include <array>
   5:Sequencer.h   **** #include "DrumSynth.h"
   6:Sequencer.h   **** #include "ChordSynth.h"
   7:Sequencer.h   **** 
   8:Sequencer.h   **** 
   9:Sequencer.h   **** class Sequencer
  10:Sequencer.h   **** {
  11:Sequencer.h   **** public:
  12:Sequencer.h   ****     Sequencer(float sample_rate, DrumSynth& drum_synth, ChordSynth& chord_synth);
  13:Sequencer.h   **** 
  14:Sequencer.h   ****     void tick();
  15:Sequencer.h   **** 
  16:Sequencer.h   ****     void scroll_pattern(bool direction); // Pattern select switches call this function with 0,1 for
  17:Sequencer.h   **** 
  18:Sequencer.h   **** private:
  19:Sequencer.h   ****     uint8_t bpm{80};
  20:Sequencer.h   ****     float sample_rate{};
  21:Sequencer.h   ****     int current_tick;
  22:Sequencer.h   **** 
  23:Sequencer.h   ****     struct DrumPatternBeat {
 6400              		.loc 16 23 12 view .LVU1199
 6401 004a 2146     		mov	r1, r4
 6402              	.LBE4384:
 6403              	.LBE4383:
 6404              	.LBE4382:
 6405              	.LBE4381:
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   __new_start + __elems_before,
 6406              		.loc 4 449 28 view .LVU1200
 6407 004c 3E44     		add	r6, r6, r7
 6408              	.LVL239:
 6409              	.LBB4389:
 6410              	.LBI4381:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 6411              		.loc 6 507 2 is_stmt 1 view .LVU1201
 6412              	.LBB4387:
 6413              	.LBI4382:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 284


 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 6414              		.loc 5 148 2 view .LVU1202
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 6415              		.loc 5 148 2 is_stmt 0 view .LVU1203
 6416              	.LBE4387:
 6417              	.LBE4389:
 6418              		.loc 12 175 3 is_stmt 1 view .LVU1204
 6419              	.LBB4390:
 6420              	.LBB4388:
 6421              	.LBB4386:
 6422              	.LBI4383:
 6423              		.loc 16 23 12 view .LVU1205
 6424              	.LBB4385:
 6425 004e 3046     		mov	r0, r6
 6426 0050 FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEEC1ERKS1_
 6427              	.LVL240:
 6428              		.loc 16 23 12 is_stmt 0 view .LVU1206
 6429 0054 04F11401 		add	r1, r4, #20
 6430 0058 06F11400 		add	r0, r6, #20
 6431 005c FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEEC1ERKS1_
 6432              	.LVL241:
 6433 0060 04F12801 		add	r1, r4, #40
 6434 0064 06F12800 		add	r0, r6, #40
 6435 0068 FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEEC1ERKS1_
 6436              	.LVL242:
 6437              		.loc 16 23 12 view .LVU1207
 6438              	.LBE4385:
 6439              	.LBE4386:
 6440              	.LBE4388:
 6441              	.LBE4390:
 6442              	.LBB4391:
 6443              	.LBI4391:
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 6444              		.loc 8 465 7 is_stmt 1 view .LVU1208
 6445              	.LBB4392:
 6446              	.LBB4393:
 6447              	.LBI4393:
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 6448              		.loc 8 453 7 view .LVU1209
 6449              	.LBB4394:
 6450              	.LBI4394:
 6451              		.loc 13 1022 5 view .LVU1210
 6452              	.LBB4395:
 6453              	.LBI4395:
1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		   _ForwardIterator __result, _Allocator& __alloc)
 6454              		.loc 13 1000 5 view .LVU1211
 6455              	.LBB4396:
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 6456              		.loc 13 1013 22 view .LVU1212
 6457 006c 019B     		ldr	r3, [sp, #4]
 6458              	.LVL243:
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 6459              		.loc 13 1013 22 is_stmt 0 view .LVU1213
 6460 006e 1946     		mov	r1, r3
 6461 0070 029B     		ldr	r3, [sp, #8]
 6462              	.LVL244:
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 285


 6463              		.loc 13 1013 22 view .LVU1214
 6464 0072 9942     		cmp	r1, r3
 6465 0074 76D0     		beq	.L182
 6466 0076 03F13C06 		add	r6, r3, #60
1012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       for (; __first != __last; ++__first, (void)++__cur)
 6467              		.loc 13 1012 24 view .LVU1215
 6468 007a BA46     		mov	r10, r7
 6469 007c 9846     		mov	r8, r3
 6470 007e 00E0     		b	.L186
 6471              	.LVL245:
 6472              	.L194:
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 6473              		.loc 13 1013 44 view .LVU1216
 6474 0080 9A46     		mov	r10, r3
 6475              	.LVL246:
 6476              	.L186:
 6477              	.LBB4397:
 6478              	.LBI4397:
 968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			_Allocator& __alloc)
 6479              		.loc 13 968 5 is_stmt 1 view .LVU1217
 6480              	.LBB4398:
 6481              	.LBB4399:
 6482              	.LBI4399:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 6483              		.loc 6 507 2 view .LVU1218
 6484              	.LBB4400:
 6485              	.LBI4400:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 6486              		.loc 5 148 2 view .LVU1219
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 6487              		.loc 5 148 2 is_stmt 0 view .LVU1220
 6488              	.LBE4400:
 6489              	.LBE4399:
 6490              	.LBE4398:
 6491              	.LBE4397:
 6492              	.LBE4396:
 6493              	.LBE4395:
 6494              	.LBE4394:
 6495              	.LBE4393:
 6496              	.LBE4392:
 6497              	.LBE4391:
 6498              		.loc 12 175 3 is_stmt 1 view .LVU1221
 6499              	.LBB4530:
 6500              	.LBB4528:
 6501              	.LBB4526:
 6502              	.LBB4524:
 6503              	.LBB4522:
 6504              	.LBB4520:
 6505              	.LBB4519:
 6506              	.LBB4518:
 6507              	.LBB4465:
 6508              	.LBB4464:
 6509              	.LBB4401:
 6510              	.LBI4401:
 6511              		.loc 16 23 12 view .LVU1222
 6512              	.LBB4402:
 6513              	.LBI4402:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 286


 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 6514              		.loc 1 687 7 view .LVU1223
 6515              	.LBB4403:
 6516              	.LBI4403:
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 6517              		.loc 1 546 7 view .LVU1224
 6518              	.LBB4404:
 6519              	.LBI4404:
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 6520              		.loc 1 509 2 view .LVU1225
 6521              	.LBB4405:
 6522              	.LBI4405:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 6523              		.loc 15 147 7 view .LVU1226
 6524              	.LBB4406:
 6525              	.LBI4406:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6526              		.loc 5 82 7 view .LVU1227
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6527              		.loc 5 82 7 is_stmt 0 view .LVU1228
 6528              	.LBE4406:
 6529              	.LBE4405:
 6530              	.LBB4407:
 6531              	.LBI4407:
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish)
 6532              		.loc 1 472 2 is_stmt 1 view .LVU1229
 6533              	.LBB4408:
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 6534              		.loc 1 474 43 is_stmt 0 view .LVU1230
 6535 0082 A6F13C09 		sub	r9, r6, #60
 6536 0086 A6F13407 		sub	r7, r6, #52
 6537 008a 0AF1080B 		add	fp, r10, #8
 6538              	.LBB4409:
 6539              	.LBB4410:
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_end_of_storage = _Bit_pointer();
 6540              		.loc 1 490 4 view .LVU1231
 6541 008e 0023     		movs	r3, #0
 6542              	.LBE4410:
 6543              	.LBE4409:
 6544              	.LBE4408:
 6545              	.LBE4407:
 6546              	.LBE4404:
 6547              	.LBE4403:
 6548              	.LBE4402:
 6549              	.LBB4419:
 6550              	.LBB4420:
 6551              	.LBB4421:
 6552              	.LBB4422:
 6553              	.LBB4423:
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 6554              		.loc 1 474 43 view .LVU1232
 6555 0090 A6F12804 		sub	r4, r6, #40
 6556 0094 A6F12005 		sub	r5, r6, #32
 6557 0098 0AF1140E 		add	lr, r10, #20
 6558 009c 0AF11C0C 		add	ip, r10, #28
 6559              	.LBE4423:
 6560              	.LBE4422:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 287


 6561              	.LBE4421:
 6562              	.LBE4420:
 6563              	.LBE4419:
 6564              	.LBB4440:
 6565              	.LBB4441:
 6566              	.LBB4442:
 6567              	.LBB4443:
 6568              	.LBB4444:
 6569 00a0 A6F11402 		sub	r2, r6, #20
 6570              	.LBE4444:
 6571              	.LBE4443:
 6572              	.LBE4442:
 6573              	.LBE4441:
 6574              	.LBE4440:
 6575              	.LBB4459:
 6576              	.LBB4418:
 6577              	.LBB4417:
 6578              	.LBB4416:
 6579              	.LBB4415:
 6580 00a4 99E80300 		ldm	r9, {r0, r1}
 6581              	.LVL247:
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 6582              		.loc 1 474 43 view .LVU1233
 6583 00a8 8AE80300 		stm	r10, {r0, r1}
 6584 00ac 97E80300 		ldm	r7, {r0, r1}
 6585 00b0 8BE80300 		stm	fp, {r0, r1}
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 6586              		.loc 1 474 26 view .LVU1234
 6587 00b4 56F82C1C 		ldr	r1, [r6, #-44]
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 6588              		.loc 1 474 43 view .LVU1235
 6589 00b8 CAF81010 		str	r1, [r10, #16]
 6590              	.LVL248:
 6591              	.LBB4414:
 6592              	.LBI4409:
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 6593              		.loc 1 488 2 is_stmt 1 view .LVU1236
 6594              	.LBB4413:
 6595              	.LBB4411:
 6596              	.LBI4411:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 6597              		.loc 1 241 5 view .LVU1237
 6598              	.LBB4412:
 6599              	.LBI4412:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 6600              		.loc 1 148 5 view .LVU1238
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 6601              		.loc 1 148 5 is_stmt 0 view .LVU1239
 6602              	.LBE4412:
 6603              	.LBE4411:
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_end_of_storage = _Bit_pointer();
 6604              		.loc 1 490 4 view .LVU1240
 6605 00bc 46E90D33 		strd	r3, r3, [r6, #-52]
 6606 00c0 97E80300 		ldm	r7, {r0, r1}
 6607 00c4 89E80300 		stm	r9, {r0, r1}
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 6608              		.loc 1 491 22 view .LVU1241
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 288


 6609 00c8 46F82C3C 		str	r3, [r6, #-44]
 6610              	.LVL249:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 6611              		.loc 1 491 22 view .LVU1242
 6612              	.LBE4413:
 6613              	.LBE4414:
 6614              	.LBE4415:
 6615              	.LBE4416:
 6616              	.LBE4417:
 6617              	.LBE4418:
 6618              	.LBE4459:
 6619              	.LBB4460:
 6620              	.LBI4419:
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 6621              		.loc 1 687 7 is_stmt 1 view .LVU1243
 6622              	.LBB4438:
 6623              	.LBI4420:
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 6624              		.loc 1 546 7 view .LVU1244
 6625              	.LBB4436:
 6626              	.LBI4421:
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 6627              		.loc 1 509 2 view .LVU1245
 6628              	.LBB4432:
 6629              	.LBI4432:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 6630              		.loc 15 147 7 view .LVU1246
 6631              	.LBB4433:
 6632              	.LBI4433:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6633              		.loc 5 82 7 view .LVU1247
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6634              		.loc 5 82 7 is_stmt 0 view .LVU1248
 6635              	.LBE4433:
 6636              	.LBE4432:
 6637              	.LBB4434:
 6638              	.LBI4422:
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish)
 6639              		.loc 1 472 2 is_stmt 1 view .LVU1249
 6640              	.LBB4430:
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 6641              		.loc 1 474 43 is_stmt 0 view .LVU1250
 6642 00cc 94E80300 		ldm	r4, {r0, r1}
 6643 00d0 8EE80300 		stm	lr, {r0, r1}
 6644 00d4 95E80300 		ldm	r5, {r0, r1}
 6645 00d8 8CE80300 		stm	ip, {r0, r1}
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 6646              		.loc 1 474 26 view .LVU1251
 6647 00dc 56F8181C 		ldr	r1, [r6, #-24]
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 6648              		.loc 1 474 43 view .LVU1252
 6649 00e0 CAF82410 		str	r1, [r10, #36]
 6650              	.LVL250:
 6651              	.LBB4424:
 6652              	.LBI4424:
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 6653              		.loc 1 488 2 is_stmt 1 view .LVU1253
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 289


 6654              	.LBB4425:
 6655              	.LBB4426:
 6656              	.LBI4426:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 6657              		.loc 1 241 5 view .LVU1254
 6658              	.LBB4427:
 6659              	.LBI4427:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 6660              		.loc 1 148 5 view .LVU1255
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 6661              		.loc 1 148 5 is_stmt 0 view .LVU1256
 6662              	.LBE4427:
 6663              	.LBE4426:
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_end_of_storage = _Bit_pointer();
 6664              		.loc 1 490 4 view .LVU1257
 6665 00e4 46E90833 		strd	r3, r3, [r6, #-32]
 6666 00e8 95E80300 		ldm	r5, {r0, r1}
 6667              	.LBE4425:
 6668              	.LBE4424:
 6669              	.LBE4430:
 6670              	.LBE4434:
 6671              	.LBE4436:
 6672              	.LBE4438:
 6673              	.LBE4460:
 6674              	.LBB4461:
 6675              	.LBB4457:
 6676              	.LBB4455:
 6677              	.LBB4451:
 6678              	.LBB4449:
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 6679              		.loc 1 474 43 view .LVU1258
 6680 00ec 0AF13005 		add	r5, r10, #48
 6681              	.LBE4449:
 6682              	.LBE4451:
 6683              	.LBE4455:
 6684              	.LBE4457:
 6685              	.LBE4461:
 6686              	.LBB4462:
 6687              	.LBB4439:
 6688              	.LBB4437:
 6689              	.LBB4435:
 6690              	.LBB4431:
 6691              	.LBB4429:
 6692              	.LBB4428:
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_end_of_storage = _Bit_pointer();
 6693              		.loc 1 490 4 view .LVU1259
 6694 00f0 84E80300 		stm	r4, {r0, r1}
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 6695              		.loc 1 491 22 view .LVU1260
 6696 00f4 46F8183C 		str	r3, [r6, #-24]
 6697              	.LVL251:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 6698              		.loc 1 491 22 view .LVU1261
 6699              	.LBE4428:
 6700              	.LBE4429:
 6701              	.LBE4431:
 6702              	.LBE4435:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 290


 6703              	.LBE4437:
 6704              	.LBE4439:
 6705              	.LBE4462:
 6706              	.LBB4463:
 6707              	.LBI4440:
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 6708              		.loc 1 687 7 is_stmt 1 view .LVU1262
 6709              	.LBB4458:
 6710              	.LBI4441:
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 6711              		.loc 1 546 7 view .LVU1263
 6712              	.LBB4456:
 6713              	.LBI4442:
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 6714              		.loc 1 509 2 view .LVU1264
 6715              	.LBB4452:
 6716              	.LBI4452:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 6717              		.loc 15 147 7 view .LVU1265
 6718              	.LBB4453:
 6719              	.LBI4453:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6720              		.loc 5 82 7 view .LVU1266
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6721              		.loc 5 82 7 is_stmt 0 view .LVU1267
 6722              	.LBE4453:
 6723              	.LBE4452:
 6724              	.LBB4454:
 6725              	.LBI4443:
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish)
 6726              		.loc 1 472 2 is_stmt 1 view .LVU1268
 6727              	.LBB4450:
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 6728              		.loc 1 474 43 is_stmt 0 view .LVU1269
 6729 00f8 0AF12804 		add	r4, r10, #40
 6730              	.LVL252:
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 6731              		.loc 1 474 43 view .LVU1270
 6732 00fc 92E80300 		ldm	r2, {r0, r1}
 6733 0100 84E80300 		stm	r4, {r0, r1}
 6734 0104 A6F10C04 		sub	r4, r6, #12
 6735              	.LVL253:
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 6736              		.loc 1 474 43 view .LVU1271
 6737 0108 94E80300 		ldm	r4, {r0, r1}
 6738 010c 85E80300 		stm	r5, {r0, r1}
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 6739              		.loc 1 474 26 view .LVU1272
 6740 0110 56F8041C 		ldr	r1, [r6, #-4]
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 6741              		.loc 1 474 43 view .LVU1273
 6742 0114 CAF83810 		str	r1, [r10, #56]
 6743              	.LVL254:
 6744              	.LBB4445:
 6745              	.LBI4445:
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 6746              		.loc 1 488 2 is_stmt 1 view .LVU1274
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 291


 6747              	.LBB4446:
 6748              	.LBB4447:
 6749              	.LBI4447:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 6750              		.loc 1 241 5 view .LVU1275
 6751              	.LBB4448:
 6752              	.LBI4448:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 6753              		.loc 1 148 5 view .LVU1276
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 6754              		.loc 1 148 5 is_stmt 0 view .LVU1277
 6755              	.LBE4448:
 6756              	.LBE4447:
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_end_of_storage = _Bit_pointer();
 6757              		.loc 1 490 4 view .LVU1278
 6758 0118 46E90333 		strd	r3, r3, [r6, #-12]
 6759 011c 94E80300 		ldm	r4, {r0, r1}
 6760 0120 82E80300 		stm	r2, {r0, r1}
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 6761              		.loc 1 491 22 view .LVU1279
 6762 0124 46F8043C 		str	r3, [r6, #-4]
 6763              	.LVL255:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 6764              		.loc 1 491 22 view .LVU1280
 6765              	.LBE4446:
 6766              	.LBE4445:
 6767              	.LBE4450:
 6768              	.LBE4454:
 6769              	.LBE4456:
 6770              	.LBE4458:
 6771              	.LBE4463:
 6772              	.LBE4401:
 6773              	.LBE4464:
 6774              	.LBE4465:
 6775              	.LBB4466:
 6776              	.LBI4466:
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(is_nothrow_destructible<_Up>::value)
 6777              		.loc 6 527 2 is_stmt 1 view .LVU1281
 6778              	.LBB4467:
 6779              	.LBI4467:
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Up>
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	void
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	destroy(_Up* __p)
 6780              		.loc 5 154 2 view .LVU1282
 6781              	.LBB4468:
 6782              	.LBI4468:
 6783              		.loc 16 23 12 view .LVU1283
 6784              	.LBB4469:
 6785              	.LBI4469:
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 6786              		.loc 1 737 7 view .LVU1284
 6787              	.LBB4470:
 6788              	.LBI4470:
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { this->_M_deallocate(); }
 6789              		.loc 1 549 7 view .LVU1285
 6790              	.LBB4471:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 292


 6791              	.LBI4471:
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 6792              		.loc 1 560 7 view .LVU1286
 6793              	.LBB4472:
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 6794              		.loc 1 562 2 is_stmt 0 view .LVU1287
 6795 0128 10B1     		cbz	r0, .L183
 6796              	.LVL256:
 6797              	.LBB4473:
 6798              	.LBB4474:
 6799              	.LBI4474:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 6800              		.loc 6 491 7 is_stmt 1 view .LVU1288
 6801              	.LBB4475:
 6802              	.LBI4475:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 6803              		.loc 5 120 7 view .LVU1289
 6804              	.LBB4476:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6805              		.loc 5 133 19 is_stmt 0 view .LVU1290
 6806 012a 4142     		rsbs	r1, r0, #0
 6807 012c FFF7FEFF 		bl	_ZdlPvj
 6808              	.LVL257:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6809              		.loc 5 133 19 view .LVU1291
 6810              	.LBE4476:
 6811              	.LBE4475:
 6812              	.LBE4474:
 6813              	.LBB4477:
 6814              	.LBI4477:
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 6815              		.loc 1 488 2 is_stmt 1 view .LVU1292
 6816              	.LBB4478:
 6817              	.LBB4479:
 6818              	.LBI4479:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 6819              		.loc 1 241 5 view .LVU1293
 6820              	.LBB4480:
 6821              	.LBI4480:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 6822              		.loc 1 148 5 view .LVU1294
 6823              	.L183:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 6824              		.loc 1 148 5 is_stmt 0 view .LVU1295
 6825              	.LBE4480:
 6826              	.LBE4479:
 6827              	.LBE4478:
 6828              	.LBE4477:
 6829              	.LBE4473:
 6830              	.LBE4472:
 6831              	.LBE4471:
 6832              	.LBB4481:
 6833              	.LBI4481:
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: public _Bit_alloc_type, public _Bvector_impl_data
 6834              		.loc 1 495 14 is_stmt 1 view .LVU1296
 6835              	.LBB4482:
 6836              	.LBI4482:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 293


 6837              		.loc 15 162 7 view .LVU1297
 6838              	.LBB4483:
 6839              	.LBI4483:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6840              		.loc 5 89 7 view .LVU1298
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6841              		.loc 5 89 7 is_stmt 0 view .LVU1299
 6842              	.LBE4483:
 6843              	.LBE4482:
 6844              	.LBE4481:
 6845              	.LBE4470:
 6846              	.LBE4469:
 6847              	.LBB4484:
 6848              	.LBI4484:
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 6849              		.loc 1 737 7 is_stmt 1 view .LVU1300
 6850              	.LBB4485:
 6851              	.LBI4485:
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { this->_M_deallocate(); }
 6852              		.loc 1 549 7 view .LVU1301
 6853              	.LBB4486:
 6854              	.LBI4486:
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 6855              		.loc 1 560 7 view .LVU1302
 6856              	.LBB4487:
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 6857              		.loc 1 562 23 is_stmt 0 view .LVU1303
 6858 0130 56F8280C 		ldr	r0, [r6, #-40]
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 6859              		.loc 1 562 2 view .LVU1304
 6860 0134 20B1     		cbz	r0, .L184
 6861              	.LVL258:
 6862              	.LBB4488:
 6863              	.LBB4489:
 6864              	.LBI4489:
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 6865              		.loc 1 513 2 is_stmt 1 view .LVU1305
 6866              	.LBB4490:
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    return std::__addressof(this->_M_end_of_storage[-1]) + 1;
 6867              		.loc 1 515 14 is_stmt 0 view .LVU1306
 6868 0136 56F8181C 		ldr	r1, [r6, #-24]
 6869              	.LVL259:
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    return std::__addressof(this->_M_end_of_storage[-1]) + 1;
 6870              		.loc 1 515 14 view .LVU1307
 6871              	.LBE4490:
 6872              	.LBE4489:
 6873              	.LBB4491:
 6874              	.LBI4491:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 6875              		.loc 6 491 7 is_stmt 1 view .LVU1308
 6876              	.LBB4492:
 6877              	.LBI4492:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 6878              		.loc 5 120 7 view .LVU1309
 6879              	.LBB4493:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6880              		.loc 5 133 19 is_stmt 0 view .LVU1310
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 294


 6881 013a 091A     		subs	r1, r1, r0
 6882              	.LVL260:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6883              		.loc 5 133 19 view .LVU1311
 6884 013c FFF7FEFF 		bl	_ZdlPvj
 6885              	.LVL261:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6886              		.loc 5 133 19 view .LVU1312
 6887              	.LBE4493:
 6888              	.LBE4492:
 6889              	.LBE4491:
 6890              	.LBB4494:
 6891              	.LBI4494:
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 6892              		.loc 1 488 2 is_stmt 1 view .LVU1313
 6893              	.LBB4495:
 6894              	.LBB4496:
 6895              	.LBI4496:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 6896              		.loc 1 241 5 view .LVU1314
 6897              	.LBB4497:
 6898              	.LBI4497:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 6899              		.loc 1 148 5 view .LVU1315
 6900              	.L184:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 6901              		.loc 1 148 5 is_stmt 0 view .LVU1316
 6902              	.LBE4497:
 6903              	.LBE4496:
 6904              	.LBE4495:
 6905              	.LBE4494:
 6906              	.LBE4488:
 6907              	.LBE4487:
 6908              	.LBE4486:
 6909              	.LBB4498:
 6910              	.LBI4498:
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: public _Bit_alloc_type, public _Bvector_impl_data
 6911              		.loc 1 495 14 is_stmt 1 view .LVU1317
 6912              	.LBB4499:
 6913              	.LBI4499:
 6914              		.loc 15 162 7 view .LVU1318
 6915              	.LBB4500:
 6916              	.LBI4500:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6917              		.loc 5 89 7 view .LVU1319
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6918              		.loc 5 89 7 is_stmt 0 view .LVU1320
 6919              	.LBE4500:
 6920              	.LBE4499:
 6921              	.LBE4498:
 6922              	.LBE4485:
 6923              	.LBE4484:
 6924              	.LBB4501:
 6925              	.LBI4501:
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 6926              		.loc 1 737 7 is_stmt 1 view .LVU1321
 6927              	.LBB4502:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 295


 6928              	.LBI4502:
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { this->_M_deallocate(); }
 6929              		.loc 1 549 7 view .LVU1322
 6930              	.LBB4503:
 6931              	.LBI4503:
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 6932              		.loc 1 560 7 view .LVU1323
 6933              	.LBB4504:
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 6934              		.loc 1 562 23 is_stmt 0 view .LVU1324
 6935 0140 56F83C0C 		ldr	r0, [r6, #-60]
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 6936              		.loc 1 562 2 view .LVU1325
 6937 0144 20B1     		cbz	r0, .L185
 6938              	.LVL262:
 6939              	.LBB4505:
 6940              	.LBB4506:
 6941              	.LBI4506:
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 6942              		.loc 1 513 2 is_stmt 1 view .LVU1326
 6943              	.LBB4507:
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    return std::__addressof(this->_M_end_of_storage[-1]) + 1;
 6944              		.loc 1 515 14 is_stmt 0 view .LVU1327
 6945 0146 56F82C1C 		ldr	r1, [r6, #-44]
 6946              	.LVL263:
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    return std::__addressof(this->_M_end_of_storage[-1]) + 1;
 6947              		.loc 1 515 14 view .LVU1328
 6948              	.LBE4507:
 6949              	.LBE4506:
 6950              	.LBB4508:
 6951              	.LBI4508:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 6952              		.loc 6 491 7 is_stmt 1 view .LVU1329
 6953              	.LBB4509:
 6954              	.LBI4509:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 6955              		.loc 5 120 7 view .LVU1330
 6956              	.LBB4510:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6957              		.loc 5 133 19 is_stmt 0 view .LVU1331
 6958 014a 091A     		subs	r1, r1, r0
 6959              	.LVL264:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6960              		.loc 5 133 19 view .LVU1332
 6961 014c FFF7FEFF 		bl	_ZdlPvj
 6962              	.LVL265:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6963              		.loc 5 133 19 view .LVU1333
 6964              	.LBE4510:
 6965              	.LBE4509:
 6966              	.LBE4508:
 6967              	.LBB4511:
 6968              	.LBI4511:
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 6969              		.loc 1 488 2 is_stmt 1 view .LVU1334
 6970              	.LBB4512:
 6971              	.LBB4513:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 296


 6972              	.LBI4513:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 6973              		.loc 1 241 5 view .LVU1335
 6974              	.LBB4514:
 6975              	.LBI4514:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 6976              		.loc 1 148 5 view .LVU1336
 6977              	.L185:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 6978              		.loc 1 148 5 is_stmt 0 view .LVU1337
 6979              	.LBE4514:
 6980              	.LBE4513:
 6981              	.LBE4512:
 6982              	.LBE4511:
 6983              	.LBE4505:
 6984              	.LBE4504:
 6985              	.LBE4503:
 6986              	.LBB4515:
 6987              	.LBI4515:
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: public _Bit_alloc_type, public _Bvector_impl_data
 6988              		.loc 1 495 14 is_stmt 1 view .LVU1338
 6989              	.LBB4516:
 6990              	.LBI4516:
 6991              		.loc 15 162 7 view .LVU1339
 6992              	.LBB4517:
 6993              	.LBI4517:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6994              		.loc 5 89 7 view .LVU1340
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6995              		.loc 5 89 7 is_stmt 0 view .LVU1341
 6996              	.LBE4517:
 6997              	.LBE4516:
 6998              	.LBE4515:
 6999              	.LBE4502:
 7000              	.LBE4501:
 7001              	.LBE4468:
 7002              	.LBE4467:
 7003              	.LBE4466:
 7004              	.LBE4518:
 7005              	.LBE4519:
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 7006              		.loc 13 1013 7 is_stmt 1 view .LVU1342
 7007 0150 08F13C08 		add	r8, r8, #60
 7008              	.LVL266:
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 7009              		.loc 13 1013 22 is_stmt 0 view .LVU1343
 7010 0154 019A     		ldr	r2, [sp, #4]
 7011              	.LVL267:
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 7012              		.loc 13 1013 44 view .LVU1344
 7013 0156 0AF13C03 		add	r3, r10, #60
 7014              	.LVL268:
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 7015              		.loc 13 1013 22 is_stmt 1 view .LVU1345
 7016 015a 3C36     		adds	r6, r6, #60
 7017 015c 4245     		cmp	r2, r8
 7018 015e 8FD1     		bne	.L194
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 297


 7019              	.LBE4520:
 7020              	.LBE4522:
 7021              	.LBE4524:
 7022              	.LBE4526:
 7023              	.LBE4528:
 7024              	.LBE4530:
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 7025              		.loc 4 464 8 is_stmt 0 view .LVU1346
 7026 0160 0AF17805 		add	r5, r10, #120
 7027              	.LVL269:
 7028              	.L182:
 7029              	.LBB4531:
 7030              	.LBI4531:
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 7031              		.loc 8 465 7 is_stmt 1 view .LVU1347
 7032              	.LBB4532:
 7033              	.LBB4533:
 7034              	.LBI4533:
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 7035              		.loc 8 453 7 view .LVU1348
 7036              	.LBB4534:
 7037              	.LBI4534:
 7038              		.loc 13 1022 5 view .LVU1349
 7039              	.LBB4535:
 7040              	.LBI4535:
1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		   _ForwardIterator __result, _Allocator& __alloc)
 7041              		.loc 13 1000 5 view .LVU1350
 7042              	.LBB4536:
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 7043              		.loc 13 1013 22 view .LVU1351
 7044 0164 019B     		ldr	r3, [sp, #4]
 7045              	.LVL270:
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 7046              		.loc 13 1013 22 is_stmt 0 view .LVU1352
 7047 0166 0699     		ldr	r1, [sp, #24]
 7048 0168 8B42     		cmp	r3, r1
 7049 016a 6ED0     		beq	.L187
 7050 016c 3C33     		adds	r3, r3, #60
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 7051              		.loc 13 1013 22 view .LVU1353
 7052 016e 8946     		mov	r9, r1
 7053 0170 DDF81C80 		ldr	r8, [sp, #28]
 7054 0174 1C46     		mov	r4, r3
 7055              	.LVL271:
 7056              	.L191:
 7057              	.LBB4537:
 7058              	.LBI4537:
 968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			_Allocator& __alloc)
 7059              		.loc 13 968 5 is_stmt 1 view .LVU1354
 7060              	.LBB4538:
 7061              	.LBB4539:
 7062              	.LBI4539:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 7063              		.loc 6 507 2 view .LVU1355
 7064              	.LBB4540:
 7065              	.LBI4540:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 298


 7066              		.loc 5 148 2 view .LVU1356
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 7067              		.loc 5 148 2 is_stmt 0 view .LVU1357
 7068              	.LBE4540:
 7069              	.LBE4539:
 7070              	.LBE4538:
 7071              	.LBE4537:
 7072              	.LBE4536:
 7073              	.LBE4535:
 7074              	.LBE4534:
 7075              	.LBE4533:
 7076              	.LBE4532:
 7077              	.LBE4531:
 7078              		.loc 12 175 3 is_stmt 1 view .LVU1358
 7079              	.LBB4706:
 7080              	.LBB4705:
 7081              	.LBB4704:
 7082              	.LBB4703:
 7083              	.LBB4702:
 7084              	.LBB4701:
 7085              	.LBB4700:
 7086              	.LBB4699:
 7087              	.LBB4646:
 7088              	.LBB4645:
 7089              	.LBB4541:
 7090              	.LBI4541:
 7091              		.loc 16 23 12 view .LVU1359
 7092              	.LBB4542:
 7093              	.LBI4542:
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 7094              		.loc 1 687 7 view .LVU1360
 7095              	.LBB4543:
 7096              	.LBI4543:
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 7097              		.loc 1 546 7 view .LVU1361
 7098              	.LBB4544:
 7099              	.LBI4544:
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 7100              		.loc 1 509 2 view .LVU1362
 7101              	.LBB4545:
 7102              	.LBI4545:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 7103              		.loc 15 147 7 view .LVU1363
 7104              	.LBB4546:
 7105              	.LBI4546:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7106              		.loc 5 82 7 view .LVU1364
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7107              		.loc 5 82 7 is_stmt 0 view .LVU1365
 7108              	.LBE4546:
 7109              	.LBE4545:
 7110              	.LBB4547:
 7111              	.LBI4547:
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish)
 7112              		.loc 1 472 2 is_stmt 1 view .LVU1366
 7113              	.LBB4548:
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 299


 7114              		.loc 1 474 43 is_stmt 0 view .LVU1367
 7115 0176 A4F13C06 		sub	r6, r4, #60
 7116 017a A4F13402 		sub	r2, r4, #52
 7117              	.LBB4549:
 7118              	.LBB4550:
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_end_of_storage = _Bit_pointer();
 7119              		.loc 1 490 4 view .LVU1368
 7120 017e 0023     		movs	r3, #0
 7121              	.LVL272:
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_end_of_storage = _Bit_pointer();
 7122              		.loc 1 490 4 view .LVU1369
 7123              	.LBE4550:
 7124              	.LBE4549:
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 7125              		.loc 1 474 43 view .LVU1370
 7126 0180 05F10807 		add	r7, r5, #8
 7127              	.LBE4548:
 7128              	.LBE4547:
 7129              	.LBE4544:
 7130              	.LBE4543:
 7131              	.LBE4542:
 7132              	.LBB4575:
 7133              	.LBB4576:
 7134              	.LBB4577:
 7135              	.LBB4578:
 7136              	.LBB4579:
 7137 0184 A4F1200C 		sub	ip, r4, #32
 7138              	.LBE4579:
 7139              	.LBE4578:
 7140              	.LBE4577:
 7141              	.LBE4576:
 7142              	.LBE4575:
 7143              	.LBB4612:
 7144              	.LBB4572:
 7145              	.LBB4569:
 7146              	.LBB4566:
 7147              	.LBB4563:
 7148 0188 96E80300 		ldm	r6, {r0, r1}
 7149 018c 85E80300 		stm	r5, {r0, r1}
 7150 0190 92E80300 		ldm	r2, {r0, r1}
 7151              	.LBB4558:
 7152              	.LBB4553:
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_end_of_storage = _Bit_pointer();
 7153              		.loc 1 490 4 view .LVU1371
 7154 0194 44E90D33 		strd	r3, r3, [r4, #-52]
 7155              	.LBE4553:
 7156              	.LBE4558:
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 7157              		.loc 1 474 43 view .LVU1372
 7158 0198 87E80300 		stm	r7, {r0, r1}
 7159              	.LBB4559:
 7160              	.LBB4554:
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_end_of_storage = _Bit_pointer();
 7161              		.loc 1 490 4 view .LVU1373
 7162 019c 92E80300 		ldm	r2, {r0, r1}
 7163              	.LBE4554:
 7164              	.LBE4559:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 300


 7165              	.LBE4563:
 7166              	.LBE4566:
 7167              	.LBE4569:
 7168              	.LBE4572:
 7169              	.LBE4612:
 7170              	.LBB4613:
 7171              	.LBB4607:
 7172              	.LBB4602:
 7173              	.LBB4595:
 7174              	.LBB4590:
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 7175              		.loc 1 474 43 view .LVU1374
 7176 01a0 A4F12807 		sub	r7, r4, #40
 7177              	.LBE4590:
 7178              	.LBE4595:
 7179              	.LBE4602:
 7180              	.LBE4607:
 7181              	.LBE4613:
 7182              	.LBB4614:
 7183              	.LBB4573:
 7184              	.LBB4570:
 7185              	.LBB4567:
 7186              	.LBB4564:
 7187 01a4 54F82C2C 		ldr	r2, [r4, #-44]
 7188              	.LBB4560:
 7189              	.LBB4555:
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_end_of_storage = _Bit_pointer();
 7190              		.loc 1 490 4 view .LVU1375
 7191 01a8 86E80300 		stm	r6, {r0, r1}
 7192              	.LBE4555:
 7193              	.LBE4560:
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 7194              		.loc 1 474 43 view .LVU1376
 7195 01ac 2A61     		str	r2, [r5, #16]
 7196              	.LVL273:
 7197              	.LBB4561:
 7198              	.LBI4549:
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 7199              		.loc 1 488 2 is_stmt 1 view .LVU1377
 7200              	.LBB4556:
 7201              	.LBB4551:
 7202              	.LBI4551:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 7203              		.loc 1 241 5 view .LVU1378
 7204              	.LBB4552:
 7205              	.LBI4552:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 7206              		.loc 1 148 5 view .LVU1379
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 7207              		.loc 1 148 5 is_stmt 0 view .LVU1380
 7208              	.LBE4552:
 7209              	.LBE4551:
 7210              	.LBE4556:
 7211              	.LBE4561:
 7212              	.LBE4564:
 7213              	.LBE4567:
 7214              	.LBE4570:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 301


 7215              	.LBE4573:
 7216              	.LBE4614:
 7217              	.LBB4615:
 7218              	.LBB4608:
 7219              	.LBB4603:
 7220              	.LBB4596:
 7221              	.LBB4591:
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 7222              		.loc 1 474 43 view .LVU1381
 7223 01ae 05F11402 		add	r2, r5, #20
 7224              	.LBE4591:
 7225              	.LBE4596:
 7226              	.LBE4603:
 7227              	.LBE4608:
 7228              	.LBE4615:
 7229              	.LBB4616:
 7230              	.LBB4574:
 7231              	.LBB4571:
 7232              	.LBB4568:
 7233              	.LBB4565:
 7234              	.LBB4562:
 7235              	.LBB4557:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 7236              		.loc 1 491 22 view .LVU1382
 7237 01b2 44F82C3C 		str	r3, [r4, #-44]
 7238              	.LVL274:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 7239              		.loc 1 491 22 view .LVU1383
 7240              	.LBE4557:
 7241              	.LBE4562:
 7242              	.LBE4565:
 7243              	.LBE4568:
 7244              	.LBE4571:
 7245              	.LBE4574:
 7246              	.LBE4616:
 7247              	.LBB4617:
 7248              	.LBI4575:
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 7249              		.loc 1 687 7 is_stmt 1 view .LVU1384
 7250              	.LBB4609:
 7251              	.LBI4576:
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 7252              		.loc 1 546 7 view .LVU1385
 7253              	.LBB4604:
 7254              	.LBI4577:
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 7255              		.loc 1 509 2 view .LVU1386
 7256              	.LBB4597:
 7257              	.LBI4597:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 7258              		.loc 15 147 7 view .LVU1387
 7259              	.LBB4598:
 7260              	.LBI4598:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7261              		.loc 5 82 7 view .LVU1388
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7262              		.loc 5 82 7 is_stmt 0 view .LVU1389
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 302


 7263              	.LBE4598:
 7264              	.LBE4597:
 7265              	.LBB4599:
 7266              	.LBI4578:
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish)
 7267              		.loc 1 472 2 is_stmt 1 view .LVU1390
 7268              	.LBB4592:
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 7269              		.loc 1 474 43 is_stmt 0 view .LVU1391
 7270 01b6 54F8186C 		ldr	r6, [r4, #-24]
 7271 01ba 97E80300 		ldm	r7, {r0, r1}
 7272 01be 82E80300 		stm	r2, {r0, r1}
 7273 01c2 9CE80300 		ldm	ip, {r0, r1}
 7274 01c6 05F11C02 		add	r2, r5, #28
 7275              	.LVL275:
 7276              	.LBB4580:
 7277              	.LBB4581:
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_end_of_storage = _Bit_pointer();
 7278              		.loc 1 490 4 view .LVU1392
 7279 01ca 44E90833 		strd	r3, r3, [r4, #-32]
 7280              	.LBE4581:
 7281              	.LBE4580:
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 7282              		.loc 1 474 43 view .LVU1393
 7283 01ce 82E80300 		stm	r2, {r0, r1}
 7284              	.LBB4587:
 7285              	.LBB4584:
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_end_of_storage = _Bit_pointer();
 7286              		.loc 1 490 4 view .LVU1394
 7287 01d2 9CE80300 		ldm	ip, {r0, r1}
 7288              	.LBE4584:
 7289              	.LBE4587:
 7290              	.LBE4592:
 7291              	.LBE4599:
 7292              	.LBE4604:
 7293              	.LBE4609:
 7294              	.LBE4617:
 7295              	.LBB4618:
 7296              	.LBB4619:
 7297              	.LBB4620:
 7298              	.LBB4621:
 7299              	.LBB4622:
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 7300              		.loc 1 474 43 view .LVU1395
 7301 01d6 A4F11402 		sub	r2, r4, #20
 7302              	.LBE4622:
 7303              	.LBE4621:
 7304              	.LBE4620:
 7305              	.LBE4619:
 7306              	.LBE4618:
 7307              	.LBB4641:
 7308              	.LBB4610:
 7309              	.LBB4605:
 7310              	.LBB4600:
 7311              	.LBB4593:
 7312 01da 6E62     		str	r6, [r5, #36]
 7313              	.LVL276:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 303


 7314              	.LBB4588:
 7315              	.LBI4580:
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 7316              		.loc 1 488 2 is_stmt 1 view .LVU1396
 7317              	.LBB4585:
 7318              	.LBB4582:
 7319              	.LBI4582:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 7320              		.loc 1 241 5 view .LVU1397
 7321              	.LBB4583:
 7322              	.LBI4583:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 7323              		.loc 1 148 5 view .LVU1398
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 7324              		.loc 1 148 5 is_stmt 0 view .LVU1399
 7325              	.LBE4583:
 7326              	.LBE4582:
 7327              	.LBE4585:
 7328              	.LBE4588:
 7329              	.LBE4593:
 7330              	.LBE4600:
 7331              	.LBE4605:
 7332              	.LBE4610:
 7333              	.LBE4641:
 7334              	.LBB4642:
 7335              	.LBB4639:
 7336              	.LBB4637:
 7337              	.LBB4633:
 7338              	.LBB4631:
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 7339              		.loc 1 474 43 view .LVU1400
 7340 01dc 05F12806 		add	r6, r5, #40
 7341 01e0 05F1300C 		add	ip, r5, #48
 7342              	.LBE4631:
 7343              	.LBE4633:
 7344              	.LBE4637:
 7345              	.LBE4639:
 7346              	.LBE4642:
 7347              	.LBB4643:
 7348              	.LBB4611:
 7349              	.LBB4606:
 7350              	.LBB4601:
 7351              	.LBB4594:
 7352              	.LBB4589:
 7353              	.LBB4586:
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_end_of_storage = _Bit_pointer();
 7354              		.loc 1 490 4 view .LVU1401
 7355 01e4 87E80300 		stm	r7, {r0, r1}
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 7356              		.loc 1 491 22 view .LVU1402
 7357 01e8 44F8183C 		str	r3, [r4, #-24]
 7358              	.LVL277:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 7359              		.loc 1 491 22 view .LVU1403
 7360              	.LBE4586:
 7361              	.LBE4589:
 7362              	.LBE4594:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 304


 7363              	.LBE4601:
 7364              	.LBE4606:
 7365              	.LBE4611:
 7366              	.LBE4643:
 7367              	.LBB4644:
 7368              	.LBI4618:
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 7369              		.loc 1 687 7 is_stmt 1 view .LVU1404
 7370              	.LBB4640:
 7371              	.LBI4619:
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 7372              		.loc 1 546 7 view .LVU1405
 7373              	.LBB4638:
 7374              	.LBI4620:
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 7375              		.loc 1 509 2 view .LVU1406
 7376              	.LBB4634:
 7377              	.LBI4634:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 7378              		.loc 15 147 7 view .LVU1407
 7379              	.LBB4635:
 7380              	.LBI4635:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7381              		.loc 5 82 7 view .LVU1408
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7382              		.loc 5 82 7 is_stmt 0 view .LVU1409
 7383              	.LBE4635:
 7384              	.LBE4634:
 7385              	.LBB4636:
 7386              	.LBI4621:
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish)
 7387              		.loc 1 472 2 is_stmt 1 view .LVU1410
 7388              	.LBB4632:
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 7389              		.loc 1 474 43 is_stmt 0 view .LVU1411
 7390 01ec 54F8047C 		ldr	r7, [r4, #-4]
 7391 01f0 92E80300 		ldm	r2, {r0, r1}
 7392 01f4 86E80300 		stm	r6, {r0, r1}
 7393 01f8 A4F10C06 		sub	r6, r4, #12
 7394              	.LVL278:
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 7395              		.loc 1 474 43 view .LVU1412
 7396 01fc 96E80300 		ldm	r6, {r0, r1}
 7397              	.LBB4623:
 7398              	.LBB4624:
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_end_of_storage = _Bit_pointer();
 7399              		.loc 1 490 4 view .LVU1413
 7400 0200 44E90333 		strd	r3, r3, [r4, #-12]
 7401              	.LBE4624:
 7402              	.LBE4623:
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 7403              		.loc 1 474 43 view .LVU1414
 7404 0204 8CE80300 		stm	ip, {r0, r1}
 7405              	.LBB4629:
 7406              	.LBB4627:
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_end_of_storage = _Bit_pointer();
 7407              		.loc 1 490 4 view .LVU1415
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 305


 7408 0208 96E80300 		ldm	r6, {r0, r1}
 7409              	.LBE4627:
 7410              	.LBE4629:
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 7411              		.loc 1 474 43 view .LVU1416
 7412 020c AF63     		str	r7, [r5, #56]
 7413              	.LVL279:
 7414              	.LBB4630:
 7415              	.LBI4623:
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 7416              		.loc 1 488 2 is_stmt 1 view .LVU1417
 7417              	.LBB4628:
 7418              	.LBB4625:
 7419              	.LBI4625:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 7420              		.loc 1 241 5 view .LVU1418
 7421              	.LBB4626:
 7422              	.LBI4626:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 7423              		.loc 1 148 5 view .LVU1419
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 7424              		.loc 1 148 5 is_stmt 0 view .LVU1420
 7425              	.LBE4626:
 7426              	.LBE4625:
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_end_of_storage = _Bit_pointer();
 7427              		.loc 1 490 4 view .LVU1421
 7428 020e 82E80300 		stm	r2, {r0, r1}
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 7429              		.loc 1 491 22 view .LVU1422
 7430 0212 44F8043C 		str	r3, [r4, #-4]
 7431              	.LVL280:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 7432              		.loc 1 491 22 view .LVU1423
 7433              	.LBE4628:
 7434              	.LBE4630:
 7435              	.LBE4632:
 7436              	.LBE4636:
 7437              	.LBE4638:
 7438              	.LBE4640:
 7439              	.LBE4644:
 7440              	.LBE4541:
 7441              	.LBE4645:
 7442              	.LBE4646:
 7443              	.LBB4647:
 7444              	.LBI4647:
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(is_nothrow_destructible<_Up>::value)
 7445              		.loc 6 527 2 is_stmt 1 view .LVU1424
 7446              	.LBB4648:
 7447              	.LBI4648:
 7448              		.loc 5 154 2 view .LVU1425
 7449              	.LBB4649:
 7450              	.LBI4649:
 7451              		.loc 16 23 12 view .LVU1426
 7452              	.LBB4650:
 7453              	.LBI4650:
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 7454              		.loc 1 737 7 view .LVU1427
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 306


 7455              	.LBB4651:
 7456              	.LBI4651:
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { this->_M_deallocate(); }
 7457              		.loc 1 549 7 view .LVU1428
 7458              	.LBB4652:
 7459              	.LBI4652:
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 7460              		.loc 1 560 7 view .LVU1429
 7461              	.LBB4653:
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 7462              		.loc 1 562 2 is_stmt 0 view .LVU1430
 7463 0216 10B1     		cbz	r0, .L188
 7464              	.LVL281:
 7465              	.LBB4654:
 7466              	.LBB4655:
 7467              	.LBI4655:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 7468              		.loc 6 491 7 is_stmt 1 view .LVU1431
 7469              	.LBB4656:
 7470              	.LBI4656:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 7471              		.loc 5 120 7 view .LVU1432
 7472              	.LBB4657:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7473              		.loc 5 133 19 is_stmt 0 view .LVU1433
 7474 0218 4142     		rsbs	r1, r0, #0
 7475 021a FFF7FEFF 		bl	_ZdlPvj
 7476              	.LVL282:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7477              		.loc 5 133 19 view .LVU1434
 7478              	.LBE4657:
 7479              	.LBE4656:
 7480              	.LBE4655:
 7481              	.LBB4658:
 7482              	.LBI4658:
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 7483              		.loc 1 488 2 is_stmt 1 view .LVU1435
 7484              	.LBB4659:
 7485              	.LBB4660:
 7486              	.LBI4660:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 7487              		.loc 1 241 5 view .LVU1436
 7488              	.LBB4661:
 7489              	.LBI4661:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 7490              		.loc 1 148 5 view .LVU1437
 7491              	.L188:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 7492              		.loc 1 148 5 is_stmt 0 view .LVU1438
 7493              	.LBE4661:
 7494              	.LBE4660:
 7495              	.LBE4659:
 7496              	.LBE4658:
 7497              	.LBE4654:
 7498              	.LBE4653:
 7499              	.LBE4652:
 7500              	.LBB4662:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 307


 7501              	.LBI4662:
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: public _Bit_alloc_type, public _Bvector_impl_data
 7502              		.loc 1 495 14 is_stmt 1 view .LVU1439
 7503              	.LBB4663:
 7504              	.LBI4663:
 7505              		.loc 15 162 7 view .LVU1440
 7506              	.LBB4664:
 7507              	.LBI4664:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7508              		.loc 5 89 7 view .LVU1441
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7509              		.loc 5 89 7 is_stmt 0 view .LVU1442
 7510              	.LBE4664:
 7511              	.LBE4663:
 7512              	.LBE4662:
 7513              	.LBE4651:
 7514              	.LBE4650:
 7515              	.LBB4665:
 7516              	.LBI4665:
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 7517              		.loc 1 737 7 is_stmt 1 view .LVU1443
 7518              	.LBB4666:
 7519              	.LBI4666:
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { this->_M_deallocate(); }
 7520              		.loc 1 549 7 view .LVU1444
 7521              	.LBB4667:
 7522              	.LBI4667:
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 7523              		.loc 1 560 7 view .LVU1445
 7524              	.LBB4668:
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 7525              		.loc 1 562 23 is_stmt 0 view .LVU1446
 7526 021e 54F8280C 		ldr	r0, [r4, #-40]
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 7527              		.loc 1 562 2 view .LVU1447
 7528 0222 20B1     		cbz	r0, .L189
 7529              	.LVL283:
 7530              	.LBB4669:
 7531              	.LBB4670:
 7532              	.LBI4670:
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 7533              		.loc 1 513 2 is_stmt 1 view .LVU1448
 7534              	.LBB4671:
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    return std::__addressof(this->_M_end_of_storage[-1]) + 1;
 7535              		.loc 1 515 14 is_stmt 0 view .LVU1449
 7536 0224 54F8181C 		ldr	r1, [r4, #-24]
 7537              	.LVL284:
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    return std::__addressof(this->_M_end_of_storage[-1]) + 1;
 7538              		.loc 1 515 14 view .LVU1450
 7539              	.LBE4671:
 7540              	.LBE4670:
 7541              	.LBB4672:
 7542              	.LBI4672:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 7543              		.loc 6 491 7 is_stmt 1 view .LVU1451
 7544              	.LBB4673:
 7545              	.LBI4673:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 308


 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 7546              		.loc 5 120 7 view .LVU1452
 7547              	.LBB4674:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7548              		.loc 5 133 19 is_stmt 0 view .LVU1453
 7549 0228 091A     		subs	r1, r1, r0
 7550              	.LVL285:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7551              		.loc 5 133 19 view .LVU1454
 7552 022a FFF7FEFF 		bl	_ZdlPvj
 7553              	.LVL286:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7554              		.loc 5 133 19 view .LVU1455
 7555              	.LBE4674:
 7556              	.LBE4673:
 7557              	.LBE4672:
 7558              	.LBB4675:
 7559              	.LBI4675:
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 7560              		.loc 1 488 2 is_stmt 1 view .LVU1456
 7561              	.LBB4676:
 7562              	.LBB4677:
 7563              	.LBI4677:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 7564              		.loc 1 241 5 view .LVU1457
 7565              	.LBB4678:
 7566              	.LBI4678:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 7567              		.loc 1 148 5 view .LVU1458
 7568              	.L189:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 7569              		.loc 1 148 5 is_stmt 0 view .LVU1459
 7570              	.LBE4678:
 7571              	.LBE4677:
 7572              	.LBE4676:
 7573              	.LBE4675:
 7574              	.LBE4669:
 7575              	.LBE4668:
 7576              	.LBE4667:
 7577              	.LBB4679:
 7578              	.LBI4679:
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: public _Bit_alloc_type, public _Bvector_impl_data
 7579              		.loc 1 495 14 is_stmt 1 view .LVU1460
 7580              	.LBB4680:
 7581              	.LBI4680:
 7582              		.loc 15 162 7 view .LVU1461
 7583              	.LBB4681:
 7584              	.LBI4681:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7585              		.loc 5 89 7 view .LVU1462
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7586              		.loc 5 89 7 is_stmt 0 view .LVU1463
 7587              	.LBE4681:
 7588              	.LBE4680:
 7589              	.LBE4679:
 7590              	.LBE4666:
 7591              	.LBE4665:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 309


 7592              	.LBB4682:
 7593              	.LBI4682:
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 7594              		.loc 1 737 7 is_stmt 1 view .LVU1464
 7595              	.LBB4683:
 7596              	.LBI4683:
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { this->_M_deallocate(); }
 7597              		.loc 1 549 7 view .LVU1465
 7598              	.LBB4684:
 7599              	.LBI4684:
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 7600              		.loc 1 560 7 view .LVU1466
 7601              	.LBB4685:
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 7602              		.loc 1 562 23 is_stmt 0 view .LVU1467
 7603 022e 54F83C0C 		ldr	r0, [r4, #-60]
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 7604              		.loc 1 562 2 view .LVU1468
 7605 0232 20B1     		cbz	r0, .L190
 7606              	.LVL287:
 7607              	.LBB4686:
 7608              	.LBB4687:
 7609              	.LBI4687:
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 7610              		.loc 1 513 2 is_stmt 1 view .LVU1469
 7611              	.LBB4688:
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    return std::__addressof(this->_M_end_of_storage[-1]) + 1;
 7612              		.loc 1 515 14 is_stmt 0 view .LVU1470
 7613 0234 54F82C1C 		ldr	r1, [r4, #-44]
 7614              	.LVL288:
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    return std::__addressof(this->_M_end_of_storage[-1]) + 1;
 7615              		.loc 1 515 14 view .LVU1471
 7616              	.LBE4688:
 7617              	.LBE4687:
 7618              	.LBB4689:
 7619              	.LBI4689:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 7620              		.loc 6 491 7 is_stmt 1 view .LVU1472
 7621              	.LBB4690:
 7622              	.LBI4690:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 7623              		.loc 5 120 7 view .LVU1473
 7624              	.LBB4691:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7625              		.loc 5 133 19 is_stmt 0 view .LVU1474
 7626 0238 091A     		subs	r1, r1, r0
 7627              	.LVL289:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7628              		.loc 5 133 19 view .LVU1475
 7629 023a FFF7FEFF 		bl	_ZdlPvj
 7630              	.LVL290:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7631              		.loc 5 133 19 view .LVU1476
 7632              	.LBE4691:
 7633              	.LBE4690:
 7634              	.LBE4689:
 7635              	.LBB4692:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 310


 7636              	.LBI4692:
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 7637              		.loc 1 488 2 is_stmt 1 view .LVU1477
 7638              	.LBB4693:
 7639              	.LBB4694:
 7640              	.LBI4694:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 7641              		.loc 1 241 5 view .LVU1478
 7642              	.LBB4695:
 7643              	.LBI4695:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 7644              		.loc 1 148 5 view .LVU1479
 7645              	.L190:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 7646              		.loc 1 148 5 is_stmt 0 view .LVU1480
 7647              	.LBE4695:
 7648              	.LBE4694:
 7649              	.LBE4693:
 7650              	.LBE4692:
 7651              	.LBE4686:
 7652              	.LBE4685:
 7653              	.LBE4684:
 7654              	.LBB4696:
 7655              	.LBI4696:
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: public _Bit_alloc_type, public _Bvector_impl_data
 7656              		.loc 1 495 14 is_stmt 1 view .LVU1481
 7657              	.LBB4697:
 7658              	.LBI4697:
 7659              		.loc 15 162 7 view .LVU1482
 7660              	.LBB4698:
 7661              	.LBI4698:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7662              		.loc 5 89 7 view .LVU1483
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7663              		.loc 5 89 7 is_stmt 0 view .LVU1484
 7664              	.LBE4698:
 7665              	.LBE4697:
 7666              	.LBE4696:
 7667              	.LBE4683:
 7668              	.LBE4682:
 7669              	.LBE4649:
 7670              	.LBE4648:
 7671              	.LBE4647:
 7672              	.LBE4699:
 7673              	.LBE4700:
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 7674              		.loc 13 1013 7 is_stmt 1 view .LVU1485
 7675 023e 08F13C08 		add	r8, r8, #60
 7676              	.LVL291:
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 7677              		.loc 13 1013 44 is_stmt 0 view .LVU1486
 7678 0242 3C35     		adds	r5, r5, #60
 7679              	.LVL292:
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 7680              		.loc 13 1013 22 is_stmt 1 view .LVU1487
 7681 0244 3C34     		adds	r4, r4, #60
 7682 0246 C145     		cmp	r9, r8
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 311


 7683 0248 95D1     		bne	.L191
 7684              	.LVL293:
 7685              	.L187:
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 7686              		.loc 13 1013 22 is_stmt 0 view .LVU1488
 7687              	.LBE4701:
 7688              	.LBE4702:
 7689              	.LBE4703:
 7690              	.LBE4704:
 7691              	.LBE4705:
 7692              	.LBE4706:
 7693              	.LBB4707:
 7694              	.LBI4707:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 7695              		.loc 8 350 7 is_stmt 1 view .LVU1489
 7696              	.LBB4708:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 7697              		.loc 8 353 2 is_stmt 0 view .LVU1490
 7698 024a 029B     		ldr	r3, [sp, #8]
 7699              	.LVL294:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 7700              		.loc 8 353 2 view .LVU1491
 7701 024c 2BB1     		cbz	r3, .L192
 7702              	.LVL295:
 7703              	.LBB4709:
 7704              	.LBI4709:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 7705              		.loc 6 491 7 is_stmt 1 view .LVU1492
 7706              	.LBB4710:
 7707              	.LBB4711:
 7708              	.LBI4711:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 7709              		.loc 5 120 7 view .LVU1493
 7710              	.LBE4711:
 7711              	.LBE4710:
 7712              	.LBE4709:
 7713              	.LBE4708:
 7714              	.LBE4707:
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_start = __new_start;
 7715              		.loc 4 501 39 is_stmt 0 view .LVU1494
 7716 024e 049A     		ldr	r2, [sp, #16]
 7717              	.LBB4722:
 7718              	.LBB4720:
 7719              	.LBB4718:
 7720              	.LBB4716:
 7721              	.LBB4714:
 7722              	.LBB4712:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7723              		.loc 5 133 19 view .LVU1495
 7724 0250 1846     		mov	r0, r3
 7725              	.LBE4712:
 7726              	.LBE4714:
 7727              	.LBE4716:
 7728              	.LBE4718:
 7729              	.LBE4720:
 7730              	.LBE4722:
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_start = __new_start;
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 312


 7731              		.loc 4 501 39 view .LVU1496
 7732 0252 9168     		ldr	r1, [r2, #8]
 7733              	.LBB4723:
 7734              	.LBB4721:
 7735              	.LBB4719:
 7736              	.LBB4717:
 7737              	.LBB4715:
 7738              	.LBB4713:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7739              		.loc 5 133 19 view .LVU1497
 7740 0254 C91A     		subs	r1, r1, r3
 7741 0256 FFF7FEFF 		bl	_ZdlPvj
 7742              	.LVL296:
 7743              	.L192:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7744              		.loc 5 133 19 view .LVU1498
 7745              	.LBE4713:
 7746              	.LBE4715:
 7747              	.LBE4717:
 7748              	.LBE4719:
 7749              	.LBE4721:
 7750              	.LBE4723:
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_finish = __new_finish;
 7751              		.loc 4 502 30 view .LVU1499
 7752 025a 049B     		ldr	r3, [sp, #16]
 7753 025c 0399     		ldr	r1, [sp, #12]
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 7754              		.loc 4 504 39 view .LVU1500
 7755 025e 059A     		ldr	r2, [sp, #20]
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_end_of_storage = __new_start + __len;
 7756              		.loc 4 503 31 view .LVU1501
 7757 0260 C3E90015 		strd	r1, r5, [r3]
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 7758              		.loc 4 504 39 view .LVU1502
 7759 0264 9A60     		str	r2, [r3, #8]
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 7760              		.loc 4 505 5 view .LVU1503
 7761 0266 09B0     		add	sp, sp, #36
 7762              		.cfi_remember_state
 7763              		.cfi_def_cfa_offset 36
 7764              		@ sp needed
 7765 0268 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 7766              	.LVL297:
 7767              	.L221:
 7768              		.cfi_restore_state
 7769              	.LBB4724:
 7770              	.LBB4378:
 7771              	.LBB4370:
 7772              	.LBB4371:
 7773              	.LBB4372:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 7774              		.loc 5 115 41 view .LVU1504
 7775 026c 8B42     		cmp	r3, r1
 7776 026e 28BF     		it	cs
 7777 0270 0B46     		movcs	r3, r1
 7778              	.LVL298:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 313


 7779              		.loc 5 115 41 view .LVU1505
 7780 0272 C3EB0313 		rsb	r3, r3, r3, lsl #4
 7781 0276 9D00     		lsls	r5, r3, #2
 7782              	.LVL299:
 7783              	.L180:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 7784              		.loc 5 115 41 view .LVU1506
 7785              	.LBE4372:
 7786              	.LBE4371:
 7787              	.LBI4370:
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 7788              		.loc 6 459 7 is_stmt 1 view .LVU1507
 7789              	.LBB4375:
 7790              	.LBI4371:
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 7791              		.loc 5 103 7 view .LVU1508
 7792              	.LBB4373:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 7793              		.loc 5 115 41 is_stmt 0 view .LVU1509
 7794 0278 2846     		mov	r0, r5
 7795 027a FFF7FEFF 		bl	_Znwj
 7796              	.LVL300:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 7797              		.loc 5 115 41 view .LVU1510
 7798              	.LBE4373:
 7799              	.LBE4375:
 7800              	.LBE4370:
 7801              	.LBE4378:
 7802              	.LBE4724:
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 7803              		.loc 4 504 53 view .LVU1511
 7804 027e 4219     		adds	r2, r0, r5
 7805              	.LBB4725:
 7806              	.LBB4379:
 7807              	.LBB4377:
 7808              	.LBB4376:
 7809              	.LBB4374:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 7810              		.loc 5 115 41 view .LVU1512
 7811 0280 0390     		str	r0, [sp, #12]
 7812              	.LVL301:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 7813              		.loc 5 115 41 view .LVU1513
 7814              	.LBE4374:
 7815              	.LBE4376:
 7816              	.LBE4377:
 7817              	.LBE4379:
 7818              	.LBE4725:
 7819              	.LBB4726:
 7820              	.LBB4529:
 7821              	.LBB4527:
 7822              	.LBB4525:
 7823              	.LBB4523:
 7824              	.LBB4521:
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 7825              		.loc 13 1013 44 view .LVU1514
 7826 0282 00F13C05 		add	r5, r0, #60
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 314


 7827              	.LBE4521:
 7828              	.LBE4523:
 7829              	.LBE4525:
 7830              	.LBE4527:
 7831              	.LBE4529:
 7832              	.LBE4726:
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 7833              		.loc 4 504 53 view .LVU1515
 7834 0286 0592     		str	r2, [sp, #20]
 7835              	.LBB4727:
 7836              	.LBB4380:
 7837 0288 DEE6     		b	.L193
 7838              	.LVL302:
 7839              	.L178:
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 7840              		.loc 4 504 53 view .LVU1516
 7841              	.LBE4380:
 7842              	.LBE4727:
 7843              	.LBB4728:
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 7844              		.loc 8 811 7 is_stmt 1 view .LVU1517
 7845              	.LBB4364:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 7846              		.loc 11 978 7 view .LVU1518
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 7847              		.loc 11 978 7 is_stmt 0 view .LVU1519
 7848              	.LBE4364:
 7849              	.LBE4728:
 7850              	.LBB4729:
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 7851              		.loc 11 1202 5 is_stmt 1 view .LVU1520
 7852              	.LBB4367:
 7853              		.loc 11 1205 27 is_stmt 0 view .LVU1521
 7854 028a DDE90132 		ldrd	r3, r2, [sp, #4]
 7855              	.LVL303:
 7856              		.loc 11 1205 27 view .LVU1522
 7857 028e 054D     		ldr	r5, .L222+8
 7858 0290 9E1A     		subs	r6, r3, r2
 7859              	.LVL304:
 7860              		.loc 11 1205 27 view .LVU1523
 7861              	.LBE4367:
 7862              	.LBE4729:
 7863              	.LBB4730:
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 7864              		.loc 8 343 7 is_stmt 1 view .LVU1524
 7865 0292 F1E7     		b	.L180
 7866              	.LVL305:
 7867              	.L220:
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 7868              		.loc 8 343 7 is_stmt 0 view .LVU1525
 7869              	.LBE4730:
 7870              	.LBB4731:
 7871              	.LBB4359:
 7872              		.loc 8 1759 24 view .LVU1526
 7873 0294 0448     		ldr	r0, .L222+12
 7874 0296 FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 7875              	.LVL306:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 315


 7876              	.L223:
 7877 029a 00BF     		.align	2
 7878              	.L222:
 7879 029c EFEEEEEE 		.word	-286331153
 7880 02a0 22222202 		.word	35791394
 7881 02a4 F8FFFF7F 		.word	2147483640
 7882 02a8 00000000 		.word	.LC4
 7883              	.LBE4359:
 7884              	.LBE4731:
 7885              		.cfi_endproc
 7886              	.LFE4164:
 7888              		.section	.text._ZN9SequencerC2EfR9DrumSynthR10ChordSynth,"ax",%progbits
 7889              		.align	1
 7890              		.p2align 2,,3
 7891              		.global	_ZN9SequencerC2EfR9DrumSynthR10ChordSynth
 7892              		.syntax unified
 7893              		.thumb
 7894              		.thumb_func
 7895              		.fpu fpv5-d16
 7897              	_ZN9SequencerC2EfR9DrumSynthR10ChordSynth:
 7898              	.LVL307:
 7899              	.LFB3626:
  18:Sequencer.cpp **** Sequencer::Sequencer(float sample_rate, DrumSynth& drum_synth, ChordSynth& chord_synth) 
 7900              		.loc 7 18 1 is_stmt 1 view -0
 7901              		.cfi_startproc
 7902              		@ args = 0, pretend = 0, frame = 80
 7903              		@ frame_needed = 0, uses_anonymous_args = 0
  18:Sequencer.cpp **** Sequencer::Sequencer(float sample_rate, DrumSynth& drum_synth, ChordSynth& chord_synth) 
 7904              		.loc 7 18 1 is_stmt 0 view .LVU1528
 7905 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 7906              		.cfi_def_cfa_offset 20
 7907              		.cfi_offset 4, -20
 7908              		.cfi_offset 5, -16
 7909              		.cfi_offset 6, -12
 7910              		.cfi_offset 7, -8
 7911              		.cfi_offset 14, -4
 7912              	.LBB4978:
  19:Sequencer.cpp ****     : sample_rate(sample_rate), drum_synth(drum_synth), chord_synth(chord_synth), bpm(105) {
 7913              		.loc 7 19 90 view .LVU1529
 7914 0002 6923     		movs	r3, #105
 7915              	.LBE4978:
  18:Sequencer.cpp **** Sequencer::Sequencer(float sample_rate, DrumSynth& drum_synth, ChordSynth& chord_synth) 
 7916              		.loc 7 18 1 view .LVU1530
 7917 0004 95B0     		sub	sp, sp, #84
 7918              		.cfi_def_cfa_offset 104
 7919              	.LBB5194:
 7920              	.LBB4979:
 7921              	.LBB4980:
 7922              	.LBB4981:
 7923              	.LBB4982:
 7924              	.LBB4983:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 7925              		.loc 8 98 47 view .LVU1531
 7926 0006 0024     		movs	r4, #0
 7927              	.LBE4983:
 7928              	.LBE4982:
 7929              	.LBE4981:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 316


 7930              	.LBE4980:
 7931              	.LBE4979:
 7932              	.LBB4993:
  22:Sequencer.cpp ****         pat.kick_steps = {  true, false, false, false, 
 7933              		.loc 7 22 24 view .LVU1532
 7934 0008 454E     		ldr	r6, .L242
 7935 000a 01AD     		add	r5, sp, #4
 7936              	.LBE4993:
  19:Sequencer.cpp ****     : sample_rate(sample_rate), drum_synth(drum_synth), chord_synth(chord_synth), bpm(105) {
 7937              		.loc 7 19 90 view .LVU1533
 7938 000c 80ED010A 		vstr.32	s0, [r0, #4]
 7939              	.LVL308:
 7940              	.LBB5165:
 7941              	.LBI4979:
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 7942              		.loc 8 487 7 is_stmt 1 view .LVU1534
 7943              	.LBB4991:
 7944              	.LBI4980:
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 7945              		.loc 8 288 7 view .LVU1535
 7946              	.LBB4989:
 7947              	.LBI4981:
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    is_nothrow_default_constructible<_Tp_alloc_type>::value)
 7948              		.loc 8 131 2 view .LVU1536
 7949              	.LBB4985:
 7950              	.LBI4985:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 7951              		.loc 15 144 7 view .LVU1537
 7952              	.LBB4986:
 7953              	.LBI4986:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7954              		.loc 5 79 7 view .LVU1538
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7955              		.loc 5 79 7 is_stmt 0 view .LVU1539
 7956              	.LBE4986:
 7957              	.LBE4985:
 7958              	.LBB4987:
 7959              	.LBI4982:
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 7960              		.loc 8 97 2 is_stmt 1 view .LVU1540
 7961              	.LBE4987:
 7962              	.LBE4989:
 7963              	.LBE4991:
 7964              	.LBE5165:
 7965              	.LBE5194:
  18:Sequencer.cpp **** Sequencer::Sequencer(float sample_rate, DrumSynth& drum_synth, ChordSynth& chord_synth) 
 7966              		.loc 7 18 1 is_stmt 0 view .LVU1541
 7967 0010 0746     		mov	r7, r0
 7968              	.LBB5195:
 7969              	.LBB5166:
 7970              	.LBB5167:
 7971              	.LBB5168:
 7972              	.LBB5169:
 7973              	.LBB5170:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 7974              		.loc 8 98 47 view .LVU1542
 7975 0012 C462     		str	r4, [r0, #44]
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 317


 7976              	.LBE5170:
 7977              	.LBE5169:
 7978              	.LBE5168:
 7979              	.LBE5167:
 7980              	.LBE5166:
  19:Sequencer.cpp ****     : sample_rate(sample_rate), drum_synth(drum_synth), chord_synth(chord_synth), bpm(105) {
 7981              		.loc 7 19 90 view .LVU1543
 7982 0014 80F83040 		strb	r4, [r0, #48]
 7983              	.LBB5180:
 7984              	.LBB4994:
 7985              	.LBB4995:
 7986              	.LBB4996:
 7987              	.LBB4997:
 7988              	.LBB4998:
 7989              	.LBB4999:
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ }
 7990              		.loc 1 468 47 view .LVU1544
 7991 0018 1394     		str	r4, [sp, #76]
 7992              	.LBE4999:
 7993              	.LBE4998:
 7994              	.LBE4997:
 7995              	.LBE4996:
 7996              	.LBE4995:
 7997              	.LBE4994:
 7998              	.LBE5180:
  19:Sequencer.cpp ****     : sample_rate(sample_rate), drum_synth(drum_synth), chord_synth(chord_synth), bpm(105) {
 7999              		.loc 7 19 90 view .LVU1545
 8000 001a 0370     		strb	r3, [r0]
 8001 001c 4163     		str	r1, [r0, #52]
 8002 001e 8263     		str	r2, [r0, #56]
 8003              	.LBB5181:
 8004              	.LBB4992:
 8005              	.LBB4990:
 8006              	.LBB4988:
 8007              	.LBB4984:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 8008              		.loc 8 98 47 view .LVU1546
 8009 0020 C0E90344 		strd	r4, r4, [r0, #12]
 8010              	.LBE4984:
 8011              	.LBE4988:
 8012              	.LBE4990:
 8013              	.LBE4992:
 8014              	.LBE5181:
 8015              	.LBB5182:
 8016              	.LBB5183:
 8017              	.LBB5184:
 8018              	.LBB5185:
 8019              	.LBB5186:
 8020 0024 C0E90544 		strd	r4, r4, [r0, #20]
 8021 0028 C0E90744 		strd	r4, r4, [r0, #28]
 8022              	.LVL309:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 8023              		.loc 8 98 47 view .LVU1547
 8024              	.LBE5186:
 8025              	.LBE5185:
 8026              	.LBE5184:
 8027              	.LBE5183:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 318


 8028              	.LBE5182:
 8029              	.LBB5187:
 8030              	.LBI5166:
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 8031              		.loc 8 487 7 is_stmt 1 view .LVU1548
 8032              	.LBB5178:
 8033              	.LBI5167:
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 8034              		.loc 8 288 7 view .LVU1549
 8035              	.LBB5176:
 8036              	.LBI5168:
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    is_nothrow_default_constructible<_Tp_alloc_type>::value)
 8037              		.loc 8 131 2 view .LVU1550
 8038              	.LBB5172:
 8039              	.LBI5172:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 8040              		.loc 15 144 7 view .LVU1551
 8041              	.LBB5173:
 8042              	.LBI5173:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8043              		.loc 5 79 7 view .LVU1552
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8044              		.loc 5 79 7 is_stmt 0 view .LVU1553
 8045              	.LBE5173:
 8046              	.LBE5172:
 8047              	.LBB5174:
 8048              	.LBI5169:
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 8049              		.loc 8 97 2 is_stmt 1 view .LVU1554
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 8050              		.loc 8 97 2 is_stmt 0 view .LVU1555
 8051              	.LBE5174:
 8052              	.LBE5176:
 8053              	.LBE5178:
 8054              	.LBE5187:
 8055              	.LBB5188:
  20:Sequencer.cpp ****         DrumPatternBeat pat{};
 8056              		.loc 7 20 9 is_stmt 1 view .LVU1556
 8057              	.LBB5015:
 8058              	.LBI5015:
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 8059              		.loc 1 651 7 view .LVU1557
 8060              	.LBB5016:
 8061              	.LBI5016:
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 8062              		.loc 1 537 7 view .LVU1558
 8063              	.LBB5017:
 8064              	.LBI5017:
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 		is_nothrow_default_constructible<_Bit_alloc_type>::value)
 8065              		.loc 1 499 4 view .LVU1559
 8066              	.LBB5018:
 8067              	.LBI5018:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 8068              		.loc 15 144 7 view .LVU1560
 8069              	.LBB5019:
 8070              	.LBI5019:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 319


 8071              		.loc 5 79 7 view .LVU1561
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8072              		.loc 5 79 7 is_stmt 0 view .LVU1562
 8073              	.LBE5019:
 8074              	.LBE5018:
 8075              	.LBB5020:
 8076              	.LBI5020:
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 8077              		.loc 1 467 2 is_stmt 1 view .LVU1563
 8078              	.LBB5021:
 8079              	.LBB5022:
 8080              	.LBB5023:
 8081              	.LBI5023:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 8082              		.loc 1 241 5 view .LVU1564
 8083              	.LBB5024:
 8084              	.LBI5024:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 8085              		.loc 1 148 5 view .LVU1565
 8086              	.LBE5024:
 8087              	.LBE5023:
 8088              	.LBE5022:
 8089              	.LBE5021:
 8090              	.LBE5020:
 8091              	.LBE5017:
 8092              	.LBE5016:
 8093              	.LBE5015:
 8094              	.LBE5188:
 8095              	.LBB5189:
 8096              	.LBB5179:
 8097              	.LBB5177:
 8098              	.LBB5175:
 8099              	.LBB5171:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 8100              		.loc 8 98 47 is_stmt 0 view .LVU1566
 8101 002c C0E90944 		strd	r4, r4, [r0, #36]
 8102              	.LBE5171:
 8103              	.LBE5175:
 8104              	.LBE5177:
 8105              	.LBE5179:
 8106              	.LBE5189:
 8107              	.LBB5190:
 8108              	.LBB5038:
 8109              	.LBB5037:
 8110              	.LBB5036:
 8111              	.LBB5035:
 8112              	.LBB5034:
 8113              	.LBB5033:
 8114              	.LBB5028:
 8115              	.LBB5027:
 8116              	.LBB5025:
 8117              	.LBB5026:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 8118              		.loc 1 149 31 view .LVU1567
 8119 0030 CDE90544 		strd	r4, r4, [sp, #20]
 8120              	.LVL310:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 320


 8121              		.loc 1 149 31 view .LVU1568
 8122              	.LBE5026:
 8123              	.LBE5025:
 8124              	.LBE5027:
 8125              	.LBE5028:
 8126              	.LBB5029:
 8127              	.LBI5029:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 8128              		.loc 1 241 5 is_stmt 1 view .LVU1569
 8129              	.LBB5030:
 8130              	.LBI5030:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 8131              		.loc 1 148 5 view .LVU1570
 8132              	.LBB5031:
 8133              	.LBB5032:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 8134              		.loc 1 149 31 is_stmt 0 view .LVU1571
 8135 0034 CDE90744 		strd	r4, r4, [sp, #28]
 8136              	.LVL311:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 8137              		.loc 1 149 31 view .LVU1572
 8138              	.LBE5032:
 8139              	.LBE5031:
 8140              	.LBE5030:
 8141              	.LBE5029:
 8142              	.LBE5033:
 8143              	.LBE5034:
 8144              	.LBE5035:
 8145              	.LBE5036:
 8146              	.LBE5037:
 8147              	.LBE5038:
 8148              	.LBB5039:
 8149              	.LBB5040:
 8150              	.LBB5041:
 8151              	.LBB5042:
 8152              	.LBB5043:
 8153              	.LBB5044:
 8154              	.LBB5045:
 8155              	.LBB5046:
 8156              	.LBB5047:
 8157              	.LBB5048:
 8158 0038 CDE90944 		strd	r4, r4, [sp, #36]
 8159              	.LBE5048:
 8160              	.LBE5047:
 8161              	.LBE5046:
 8162              	.LBE5045:
 8163              	.LBB5049:
 8164              	.LBB5050:
 8165              	.LBB5051:
 8166              	.LBB5052:
 8167 003c CDE90B44 		strd	r4, r4, [sp, #44]
 8168              	.LBE5052:
 8169              	.LBE5051:
 8170              	.LBE5050:
 8171              	.LBE5049:
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ }
 8172              		.loc 1 468 47 view .LVU1573
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 321


 8173 0040 CDE90D44 		strd	r4, r4, [sp, #52]
 8174              	.LVL312:
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ }
 8175              		.loc 1 468 47 view .LVU1574
 8176              	.LBE5044:
 8177              	.LBE5043:
 8178              	.LBE5042:
 8179              	.LBE5041:
 8180              	.LBE5040:
 8181              	.LBE5039:
 8182              	.LBB5053:
 8183              	.LBI4994:
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 8184              		.loc 1 651 7 is_stmt 1 view .LVU1575
 8185              	.LBB5014:
 8186              	.LBI4995:
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 8187              		.loc 1 537 7 view .LVU1576
 8188              	.LBB5013:
 8189              	.LBI4996:
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 		is_nothrow_default_constructible<_Bit_alloc_type>::value)
 8190              		.loc 1 499 4 view .LVU1577
 8191              	.LBB5010:
 8192              	.LBI5010:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 8193              		.loc 15 144 7 view .LVU1578
 8194              	.LBB5011:
 8195              	.LBI5011:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8196              		.loc 5 79 7 view .LVU1579
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8197              		.loc 5 79 7 is_stmt 0 view .LVU1580
 8198              	.LBE5011:
 8199              	.LBE5010:
 8200              	.LBB5012:
 8201              	.LBI4997:
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 8202              		.loc 1 467 2 is_stmt 1 view .LVU1581
 8203              	.LBB5009:
 8204              	.LBB5008:
 8205              	.LBB5000:
 8206              	.LBI5000:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 8207              		.loc 1 241 5 view .LVU1582
 8208              	.LBB5001:
 8209              	.LBI5001:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 8210              		.loc 1 148 5 view .LVU1583
 8211              	.LBB5002:
 8212              	.LBB5003:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 8213              		.loc 1 149 31 is_stmt 0 view .LVU1584
 8214 0044 CDE90F44 		strd	r4, r4, [sp, #60]
 8215              	.LVL313:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 8216              		.loc 1 149 31 view .LVU1585
 8217              	.LBE5003:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 322


 8218              	.LBE5002:
 8219              	.LBE5001:
 8220              	.LBE5000:
 8221              	.LBB5004:
 8222              	.LBI5004:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 8223              		.loc 1 241 5 is_stmt 1 view .LVU1586
 8224              	.LBB5005:
 8225              	.LBI5005:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 8226              		.loc 1 148 5 view .LVU1587
 8227              	.LBB5006:
 8228              	.LBB5007:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 8229              		.loc 1 149 31 is_stmt 0 view .LVU1588
 8230 0048 CDE91144 		strd	r4, r4, [sp, #68]
 8231              	.LVL314:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 8232              		.loc 1 149 31 view .LVU1589
 8233              	.LBE5007:
 8234              	.LBE5006:
 8235              	.LBE5005:
 8236              	.LBE5004:
 8237              	.LBE5008:
 8238              	.LBE5009:
 8239              	.LBE5012:
 8240              	.LBE5013:
 8241              	.LBE5014:
 8242              	.LBE5053:
  21:Sequencer.cpp ****         drum_patterns.clear();
 8243              		.loc 7 21 9 is_stmt 1 view .LVU1590
 8244              	.LBB5054:
 8245              	.LBI5054:
1498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_erase_at_end(this->_M_impl._M_start); }
 8246              		.loc 8 1498 7 view .LVU1591
 8247              	.LBB5055:
 8248              	.LBI5055:
1760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const size_type __len = size() + (std::max)(size(), __n);
1762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (__len < size() || __len > max_size()) ? max_size() : __len;
1763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by constructors to check initial size.
1766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static size_type
1767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_check_init_len(size_type __n, const allocator_type& __a)
1768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__n > _S_max_size(_Tp_alloc_type(__a)))
1770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(
1771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __N("cannot create std::vector larger than max_size()"));
1772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return __n;
1773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static size_type
1776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
1777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// std::distance(begin(), end()) cannot be greater than PTRDIFF_MAX,
1779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// and realistically we can't store more than PTRDIFF_MAX/sizeof(T)
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 323


1780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// (even if std::allocator_traits::max_size says we can).
1781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const size_t __diffmax
1782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  = __gnu_cxx::__numeric_traits<ptrdiff_t>::__max / sizeof(_Tp);
1783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const size_t __allocmax = _Alloc_traits::max_size(__a);
1784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (std::min)(__diffmax, __allocmax);
1785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Internal erase functions follow.
1788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by erase(q1,q2), clear(), resize(), _M_fill_assign,
1790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _M_assign_aux.
1791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
 8249              		.loc 8 1792 7 view .LVU1592
 8250              		.loc 8 1792 7 is_stmt 0 view .LVU1593
 8251              	.LBE5055:
 8252              	.LBE5054:
  22:Sequencer.cpp ****         pat.kick_steps = {  true, false, false, false, 
 8253              		.loc 7 22 9 is_stmt 1 view .LVU1594
  22:Sequencer.cpp ****         pat.kick_steps = {  true, false, false, false, 
 8254              		.loc 7 22 24 is_stmt 0 view .LVU1595
 8255 004c 96E80F00 		ldm	r6, {r0, r1, r2, r3}
 8256              	.LVL315:
  22:Sequencer.cpp ****         pat.kick_steps = {  true, false, false, false, 
 8257              		.loc 7 22 24 view .LVU1596
 8258 0050 85E80F00 		stm	r5, {r0, r1, r2, r3}
 8259              	.LVL316:
 8260              	.LBB5056:
 8261              	.LBI5056:
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 8262              		.loc 1 796 7 is_stmt 1 view .LVU1597
 8263              	.LBB5057:
 8264              	.LBI5057:
 8265              		.file 17 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\initializer_list
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // std::initializer_list support -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // Copyright (C) 2008-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // This file is part of GCC.
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** //
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // GCC is free software; you can redistribute it and/or modify
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // it under the terms of the GNU General Public License as published by
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // the Free Software Foundation; either version 3, or (at your option)
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // any later version.
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** //
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // GCC is distributed in the hope that it will be useful,
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // GNU General Public License for more details.
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** //
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // Under Section 7 of GPL version 3, you are granted additional
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // permissions described in the GCC Runtime Library Exception, version
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // 3.1, as published by the Free Software Foundation.
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // You should have received a copy of the GNU General Public License and
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // a copy of the GCC Runtime Library Exception along with this program;
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 324


  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // <http://www.gnu.org/licenses/>.
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** /** @file initializer_list
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****  *  This is a Standard C++ Library header.
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****  */
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** #ifndef _INITIALIZER_LIST
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** #define _INITIALIZER_LIST
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** #pragma GCC system_header
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** #if __cplusplus < 201103L
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** # include <bits/c++0x_warning.h>
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** #else // C++0x
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** #pragma GCC visibility push(default)
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** #include <bits/c++config.h>
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** namespace std
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** {
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****   /// initializer_list
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****   template<class _E>
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****     class initializer_list
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****     {
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****     public:
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef _E 		value_type;
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef const _E& 	reference;
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef const _E& 	const_reference;
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef size_t 		size_type;
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef const _E* 	iterator;
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef const _E* 	const_iterator;
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****     private:
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       iterator			_M_array;
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       size_type			_M_len;
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       // The compiler can call a private constructor.
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       constexpr initializer_list(const_iterator __a, size_type __l)
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       : _M_array(__a), _M_len(__l) { }
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****     public:
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       constexpr initializer_list() noexcept
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       : _M_array(0), _M_len(0) { }
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       // Number of elements.
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       constexpr size_type
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       size() const noexcept { return _M_len; }
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       // First element.
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       constexpr const_iterator
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       begin() const noexcept { return _M_array; }
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       // One past the last element.
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       constexpr const_iterator
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       end() const noexcept { return begin() + size(); }
 8266              		.loc 17 79 7 view .LVU1598
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 325


 8267              		.loc 17 79 7 is_stmt 0 view .LVU1599
 8268              	.LBE5057:
 8269              	.LBB5058:
 8270              	.LBI5058:
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ _M_assign_aux(__first, __last, std::__iterator_category(__first)); }
 8271              		.loc 1 815 2 is_stmt 1 view .LVU1600
 8272              	.LBB5059:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 8273              		.loc 1 816 17 is_stmt 0 view .LVU1601
 8274 0054 05AA     		add	r2, sp, #20
 8275              	.LVL317:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 8276              		.loc 1 816 17 view .LVU1602
 8277 0056 2946     		mov	r1, r5
 8278              	.LBE5059:
 8279              	.LBE5058:
 8280              	.LBE5056:
  32:Sequencer.cpp ****         pat.hat_steps = {true, false, true, false, 
 8281              		.loc 7 32 23 view .LVU1603
 8282 0058 1036     		adds	r6, r6, #16
 8283              	.LBB5062:
 8284              	.LBB5061:
 8285              	.LBB5060:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 8286              		.loc 1 816 17 view .LVU1604
 8287 005a 1046     		mov	r0, r2
 8288 005c FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEE13_M_assign_auxIPKbEEvT_S5_St20forward_iterator_tag.isra.0
 8289              	.LVL318:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 8290              		.loc 1 816 17 view .LVU1605
 8291              	.LBE5060:
 8292              	.LBE5061:
 8293              	.LBE5062:
  27:Sequencer.cpp ****         pat.snare_steps = {false, false, false, false, 
 8294              		.loc 7 27 9 is_stmt 1 view .LVU1606
  27:Sequencer.cpp ****         pat.snare_steps = {false, false, false, false, 
 8295              		.loc 7 27 25 is_stmt 0 view .LVU1607
 8296 0060 0123     		movs	r3, #1
 8297              	.LBB5063:
 8298              	.LBB5064:
 8299              	.LBB5065:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 8300              		.loc 1 816 17 view .LVU1608
 8301 0062 05AA     		add	r2, sp, #20
 8302              	.LVL319:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 8303              		.loc 1 816 17 view .LVU1609
 8304 0064 2946     		mov	r1, r5
 8305 0066 0FA8     		add	r0, sp, #60
 8306              	.LVL320:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 8307              		.loc 1 816 17 view .LVU1610
 8308              	.LBE5065:
 8309              	.LBE5064:
 8310              	.LBE5063:
  27:Sequencer.cpp ****         pat.snare_steps = {false, false, false, false, 
 8311              		.loc 7 27 25 view .LVU1611
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 326


 8312 0068 6C60     		str	r4, [r5, #4]
 8313 006a EC60     		str	r4, [r5, #12]
 8314 006c 0194     		str	r4, [sp, #4]
 8315 006e AC60     		str	r4, [r5, #8]
 8316 0070 8DF80830 		strb	r3, [sp, #8]
 8317 0074 8DF81030 		strb	r3, [sp, #16]
 8318              	.LVL321:
 8319              	.LBB5069:
 8320              	.LBI5063:
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 8321              		.loc 1 796 7 is_stmt 1 view .LVU1612
 8322              	.LBB5067:
 8323              	.LBI5067:
 8324              		.loc 17 79 7 view .LVU1613
 8325              		.loc 17 79 7 is_stmt 0 view .LVU1614
 8326              	.LBE5067:
 8327              	.LBB5068:
 8328              	.LBI5064:
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ _M_assign_aux(__first, __last, std::__iterator_category(__first)); }
 8329              		.loc 1 815 2 is_stmt 1 view .LVU1615
 8330              	.LBB5066:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 8331              		.loc 1 816 17 is_stmt 0 view .LVU1616
 8332 0078 FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEE13_M_assign_auxIPKbEEvT_S5_St20forward_iterator_tag.isra.0
 8333              	.LVL322:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 8334              		.loc 1 816 17 view .LVU1617
 8335              	.LBE5066:
 8336              	.LBE5068:
 8337              	.LBE5069:
  32:Sequencer.cpp ****         pat.hat_steps = {true, false, true, false, 
 8338              		.loc 7 32 9 is_stmt 1 view .LVU1618
  32:Sequencer.cpp ****         pat.hat_steps = {true, false, true, false, 
 8339              		.loc 7 32 23 is_stmt 0 view .LVU1619
 8340 007c 96E80F00 		ldm	r6, {r0, r1, r2, r3}
 8341 0080 85E80F00 		stm	r5, {r0, r1, r2, r3}
 8342              	.LVL323:
 8343              	.LBB5070:
 8344              	.LBI5070:
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 8345              		.loc 1 796 7 is_stmt 1 view .LVU1620
 8346              	.LBB5071:
 8347              	.LBI5071:
 8348              		.loc 17 79 7 view .LVU1621
 8349              		.loc 17 79 7 is_stmt 0 view .LVU1622
 8350              	.LBE5071:
 8351              	.LBB5072:
 8352              	.LBI5072:
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ _M_assign_aux(__first, __last, std::__iterator_category(__first)); }
 8353              		.loc 1 815 2 is_stmt 1 view .LVU1623
 8354              	.LBB5073:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 8355              		.loc 1 816 17 is_stmt 0 view .LVU1624
 8356 0084 05AA     		add	r2, sp, #20
 8357              	.LVL324:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 8358              		.loc 1 816 17 view .LVU1625
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 327


 8359 0086 2946     		mov	r1, r5
 8360 0088 0AA8     		add	r0, sp, #40
 8361              	.LVL325:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 8362              		.loc 1 816 17 view .LVU1626
 8363 008a FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEE13_M_assign_auxIPKbEEvT_S5_St20forward_iterator_tag.isra.0
 8364              	.LVL326:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 8365              		.loc 1 816 17 view .LVU1627
 8366              	.LBE5073:
 8367              	.LBE5072:
 8368              	.LBE5070:
  36:Sequencer.cpp ****         drum_patterns.push_back(pat);
 8369              		.loc 7 36 9 is_stmt 1 view .LVU1628
 8370              	.LBB5074:
 8371              	.LBI5074:
1187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8372              		.loc 8 1187 7 view .LVU1629
 8373              	.LBB5075:
1189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 8374              		.loc 8 1189 2 is_stmt 0 view .LVU1630
 8375 008e D7E90443 		ldrd	r4, r3, [r7, #16]
 8376 0092 9C42     		cmp	r4, r3
 8377 0094 35D0     		beq	.L225
 8378              	.LVL327:
 8379              	.LBB5076:
 8380              	.LBI5076:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 8381              		.loc 6 507 2 is_stmt 1 view .LVU1631
 8382              	.LBB5077:
 8383              	.LBI5077:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 8384              		.loc 5 148 2 view .LVU1632
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 8385              		.loc 5 148 2 is_stmt 0 view .LVU1633
 8386              	.LBE5077:
 8387              	.LBE5076:
 8388              	.LBE5075:
 8389              	.LBE5074:
 8390              	.LBE5190:
 8391              	.LBE5195:
 8392              		.loc 12 175 3 is_stmt 1 view .LVU1634
 8393              	.LBB5196:
 8394              	.LBB5191:
 8395              	.LBB5086:
 8396              	.LBB5084:
 8397              	.LBB5081:
 8398              	.LBB5080:
 8399              	.LBB5078:
 8400              	.LBI5078:
 8401              		.loc 16 23 12 view .LVU1635
 8402              	.LBB5079:
 8403 0096 05A9     		add	r1, sp, #20
 8404              	.LVL328:
 8405              		.loc 16 23 12 is_stmt 0 view .LVU1636
 8406 0098 2046     		mov	r0, r4
 8407 009a FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEEC1ERKS1_
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 328


 8408              	.LVL329:
 8409              		.loc 16 23 12 view .LVU1637
 8410 009e 0AA9     		add	r1, sp, #40
 8411 00a0 04F11400 		add	r0, r4, #20
 8412 00a4 FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEEC1ERKS1_
 8413              	.LVL330:
 8414 00a8 0FA9     		add	r1, sp, #60
 8415              	.LVL331:
 8416              		.loc 16 23 12 view .LVU1638
 8417 00aa 04F12800 		add	r0, r4, #40
 8418 00ae FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEEC1ERKS1_
 8419              	.LVL332:
 8420              		.loc 16 23 12 view .LVU1639
 8421              	.LBE5079:
 8422              	.LBE5078:
 8423              	.LBE5080:
 8424              	.LBE5081:
1194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 8425              		.loc 8 1194 6 view .LVU1640
 8426 00b2 3B69     		ldr	r3, [r7, #16]
 8427 00b4 3C33     		adds	r3, r3, #60
 8428 00b6 3B61     		str	r3, [r7, #16]
 8429              	.L226:
 8430              	.LVL333:
1194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 8431              		.loc 8 1194 6 view .LVU1641
 8432              	.LBE5084:
 8433              	.LBE5086:
  38:Sequencer.cpp ****         chord_patterns.push_back({true, true, true, false, true, false, true, false, true, true, tr
 8434              		.loc 7 38 9 is_stmt 1 view .LVU1642
  38:Sequencer.cpp ****         chord_patterns.push_back({true, true, true, false, true, false, true, false, true, true, tr
 8435              		.loc 7 38 33 is_stmt 0 view .LVU1643
 8436 00b8 1A4B     		ldr	r3, .L242+4
 8437              	.LBB5087:
 8438              	.LBB5088:
 8439              	.LBB5089:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8440              		.loc 4 112 2 view .LVU1644
 8441 00ba D7E90746 		ldrd	r4, r6, [r7, #28]
 8442              	.LBE5089:
 8443              	.LBE5088:
 8444              	.LBE5087:
  38:Sequencer.cpp ****         chord_patterns.push_back({true, true, true, false, true, false, true, false, true, true, tr
 8445              		.loc 7 38 33 view .LVU1645
 8446 00be 0FCB     		ldm	r3, {r0, r1, r2, r3}
 8447              	.LBB5105:
 8448              	.LBB5101:
 8449              	.LBB5097:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8450              		.loc 4 112 2 view .LVU1646
 8451 00c0 B442     		cmp	r4, r6
 8452              	.LBE5097:
 8453              	.LBE5101:
 8454              	.LBE5105:
  38:Sequencer.cpp ****         chord_patterns.push_back({true, true, true, false, true, false, true, false, true, true, tr
 8455              		.loc 7 38 33 view .LVU1647
 8456 00c2 85E80F00 		stm	r5, {r0, r1, r2, r3}
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 329


 8457              	.LVL334:
 8458              	.LBB5106:
 8459              	.LBI5087:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 8460              		.loc 8 1203 7 is_stmt 1 view .LVU1648
 8461              	.LBB5102:
 8462              	.LBI5088:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 8463              		.loc 4 109 7 view .LVU1649
 8464              	.LBB5098:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8465              		.loc 4 112 2 is_stmt 0 view .LVU1650
 8466 00c6 23D0     		beq	.L227
 8467              	.LVL335:
 8468              	.LBB5090:
 8469              	.LBI5090:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 8470              		.loc 6 507 2 is_stmt 1 view .LVU1651
 8471              	.LBB5091:
 8472              	.LBI5091:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 8473              		.loc 5 148 2 view .LVU1652
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 8474              		.loc 5 148 2 is_stmt 0 view .LVU1653
 8475              	.LBE5091:
 8476              	.LBE5090:
 8477              	.LBE5098:
 8478              	.LBE5102:
 8479              	.LBE5106:
 8480              	.LBE5191:
 8481              	.LBE5196:
 8482              		.loc 12 175 3 is_stmt 1 view .LVU1654
 8483              	.LBB5197:
 8484              	.LBB5192:
 8485              	.LBB5107:
 8486              	.LBB5103:
 8487              	.LBB5099:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 8488              		.loc 4 117 6 is_stmt 0 view .LVU1655
 8489 00c8 04F11006 		add	r6, r4, #16
 8490              	.LBB5094:
 8491              	.LBB5093:
 8492              	.LBB5092:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8493              		.loc 5 150 4 view .LVU1656
 8494 00cc 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8495              	.LVL336:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8496              		.loc 5 150 4 view .LVU1657
 8497 00ce 2060     		str	r0, [r4]	@ unaligned
 8498 00d0 6160     		str	r1, [r4, #4]	@ unaligned
 8499 00d2 A260     		str	r2, [r4, #8]	@ unaligned
 8500 00d4 E360     		str	r3, [r4, #12]	@ unaligned
 8501              	.LVL337:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8502              		.loc 5 150 4 view .LVU1658
 8503              	.LBE5092:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 330


 8504              	.LBE5093:
 8505              	.LBE5094:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 8506              		.loc 4 117 6 view .LVU1659
 8507 00d6 FE61     		str	r6, [r7, #28]
 8508              	.LVL338:
 8509              	.L228:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 8510              		.loc 4 117 6 view .LVU1660
 8511              	.LBE5099:
 8512              	.LBE5103:
 8513              	.LBE5107:
 8514              	.LBB5108:
 8515              	.LBI5108:
 8516              		.loc 16 23 12 is_stmt 1 view .LVU1661
 8517              	.LBB5109:
 8518              	.LBB5110:
 8519              	.LBI5110:
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 8520              		.loc 1 737 7 view .LVU1662
 8521              	.LBB5111:
 8522              	.LBB5112:
 8523              	.LBI5112:
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { this->_M_deallocate(); }
 8524              		.loc 1 549 7 view .LVU1663
 8525              	.LBB5113:
 8526              	.LBI5113:
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 8527              		.loc 1 560 7 view .LVU1664
 8528              	.LBB5114:
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 8529              		.loc 1 562 23 is_stmt 0 view .LVU1665
 8530 00d8 0F98     		ldr	r0, [sp, #60]
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 8531              		.loc 1 562 2 view .LVU1666
 8532 00da 18B1     		cbz	r0, .L229
 8533              	.LVL339:
 8534              	.LBB5115:
 8535              	.LBB5116:
 8536              	.LBI5116:
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 8537              		.loc 1 513 2 is_stmt 1 view .LVU1667
 8538              	.LBB5117:
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    return std::__addressof(this->_M_end_of_storage[-1]) + 1;
 8539              		.loc 1 515 14 is_stmt 0 view .LVU1668
 8540 00dc 1399     		ldr	r1, [sp, #76]
 8541              	.LVL340:
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    return std::__addressof(this->_M_end_of_storage[-1]) + 1;
 8542              		.loc 1 515 14 view .LVU1669
 8543              	.LBE5117:
 8544              	.LBE5116:
 8545              	.LBB5118:
 8546              	.LBI5118:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 8547              		.loc 6 491 7 is_stmt 1 view .LVU1670
 8548              	.LBB5119:
 8549              	.LBI5119:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 331


 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 8550              		.loc 5 120 7 view .LVU1671
 8551              	.LBB5120:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8552              		.loc 5 133 19 is_stmt 0 view .LVU1672
 8553 00de 091A     		subs	r1, r1, r0
 8554              	.LVL341:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8555              		.loc 5 133 19 view .LVU1673
 8556 00e0 FFF7FEFF 		bl	_ZdlPvj
 8557              	.LVL342:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8558              		.loc 5 133 19 view .LVU1674
 8559              	.LBE5120:
 8560              	.LBE5119:
 8561              	.LBE5118:
 8562              	.LBB5121:
 8563              	.LBI5121:
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 8564              		.loc 1 488 2 is_stmt 1 view .LVU1675
 8565              	.LBB5122:
 8566              	.LBB5123:
 8567              	.LBI5123:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 8568              		.loc 1 241 5 view .LVU1676
 8569              	.LBB5124:
 8570              	.LBI5124:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 8571              		.loc 1 148 5 view .LVU1677
 8572              	.L229:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 8573              		.loc 1 148 5 is_stmt 0 view .LVU1678
 8574              	.LBE5124:
 8575              	.LBE5123:
 8576              	.LBE5122:
 8577              	.LBE5121:
 8578              	.LBE5115:
 8579              	.LBE5114:
 8580              	.LBE5113:
 8581              	.LBB5125:
 8582              	.LBI5125:
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: public _Bit_alloc_type, public _Bvector_impl_data
 8583              		.loc 1 495 14 is_stmt 1 view .LVU1679
 8584              	.LBB5126:
 8585              	.LBI5126:
 8586              		.loc 15 162 7 view .LVU1680
 8587              	.LBB5127:
 8588              	.LBI5127:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8589              		.loc 5 89 7 view .LVU1681
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8590              		.loc 5 89 7 is_stmt 0 view .LVU1682
 8591              	.LBE5127:
 8592              	.LBE5126:
 8593              	.LBE5125:
 8594              	.LBE5112:
 8595              	.LBE5111:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 332


 8596              	.LBE5110:
 8597              	.LBB5128:
 8598              	.LBI5128:
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 8599              		.loc 1 737 7 is_stmt 1 view .LVU1683
 8600              	.LBB5129:
 8601              	.LBB5130:
 8602              	.LBI5130:
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { this->_M_deallocate(); }
 8603              		.loc 1 549 7 view .LVU1684
 8604              	.LBB5131:
 8605              	.LBI5131:
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 8606              		.loc 1 560 7 view .LVU1685
 8607              	.LBB5132:
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 8608              		.loc 1 562 23 is_stmt 0 view .LVU1686
 8609 00e4 0A98     		ldr	r0, [sp, #40]
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 8610              		.loc 1 562 2 view .LVU1687
 8611 00e6 18B1     		cbz	r0, .L230
 8612              	.LVL343:
 8613              	.LBB5133:
 8614              	.LBB5134:
 8615              	.LBI5134:
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 8616              		.loc 1 513 2 is_stmt 1 view .LVU1688
 8617              	.LBB5135:
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    return std::__addressof(this->_M_end_of_storage[-1]) + 1;
 8618              		.loc 1 515 14 is_stmt 0 view .LVU1689
 8619 00e8 0E99     		ldr	r1, [sp, #56]
 8620              	.LVL344:
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    return std::__addressof(this->_M_end_of_storage[-1]) + 1;
 8621              		.loc 1 515 14 view .LVU1690
 8622              	.LBE5135:
 8623              	.LBE5134:
 8624              	.LBB5136:
 8625              	.LBI5136:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 8626              		.loc 6 491 7 is_stmt 1 view .LVU1691
 8627              	.LBB5137:
 8628              	.LBI5137:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 8629              		.loc 5 120 7 view .LVU1692
 8630              	.LBB5138:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8631              		.loc 5 133 19 is_stmt 0 view .LVU1693
 8632 00ea 091A     		subs	r1, r1, r0
 8633              	.LVL345:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8634              		.loc 5 133 19 view .LVU1694
 8635 00ec FFF7FEFF 		bl	_ZdlPvj
 8636              	.LVL346:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8637              		.loc 5 133 19 view .LVU1695
 8638              	.LBE5138:
 8639              	.LBE5137:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 333


 8640              	.LBE5136:
 8641              	.LBB5139:
 8642              	.LBI5139:
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 8643              		.loc 1 488 2 is_stmt 1 view .LVU1696
 8644              	.LBB5140:
 8645              	.LBB5141:
 8646              	.LBI5141:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 8647              		.loc 1 241 5 view .LVU1697
 8648              	.LBB5142:
 8649              	.LBI5142:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 8650              		.loc 1 148 5 view .LVU1698
 8651              	.L230:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 8652              		.loc 1 148 5 is_stmt 0 view .LVU1699
 8653              	.LBE5142:
 8654              	.LBE5141:
 8655              	.LBE5140:
 8656              	.LBE5139:
 8657              	.LBE5133:
 8658              	.LBE5132:
 8659              	.LBE5131:
 8660              	.LBB5143:
 8661              	.LBI5143:
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: public _Bit_alloc_type, public _Bvector_impl_data
 8662              		.loc 1 495 14 is_stmt 1 view .LVU1700
 8663              	.LBB5144:
 8664              	.LBI5144:
 8665              		.loc 15 162 7 view .LVU1701
 8666              	.LBB5145:
 8667              	.LBI5145:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8668              		.loc 5 89 7 view .LVU1702
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8669              		.loc 5 89 7 is_stmt 0 view .LVU1703
 8670              	.LBE5145:
 8671              	.LBE5144:
 8672              	.LBE5143:
 8673              	.LBE5130:
 8674              	.LBE5129:
 8675              	.LBE5128:
 8676              	.LBB5146:
 8677              	.LBI5146:
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 8678              		.loc 1 737 7 is_stmt 1 view .LVU1704
 8679              	.LBB5147:
 8680              	.LBI5147:
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { this->_M_deallocate(); }
 8681              		.loc 1 549 7 view .LVU1705
 8682              	.LBB5148:
 8683              	.LBI5148:
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 8684              		.loc 1 560 7 view .LVU1706
 8685              	.LBB5149:
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 334


 8686              		.loc 1 562 23 is_stmt 0 view .LVU1707
 8687 00f0 0598     		ldr	r0, [sp, #20]
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 8688              		.loc 1 562 2 view .LVU1708
 8689 00f2 18B1     		cbz	r0, .L231
 8690              	.LVL347:
 8691              	.LBB5150:
 8692              	.LBB5151:
 8693              	.LBI5151:
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 8694              		.loc 1 513 2 is_stmt 1 view .LVU1709
 8695              	.LBB5152:
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    return std::__addressof(this->_M_end_of_storage[-1]) + 1;
 8696              		.loc 1 515 14 is_stmt 0 view .LVU1710
 8697 00f4 0999     		ldr	r1, [sp, #36]
 8698              	.LVL348:
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    return std::__addressof(this->_M_end_of_storage[-1]) + 1;
 8699              		.loc 1 515 14 view .LVU1711
 8700              	.LBE5152:
 8701              	.LBE5151:
 8702              	.LBB5153:
 8703              	.LBI5153:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 8704              		.loc 6 491 7 is_stmt 1 view .LVU1712
 8705              	.LBB5154:
 8706              	.LBI5154:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 8707              		.loc 5 120 7 view .LVU1713
 8708              	.LBB5155:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8709              		.loc 5 133 19 is_stmt 0 view .LVU1714
 8710 00f6 091A     		subs	r1, r1, r0
 8711              	.LVL349:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8712              		.loc 5 133 19 view .LVU1715
 8713 00f8 FFF7FEFF 		bl	_ZdlPvj
 8714              	.LVL350:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8715              		.loc 5 133 19 view .LVU1716
 8716              	.LBE5155:
 8717              	.LBE5154:
 8718              	.LBE5153:
 8719              	.LBB5156:
 8720              	.LBI5156:
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 8721              		.loc 1 488 2 is_stmt 1 view .LVU1717
 8722              	.LBB5157:
 8723              	.LBB5158:
 8724              	.LBI5158:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 8725              		.loc 1 241 5 view .LVU1718
 8726              	.LBB5159:
 8727              	.LBI5159:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 8728              		.loc 1 148 5 view .LVU1719
 8729              	.L231:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 335


 8730              		.loc 1 148 5 is_stmt 0 view .LVU1720
 8731              	.LBE5159:
 8732              	.LBE5158:
 8733              	.LBE5157:
 8734              	.LBE5156:
 8735              	.LBE5150:
 8736              	.LBE5149:
 8737              	.LBE5148:
 8738              	.LBB5160:
 8739              	.LBI5160:
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: public _Bit_alloc_type, public _Bvector_impl_data
 8740              		.loc 1 495 14 is_stmt 1 view .LVU1721
 8741              	.LBB5161:
 8742              	.LBI5161:
 8743              		.loc 15 162 7 view .LVU1722
 8744              	.LBB5162:
 8745              	.LBI5162:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8746              		.loc 5 89 7 view .LVU1723
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8747              		.loc 5 89 7 is_stmt 0 view .LVU1724
 8748              	.LBE5162:
 8749              	.LBE5161:
 8750              	.LBE5160:
 8751              	.LBE5147:
 8752              	.LBE5146:
 8753              	.LBE5109:
 8754              	.LBE5108:
 8755              	.LBE5192:
 8756              	.LBE5197:
  39:Sequencer.cpp ****     }
 8757              		.loc 7 39 5 view .LVU1725
 8758 00fc 3846     		mov	r0, r7
 8759 00fe 15B0     		add	sp, sp, #84
 8760              		.cfi_remember_state
 8761              		.cfi_def_cfa_offset 20
 8762              		@ sp needed
 8763 0100 F0BD     		pop	{r4, r5, r6, r7, pc}
 8764              	.LVL351:
 8765              	.L225:
 8766              		.cfi_restore_state
 8767              	.LBB5198:
 8768              	.LBB5193:
 8769              	.LBB5163:
 8770              	.LBB5085:
 8771              	.LBB5082:
 8772              	.LBI5082:
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 8773              		.loc 8 829 7 is_stmt 1 view .LVU1726
 8774              	.LBB5083:
 8775              	.LBI5083:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 8776              		.loc 11 978 7 view .LVU1727
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 8777              		.loc 11 978 7 is_stmt 0 view .LVU1728
 8778              	.LBE5083:
 8779              	.LBE5082:
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 336


1198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 8780              		.loc 8 1198 21 view .LVU1729
 8781 0102 05AA     		add	r2, sp, #20
 8782              	.LVL352:
1198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 8783              		.loc 8 1198 21 view .LVU1730
 8784 0104 2146     		mov	r1, r4
 8785 0106 07F10C00 		add	r0, r7, #12
 8786 010a FFF7FEFF 		bl	_ZNSt6vectorIN9Sequencer15DrumPatternBeatESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__
 8787              	.LVL353:
1198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 8788              		.loc 8 1198 21 view .LVU1731
 8789 010e D3E7     		b	.L226
 8790              	.LVL354:
 8791              	.L227:
1198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 8792              		.loc 8 1198 21 view .LVU1732
 8793              	.LBE5085:
 8794              	.LBE5163:
 8795              	.LBB5164:
 8796              	.LBB5104:
 8797              	.LBB5100:
 8798              	.LBB5095:
 8799              	.LBI5095:
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 8800              		.loc 8 829 7 is_stmt 1 view .LVU1733
 8801              	.LBB5096:
 8802              	.LBI5096:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 8803              		.loc 11 978 7 view .LVU1734
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 8804              		.loc 11 978 7 is_stmt 0 view .LVU1735
 8805              	.LBE5096:
 8806              	.LBE5095:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 8807              		.loc 4 121 21 view .LVU1736
 8808 0110 2A46     		mov	r2, r5
 8809 0112 2146     		mov	r1, r4
 8810 0114 07F11800 		add	r0, r7, #24
 8811 0118 FFF7FEFF 		bl	_ZNSt6vectorISt5arrayIbLj16EESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iterator
 8812              	.LVL355:
 8813 011c DCE7     		b	.L228
 8814              	.L243:
 8815 011e 00BF     		.align	2
 8816              	.L242:
 8817 0120 00000000 		.word	.LANCHOR0
 8818 0124 20000000 		.word	.LANCHOR0+32
 8819              	.LBE5100:
 8820              	.LBE5104:
 8821              	.LBE5164:
 8822              	.LBE5193:
 8823              	.LBE5198:
 8824              		.cfi_endproc
 8825              	.LFE3626:
 8827              		.global	_ZN9SequencerC1EfR9DrumSynthR10ChordSynth
 8828              		.thumb_set _ZN9SequencerC1EfR9DrumSynthR10ChordSynth,_ZN9SequencerC2EfR9DrumSynthR10ChordSynth
 8829              		.section	.rodata
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 337


 8830              		.align	2
 8831              		.set	.LANCHOR0,. + 0
 8832              	.LC0:
 8833 0000 01       		.byte	1
 8834 0001 00       		.byte	0
 8835 0002 00       		.byte	0
 8836 0003 00       		.byte	0
 8837 0004 01       		.byte	1
 8838 0005 00       		.byte	0
 8839 0006 00       		.byte	0
 8840 0007 00       		.byte	0
 8841 0008 01       		.byte	1
 8842 0009 00       		.byte	0
 8843 000a 00       		.byte	0
 8844 000b 00       		.byte	0
 8845 000c 01       		.byte	1
 8846 000d 00       		.byte	0
 8847 000e 00       		.byte	0
 8848 000f 00       		.byte	0
 8849              	.LC1:
 8850 0010 01       		.byte	1
 8851 0011 00       		.byte	0
 8852 0012 01       		.byte	1
 8853 0013 00       		.byte	0
 8854 0014 01       		.byte	1
 8855 0015 00       		.byte	0
 8856 0016 01       		.byte	1
 8857 0017 00       		.byte	0
 8858 0018 01       		.byte	1
 8859 0019 00       		.byte	0
 8860 001a 01       		.byte	1
 8861 001b 00       		.byte	0
 8862 001c 01       		.byte	1
 8863 001d 00       		.byte	0
 8864 001e 01       		.byte	1
 8865 001f 00       		.byte	0
 8866              	.LC2:
 8867 0020 01       		.byte	1
 8868 0021 01       		.byte	1
 8869 0022 01       		.byte	1
 8870 0023 00       		.byte	0
 8871 0024 01       		.byte	1
 8872 0025 00       		.byte	0
 8873 0026 01       		.byte	1
 8874 0027 00       		.byte	0
 8875 0028 01       		.byte	1
 8876 0029 01       		.byte	1
 8877 002a 01       		.byte	1
 8878 002b 00       		.byte	0
 8879 002c 01       		.byte	1
 8880 002d 00       		.byte	0
 8881 002e 01       		.byte	1
 8882 002f 00       		.byte	0
 8883              		.text
 8884              	.Letext0:
 8885              		.file 18 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 8886              		.file 19 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 338


 8887              		.file 20 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdint.h"
 8888              		.file 21 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stddef.h"
 8889              		.file 22 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\basic_stri
 8890              		.file 23 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cmath"
 8891              		.file 24 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\std_abs.h"
 8892              		.file 25 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdint"
 8893              		.file 26 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\type_traits"
 8894              		.file 27 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\arm-none-eabi\\t
 8895              		.file 28 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_pair.h
 8896              		.file 29 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\cpp_type_t
 8897              		.file 30 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_iterat
 8898              		.file 31 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\debug\\debug.h"
 8899              		.file 32 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\exception_
 8900              		.file 33 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdlib"
 8901              		.file 34 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cwchar"
 8902              		.file 35 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\char_trait
 8903              		.file 36 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\clocale"
 8904              		.file 37 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdio"
 8905              		.file 38 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\charconv.h
 8906              		.file 39 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\algorithmf
 8907              		.file 40 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstring"
 8908              		.file 41 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_constr
 8909              		.file 42 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\move.h"
 8910              		.file 43 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\predefined
 8911              		.file 44 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_types.h"
 8912              		.file 45 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\reent.h"
 8913              		.file 46 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\lock.h"
 8914              		.file 47 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\math.h"
 8915              		.file 48 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdlib.h"
 8916              		.file 49 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\math.h"
 8917              		.file 50 "../../DaisySP//Source/Control/adenv.h"
 8918              		.file 51 "../../DaisySP//Source/Utility/dsp.h"
 8919              		.file 52 "../../DaisySP//Source/Synthesis/oscillator.h"
 8920              		.file 53 "../../DaisySP//Source/Filters/svf.h"
 8921              		.file 54 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stdarg.h"
 8922              		.file 55 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\wchar.h"
 8923              		.file 56 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\locale.h"
 8924              		.file 57 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdio.h"
 8925              		.file 58 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\stdlib.h"
 8926              		.file 59 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\string.h"
 8927              		.file 60 "DrumSynth.h"
 8928              		.file 61 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\functexcep
 8929              		.file 62 "<built-in>"
ARM GAS  C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s 			page 339


DEFINED SYMBOLS
                            *ABS*:00000000 Sequencer.cpp
C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s:17     .rodata._ZNSt6vectorIbSaIbEE13_M_assign_auxIPKbEEvT_S5_St20forward_iterator_tag.isra.0.str1.4:00000000 $d
C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s:21     .text._ZNSt6vectorIbSaIbEE13_M_assign_auxIPKbEEvT_S5_St20forward_iterator_tag.isra.0:00000000 $t
C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s:29     .text._ZNSt6vectorIbSaIbEE13_M_assign_auxIPKbEEvT_S5_St20forward_iterator_tag.isra.0:00000000 _ZNSt6vectorIbSaIbEE13_M_assign_auxIPKbEEvT_S5_St20forward_iterator_tag.isra.0
C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s:4112   .text._ZNSt6vectorIbSaIbEE13_M_assign_auxIPKbEEvT_S5_St20forward_iterator_tag.isra.0:000002ec $d
C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s:4131   .text._ZN9Sequencer4tickEv:00000000 $t
C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s:4139   .text._ZN9Sequencer4tickEv:00000000 _ZN9Sequencer4tickEv
C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s:4555   .text._ZN9Sequencer4tickEv:000000e8 $d
C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s:4560   .rodata._ZNSt6vectorISt5arrayIbLj16EESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_.str1.4:00000000 $d
C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s:4564   .text._ZNSt6vectorISt5arrayIbLj16EESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:00000000 $t
C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s:4572   .text._ZNSt6vectorISt5arrayIbLj16EESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:00000000 _ZNSt6vectorISt5arrayIbLj16EESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s:5093   .text._ZNSt6vectorISt5arrayIbLj16EESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:000000e0 $d
C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s:5101   .text._ZNSt6vectorIbSaIbEEC2ERKS1_:00000000 $t
C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s:5109   .text._ZNSt6vectorIbSaIbEEC2ERKS1_:00000000 _ZNSt6vectorIbSaIbEEC2ERKS1_
C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s:5109   .text._ZNSt6vectorIbSaIbEEC2ERKS1_:00000000 _ZNSt6vectorIbSaIbEEC1ERKS1_
C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s:6254   .text._ZNSt6vectorIN9Sequencer15DrumPatternBeatESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:00000000 $t
C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s:6262   .text._ZNSt6vectorIN9Sequencer15DrumPatternBeatESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:00000000 _ZNSt6vectorIN9Sequencer15DrumPatternBeatESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s:7879   .text._ZNSt6vectorIN9Sequencer15DrumPatternBeatESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:0000029c $d
C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s:7889   .text._ZN9SequencerC2EfR9DrumSynthR10ChordSynth:00000000 $t
C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s:7897   .text._ZN9SequencerC2EfR9DrumSynthR10ChordSynth:00000000 _ZN9SequencerC2EfR9DrumSynthR10ChordSynth
C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s:8817   .text._ZN9SequencerC2EfR9DrumSynthR10ChordSynth:00000120 $d
C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s:7897   .text._ZN9SequencerC2EfR9DrumSynthR10ChordSynth:00000000 _ZN9SequencerC1EfR9DrumSynthR10ChordSynth
C:\Users\theja\AppData\Local\Temp\cc4cZkoj.s:8830   .rodata:00000000 $d
                           .group:00000000 _ZNSt6vectorIbSaIbEEC5ERKS1_

UNDEFINED SYMBOLS
_Znwj
memmove
_ZdlPvj
_ZSt20__throw_length_errorPKc
_ZN9DrumSynth11trigger_hatEv
_ZN9DrumSynth13trigger_snareEv
_ZN9DrumSynth12trigger_kickEv
memcpy
