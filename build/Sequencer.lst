ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"Sequencer.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator.i
  17              		.align	1
  18              		.p2align 2,,3
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator.isra.0:
  26              	.LVL0:
  27              	.LFB4456:
  28              		.file 1 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_bvector
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // vector<bool> specialization -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * Permission to use, copy, modify, distribute and sell this software
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 2


  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * Copyright (c) 1996-1999
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * representations about the suitability of this software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** /** @file bits/stl_bvector.h
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  *  Do not attempt to use it directly. @headername{vector}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****  */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #ifndef _STL_BVECTOR_H
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #define _STL_BVECTOR_H 1
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #include <initializer_list>
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #include <bits/functional_hash.h>
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** namespace std _GLIBCXX_VISIBILITY(default)
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** {
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   typedef unsigned long _Bit_type;
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   enum { _S_word_bit = int(__CHAR_BIT__ * sizeof(_Bit_type)) };
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   struct _Bit_reference
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   {
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _Bit_type * _M_p;
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _Bit_type _M_mask;
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _Bit_reference(_Bit_type * __x, _Bit_type __y)
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_mask(__y) { }
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _Bit_reference() _GLIBCXX_NOEXCEPT : _M_p(0), _M_mask(0) { }
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _Bit_reference(const _Bit_reference&) = default;
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator bool() const _GLIBCXX_NOEXCEPT
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return !!(*_M_p & _M_mask); }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 3


  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _Bit_reference&
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator=(bool __x) _GLIBCXX_NOEXCEPT
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__x)
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	*_M_p |= _M_mask;
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       else
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	*_M_p &= ~_M_mask;
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _Bit_reference&
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator=(const _Bit_reference& __x) _GLIBCXX_NOEXCEPT
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return *this = bool(__x); }
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     bool
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator==(const _Bit_reference& __x) const
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return bool(*this) == bool(__x); }
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     bool
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator<(const _Bit_reference& __x) const
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return !bool(*this) && bool(__x); }
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     void
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     flip() _GLIBCXX_NOEXCEPT
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { *_M_p ^= _M_mask; }
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   };
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   inline void
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   swap(_Bit_reference __x, _Bit_reference __y) noexcept
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   {
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     bool __tmp = __x;
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     __x = __y;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     __y = __tmp;
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   }
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   inline void
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   swap(_Bit_reference __x, bool& __y) noexcept
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   {
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     bool __tmp = __x;
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     __x = __y;
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     __y = __tmp;
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   }
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   inline void
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   swap(bool& __x, _Bit_reference __y) noexcept
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   {
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     bool __tmp = __x;
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     __x = __y;
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     __y = __tmp;
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   }
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   struct _Bit_iterator_base
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   : public std::iterator<std::random_access_iterator_tag, bool>
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   {
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 4


 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _Bit_type * _M_p;
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     unsigned int _M_offset;
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _Bit_iterator_base(_Bit_type * __x, unsigned int __y)
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     void
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _M_bump_up()
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (_M_offset++ == int(_S_word_bit) - 1)
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_offset = 0;
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  ++_M_p;
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     void
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _M_bump_down()
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (_M_offset-- == 0)
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_offset = int(_S_word_bit) - 1;
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  --_M_p;
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     void
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _M_incr(ptrdiff_t __i)
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       difference_type __n = __i + _M_offset;
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_p += __n / int(_S_word_bit);
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  __n += int(_S_word_bit);
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  --_M_p;
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_offset = static_cast<unsigned int>(__n);
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     friend _GLIBCXX20_CONSTEXPR bool
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator==(const _Bit_iterator_base& __x, const _Bit_iterator_base& __y)
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return __x._M_p == __y._M_p && __x._M_offset == __y._M_offset; }
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cpp_lib_three_way_comparison
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     friend constexpr strong_ordering
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator<=>(const _Bit_iterator_base& __x, const _Bit_iterator_base& __y)
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     noexcept
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (const auto __cmp = __x._M_p <=> __y._M_p; __cmp != 0)
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	return __cmp;
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __x._M_offset <=> __y._M_offset;
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     friend bool
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator<(const _Bit_iterator_base& __x, const _Bit_iterator_base& __y)
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 5


 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __x._M_p < __y._M_p
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    || (__x._M_p == __y._M_p && __x._M_offset < __y._M_offset);
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     friend bool
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator!=(const _Bit_iterator_base& __x, const _Bit_iterator_base& __y)
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return !(__x == __y); }
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     friend bool
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator>(const _Bit_iterator_base& __x, const _Bit_iterator_base& __y)
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return __y < __x; }
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     friend bool
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator<=(const _Bit_iterator_base& __x, const _Bit_iterator_base& __y)
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return !(__y < __x); }
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     friend bool
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator>=(const _Bit_iterator_base& __x, const _Bit_iterator_base& __y)
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return !(__x < __y); }
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif // three-way comparison
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     friend ptrdiff_t
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator-(const _Bit_iterator_base& __x, const _Bit_iterator_base& __y)
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return (int(_S_word_bit) * (__x._M_p - __y._M_p)
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   };
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   struct _Bit_iterator : public _Bit_iterator_base
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   {
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     typedef _Bit_reference  reference;
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus > 201703L
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     typedef void	    pointer;
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     typedef _Bit_reference* pointer;
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     typedef _Bit_iterator   iterator;
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _Bit_iterator() : _Bit_iterator_base(0, 0) { }
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _Bit_iterator(_Bit_type * __x, unsigned int __y)
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     iterator
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _M_const_cast() const
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return *this; }
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     reference
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator*() const
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return reference(_M_p, 1UL << _M_offset); }
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     iterator&
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator++()
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_bump_up();
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 6


 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     iterator
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator++(int)
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       iterator __tmp = *this;
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_bump_up();
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __tmp;
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     iterator&
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator--()
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_bump_down();
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     iterator
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator--(int)
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       iterator __tmp = *this;
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_bump_down();
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __tmp;
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     iterator&
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator+=(difference_type __i)
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_incr(__i);
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     iterator&
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator-=(difference_type __i)
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       *this += -__i;
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     reference
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator[](difference_type __i) const
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return *(*this + __i); }
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     friend iterator
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator+(const iterator& __x, difference_type __n)
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       iterator __tmp = __x;
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __tmp += __n;
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __tmp;
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     friend iterator
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator+(difference_type __n, const iterator& __x)
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return __x + __n; }
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     friend iterator
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator-(const iterator& __x, difference_type __n)
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 7


 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       iterator __tmp = __x;
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __tmp -= __n;
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __tmp;
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   };
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   struct _Bit_const_iterator : public _Bit_iterator_base
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   {
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     typedef bool                 reference;
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     typedef bool                 const_reference;
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus > 201703L
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     typedef void	    pointer;
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     typedef const bool*          pointer;
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     typedef _Bit_const_iterator  const_iterator;
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _Bit_const_iterator() : _Bit_iterator_base(0, 0) { }
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _Bit_const_iterator(_Bit_type * __x, unsigned int __y)
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _Bit_const_iterator(const _Bit_iterator& __x)
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x._M_p, __x._M_offset) { }
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _Bit_iterator
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     _M_const_cast() const
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return _Bit_iterator(_M_p, _M_offset); }
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     const_reference
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator*() const
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return _Bit_reference(_M_p, 1UL << _M_offset); }
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     const_iterator&
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator++()
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_bump_up();
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     const_iterator
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator++(int)
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       const_iterator __tmp = *this;
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_bump_up();
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __tmp;
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     const_iterator&
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator--()
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_bump_down();
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     const_iterator
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 8


 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator--(int)
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       const_iterator __tmp = *this;
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_bump_down();
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __tmp;
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     const_iterator&
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator+=(difference_type __i)
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_incr(__i);
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     const_iterator&
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator-=(difference_type __i)
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       *this += -__i;
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     const_reference
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator[](difference_type __i) const
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return *(*this + __i); }
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     friend const_iterator
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator+(const const_iterator& __x, difference_type __n)
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       const_iterator __tmp = __x;
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __tmp += __n;
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __tmp;
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     friend const_iterator
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator-(const const_iterator& __x, difference_type __n)
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       const_iterator __tmp = __x;
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __tmp -= __n;
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __tmp;
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     friend const_iterator
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     operator+(difference_type __n, const const_iterator& __x)
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return __x + __n; }
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   };
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   inline void
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   __fill_bvector(_Bit_type * __v,
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 		 unsigned int __first, unsigned int __last, bool __x)
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   {
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     const _Bit_type __fmask = ~0ul << __first;
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     const _Bit_type __lmask = ~0ul >> (_S_word_bit - __last);
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     const _Bit_type __mask = __fmask & __lmask;
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     if (__x)
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       *__v |= __mask;
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     else
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 9


 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       *__v &= ~__mask;
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   }
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   inline void
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   fill(_Bit_iterator __first, _Bit_iterator __last, const bool& __x)
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   {
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     if (__first._M_p != __last._M_p)
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_Bit_type* __first_p = __first._M_p;
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (__first._M_offset != 0)
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  __fill_bvector(__first_p++, __first._M_offset, _S_word_bit, __x);
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	__builtin_memset(__first_p, __x ? ~0 : 0,
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			 (__last._M_p - __first_p) * sizeof(_Bit_type));
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (__last._M_offset != 0)
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  __fill_bvector(__last._M_p, 0, __last._M_offset, __x);
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     else if (__first._M_offset != __last._M_offset)
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __fill_bvector(__first._M_p, __first._M_offset, __last._M_offset, __x);
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   }
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   template<typename _Alloc>
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     struct _Bvector_base
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****         rebind<_Bit_type>::other _Bit_alloc_type;
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Bit_alloc_type>
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_Bit_alloc_traits;
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef typename _Bit_alloc_traits::pointer _Bit_pointer;
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       struct _Bvector_impl_data
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_Bit_iterator 	_M_start;
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_Bit_iterator 	_M_finish;
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_Bit_pointer 	_M_end_of_storage;
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_Bvector_impl_data() _GLIBCXX_NOEXCEPT
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ }
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_Bvector_impl_data(_Bvector_impl_data&& __x) noexcept
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish)
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	, _M_end_of_storage(__x._M_end_of_storage)
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_move_data(_Bvector_impl_data&& __x) noexcept
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  this->_M_start = __x._M_start;
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  this->_M_finish = __x._M_finish;
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  this->_M_end_of_storage = __x._M_end_of_storage;
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  __x._M_reset();
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 10


 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_reset() _GLIBCXX_NOEXCEPT
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_start = _M_finish = _Bit_iterator();
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_end_of_storage = _Bit_pointer();
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       };
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       struct _Bvector_impl
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: public _Bit_alloc_type, public _Bvector_impl_data
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	public:
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _Bvector_impl() _GLIBCXX_NOEXCEPT_IF(
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 		is_nothrow_default_constructible<_Bit_alloc_type>::value)
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  : _Bit_alloc_type()
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  { }
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _Bvector_impl(const _Bit_alloc_type& __a) _GLIBCXX_NOEXCEPT
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  : _Bit_alloc_type(__a)
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  { }
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_Bvector_impl(_Bvector_impl&&) = default;
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_Bit_type*
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_end_addr() const _GLIBCXX_NOEXCEPT
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  if (this->_M_end_of_storage)
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    return std::__addressof(this->_M_end_of_storage[-1]) + 1;
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  return 0;
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       };
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     public:
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef _Alloc allocator_type;
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _Bit_alloc_type&
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_get_Bit_allocator() _GLIBCXX_NOEXCEPT
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl; }
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       const _Bit_alloc_type&
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_get_Bit_allocator() const _GLIBCXX_NOEXCEPT
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl; }
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       allocator_type
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return allocator_type(_M_get_Bit_allocator()); }
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _Bvector_base() = default;
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _Bvector_base() { }
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _Bvector_base(const allocator_type& __a)
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       : _M_impl(__a) { }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 11


 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _Bvector_base(_Bvector_base&&) = default;
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       ~_Bvector_base()
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { this->_M_deallocate(); }
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     protected:
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _Bvector_impl _M_impl;
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _Bit_pointer
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_allocate(size_t __n)
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return _Bit_alloc_traits::allocate(_M_impl, _S_nword(__n)); }
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_deallocate()
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (_M_impl._M_start._M_p)
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    const size_t __n = _M_impl._M_end_addr() - _M_impl._M_start._M_p;
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    _Bit_alloc_traits::deallocate(_M_impl,
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 					  _M_impl._M_end_of_storage - __n,
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 					  __n);
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    _M_impl._M_reset();
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_move_data(_Bvector_base&& __x) noexcept
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { _M_impl._M_move_data(std::move(__x._M_impl)); }
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       static size_t
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _S_nword(size_t __n)
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return (__n + int(_S_word_bit) - 1) / int(_S_word_bit); }
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     };
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** _GLIBCXX_END_NAMESPACE_CONTAINER
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** _GLIBCXX_END_NAMESPACE_VERSION
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** } // namespace std
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** // Declare a partial specialization of vector<T, Alloc>.
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #include <bits/stl_vector.h>
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** namespace std _GLIBCXX_VISIBILITY(default)
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** {
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   /**
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****    *  @brief  A specialization of vector for booleans which offers fixed time
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****    *  access to individual elements in any order.
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****    *
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****    *  @ingroup sequences
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****    *
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 12


 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****    *  @tparam _Alloc  Allocator type.
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****    *
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****    *  Note that vector<bool> does not actually meet the requirements for being
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****    *  a container.  This is because the reference and pointer types are not
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****    *  really references and pointers to bool.  See DR96 for details.  @see
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****    *  vector for function documentation.
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****    *
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****    *  In some terminology a %vector can be described as a dynamic
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****    *  C-style array, it offers fast and efficient access to individual
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****    *  elements in any order and saves the user from worrying about
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****    *  memory and size allocation.  Subscripting ( @c [] ) access is
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****    *  also provided as with C-style arrays.
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   */
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****   template<typename _Alloc>
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     class vector<bool, _Alloc> : protected _Bvector_base<_Alloc>
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef _Bvector_base<_Alloc>			_Base;
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef typename _Base::_Bit_pointer		_Bit_pointer;
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef typename _Base::_Bit_alloc_traits		_Bit_alloc_traits;
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       friend struct std::hash<vector>;
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     public:
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef bool					value_type;
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef size_t					size_type;
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef ptrdiff_t					difference_type;
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef _Bit_reference				reference;
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef bool					const_reference;
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef _Bit_reference*				pointer;
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef const bool*				const_pointer;
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef _Bit_iterator				iterator;
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef _Bit_const_iterator			const_iterator;
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       typedef _Alloc					allocator_type;
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       allocator_type
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       get_allocator() const
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return _Base::get_allocator(); }
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     protected:
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       using _Base::_M_allocate;
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       using _Base::_M_deallocate;
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       using _Base::_S_nword;
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       using _Base::_M_get_Bit_allocator;
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     public:
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       vector() = default;
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       vector() { }
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       explicit
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       vector(const allocator_type& __a)
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 13


 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       : _Base(__a) { }
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       explicit
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       vector(size_type __n, const allocator_type& __a = allocator_type())
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       : vector(__n, false, __a)
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { }
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       vector(size_type __n, const bool& __value,
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	     const allocator_type& __a = allocator_type())
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       explicit
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       vector(size_type __n, const bool& __value = bool(),
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	     const allocator_type& __a = allocator_type())
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       : _Base(__a)
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_initialize(__n);
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_initialize_value(__value);
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       vector(const vector& __x)
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       : _Base(_Bit_alloc_traits::_S_select_on_copy(__x._M_get_Bit_allocator()))
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_initialize(__x.size());
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_copy_aligned(__x.begin(), __x.end(), this->_M_impl._M_start);
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       vector(vector&&) = default;
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       vector(vector&& __x, const allocator_type& __a)
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       noexcept(_Bit_alloc_traits::_S_always_equal())
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       : _Base(__a)
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (__x.get_allocator() == __a)
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  this->_M_move_data(std::move(__x));
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	else
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    _M_initialize(__x.size());
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    _M_copy_aligned(__x.begin(), __x.end(), begin());
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    __x.clear();
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       vector(const vector& __x, const allocator_type& __a)
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       : _Base(__a)
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_initialize(__x.size());
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_copy_aligned(__x.begin(), __x.end(), this->_M_impl._M_start);
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       vector(initializer_list<bool> __l,
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	     const allocator_type& __a = allocator_type())
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       : _Base(__a)
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_initialize_range(__l.begin(), __l.end(),
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 14


 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			    random_access_iterator_tag());
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename _InputIterator,
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	       const allocator_type& __a = allocator_type())
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: _Base(__a)
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ _M_initialize_dispatch(__first, __last, __false_type()); }
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename _InputIterator>
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	       const allocator_type& __a = allocator_type())
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: _Base(__a)
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_initialize_dispatch(__first, __last, _Integral());
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       ~vector() _GLIBCXX_NOEXCEPT { }
 738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       vector&
 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       operator=(const vector& __x)
 741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (&__x == this)
 743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  return *this;
 744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (_Bit_alloc_traits::_S_propagate_on_copy_assign())
 746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    if (this->_M_get_Bit_allocator() != __x._M_get_Bit_allocator())
 748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      {
 749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 		this->_M_deallocate();
 750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 		std::__alloc_on_copy(_M_get_Bit_allocator(),
 751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 				     __x._M_get_Bit_allocator());
 752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 		_M_initialize(__x.size());
 753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      }
 754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    else
 755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      std::__alloc_on_copy(_M_get_Bit_allocator(),
 756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 				   __x._M_get_Bit_allocator());
 757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (__x.size() > capacity())
 760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    this->_M_deallocate();
 762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    _M_initialize(__x.size());
 763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	this->_M_impl._M_finish = _M_copy_aligned(__x.begin(), __x.end(),
 765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 						  begin());
 766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	return *this;
 767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
 770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       vector&
 771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       operator=(vector&& __x) noexcept(_Bit_alloc_traits::_S_nothrow_move())
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 15


 772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (_Bit_alloc_traits::_S_propagate_on_move_assign()
 774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    || this->_M_get_Bit_allocator() == __x._M_get_Bit_allocator())
 775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    this->_M_deallocate();
 777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    this->_M_move_data(std::move(__x));
 778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    std::__alloc_on_move(_M_get_Bit_allocator(),
 779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 				 __x._M_get_Bit_allocator());
 780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	else
 782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    if (__x.size() > capacity())
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      {
 785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 		this->_M_deallocate();
 786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 		_M_initialize(__x.size());
 787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      }
 788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    this->_M_impl._M_finish = _M_copy_aligned(__x.begin(), __x.end(),
 789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 						      begin());
 790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    __x.clear();
 791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	return *this;
 793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       vector&
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       operator=(initializer_list<bool> __l)
 797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	this->assign (__l.begin(), __l.end());
 799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	return *this;
 800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // assign(), a generalized assignment member function.  Two
 804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // versions: one that takes a count, and one that takes a range.
 805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // The range version is a member template, so we dispatch on whether
 806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // or not the type is an integer.
 807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
 808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       assign(size_type __n, const bool& __x)
 809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { _M_fill_assign(__n, __x); }
 810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
 812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename _InputIterator,
 813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	assign(_InputIterator __first, _InputIterator __last)
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ _M_assign_aux(__first, __last, std::__iterator_category(__first)); }
 817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename _InputIterator>
 819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	assign(_InputIterator __first, _InputIterator __last)
 821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_assign_dispatch(__first, __last, _Integral());
 824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
 828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 16


 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       assign(initializer_list<bool> __l)
 830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { _M_assign_aux(__l.begin(), __l.end(), random_access_iterator_tag()); }
 831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       iterator
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       begin() _GLIBCXX_NOEXCEPT
 835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return iterator(this->_M_impl._M_start._M_p, 0); }
 836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       const_iterator
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       begin() const _GLIBCXX_NOEXCEPT
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_iterator(this->_M_impl._M_start._M_p, 0); }
 840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       iterator
 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       end() _GLIBCXX_NOEXCEPT
 843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl._M_finish; }
 844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       const_iterator
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       end() const _GLIBCXX_NOEXCEPT
 847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl._M_finish; }
 848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       reverse_iterator
 850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       rbegin() _GLIBCXX_NOEXCEPT
 851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return reverse_iterator(end()); }
 852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       const_reverse_iterator
 854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_reverse_iterator(end()); }
 856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       reverse_iterator
 858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       rend() _GLIBCXX_NOEXCEPT
 859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return reverse_iterator(begin()); }
 860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       const_reverse_iterator
 862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       rend() const _GLIBCXX_NOEXCEPT
 863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_reverse_iterator(begin()); }
 864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
 866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       const_iterator
 867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       cbegin() const noexcept
 868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_iterator(this->_M_impl._M_start._M_p, 0); }
 869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       const_iterator
 871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       cend() const noexcept
 872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl._M_finish; }
 873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       const_reverse_iterator
 875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       crbegin() const noexcept
 876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_reverse_iterator(end()); }
 877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       const_reverse_iterator
 879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       crend() const noexcept
 880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_reverse_iterator(begin()); }
 881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       size_type
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       size() const _GLIBCXX_NOEXCEPT
 885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return size_type(end() - begin()); }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 17


 886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       size_type
 888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       max_size() const _GLIBCXX_NOEXCEPT
 889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	const size_type __isize =
 891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  __gnu_cxx::__numeric_traits<difference_type>::__max
 892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  - int(_S_word_bit) + 1;
 893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	const size_type __asize
 894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  = _Bit_alloc_traits::max_size(_M_get_Bit_allocator());
 895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	return (__asize <= __isize / int(_S_word_bit)
 896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 		? __asize * int(_S_word_bit) : __isize);
 897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       size_type
 900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       capacity() const _GLIBCXX_NOEXCEPT
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return size_type(const_iterator(this->_M_impl._M_end_addr(), 0)
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			 - begin()); }
 903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _GLIBCXX_NODISCARD bool
 905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       empty() const _GLIBCXX_NOEXCEPT
 906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return begin() == end(); }
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       reference
 909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       operator[](size_type __n)
 910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	return *iterator(this->_M_impl._M_start._M_p
 912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			 + __n / int(_S_word_bit), __n % int(_S_word_bit));
 913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       const_reference
 916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       operator[](size_type __n) const
 917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	return *const_iterator(this->_M_impl._M_start._M_p
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			     + __n / int(_S_word_bit), __n % int(_S_word_bit));
 920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     protected:
 923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
 924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_range_check(size_type __n) const
 925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (__n >= this->size())
 927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  __throw_out_of_range_fmt(__N("vector<bool>::_M_range_check: __n "
 928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 				       "(which is %zu) >= this->size() "
 929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 				       "(which is %zu)"),
 930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 				   __n, this->size());
 931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     public:
 934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       reference
 935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       at(size_type __n)
 936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { _M_range_check(__n); return (*this)[__n]; }
 937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       const_reference
 939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       at(size_type __n) const
 940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { _M_range_check(__n); return (*this)[__n]; }
 941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 18


 943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       reserve(size_type __n)
 944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (__n > max_size())
 946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  __throw_length_error(__N("vector::reserve"));
 947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (capacity() < __n)
 948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_reallocate(__n);
 949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       reference
 952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       front()
 953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return *begin(); }
 954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       const_reference
 956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       front() const
 957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return *begin(); }
 958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       reference
 960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       back()
 961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return *(end() - 1); }
 962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       const_reference
 964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       back() const
 965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return *(end() - 1); }
 966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // DR 464. Suggestion for new member functions in standard containers.
 969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // N.B. DR 464 says nothing about vector<bool> but we need something
 970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // here due to the way we are implementing DR 464 in the debug-mode
 971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // vector class.
 972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
 973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       data() _GLIBCXX_NOEXCEPT { }
 974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
 976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       push_back(bool __x)
 977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (this->_M_impl._M_finish._M_p != this->_M_impl._M_end_addr())
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  *this->_M_impl._M_finish++ = __x;
 980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	else
 981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_insert_aux(end(), __x);
 982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
 985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       swap(vector& __x) _GLIBCXX_NOEXCEPT
 986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	std::swap(this->_M_impl._M_start, __x._M_impl._M_start);
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	std::swap(this->_M_impl._M_finish, __x._M_impl._M_finish);
 989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	std::swap(this->_M_impl._M_end_of_storage,
 990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 		  __x._M_impl._M_end_of_storage);
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_Bit_alloc_traits::_S_on_swap(_M_get_Bit_allocator(),
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 				      __x._M_get_Bit_allocator());
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // [23.2.5]/1, third-to-last entry in synopsis listing
 996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       static void
 997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       swap(reference __x, reference __y) _GLIBCXX_NOEXCEPT
 998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	bool __tmp = __x;
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 19


1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	__x = __y;
1001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	__y = __tmp;
1002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
1003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       iterator
1005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
1006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       insert(const_iterator __position, const bool& __x = bool())
1007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
1008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       insert(iterator __position, const bool& __x = bool())
1009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
1010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
1011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	const difference_type __n = __position - begin();
1012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (this->_M_impl._M_finish._M_p != this->_M_impl._M_end_addr()
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    && __position == end())
1014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  *this->_M_impl._M_finish++ = __x;
1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	else
1016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_insert_aux(__position._M_const_cast(), __x);
1017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	return begin() + __n;
1018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
1019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
1021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename _InputIterator,
1022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	iterator
1024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	insert(const_iterator __position,
1025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	       _InputIterator __first, _InputIterator __last)
1026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
1027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  difference_type __offset = __position - cbegin();
1028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_insert_dispatch(__position._M_const_cast(),
1029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			     __first, __last, __false_type());
1030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  return begin() + __offset;
1031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
1032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
1033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename _InputIterator>
1034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
1035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	insert(iterator __position,
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	       _InputIterator __first, _InputIterator __last)
1037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
1038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
1039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_insert_dispatch(__position, __first, __last, _Integral());
1040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
1041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
1042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
1044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       iterator
1045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       insert(const_iterator __position, size_type __n, const bool& __x)
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
1047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	difference_type __offset = __position - cbegin();
1048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_fill_insert(__position._M_const_cast(), __n, __x);
1049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	return begin() + __offset;
1050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
1051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
1052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
1053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       insert(iterator __position, size_type __n, const bool& __x)
1054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { _M_fill_insert(__position, __n, __x); }
1055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
1056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 20


1057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
1058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       iterator
1059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       insert(const_iterator __p, initializer_list<bool> __l)
1060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->insert(__p, __l.begin(), __l.end()); }
1061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
1062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
1064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       pop_back()
1065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { --this->_M_impl._M_finish; }
1066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       iterator
1068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
1069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       erase(const_iterator __position)
1070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
1071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       erase(iterator __position)
1072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
1073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return _M_erase(__position._M_const_cast()); }
1074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       iterator
1076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
1077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       erase(const_iterator __first, const_iterator __last)
1078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
1079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       erase(iterator __first, iterator __last)
1080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
1081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return _M_erase(__first._M_const_cast(), __last._M_const_cast()); }
1082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
1084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       resize(size_type __new_size, bool __x = bool())
1085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
1086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (__new_size < size())
1087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_erase_at_end(begin() + difference_type(__new_size));
1088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	else
1089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  insert(end(), __new_size - size(), __x);
1090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
1091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
1093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
1094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       shrink_to_fit()
1095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { _M_shrink_to_fit(); }
1096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
1097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
1099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       flip() _GLIBCXX_NOEXCEPT
1100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
1101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_Bit_type * const __end = this->_M_impl._M_end_addr();
1102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	for (_Bit_type * __p = this->_M_impl._M_start._M_p; __p != __end; ++__p)
1103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  *__p = ~*__p;
1104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
1105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
1107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       clear() _GLIBCXX_NOEXCEPT
1108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { _M_erase_at_end(begin()); }
1109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
1111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename... _Args>
1112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus > 201402L
1113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	reference
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 21


1114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
1115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
1116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
1117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	emplace_back(_Args&&... __args)
1118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
1119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  push_back(bool(__args...));
1120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus > 201402L
1121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  return back();
1122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
1123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
1124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename... _Args>
1126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	iterator
1127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	emplace(const_iterator __pos, _Args&&... __args)
1128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ return insert(__pos, bool(__args...)); }
1129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
1130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     protected:
1132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // Precondition: __first._M_offset == 0 && __result._M_offset == 0.
1133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       iterator
1134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_copy_aligned(const_iterator __first, const_iterator __last,
  29              		.loc 1 1134 7 view -0
  30              		.cfi_startproc
  31              		@ args = 4, pretend = 0, frame = 8
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 1134 7 is_stmt 0 view .LVU1
  34 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  35              		.cfi_def_cfa_offset 20
  36              		.cfi_offset 4, -20
  37              		.cfi_offset 5, -16
  38              		.cfi_offset 6, -12
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 1546     		mov	r5, r2
  42              	.LVL1:
  43              		.loc 1 1134 7 view .LVU2
  44 0004 83B0     		sub	sp, sp, #12
  45              		.cfi_def_cfa_offset 32
  46              		.loc 1 1134 7 view .LVU3
  47 0006 0646     		mov	r6, r0
  48 0008 02AC     		add	r4, sp, #8
  49              	.LBB1759:
  50              	.LBB1760:
  51              	.LBB1761:
  52              	.LBB1762:
  53              	.LBB1763:
  54              	.LBB1764:
  55              	.LBB1765:
  56              		.file 2 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_algobas
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 22


   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Copyright (c) 1996-1998
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * representations about the suitability of this software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** /** @file bits/stl_algobase.h
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/c++config.h>
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/functexcept.h>
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <ext/type_traits.h>
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <ext/numeric_traits.h>
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_pair.h>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 23


  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_iterator.h>
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/concept_check.h>
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <debug/debug.h>
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/move.h> // For std::swap
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/predefined_ops.h>
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** # include <type_traits>
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus > 201703L
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** # include <compare>
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** {
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /*
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    * A constexpr wrapper for __builtin_memcmp.
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    * @param __num The number of elements of type _Tp (not bytes).
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    */
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Up>
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline int
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __memcmp(const _Tp* __first1, const _Up* __first2, size_t __num)
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       static_assert(sizeof(_Tp) == sizeof(_Up), "can be compared with memcmp");
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (std::is_constant_evaluated())
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for(; __num > 0; ++__first1, ++__first2, --__num)
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    if (*__first1 != *__first2)
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      return *__first1 < *__first2 ? -1 : 1;
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return 0;
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       else
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __builtin_memcmp(__first1, __first2, sizeof(_Tp) * __num);
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus < 201103L
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _BoolType>
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __iter_swap
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static void
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  typedef typename iterator_traits<_ForwardIterator1>::value_type
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    _ValueType1;
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  _ValueType1 __tmp = *__a;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  *__a = *__b;
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 24


 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  *__b = __tmp;
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<>
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __iter_swap<true>
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static void
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  swap(*__a, *__b);
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif // C++03
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  An iterator.
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another iterator.
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   Nothing.
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  iterators themselves.
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline void
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator1>)
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator2>)
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus < 201103L
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ValueType1;
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ValueType2;
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ValueType2>)
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ValueType1>)
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ReferenceType1;
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ReferenceType2;
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	iter_swap(__a, __b);
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #else
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 25


 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // 187. iter_swap underspecified
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       swap(*__a, *__b);
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first1  A forward iterator.
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __last1   A forward iterator.
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first2  A forward iterator.
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  The ranges must not overlap.
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _ForwardIterator2
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		_ForwardIterator2 __first2)
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator1>)
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator2>)
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       for (; __first1 != __last1; ++__first1, (void)++__first2)
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __first2;
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The lesser of the parameters.
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  preprocessor macro.
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp>
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline const _Tp&
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       //return __b < __a ? __b : __a;
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__b < __a)
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 26


 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __a;
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The greater of the parameters.
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  preprocessor macro.
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp>
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline const _Tp&
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b)
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       //return  __a < __b ? __b : __a;
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__a < __b)
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __a;
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The lesser of the parameters.
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  once, unlike a preprocessor macro.
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Compare>
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline const _Tp&
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b, _Compare __comp)
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       //return __comp(__b, __a) ? __b : __a;
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__comp(__b, __a))
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __a;
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The greater of the parameters.
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 27


 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  once, unlike a preprocessor macro.
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Compare>
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline const _Tp&
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b, _Compare __comp)
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       //return __comp(__a, __b) ? __b : __a;
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__comp(__a, __b))
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __a;
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // Fallback implementation of the function in bits/stl_iterator.h used to
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // remove the __normal_iterator wrapper. See copy, fill, ...
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Iterator>
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _Iterator
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __niter_base(_Iterator __it)
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX_NOEXCEPT_IF(std::is_nothrow_copy_constructible<_Iterator>::value)
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return __it; }
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // Reverse the __niter_base transformation to get a
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // __normal_iterator back again (this assumes that __normal_iterator
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // is only used to wrap random access iterators, like pointers).
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _From, typename _To>
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _From
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __niter_wrap(_From __from, _To __res)
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return __from + (__res - std::__niter_base(__from)); }
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // No need to wrap, iterator already has the right type.
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Iterator>
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _Iterator
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __niter_wrap(const _Iterator&, _Iterator __res)
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return __res; }
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // All of these auxiliary structs serve two purposes.  (1) Replace
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // calls to copy with memmove whenever possible.  (Memmove, not memcpy,
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // because the input and output ranges are permitted to overlap.)
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // (2) If we're using random access iterators, then write the loop as
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // a for loop with an explicit count.
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, bool _IsSimple, typename _Category>
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _OI
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *__result = *__first;
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 28


 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Category>
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move<true, false, _Category>
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _OI
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *__result = std::move(*__first);
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<>
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move<false, false, random_access_iterator_tag>
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _OI
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      *__result = *__first;
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__first;
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__result;
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    }
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<>
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move<true, false, random_access_iterator_tag>
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _OI
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      *__result = std::move(*__first);
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__first;
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__result;
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    }
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 29


 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove>
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move<_IsMove, true, random_access_iterator_tag>
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _Tp>
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _Tp*
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					   is_move_assignable<_Tp>,
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  // trivial types can have deleted assignment
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  if (_Num)
  57              		.loc 2 425 4 view .LVU4
  58 000a A942     		cmp	r1, r5
  59              	.LBE1765:
  60              	.LBE1764:
  61              	.LBE1763:
  62              	.LBE1762:
  63              	.LBE1761:
  64              	.LBE1760:
  65              	.LBE1759:
  66              		.loc 1 1134 7 view .LVU5
  67 000c 04E90C00 		stmdb	r4, {r2, r3}
  68 0010 089B     		ldr	r3, [sp, #32]
  69              	.LVL2:
  70              	.LBB1784:
  71              	.LBI1759:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // Helpers for streambuf iterators (either istream or ostream).
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // NB: avoid including <iosfwd>, relatively large.
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _CharT>
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct char_traits;
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _CharT, typename _Traits>
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     class istreambuf_iterator;
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _CharT, typename _Traits>
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     class ostreambuf_iterator;
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a2(_CharT*, _CharT*,
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 30


 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a2(const _CharT*, const _CharT*,
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				    _CharT*>::__type
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >,
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT*);
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a2(_II __first, _II __last, _OI __result)
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_II>::iterator_category _Category;
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (std::is_constant_evaluated())
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return std::__copy_move<_IsMove, false, _Category>::
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  __copy_m(__first, __last, __result);
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return std::__copy_move<_IsMove, __memcpyable<_OI, _II>::__value,
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 			      _Category>::__copy_m(__first, __last, __result);
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Ref, typename _Ptr>
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct _Deque_iterator;
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** _GLIBCXX_END_NAMESPACE_CONTAINER
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _Tp, typename _Ref, typename _Ptr, typename _OI>
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _OI
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a1(_GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   _OI);
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _ITp, typename _IRef, typename _IPtr, typename _OTp>
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a1(_GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>);
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _Tp>
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __is_random_access_iter<_II>::__value,
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*> >::__type
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a1(_II, _II, _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>);
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a1(_II __first, _II __last, _OI __result)
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 31


 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a(_II __first, _II __last, _OI __result)
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return std::__niter_wrap(__result,
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		std::__copy_move_a1<_IsMove>(std::__niter_base(__first),
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					     std::__niter_base(__last),
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					     std::__niter_base(__result)));
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _Ite, typename _Seq, typename _Cat, typename _OI>
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _OI
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a(const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  _OI);
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _II, typename _Ite, typename _Seq, typename _Cat>
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a(_II, _II,
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&);
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _IIte, typename _ISeq, typename _ICat,
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _OIte, typename _OSeq, typename _OCat>
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a(const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>&);
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first  An input iterator.
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __last   An input iterator.
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __result An output iterator.
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   result + (last - first)
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  [first,last); the copy_backward function should be used instead.
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  within [first,last).
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _II, typename _OI>
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     copy(_II __first, _II __last, _OI __result)
  72              		.loc 2 560 5 is_stmt 1 view .LVU6
  73              	.LBB1781:
  74              	.LBI1760:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 32


 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
  75              		.loc 2 511 5 view .LVU7
  76              	.LBB1778:
  77              	.LBI1761:
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
  78              		.loc 2 505 5 view .LVU8
  79              	.LBB1775:
  80              	.LBI1762:
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
  81              		.loc 2 463 5 view .LVU9
  82              	.LBB1772:
  83              	.LBB1769:
  84              	.LBI1764:
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
  85              		.loc 2 415 2 view .LVU10
  86              	.LBB1766:
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  if (_Num)
  87              		.loc 2 424 34 is_stmt 0 view .LVU11
  88 0012 A2EB0102 		sub	r2, r2, r1
  89              	.LVL3:
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
  90              		.loc 2 425 4 view .LVU12
  91 0016 21D0     		beq	.L9
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
  92              		.loc 2 426 23 view .LVU13
  93 0018 1846     		mov	r0, r3
  94              	.LVL4:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
  95              		.loc 2 426 23 view .LVU14
  96 001a 1746     		mov	r7, r2
  97 001c FFF7FEFF 		bl	memmove
  98              	.LVL5:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
  99              		.loc 2 426 23 view .LVU15
 100 0020 0346     		mov	r3, r0
 101              	.LVL6:
 102              	.L2:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 103              		.loc 2 426 23 view .LVU16
 104              	.LBE1766:
 105              	.LBE1769:
 106              	.LBE1772:
 107              	.LBE1775:
 108              	.LBE1778:
 109              	.LBE1781:
 110              	.LBE1784:
 111              	.LBB1785:
 112              	.LBB1786:
 113              	.LBB1787:
 114              	.LBB1788:
 115              	.LBB1789:
 116              	.LBB1790:
 117              	.LBB1791:
 118              	.LBB1792:
 119              	.LBB1793:
 120              	.LBB1794:
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 33


 121              		.loc 1 227 39 view .LVU17
 122 0022 019C     		ldr	r4, [sp, #4]
 123              	.LBE1794:
 124              	.LBE1793:
 125              	.LBE1792:
 126              	.LBE1791:
 127              	.LBE1790:
 128              	.LBE1789:
 129              	.LBE1788:
 130              	.LBE1787:
 131              	.LBE1786:
 132              	.LBE1785:
 133              	.LBB1923:
 134              	.LBB1782:
 135              	.LBB1779:
 136              	.LBB1776:
 137              	.LBB1773:
 138              	.LBB1770:
 139              	.LBB1767:
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 140              		.loc 2 427 22 view .LVU18
 141 0024 1F44     		add	r7, r7, r3
 142              	.LVL7:
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 143              		.loc 2 427 22 view .LVU19
 144              	.LBE1767:
 145              	.LBE1770:
 146              	.LBE1773:
 147              	.LBE1776:
 148              	.LBE1779:
 149              	.LBE1782:
 150              	.LBE1923:
 151              	.LBB1924:
 152              	.LBI1924:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 153              		.loc 1 336 5 is_stmt 1 view .LVU20
 154              	.LBB1925:
 155              	.LBI1925:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 156              		.loc 1 148 5 view .LVU21
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 157              		.loc 1 148 5 is_stmt 0 view .LVU22
 158              	.LBE1925:
 159              	.LBE1924:
 160              	.LBB1926:
 161              	.LBI1926:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 162              		.loc 1 243 5 is_stmt 1 view .LVU23
 163              	.LBB1927:
 164              	.LBI1927:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 165              		.loc 1 148 5 view .LVU24
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 166              		.loc 1 148 5 is_stmt 0 view .LVU25
 167              	.LBE1927:
 168              	.LBE1926:
 169              	.LBB1928:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 34


 170              	.LBI1785:
 171              		.loc 2 560 5 is_stmt 1 view .LVU26
 172              	.LBB1912:
 173              	.LBI1786:
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 174              		.loc 2 511 5 view .LVU27
 175              	.LBB1899:
 176              	.LBI1787:
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 177              		.loc 2 505 5 view .LVU28
 178              	.LBB1889:
 179              	.LBI1788:
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 180              		.loc 2 463 5 view .LVU29
 181              	.LBB1879:
 182              	.LBB1869:
 183              	.LBI1790:
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 184              		.loc 2 375 2 view .LVU30
 185              	.LBB1859:
 186              	.LBB1849:
 187              	.LBB1796:
 188              	.LBI1793:
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 189              		.loc 1 224 5 view .LVU31
 190              	.LBB1795:
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 191              		.loc 1 226 7 view .LVU32
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 192              		.loc 1 226 7 is_stmt 0 view .LVU33
 193              	.LBE1795:
 194              	.LBE1796:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 195              		.loc 2 378 46 is_stmt 1 view .LVU34
 196 0026 0021     		movs	r1, #0
 197 0028 002C     		cmp	r4, #0
 198 002a 12DD     		ble	.L3
 199              	.LVL8:
 200              	.L8:
 201              	.LBB1797:
 202              	.LBI1797:
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return reference(_M_p, 1UL << _M_offset); }
 203              		.loc 1 251 5 view .LVU35
 204              	.LBB1798:
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 205              		.loc 1 252 7 view .LVU36
 206              	.LBE1798:
 207              	.LBE1797:
 208              	.LBB1802:
 209              	.LBB1803:
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       else
 210              		.loc 1 93 2 view .LVU37
 211              	.LBB1804:
 212              	.LBI1804:
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 213              		.loc 1 90 5 view .LVU38
 214              	.LBB1805:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 35


  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 215              		.loc 1 95 2 view .LVU39
 216              	.LBE1805:
 217              	.LBE1804:
 218              	.LBE1803:
 219              	.LBE1802:
 220              	.LBB1810:
 221              	.LBB1800:
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 222              		.loc 1 252 46 is_stmt 0 view .LVU40
 223 002c 0123     		movs	r3, #1
 224              	.LBE1800:
 225              	.LBE1810:
 226              	.LBB1811:
 227              	.LBB1812:
 228              	.LBB1813:
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 229              		.loc 1 87 23 view .LVU41
 230 002e 2868     		ldr	r0, [r5]
 231              	.LBE1813:
 232              	.LBE1812:
 233              	.LBE1811:
 234              	.LBB1817:
 235              	.LBB1801:
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 236              		.loc 1 252 46 view .LVU42
 237 0030 8B40     		lsls	r3, r3, r1
 238              	.LVL9:
 239              	.LBB1799:
 240              	.LBI1799:
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_mask(__y) { }
 241              		.loc 1 77 5 is_stmt 1 view .LVU43
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_mask(__y) { }
 242              		.loc 1 77 5 is_stmt 0 view .LVU44
 243              	.LBE1799:
 244              	.LBE1801:
 245              	.LBE1817:
 246              	.LBB1818:
 247              	.LBI1811:
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return _Bit_reference(_M_p, 1UL << _M_offset); }
 248              		.loc 1 347 5 is_stmt 1 view .LVU45
 249              	.LBE1818:
 250              	.LBE1849:
 251              	.LBE1859:
 252              	.LBE1869:
 253              	.LBE1879:
 254              	.LBE1889:
 255              	.LBE1899:
 256              	.LBE1912:
 257              	.LBE1928:
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 258              		.loc 1 348 7 view .LVU46
 259              	.LBB1929:
 260              	.LBB1913:
 261              	.LBB1900:
 262              	.LBB1890:
 263              	.LBB1880:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 36


 264              	.LBB1870:
 265              	.LBB1860:
 266              	.LBB1850:
 267              	.LBB1819:
 268              	.LBB1815:
 269              	.LBI1815:
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_mask(__y) { }
 270              		.loc 1 77 5 view .LVU47
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_mask(__y) { }
 271              		.loc 1 77 5 is_stmt 0 view .LVU48
 272              	.LBE1815:
 273              	.LBB1816:
 274              	.LBI1812:
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return !!(*_M_p & _M_mask); }
 275              		.loc 1 86 5 is_stmt 1 view .LVU49
 276              	.LBB1814:
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 277              		.loc 1 87 7 view .LVU50
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 278              		.loc 1 87 7 is_stmt 0 view .LVU51
 279              	.LBE1814:
 280              	.LBE1816:
 281              	.LBE1819:
 282              	.LBB1820:
 283              	.LBI1802:
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 284              		.loc 1 90 5 is_stmt 1 view .LVU52
 285              	.LBB1808:
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	*_M_p |= _M_mask;
 286              		.loc 1 92 7 view .LVU53
 287 0032 0342     		tst	r3, r0
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       else
 288              		.loc 1 93 8 is_stmt 0 view .LVU54
 289 0034 3868     		ldr	r0, [r7]
 290              	.LVL10:
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       else
 291              		.loc 1 93 8 view .LVU55
 292 0036 14BF     		ite	ne
 293 0038 0343     		orrne	r3, r3, r0
 294              	.LVL11:
 295              	.LBB1807:
 296              	.LBB1806:
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 297              		.loc 1 95 8 view .LVU56
 298 003a 20EA0303 		biceq	r3, r0, r3
 299              	.LBE1806:
 300              	.LBE1807:
 301              	.LBE1808:
 302              	.LBE1820:
 303              	.LBB1821:
 304              	.LBB1822:
 305              	.LBB1823:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 306              		.loc 1 154 7 view .LVU57
 307 003e 1F29     		cmp	r1, #31
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 308              		.loc 1 154 20 view .LVU58
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 37


 309 0040 01F10101 		add	r1, r1, #1
 310              	.LVL12:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 311              		.loc 1 154 20 view .LVU59
 312 0044 3B60     		str	r3, [r7]
 313              	.LVL13:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 314              		.loc 1 154 20 view .LVU60
 315              	.LBE1823:
 316              	.LBE1822:
 317              	.LBE1821:
 318              	.LBB1834:
 319              	.LBB1809:
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 320              		.loc 1 96 7 is_stmt 1 view .LVU61
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 321              		.loc 1 96 7 is_stmt 0 view .LVU62
 322              	.LBE1809:
 323              	.LBE1834:
 324              	.LBB1835:
 325              	.LBI1821:
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 326              		.loc 1 351 5 is_stmt 1 view .LVU63
 327              	.LBE1835:
 328              	.LBE1850:
 329              	.LBE1860:
 330              	.LBE1870:
 331              	.LBE1880:
 332              	.LBE1890:
 333              	.LBE1900:
 334              	.LBE1913:
 335              	.LBE1929:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 336              		.loc 1 353 7 view .LVU64
 337              	.LBB1930:
 338              	.LBB1914:
 339              	.LBB1901:
 340              	.LBB1891:
 341              	.LBB1881:
 342              	.LBB1871:
 343              	.LBB1861:
 344              	.LBB1851:
 345              	.LBB1836:
 346              	.LBB1831:
 347              	.LBI1822:
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 348              		.loc 1 152 5 view .LVU65
 349              	.LBB1828:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 350              		.loc 1 154 7 view .LVU66
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 351              		.loc 1 154 7 is_stmt 0 view .LVU67
 352              	.LBE1828:
 353              	.LBE1831:
 354              	.LBE1836:
 355              	.LBE1851:
 356              	.LBE1861:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 38


 357              	.LBE1871:
 358              	.LBE1881:
 359              	.LBE1891:
 360              	.LBE1901:
 361              	.LBE1914:
 362              	.LBE1930:
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 363              		.loc 1 354 7 is_stmt 1 view .LVU68
 364              	.LBB1931:
 365              	.LBB1915:
 366              	.LBB1902:
 367              	.LBB1892:
 368              	.LBB1882:
 369              	.LBB1872:
 370              	.LBB1862:
 371              	.LBB1852:
 372              	.LBB1837:
 373              	.LBI1837:
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 374              		.loc 1 255 5 view .LVU69
 375              	.LBE1837:
 376              	.LBE1852:
 377              	.LBE1862:
 378              	.LBE1872:
 379              	.LBE1882:
 380              	.LBE1892:
 381              	.LBE1902:
 382              	.LBE1915:
 383              	.LBE1931:
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 384              		.loc 1 257 7 view .LVU70
 385              	.LBB1932:
 386              	.LBB1916:
 387              	.LBB1903:
 388              	.LBB1893:
 389              	.LBB1883:
 390              	.LBB1873:
 391              	.LBB1863:
 392              	.LBB1853:
 393              	.LBB1843:
 394              	.LBB1838:
 395              	.LBI1838:
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 396              		.loc 1 152 5 view .LVU71
 397              	.LBE1838:
 398              	.LBE1843:
 399              	.LBE1853:
 400              	.LBE1863:
 401              	.LBE1873:
 402              	.LBE1883:
 403              	.LBE1893:
 404              	.LBE1903:
 405              	.LBE1916:
 406              	.LBE1932:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 407              		.loc 1 154 7 view .LVU72
 408              	.LBB1933:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 39


 409              	.LBB1917:
 410              	.LBB1904:
 411              	.LBB1894:
 412              	.LBB1884:
 413              	.LBB1874:
 414              	.LBB1864:
 415              	.LBB1854:
 416              	.LBB1844:
 417              	.LBB1832:
 418              	.LBB1829:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 419              		.loc 1 154 7 is_stmt 0 view .LVU73
 420 0046 02D1     		bne	.L7
 421              	.LVL14:
 422              	.LBB1824:
 423              	.LBI1824:
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 424              		.loc 1 152 5 is_stmt 1 view .LVU74
 425              	.LBB1825:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  ++_M_p;
 426              		.loc 1 156 4 view .LVU75
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 427              		.loc 1 157 4 view .LVU76
 428 0048 0435     		adds	r5, r5, #4
 429              	.LVL15:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 430              		.loc 1 157 4 is_stmt 0 view .LVU77
 431              	.LBE1825:
 432              	.LBE1824:
 433              	.LBE1829:
 434              	.LBE1832:
 435              	.LBE1844:
 436              	.LBE1854:
 437              	.LBE1864:
 438              	.LBE1874:
 439              	.LBE1884:
 440              	.LBE1894:
 441              	.LBE1904:
 442              	.LBE1917:
 443              	.LBE1933:
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 444              		.loc 1 354 7 is_stmt 1 view .LVU78
 445              	.LBB1934:
 446              	.LBB1918:
 447              	.LBB1905:
 448              	.LBB1895:
 449              	.LBB1885:
 450              	.LBB1875:
 451              	.LBB1865:
 452              	.LBB1855:
 453              	.LBB1845:
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 454              		.loc 1 255 5 view .LVU79
 455              	.LBE1845:
 456              	.LBE1855:
 457              	.LBE1865:
 458              	.LBE1875:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 40


 459              	.LBE1885:
 460              	.LBE1895:
 461              	.LBE1905:
 462              	.LBE1918:
 463              	.LBE1934:
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 464              		.loc 1 257 7 view .LVU80
 465              	.LBB1935:
 466              	.LBB1919:
 467              	.LBB1906:
 468              	.LBB1896:
 469              	.LBB1886:
 470              	.LBB1876:
 471              	.LBB1866:
 472              	.LBB1856:
 473              	.LBB1846:
 474              	.LBB1841:
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 475              		.loc 1 152 5 view .LVU81
 476              	.LBE1841:
 477              	.LBE1846:
 478              	.LBE1856:
 479              	.LBE1866:
 480              	.LBE1876:
 481              	.LBE1886:
 482              	.LBE1896:
 483              	.LBE1906:
 484              	.LBE1919:
 485              	.LBE1935:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 486              		.loc 1 154 7 view .LVU82
 487              	.LBB1936:
 488              	.LBB1920:
 489              	.LBB1907:
 490              	.LBB1897:
 491              	.LBB1887:
 492              	.LBB1877:
 493              	.LBB1867:
 494              	.LBB1857:
 495              	.LBB1847:
 496              	.LBB1842:
 497              	.LBB1839:
 498              	.LBI1839:
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 499              		.loc 1 152 5 view .LVU83
 500              	.LBB1840:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  ++_M_p;
 501              		.loc 1 156 4 view .LVU84
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 502              		.loc 1 157 4 view .LVU85
 503 004a 0437     		adds	r7, r7, #4
 504              	.LVL16:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 505              		.loc 1 157 4 is_stmt 0 view .LVU86
 506              	.LBE1840:
 507              	.LBE1839:
 508              	.LBE1842:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 41


 509              	.LBE1847:
 510              	.LBB1848:
 511              	.LBB1833:
 512              	.LBB1830:
 513              	.LBB1827:
 514              	.LBB1826:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  ++_M_p;
 515              		.loc 1 156 14 view .LVU87
 516 004c 0021     		movs	r1, #0
 517              	.LVL17:
 518              	.L7:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  ++_M_p;
 519              		.loc 1 156 14 view .LVU88
 520              	.LBE1826:
 521              	.LBE1827:
 522              	.LBE1830:
 523              	.LBE1833:
 524              	.LBE1848:
 525              	.LBE1857:
 526              	.LBE1867:
 527              	.LBE1877:
 528              	.LBE1887:
 529              	.LBE1897:
 530              	.LBE1907:
 531              	.LBE1920:
 532              	.LBE1936:
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 533              		.loc 1 258 7 is_stmt 1 view .LVU89
 534              	.LBB1937:
 535              	.LBB1921:
 536              	.LBB1908:
 537              	.LBB1898:
 538              	.LBB1888:
 539              	.LBB1878:
 540              	.LBB1868:
 541              	.LBB1858:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 542              		.loc 2 378 4 view .LVU90
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 543              		.loc 2 378 46 view .LVU91
 544 004e 013C     		subs	r4, r4, #1
 545              	.LVL18:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 546              		.loc 2 378 46 is_stmt 0 view .LVU92
 547 0050 ECD1     		bne	.L8
 548              	.LVL19:
 549              	.L3:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 550              		.loc 2 378 46 view .LVU93
 551              	.LBE1858:
 552              	.LBE1868:
 553              	.LBE1878:
 554              	.LBE1888:
 555              	.LBE1898:
 556              	.LBE1908:
 557              	.LBB1909:
 558              	.LBI1909:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 42


 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return __res; }
 559              		.loc 2 330 5 is_stmt 1 view .LVU94
 560              	.LBE1909:
 561              	.LBE1921:
 562              	.LBE1937:
1135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 		      iterator __result)
1136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
1137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_Bit_type* __q = std::copy(__first._M_p, __last._M_p, __result._M_p);
1138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	return std::copy(const_iterator(__last._M_p, 0), __last,
1139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			 iterator(__q, 0));
1140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 563              		.loc 1 1140 7 is_stmt 0 view .LVU95
 564 0052 3046     		mov	r0, r6
 565              	.LBB1938:
 566              	.LBB1922:
 567              	.LBB1911:
 568              	.LBB1910:
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 569              		.loc 2 331 14 view .LVU96
 570 0054 C6E90071 		strd	r7, r1, [r6]
 571              	.LVL20:
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 572              		.loc 2 331 14 view .LVU97
 573              	.LBE1910:
 574              	.LBE1911:
 575              	.LBE1922:
 576              	.LBE1938:
 577              		.loc 1 1140 7 view .LVU98
 578 0058 03B0     		add	sp, sp, #12
 579              		.cfi_remember_state
 580              		.cfi_def_cfa_offset 20
 581              		@ sp needed
 582 005a F0BD     		pop	{r4, r5, r6, r7, pc}
 583              	.LVL21:
 584              	.L9:
 585              		.cfi_restore_state
 586              	.LBB1939:
 587              	.LBB1783:
 588              	.LBB1780:
 589              	.LBB1777:
 590              	.LBB1774:
 591              	.LBB1771:
 592              	.LBB1768:
 593              		.loc 1 1140 7 view .LVU99
 594 005c 0027     		movs	r7, #0
 595 005e E0E7     		b	.L2
 596              	.LBE1768:
 597              	.LBE1771:
 598              	.LBE1774:
 599              	.LBE1777:
 600              	.LBE1780:
 601              	.LBE1783:
 602              	.LBE1939:
 603              		.cfi_endproc
 604              	.LFE4456:
 606              		.section	.rodata._ZNSt6vectorIbSaIbEE13_M_assign_auxIPKbEEvT_S5_St20forward_iterator_tag.isra.0.st
 607              		.align	2
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 43


 608              	.LC11:
 609 0000 76656374 		.ascii	"vector<bool>::_M_insert_range\000"
 609      6F723C62 
 609      6F6F6C3E 
 609      3A3A5F4D 
 609      5F696E73 
 610              		.section	.text._ZNSt6vectorIbSaIbEE13_M_assign_auxIPKbEEvT_S5_St20forward_iterator_tag.isra.0,"ax"
 611              		.align	1
 612              		.p2align 2,,3
 613              		.syntax unified
 614              		.thumb
 615              		.thumb_func
 616              		.fpu fpv5-d16
 618              	_ZNSt6vectorIbSaIbEE13_M_assign_auxIPKbEEvT_S5_St20forward_iterator_tag.isra.0:
 619              	.LVL22:
 620              	.LFB4457:
1141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
1143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_initialize(size_type __n)
1144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
1145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (__n)
1146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
1147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    _Bit_pointer __q = this->_M_allocate(__n);
1148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    this->_M_impl._M_end_of_storage = __q + _S_nword(__n);
1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    this->_M_impl._M_start = iterator(std::__addressof(*__q), 0);
1150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
1151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	else
1152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
1153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    this->_M_impl._M_end_of_storage = _Bit_pointer();
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    this->_M_impl._M_start = iterator(0, 0);
1155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
1156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start + difference_type(__n);
1157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
1159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
1161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_initialize_value(bool __x)
1162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
1163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (_Bit_type* __p = this->_M_impl._M_start._M_p)
1164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  __builtin_memset(__p, __x ? ~0 : 0,
1165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			   (this->_M_impl._M_end_addr() - __p)
1166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			   * sizeof(_Bit_type));
1167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
1168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
1170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_reallocate(size_type __n);
1171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus >= 201103L
1173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       bool
1174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_shrink_to_fit();
1175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
1176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // Check whether it's an integral type.  If so, it's not an iterator.
1178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // 438. Ambiguity in the "do the right thing" clause
1181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename _Integer>
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 44


1182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
1183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_initialize_dispatch(_Integer __n, _Integer __x, __true_type)
1184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
1185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_initialize(static_cast<size_type>(__n));
1186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_initialize_value(__x);
1187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
1188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename _InputIterator>
1190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
1191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_initialize_dispatch(_InputIterator __first, _InputIterator __last,
1192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			       __false_type)
1193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ _M_initialize_range(__first, __last,
1194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			      std::__iterator_category(__first)); }
1195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename _InputIterator>
1197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
1198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_initialize_range(_InputIterator __first, _InputIterator __last,
1199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			    std::input_iterator_tag)
1200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
1201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  for (; __first != __last; ++__first)
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    push_back(*__first);
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
1204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename _ForwardIterator>
1206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
1207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_initialize_range(_ForwardIterator __first, _ForwardIterator __last,
1208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			    std::forward_iterator_tag)
1209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
1210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  const size_type __n = std::distance(__first, __last);
1211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_initialize(__n);
1212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  std::copy(__first, __last, this->_M_impl._M_start);
1213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
1214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #if __cplusplus < 201103L
1216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // 438. Ambiguity in the "do the right thing" clause
1218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename _Integer>
1219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
1220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_assign_dispatch(_Integer __n, _Integer __val, __true_type)
1221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ _M_fill_assign(__n, __val); }
1222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<class _InputIterator>
1224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
1225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_assign_dispatch(_InputIterator __first, _InputIterator __last,
1226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			   __false_type)
1227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ _M_assign_aux(__first, __last, std::__iterator_category(__first)); }
1228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
1229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
1231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_fill_assign(size_t __n, bool __x)
1232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
1233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (__n > size())
1234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
1235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    _M_initialize_value(__x);
1236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    insert(end(), __n - size(), __x);
1237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
1238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	else
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 45


1239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
1240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    _M_erase_at_end(begin() + __n);
1241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    _M_initialize_value(__x);
1242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
1243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
1244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename _InputIterator>
1246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
1247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_assign_aux(_InputIterator __first, _InputIterator __last,
1248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 		      std::input_iterator_tag)
1249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
1250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  iterator __cur = begin();
1251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  for (; __first != __last && __cur != end(); ++__cur, (void)++__first)
1252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    *__cur = *__first;
1253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  if (__first == __last)
1254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    _M_erase_at_end(__cur);
1255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  else
1256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    insert(end(), __first, __last);
1257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
1258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename _ForwardIterator>
1260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
1261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,
 621              		.loc 1 1261 2 is_stmt 1 view -0
 622              		.cfi_startproc
 623              		@ args = 0, pretend = 0, frame = 24
 624              		@ frame_needed = 0, uses_anonymous_args = 0
 625              		.loc 1 1261 2 is_stmt 0 view .LVU101
 626 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 627              		.cfi_def_cfa_offset 36
 628              		.cfi_offset 4, -36
 629              		.cfi_offset 5, -32
 630              		.cfi_offset 6, -28
 631              		.cfi_offset 7, -24
 632              		.cfi_offset 8, -20
 633              		.cfi_offset 9, -16
 634              		.cfi_offset 10, -12
 635              		.cfi_offset 11, -8
 636              		.cfi_offset 14, -4
 637              	.LBB2349:
 638              	.LBB2350:
 639              	.LBB2351:
 640              	.LBB2352:
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 641              		.loc 1 839 54 view .LVU102
 642 0004 D0F800C0 		ldr	ip, [r0]
 643              	.LBE2352:
 644              	.LBE2351:
 645              	.LBE2350:
 646              	.LBE2349:
 647              	.LBB3333:
 648              	.LBB3334:
 649              	.LBB3335:
 650              		.file 3 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_iterato
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // Functions used by iterators -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 46


   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * Copyright (c) 1996-1998
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * representations about the suitability of this software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** /** @file bits/stl_iterator_base_funcs.h
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  *  Do not attempt to use it directly. @headername{iterator}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  *
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  *  This file contains all of the general iterator-related utility
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  *  functions, such as distance() and advance().
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  */
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** #ifndef _STL_ITERATOR_BASE_FUNCS_H
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** #define _STL_ITERATOR_BASE_FUNCS_H 1
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 47


  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** #pragma GCC system_header
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** #include <bits/concept_check.h>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** #include <debug/assertions.h>
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** {
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   // Forward declaration for the overloads of __distance.
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   template <typename> struct _List_iterator;
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   template <typename> struct _List_const_iterator;
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** _GLIBCXX_END_NAMESPACE_CONTAINER
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   template<typename _InputIterator>
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     inline _GLIBCXX14_CONSTEXPR
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     typename iterator_traits<_InputIterator>::difference_type
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     __distance(_InputIterator __first, _InputIterator __last,
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****                input_iterator_tag)
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     {
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       // concept requirements
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       typename iterator_traits<_InputIterator>::difference_type __n = 0;
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       while (__first != __last)
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	{
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	  ++__first;
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	  ++__n;
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	}
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       return __n;
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     }
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   template<typename _RandomAccessIterator>
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     inline _GLIBCXX14_CONSTEXPR
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     typename iterator_traits<_RandomAccessIterator>::difference_type
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****                random_access_iterator_tag)
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     {
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       // concept requirements
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       __glibcxx_function_requires(_RandomAccessIteratorConcept<
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 				  _RandomAccessIterator>)
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       return __last - __first;
 651              		.loc 3 104 23 view .LVU103
 652 0008 531A     		subs	r3, r2, r1
 653              	.LBE3335:
 654              	.LBE3334:
 655              	.LBE3333:
 656              		.loc 1 1261 2 view .LVU104
 657 000a 89B0     		sub	sp, sp, #36
 658              		.cfi_def_cfa_offset 72
 659              		.loc 1 1261 2 view .LVU105
 660 000c 0446     		mov	r4, r0
 661              	.LVL23:
 662              	.LBB3337:
 663              	.LBI3333:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 48


 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     }
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** #if _GLIBCXX_USE_CXX11_ABI
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   // Forward declaration because of the qualified call in distance.
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   template<typename _Tp>
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     ptrdiff_t
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     __distance(_GLIBCXX_STD_C::_List_iterator<_Tp>,
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	       _GLIBCXX_STD_C::_List_iterator<_Tp>,
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	       input_iterator_tag);
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   template<typename _Tp>
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     ptrdiff_t
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     __distance(_GLIBCXX_STD_C::_List_const_iterator<_Tp>,
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	       _GLIBCXX_STD_C::_List_const_iterator<_Tp>,
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	       input_iterator_tag);
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** #endif
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   /**
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  @brief A generalization of pointer arithmetic.
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  @param  __first  An input iterator.
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  @param  __last  An input iterator.
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  @return  The distance between them.
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  Returns @c n such that __first + n == __last.  This requires
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  that @p __last must be reachable from @p __first.  Note that @c
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  n may be negative.
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  For random access iterators, this uses their @c + and @c - operations
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  and are constant time.  For other %iterator classes they are linear time.
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   */
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   template<typename _InputIterator>
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     inline _GLIBCXX17_CONSTEXPR
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     typename iterator_traits<_InputIterator>::difference_type
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     distance(_InputIterator __first, _InputIterator __last)
 664              		.loc 3 138 5 is_stmt 1 view .LVU106
 665              	.LBB3336:
 666              	.LBI3334:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****                random_access_iterator_tag)
 667              		.loc 3 98 5 view .LVU107
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****                random_access_iterator_tag)
 668              		.loc 3 98 5 is_stmt 0 view .LVU108
 669              	.LBE3336:
 670              	.LBE3337:
 671              	.LBB3338:
 672              	.LBB2363:
 673              	.LBI2350:
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return size_type(end() - begin()); }
 674              		.loc 1 884 7 is_stmt 1 view .LVU109
 675              	.LBB2356:
 676              	.LBI2356:
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl._M_finish; }
 677              		.loc 1 846 7 view .LVU110
 678              	.LBB2357:
 679              	.LBI2357:
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x._M_p, __x._M_offset) { }
 680              		.loc 1 339 5 view .LVU111
 681              	.LBB2358:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 49


 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 682              		.loc 1 340 40 is_stmt 0 view .LVU112
 683 000e D0E90275 		ldrd	r7, r5, [r0, #8]
 684              	.LVL24:
 685              	.LBB2359:
 686              	.LBI2359:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 687              		.loc 1 148 5 is_stmt 1 view .LVU113
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 688              		.loc 1 148 5 is_stmt 0 view .LVU114
 689              	.LBE2359:
 690              	.LBE2358:
 691              	.LBE2357:
 692              	.LBE2356:
 693              	.LBB2360:
 694              	.LBI2351:
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_iterator(this->_M_impl._M_start._M_p, 0); }
 695              		.loc 1 838 7 is_stmt 1 view .LVU115
 696              	.LBB2355:
 697              	.LBB2353:
 698              	.LBI2353:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 699              		.loc 1 336 5 view .LVU116
 700              	.LBB2354:
 701              	.LBI2354:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 702              		.loc 1 148 5 view .LVU117
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 703              		.loc 1 148 5 is_stmt 0 view .LVU118
 704              	.LBE2354:
 705              	.LBE2353:
 706              	.LBE2355:
 707              	.LBE2360:
 708              	.LBB2361:
 709              	.LBI2361:
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 710              		.loc 1 224 5 is_stmt 1 view .LVU119
 711              	.LBB2362:
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 712              		.loc 1 226 7 view .LVU120
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 713              		.loc 1 226 44 is_stmt 0 view .LVU121
 714 0012 A7EB0C08 		sub	r8, r7, ip
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 715              		.loc 1 227 8 view .LVU122
 716 0016 05EBC808 		add	r8, r5, r8, lsl #3
 717              	.LVL25:
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 718              		.loc 1 227 8 view .LVU123
 719              	.LBE2362:
 720              	.LBE2361:
 721              	.LBE2363:
1262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 		      std::forward_iterator_tag)
1263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
1264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  const size_type __len = std::distance(__first, __last);
1265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  if (__len < size())
 722              		.loc 1 1265 4 view .LVU124
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 50


 723 001a 4345     		cmp	r3, r8
 724 001c 2BD2     		bcs	.L15
 725              	.LVL26:
 726              	.LBB2364:
 727              	.LBI2364:
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return iterator(this->_M_impl._M_start._M_p, 0); }
 728              		.loc 1 834 7 is_stmt 1 view .LVU125
 729              	.LBB2365:
 730              	.LBI2365:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 731              		.loc 1 243 5 view .LVU126
 732              	.LBB2366:
 733              	.LBI2366:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 734              		.loc 1 148 5 view .LVU127
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 735              		.loc 1 148 5 is_stmt 0 view .LVU128
 736              	.LBE2366:
 737              	.LBE2365:
 738              	.LBE2364:
 739              	.LBB2367:
 740              	.LBI2367:
 741              		.loc 2 560 5 is_stmt 1 view .LVU129
 742              	.LBB2368:
 743              	.LBI2368:
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 744              		.loc 2 511 5 view .LVU130
 745              	.LBB2369:
 746              	.LBI2369:
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 747              		.loc 2 505 5 view .LVU131
 748              	.LBB2370:
 749              	.LBI2370:
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 750              		.loc 2 463 5 view .LVU132
 751              	.LBB2371:
 752              	.LBB2372:
 753              	.LBI2372:
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 754              		.loc 2 375 2 view .LVU133
 755              	.LBB2373:
 756              	.LBB2374:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 757              		.loc 2 378 46 view .LVU134
 758 001e 002B     		cmp	r3, #0
 759 0020 40F33981 		ble	.L66
 760 0024 0139     		subs	r1, r1, #1
 761              	.LVL27:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 762              		.loc 2 378 46 is_stmt 0 view .LVU135
 763 0026 0022     		movs	r2, #0
 764              	.LVL28:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 765              		.loc 2 378 46 view .LVU136
 766 0028 CD18     		adds	r5, r1, r3
 767 002a 0BE0     		b	.L21
 768              	.LVL29:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 51


 769              	.L78:
 770              	.LBB2375:
 771              	.LBB2376:
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       else
 772              		.loc 1 93 2 is_stmt 1 view .LVU137
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       else
 773              		.loc 1 93 8 is_stmt 0 view .LVU138
 774 002c DCF80000 		ldr	r0, [ip]
 775              	.LBE2376:
 776              	.LBE2375:
 777              	.LBB2385:
 778              	.LBB2386:
 779              	.LBB2387:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 780              		.loc 1 154 7 view .LVU139
 781 0030 1F2A     		cmp	r2, #31
 782              	.LBE2387:
 783              	.LBE2386:
 784              	.LBE2385:
 785              	.LBB2402:
 786              	.LBB2381:
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       else
 787              		.loc 1 93 8 view .LVU140
 788 0032 43EA0003 		orr	r3, r3, r0
 789 0036 CCF80030 		str	r3, [ip]
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 790              		.loc 1 96 7 is_stmt 1 view .LVU141
 791              	.LVL30:
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 792              		.loc 1 96 7 is_stmt 0 view .LVU142
 793              	.LBE2381:
 794              	.LBE2402:
 795              	.LBB2403:
 796              	.LBI2385:
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 797              		.loc 1 255 5 is_stmt 1 view .LVU143
 798              	.LBE2403:
 799              	.LBE2374:
 800              	.LBE2373:
 801              	.LBE2372:
 802              	.LBE2371:
 803              	.LBE2370:
 804              	.LBE2369:
 805              	.LBE2368:
 806              	.LBE2367:
 807              	.LBE3338:
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 808              		.loc 1 257 7 view .LVU144
 809              	.LBB3339:
 810              	.LBB2453:
 811              	.LBB2448:
 812              	.LBB2443:
 813              	.LBB2438:
 814              	.LBB2433:
 815              	.LBB2428:
 816              	.LBB2423:
 817              	.LBB2418:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 52


 818              	.LBB2404:
 819              	.LBB2397:
 820              	.LBI2386:
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 821              		.loc 1 152 5 view .LVU145
 822              	.LBB2392:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 823              		.loc 1 154 7 view .LVU146
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 824              		.loc 1 154 7 is_stmt 0 view .LVU147
 825 003a 11D0     		beq	.L19
 826              	.LVL31:
 827              	.L79:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 828              		.loc 1 154 7 view .LVU148
 829              	.LBE2392:
 830              	.LBE2397:
 831              	.LBE2404:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 832              		.loc 2 378 46 view .LVU149
 833 003c A942     		cmp	r1, r5
 834              	.LBB2405:
 835              	.LBB2398:
 836              	.LBB2393:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 837              		.loc 1 154 20 view .LVU150
 838 003e 02F10102 		add	r2, r2, #1
 839              	.LVL32:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 840              		.loc 1 154 20 view .LVU151
 841              	.LBE2393:
 842              	.LBE2398:
 843              	.LBE2405:
 844              	.LBE2418:
 845              	.LBE2423:
 846              	.LBE2428:
 847              	.LBE2433:
 848              	.LBE2438:
 849              	.LBE2443:
 850              	.LBE2448:
 851              	.LBE2453:
 852              	.LBE3339:
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 853              		.loc 1 258 7 is_stmt 1 view .LVU152
 854              	.LBB3340:
 855              	.LBB2454:
 856              	.LBB2449:
 857              	.LBB2444:
 858              	.LBB2439:
 859              	.LBB2434:
 860              	.LBB2429:
 861              	.LBB2424:
 862              	.LBB2419:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 863              		.loc 2 378 4 view .LVU153
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 864              		.loc 2 378 46 view .LVU154
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 53


 865 0042 13D0     		beq	.L16
 866              	.LVL33:
 867              	.L21:
 868              	.LBB2406:
 869              	.LBI2406:
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return reference(_M_p, 1UL << _M_offset); }
 870              		.loc 1 251 5 view .LVU155
 871              	.LBB2407:
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 872              		.loc 1 252 7 view .LVU156
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 873              		.loc 1 252 46 is_stmt 0 view .LVU157
 874 0044 0123     		movs	r3, #1
 875              	.LBE2407:
 876              	.LBE2406:
 877              	.LBB2410:
 878              	.LBB2382:
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	*_M_p |= _M_mask;
 879              		.loc 1 92 7 view .LVU158
 880 0046 11F8010F 		ldrb	r0, [r1, #1]!	@ zero_extendqisi2
 881              	.LVL34:
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	*_M_p |= _M_mask;
 882              		.loc 1 92 7 view .LVU159
 883              	.LBE2382:
 884              	.LBE2410:
 885              	.LBB2411:
 886              	.LBB2409:
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 887              		.loc 1 252 46 view .LVU160
 888 004a 9340     		lsls	r3, r3, r2
 889              	.LVL35:
 890              	.LBB2408:
 891              	.LBI2408:
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_mask(__y) { }
 892              		.loc 1 77 5 is_stmt 1 view .LVU161
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_mask(__y) { }
 893              		.loc 1 77 5 is_stmt 0 view .LVU162
 894              	.LBE2408:
 895              	.LBE2409:
 896              	.LBE2411:
 897              	.LBB2412:
 898              	.LBI2375:
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 899              		.loc 1 90 5 is_stmt 1 view .LVU163
 900              	.LBB2383:
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	*_M_p |= _M_mask;
 901              		.loc 1 92 7 view .LVU164
 902 004c 0028     		cmp	r0, #0
 903 004e EDD1     		bne	.L78
 904              	.LBB2377:
 905              	.LBI2377:
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 906              		.loc 1 90 5 view .LVU165
 907              	.LVL36:
 908              	.LBB2378:
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 909              		.loc 1 95 2 view .LVU166
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 54


  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 910              		.loc 1 95 8 is_stmt 0 view .LVU167
 911 0050 DCF80000 		ldr	r0, [ip]
 912              	.LBE2378:
 913              	.LBE2377:
 914              	.LBE2383:
 915              	.LBE2412:
 916              	.LBB2413:
 917              	.LBB2399:
 918              	.LBB2394:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 919              		.loc 1 154 7 view .LVU168
 920 0054 1F2A     		cmp	r2, #31
 921              	.LBE2394:
 922              	.LBE2399:
 923              	.LBE2413:
 924              	.LBB2414:
 925              	.LBB2384:
 926              	.LBB2380:
 927              	.LBB2379:
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 928              		.loc 1 95 8 view .LVU169
 929 0056 20EA0303 		bic	r3, r0, r3
 930 005a CCF80030 		str	r3, [ip]
 931              	.LVL37:
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 932              		.loc 1 95 8 view .LVU170
 933              	.LBE2379:
 934              	.LBE2380:
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 935              		.loc 1 96 7 is_stmt 1 view .LVU171
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 936              		.loc 1 96 7 is_stmt 0 view .LVU172
 937              	.LBE2384:
 938              	.LBE2414:
 939              	.LBB2415:
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 940              		.loc 1 255 5 is_stmt 1 view .LVU173
 941              	.LBE2415:
 942              	.LBE2419:
 943              	.LBE2424:
 944              	.LBE2429:
 945              	.LBE2434:
 946              	.LBE2439:
 947              	.LBE2444:
 948              	.LBE2449:
 949              	.LBE2454:
 950              	.LBE3340:
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 951              		.loc 1 257 7 view .LVU174
 952              	.LBB3341:
 953              	.LBB2455:
 954              	.LBB2450:
 955              	.LBB2445:
 956              	.LBB2440:
 957              	.LBB2435:
 958              	.LBB2430:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 55


 959              	.LBB2425:
 960              	.LBB2420:
 961              	.LBB2416:
 962              	.LBB2400:
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 963              		.loc 1 152 5 view .LVU175
 964              	.LBB2395:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 965              		.loc 1 154 7 view .LVU176
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 966              		.loc 1 154 7 is_stmt 0 view .LVU177
 967 005e EDD1     		bne	.L79
 968              	.LVL38:
 969              	.L19:
 970              	.LBB2388:
 971              	.LBI2388:
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 972              		.loc 1 152 5 is_stmt 1 view .LVU178
 973              	.LBB2389:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  ++_M_p;
 974              		.loc 1 156 4 view .LVU179
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 975              		.loc 1 157 4 view .LVU180
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 976              		.loc 1 157 4 is_stmt 0 view .LVU181
 977              	.LBE2389:
 978              	.LBE2388:
 979              	.LBE2395:
 980              	.LBE2400:
 981              	.LBE2416:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 982              		.loc 2 378 46 view .LVU182
 983 0060 A942     		cmp	r1, r5
 984              	.LBB2417:
 985              	.LBB2401:
 986              	.LBB2396:
 987              	.LBB2391:
 988              	.LBB2390:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 989              		.loc 1 157 4 view .LVU183
 990 0062 0CF1040C 		add	ip, ip, #4
 991              	.LVL39:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  ++_M_p;
 992              		.loc 1 156 14 view .LVU184
 993 0066 4FF00002 		mov	r2, #0
 994              	.LVL40:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  ++_M_p;
 995              		.loc 1 156 14 view .LVU185
 996              	.LBE2390:
 997              	.LBE2391:
 998              	.LBE2396:
 999              	.LBE2401:
 1000              	.LBE2417:
 1001              	.LBE2420:
 1002              	.LBE2425:
 1003              	.LBE2430:
 1004              	.LBE2435:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 56


 1005              	.LBE2440:
 1006              	.LBE2445:
 1007              	.LBE2450:
 1008              	.LBE2455:
 1009              	.LBE3341:
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 1010              		.loc 1 258 7 is_stmt 1 view .LVU186
 1011              	.LBB3342:
 1012              	.LBB2456:
 1013              	.LBB2451:
 1014              	.LBB2446:
 1015              	.LBB2441:
 1016              	.LBB2436:
 1017              	.LBB2431:
 1018              	.LBB2426:
 1019              	.LBB2421:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 1020              		.loc 2 378 4 view .LVU187
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 1021              		.loc 2 378 46 view .LVU188
 1022 006a EBD1     		bne	.L21
 1023              	.LVL41:
 1024              	.L16:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 1025              		.loc 2 378 46 is_stmt 0 view .LVU189
 1026              	.LBE2421:
 1027              	.LBE2426:
 1028              	.LBE2431:
 1029              	.LBE2436:
 1030              	.LBE2441:
 1031              	.LBE2446:
 1032              	.LBE2451:
 1033              	.LBE2456:
 1034              	.LBB2457:
 1035              	.LBI2457:
1266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    _M_erase_at_end(std::copy(__first, __last, begin()));
1267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  else
1268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    {
1269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      _ForwardIterator __mid = __first;
1270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      std::advance(__mid, size());
1271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      std::copy(__first, __mid, begin());
1272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      insert(end(), __mid, __last);
1273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    }
1274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
1275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // Check whether it's an integral type.  If so, it's not an iterator.
1277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       // 438. Ambiguity in the "do the right thing" clause
1280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename _Integer>
1281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
1282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_insert_dispatch(iterator __pos, _Integer __n, _Integer __x,
1283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			   __true_type)
1284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ _M_fill_insert(__pos, __n, __x); }
1285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename _InputIterator>
1287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 57


1288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_insert_dispatch(iterator __pos,
1289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			   _InputIterator __first, _InputIterator __last,
1290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			   __false_type)
1291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ _M_insert_range(__pos, __first, __last,
1292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			  std::__iterator_category(__first)); }
1293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
1295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_fill_insert(iterator __position, size_type __n, bool __x);
1296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename _InputIterator>
1298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
1299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_insert_range(iterator __pos, _InputIterator __first,
1300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			_InputIterator __last, std::input_iterator_tag)
1301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
1302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  for (; __first != __last; ++__first)
1303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    {
1304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      __pos = insert(__pos, *__first);
1305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      ++__pos;
1306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    }
1307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
1308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       template<typename _ForwardIterator>
1310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	void
1311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	_M_insert_range(iterator __position, _ForwardIterator __first,
1312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			_ForwardIterator __last, std::forward_iterator_tag);
1313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
1315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_insert_aux(iterator __position, bool __x);
1316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       size_type
1318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_check_len(size_type __n, const char* __s) const
1319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
1320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	if (max_size() - size() < __n)
1321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  __throw_length_error(__N(__s));
1322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	const size_type __len = size() + std::max(size(), __n);
1324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	return (__len < size() || __len > max_size()) ? max_size() : __len;
1325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
1326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
1327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       void
1328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_erase_at_end(iterator __pos)
 1036              		.loc 1 1328 7 is_stmt 1 view .LVU190
 1037              	.LBB2458:
1329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { this->_M_impl._M_finish = __pos; }
 1038              		.loc 1 1329 9 is_stmt 0 view .LVU191
 1039 006c C4E902C2 		strd	ip, r2, [r4, #8]
 1040              	.LVL42:
 1041              	.L14:
 1042              		.loc 1 1329 9 view .LVU192
 1043              	.LBE2458:
 1044              	.LBE2457:
 1045              	.LBE3342:
1274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 1046              		.loc 1 1274 2 view .LVU193
 1047 0070 09B0     		add	sp, sp, #36
 1048              		.cfi_remember_state
 1049              		.cfi_def_cfa_offset 36
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 58


 1050              		@ sp needed
 1051 0072 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1052              	.LVL43:
 1053              	.L15:
 1054              		.cfi_restore_state
 1055              	.LBB3343:
 1056              	.LBB2459:
 1057              	.LBB2460:
 1058              	.LBI2460:
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return size_type(end() - begin()); }
 1059              		.loc 1 884 7 is_stmt 1 view .LVU194
 1060              	.LBB2461:
 1061              	.LBI2461:
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl._M_finish; }
 1062              		.loc 1 846 7 view .LVU195
 1063              	.LBB2462:
 1064              	.LBI2462:
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x._M_p, __x._M_offset) { }
 1065              		.loc 1 339 5 view .LVU196
 1066              	.LBB2463:
 1067              	.LBI2463:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1068              		.loc 1 148 5 view .LVU197
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1069              		.loc 1 148 5 is_stmt 0 view .LVU198
 1070              	.LBE2463:
 1071              	.LBE2462:
 1072              	.LBE2461:
 1073              	.LBB2464:
 1074              	.LBI2464:
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_iterator(this->_M_impl._M_start._M_p, 0); }
 1075              		.loc 1 838 7 is_stmt 1 view .LVU199
 1076              	.LBB2465:
 1077              	.LBI2465:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 1078              		.loc 1 336 5 view .LVU200
 1079              	.LBB2466:
 1080              	.LBI2466:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1081              		.loc 1 148 5 view .LVU201
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1082              		.loc 1 148 5 is_stmt 0 view .LVU202
 1083              	.LBE2466:
 1084              	.LBE2465:
 1085              	.LBE2464:
 1086              	.LBE2460:
 1087              	.LBE2459:
 1088              	.LBE3343:
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 1089              		.loc 1 226 7 is_stmt 1 view .LVU203
 1090              	.LBB3344:
 1091              	.LBB3296:
 1092              	.LBB2467:
 1093              	.LBI2467:
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     {
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       // concept requirements -- taken care of in __distance
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       return std::__distance(__first, __last,
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 59


 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 			     std::__iterator_category(__first));
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     }
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   template<typename _InputIterator, typename _Distance>
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     inline _GLIBCXX14_CONSTEXPR void
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     __advance(_InputIterator& __i, _Distance __n, input_iterator_tag)
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     {
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       // concept requirements
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       __glibcxx_assert(__n >= 0);
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       while (__n--)
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	++__i;
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     }
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   template<typename _BidirectionalIterator, typename _Distance>
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     inline _GLIBCXX14_CONSTEXPR void
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     __advance(_BidirectionalIterator& __i, _Distance __n,
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	      bidirectional_iterator_tag)
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     {
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       // concept requirements
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 				  _BidirectionalIterator>)
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       if (__n > 0)
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****         while (__n--)
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	  ++__i;
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       else
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****         while (__n++)
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	  --__i;
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     }
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   template<typename _RandomAccessIterator, typename _Distance>
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     inline _GLIBCXX14_CONSTEXPR void
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     __advance(_RandomAccessIterator& __i, _Distance __n,
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****               random_access_iterator_tag)
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     {
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       // concept requirements
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       __glibcxx_function_requires(_RandomAccessIteratorConcept<
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 				  _RandomAccessIterator>)
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       if (__builtin_constant_p(__n) && __n == 1)
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	++__i;
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       else if (__builtin_constant_p(__n) && __n == -1)
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	--__i;
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       else
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	__i += __n;
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     }
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   /**
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  @brief A generalization of pointer arithmetic.
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  @param  __i  An input iterator.
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  @param  __n  The @a delta by which to change @p __i.
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  @return  Nothing.
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  This increments @p i by @p n.  For bidirectional and random access
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  iterators, @p __n may be negative, in which case @p __i is decremented.
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  For random access iterators, this uses their @c + and @c - operations
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  and are constant time.  For other %iterator classes they are linear time.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 60


 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   */
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   template<typename _InputIterator, typename _Distance>
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     inline _GLIBCXX17_CONSTEXPR void
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     advance(_InputIterator& __i, _Distance __n)
 1094              		.loc 3 202 5 view .LVU204
 1095              	.LBB2468:
 1096              	.LBB2469:
 1097              	.LBI2469:
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****               random_access_iterator_tag)
 1098              		.loc 3 174 5 view .LVU205
 1099              	.LBB2470:
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     }
 1100              		.loc 3 185 6 is_stmt 0 view .LVU206
 1101 0076 01EB0803 		add	r3, r1, r8
 1102              	.LVL44:
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     }
 1103              		.loc 3 185 6 view .LVU207
 1104              	.LBE2470:
 1105              	.LBE2469:
 1106              	.LBE2468:
 1107              	.LBE2467:
 1108              	.LBB2474:
 1109              	.LBB2475:
 1110              	.LBB2476:
 1111              	.LBB2477:
 1112              	.LBB2478:
 1113              	.LBB2479:
 1114              	.LBB2480:
 1115              	.LBB2481:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 1116              		.loc 2 378 46 view .LVU208
 1117 007a B8F1000F 		cmp	r8, #0
 1118              	.LBE2481:
 1119              	.LBE2480:
 1120              	.LBE2479:
 1121              	.LBE2478:
 1122              	.LBE2477:
 1123              	.LBE2476:
 1124              	.LBE2475:
 1125              	.LBE2474:
 1126              	.LBB2558:
 1127              	.LBB2473:
 1128              	.LBB2472:
 1129              	.LBB2471:
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     }
 1130              		.loc 3 185 6 view .LVU209
 1131 007e 0393     		str	r3, [sp, #12]
 1132              	.LVL45:
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     }
 1133              		.loc 3 185 6 view .LVU210
 1134              	.LBE2471:
 1135              	.LBE2472:
 1136              	.LBE2473:
 1137              	.LBE2558:
 1138              	.LBB2559:
 1139              	.LBI2559:
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return iterator(this->_M_impl._M_start._M_p, 0); }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 61


 1140              		.loc 1 834 7 is_stmt 1 view .LVU211
 1141              	.LBB2560:
 1142              	.LBI2560:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 1143              		.loc 1 243 5 view .LVU212
 1144              	.LBB2561:
 1145              	.LBI2561:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1146              		.loc 1 148 5 view .LVU213
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1147              		.loc 1 148 5 is_stmt 0 view .LVU214
 1148              	.LBE2561:
 1149              	.LBE2560:
 1150              	.LBE2559:
 1151              	.LBB2562:
 1152              	.LBI2474:
 1153              		.loc 2 560 5 is_stmt 1 view .LVU215
 1154              	.LBB2553:
 1155              	.LBI2475:
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 1156              		.loc 2 511 5 view .LVU216
 1157              	.LBB2548:
 1158              	.LBI2476:
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 1159              		.loc 2 505 5 view .LVU217
 1160              	.LBB2543:
 1161              	.LBI2477:
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 1162              		.loc 2 463 5 view .LVU218
 1163              	.LBB2538:
 1164              	.LBB2533:
 1165              	.LBI2479:
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 1166              		.loc 2 375 2 view .LVU219
 1167              	.LBB2528:
 1168              	.LBB2523:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 1169              		.loc 2 378 46 view .LVU220
 1170 0080 23DD     		ble	.L30
 1171 0082 0139     		subs	r1, r1, #1
 1172              	.LVL46:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 1173              		.loc 2 378 46 is_stmt 0 view .LVU221
 1174 0084 E646     		mov	lr, ip
 1175 0086 0020     		movs	r0, #0
 1176              	.LVL47:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 1177              		.loc 2 378 46 view .LVU222
 1178 0088 01EB0809 		add	r9, r1, r8
 1179 008c 08E0     		b	.L31
 1180              	.LVL48:
 1181              	.L80:
 1182              	.LBB2482:
 1183              	.LBB2483:
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       else
 1184              		.loc 1 93 2 is_stmt 1 view .LVU223
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       else
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 62


 1185              		.loc 1 93 8 is_stmt 0 view .LVU224
 1186 008e 3343     		orrs	r3, r3, r6
 1187              	.LBE2483:
 1188              	.LBE2482:
 1189              	.LBB2490:
 1190              	.LBB2491:
 1191              	.LBB2492:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 1192              		.loc 1 154 7 view .LVU225
 1193 0090 1F28     		cmp	r0, #31
 1194 0092 CEF80030 		str	r3, [lr]
 1195              	.LBE2492:
 1196              	.LBE2491:
 1197              	.LBE2490:
 1198              	.LBB2507:
 1199              	.LBB2486:
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 1200              		.loc 1 96 7 is_stmt 1 view .LVU226
 1201              	.LVL49:
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 1202              		.loc 1 96 7 is_stmt 0 view .LVU227
 1203              	.LBE2486:
 1204              	.LBE2507:
 1205              	.LBB2508:
 1206              	.LBI2490:
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 1207              		.loc 1 255 5 is_stmt 1 view .LVU228
 1208              	.LBE2508:
 1209              	.LBE2523:
 1210              	.LBE2528:
 1211              	.LBE2533:
 1212              	.LBE2538:
 1213              	.LBE2543:
 1214              	.LBE2548:
 1215              	.LBE2553:
 1216              	.LBE2562:
 1217              	.LBE3296:
 1218              	.LBE3344:
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 1219              		.loc 1 257 7 view .LVU229
 1220              	.LBB3345:
 1221              	.LBB3297:
 1222              	.LBB2563:
 1223              	.LBB2554:
 1224              	.LBB2549:
 1225              	.LBB2544:
 1226              	.LBB2539:
 1227              	.LBB2534:
 1228              	.LBB2529:
 1229              	.LBB2524:
 1230              	.LBB2509:
 1231              	.LBB2502:
 1232              	.LBI2491:
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 1233              		.loc 1 152 5 view .LVU230
 1234              	.LBB2497:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 63


 1235              		.loc 1 154 7 view .LVU231
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 1236              		.loc 1 154 7 is_stmt 0 view .LVU232
 1237 0096 12D0     		beq	.L28
 1238              	.LVL50:
 1239              	.L81:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 1240              		.loc 1 154 7 view .LVU233
 1241              	.LBE2497:
 1242              	.LBE2502:
 1243              	.LBE2509:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 1244              		.loc 2 378 46 view .LVU234
 1245 0098 4945     		cmp	r1, r9
 1246              	.LBB2510:
 1247              	.LBB2503:
 1248              	.LBB2498:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 1249              		.loc 1 154 20 view .LVU235
 1250 009a 00F10100 		add	r0, r0, #1
 1251              	.LVL51:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 1252              		.loc 1 154 20 view .LVU236
 1253              	.LBE2498:
 1254              	.LBE2503:
 1255              	.LBE2510:
 1256              	.LBE2524:
 1257              	.LBE2529:
 1258              	.LBE2534:
 1259              	.LBE2539:
 1260              	.LBE2544:
 1261              	.LBE2549:
 1262              	.LBE2554:
 1263              	.LBE2563:
 1264              	.LBE3297:
 1265              	.LBE3345:
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 1266              		.loc 1 258 7 is_stmt 1 view .LVU237
 1267              	.LBB3346:
 1268              	.LBB3298:
 1269              	.LBB2564:
 1270              	.LBB2555:
 1271              	.LBB2550:
 1272              	.LBB2545:
 1273              	.LBB2540:
 1274              	.LBB2535:
 1275              	.LBB2530:
 1276              	.LBB2525:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 1277              		.loc 2 378 4 view .LVU238
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 1278              		.loc 2 378 46 view .LVU239
 1279 009e 14D0     		beq	.L30
 1280              	.LVL52:
 1281              	.L31:
 1282              	.LBB2511:
 1283              	.LBI2511:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 64


 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return reference(_M_p, 1UL << _M_offset); }
 1284              		.loc 1 251 5 view .LVU240
 1285              	.LBB2512:
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 1286              		.loc 1 252 7 view .LVU241
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 1287              		.loc 1 252 46 is_stmt 0 view .LVU242
 1288 00a0 0123     		movs	r3, #1
 1289              	.LBE2512:
 1290              	.LBE2511:
 1291              	.LBB2515:
 1292              	.LBB2487:
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	*_M_p |= _M_mask;
 1293              		.loc 1 92 7 view .LVU243
 1294 00a2 11F801AF 		ldrb	r10, [r1, #1]!	@ zero_extendqisi2
 1295              	.LVL53:
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       else
 1296              		.loc 1 93 8 view .LVU244
 1297 00a6 DEF80060 		ldr	r6, [lr]
 1298              	.LBE2487:
 1299              	.LBE2515:
 1300              	.LBB2516:
 1301              	.LBB2514:
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 1302              		.loc 1 252 46 view .LVU245
 1303 00aa 8340     		lsls	r3, r3, r0
 1304              	.LVL54:
 1305              	.LBB2513:
 1306              	.LBI2513:
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_mask(__y) { }
 1307              		.loc 1 77 5 is_stmt 1 view .LVU246
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_mask(__y) { }
 1308              		.loc 1 77 5 is_stmt 0 view .LVU247
 1309              	.LBE2513:
 1310              	.LBE2514:
 1311              	.LBE2516:
 1312              	.LBB2517:
 1313              	.LBI2482:
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 1314              		.loc 1 90 5 is_stmt 1 view .LVU248
 1315              	.LBB2488:
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	*_M_p |= _M_mask;
 1316              		.loc 1 92 7 view .LVU249
 1317 00ac BAF1000F 		cmp	r10, #0
 1318 00b0 EDD1     		bne	.L80
 1319              	.LBB2484:
 1320              	.LBI2484:
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 1321              		.loc 1 90 5 view .LVU250
 1322              	.LVL55:
 1323              	.LBB2485:
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 1324              		.loc 1 95 2 view .LVU251
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 1325              		.loc 1 95 8 is_stmt 0 view .LVU252
 1326 00b2 26EA0303 		bic	r3, r6, r3
 1327              	.LBE2485:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 65


 1328              	.LBE2484:
 1329              	.LBE2488:
 1330              	.LBE2517:
 1331              	.LBB2518:
 1332              	.LBB2504:
 1333              	.LBB2499:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 1334              		.loc 1 154 7 view .LVU253
 1335 00b6 1F28     		cmp	r0, #31
 1336 00b8 CEF80030 		str	r3, [lr]
 1337              	.LVL56:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 1338              		.loc 1 154 7 view .LVU254
 1339              	.LBE2499:
 1340              	.LBE2504:
 1341              	.LBE2518:
 1342              	.LBB2519:
 1343              	.LBB2489:
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 1344              		.loc 1 96 7 is_stmt 1 view .LVU255
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 1345              		.loc 1 96 7 is_stmt 0 view .LVU256
 1346              	.LBE2489:
 1347              	.LBE2519:
 1348              	.LBB2520:
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 1349              		.loc 1 255 5 is_stmt 1 view .LVU257
 1350              	.LBE2520:
 1351              	.LBE2525:
 1352              	.LBE2530:
 1353              	.LBE2535:
 1354              	.LBE2540:
 1355              	.LBE2545:
 1356              	.LBE2550:
 1357              	.LBE2555:
 1358              	.LBE2564:
 1359              	.LBE3298:
 1360              	.LBE3346:
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 1361              		.loc 1 257 7 view .LVU258
 1362              	.LBB3347:
 1363              	.LBB3299:
 1364              	.LBB2565:
 1365              	.LBB2556:
 1366              	.LBB2551:
 1367              	.LBB2546:
 1368              	.LBB2541:
 1369              	.LBB2536:
 1370              	.LBB2531:
 1371              	.LBB2526:
 1372              	.LBB2521:
 1373              	.LBB2505:
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 1374              		.loc 1 152 5 view .LVU259
 1375              	.LBB2500:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 1376              		.loc 1 154 7 view .LVU260
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 66


 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 1377              		.loc 1 154 7 is_stmt 0 view .LVU261
 1378 00bc ECD1     		bne	.L81
 1379              	.LVL57:
 1380              	.L28:
 1381              	.LBB2493:
 1382              	.LBI2493:
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 1383              		.loc 1 152 5 is_stmt 1 view .LVU262
 1384              	.LBB2494:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  ++_M_p;
 1385              		.loc 1 156 4 view .LVU263
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 1386              		.loc 1 157 4 view .LVU264
 1387              	.LBE2494:
 1388              	.LBE2493:
 1389              	.LBE2500:
 1390              	.LBE2505:
 1391              	.LBE2521:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 1392              		.loc 2 378 46 is_stmt 0 view .LVU265
 1393 00be 4945     		cmp	r1, r9
 1394              	.LBB2522:
 1395              	.LBB2506:
 1396              	.LBB2501:
 1397              	.LBB2496:
 1398              	.LBB2495:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 1399              		.loc 1 157 4 view .LVU266
 1400 00c0 0EF1040E 		add	lr, lr, #4
 1401              	.LVL58:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  ++_M_p;
 1402              		.loc 1 156 14 view .LVU267
 1403 00c4 4FF00000 		mov	r0, #0
 1404              	.LVL59:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  ++_M_p;
 1405              		.loc 1 156 14 view .LVU268
 1406              	.LBE2495:
 1407              	.LBE2496:
 1408              	.LBE2501:
 1409              	.LBE2506:
 1410              	.LBE2522:
 1411              	.LBE2526:
 1412              	.LBE2531:
 1413              	.LBE2536:
 1414              	.LBE2541:
 1415              	.LBE2546:
 1416              	.LBE2551:
 1417              	.LBE2556:
 1418              	.LBE2565:
 1419              	.LBE3299:
 1420              	.LBE3347:
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 1421              		.loc 1 258 7 is_stmt 1 view .LVU269
 1422              	.LBB3348:
 1423              	.LBB3300:
 1424              	.LBB2566:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 67


 1425              	.LBB2557:
 1426              	.LBB2552:
 1427              	.LBB2547:
 1428              	.LBB2542:
 1429              	.LBB2537:
 1430              	.LBB2532:
 1431              	.LBB2527:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 1432              		.loc 2 378 4 view .LVU270
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 1433              		.loc 2 378 46 view .LVU271
 1434 00c8 EAD1     		bne	.L31
 1435              	.LVL60:
 1436              	.L30:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 1437              		.loc 2 378 46 is_stmt 0 view .LVU272
 1438              	.LBE2527:
 1439              	.LBE2532:
 1440              	.LBE2537:
 1441              	.LBE2542:
 1442              	.LBE2547:
 1443              	.LBE2552:
 1444              	.LBE2557:
 1445              	.LBE2566:
 1446              	.LBB2567:
 1447              	.LBI2567:
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x._M_p, __x._M_offset) { }
 1448              		.loc 1 339 5 is_stmt 1 view .LVU273
 1449              	.LBB2568:
 1450              	.LBI2568:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1451              		.loc 1 148 5 view .LVU274
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1452              		.loc 1 148 5 is_stmt 0 view .LVU275
 1453              	.LBE2568:
 1454              	.LBE2567:
 1455              	.LBB2569:
 1456              	.LBI2569:
1024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	       _InputIterator __first, _InputIterator __last)
 1457              		.loc 1 1024 2 is_stmt 1 view .LVU276
 1458              	.LBB2570:
 1459              	.LBB2571:
 1460              	.LBI2571:
 867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_iterator(this->_M_impl._M_start._M_p, 0); }
 1461              		.loc 1 867 7 view .LVU277
 1462              	.LBB2572:
 1463              	.LBI2572:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 1464              		.loc 1 336 5 view .LVU278
 1465              	.LBB2573:
 1466              	.LBI2573:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1467              		.loc 1 148 5 view .LVU279
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1468              		.loc 1 148 5 is_stmt 0 view .LVU280
 1469              	.LBE2573:
 1470              	.LBE2572:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 68


 1471              	.LBE2571:
 1472              	.LBE2570:
 1473              	.LBE2569:
 1474              	.LBE3300:
 1475              	.LBE3348:
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 1476              		.loc 1 226 7 is_stmt 1 view .LVU281
 1477              	.LBB3349:
 1478              	.LBB3301:
 1479              	.LBB3265:
 1480              	.LBB3234:
 1481              	.LBB2574:
 1482              	.LBI2574:
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return _Bit_iterator(_M_p, _M_offset); }
 1483              		.loc 1 343 5 view .LVU282
 1484              	.LBE2574:
 1485              	.LBE3234:
 1486              	.LBE3265:
 1487              	.LBE3301:
 1488              	.LBE3349:
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 1489              		.loc 1 344 7 view .LVU283
 1490              	.LBB3350:
 1491              	.LBB3302:
 1492              	.LBB3266:
 1493              	.LBB3235:
 1494              	.LBB2577:
 1495              	.LBB2575:
 1496              	.LBI2575:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 1497              		.loc 1 243 5 view .LVU284
 1498              	.LBB2576:
 1499              	.LBI2576:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1500              		.loc 1 148 5 view .LVU285
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1501              		.loc 1 148 5 is_stmt 0 view .LVU286
 1502              	.LBE2576:
 1503              	.LBE2575:
 1504              	.LBE2577:
 1505              	.LBB2578:
 1506              	.LBI2578:
1288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			   _InputIterator __first, _InputIterator __last,
 1507              		.loc 1 1288 2 is_stmt 1 view .LVU287
 1508              	.LBB2579:
 1509              	.LBI2579:
 1510              		.file 4 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\vector.tcc"
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // Vector implementation (out of line) -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 69


  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Copyright (c) 1996
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * representations about the suitability of this  software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** /** @file bits/vector.tcc
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *  Do not attempt to use it directly. @headername{vector}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #ifndef _VECTOR_TCC
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #define _VECTOR_TCC 1
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** namespace std _GLIBCXX_VISIBILITY(default)
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** {
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     void
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     reserve(size_type __n)
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 70


  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (__n > this->max_size())
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	__throw_length_error(__N("vector::reserve"));
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (this->capacity() < __n)
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  const size_type __old_size = size();
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  pointer __tmp;
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __tmp = this->_M_allocate(__n);
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			  __tmp, _M_get_Tp_allocator());
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __tmp = _M_allocate_and_copy(__n,
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(this->_M_impl._M_start),
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(this->_M_impl._M_finish));
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    _M_get_Tp_allocator());
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _GLIBCXX_ASAN_ANNOTATE_REINIT;
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_deallocate(this->_M_impl._M_start,
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			this->_M_impl._M_end_of_storage
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			- this->_M_impl._M_start);
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_start = __tmp;
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_finish = __tmp + __old_size;
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename... _Args>
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       typename vector<_Tp, _Alloc>::reference
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       {
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				     std::forward<_Args>(__args)...);
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    ++this->_M_impl._M_finish;
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	return back();
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 71


 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       }
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     typename vector<_Tp, _Alloc>::iterator
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     insert(const_iterator __position, const value_type& __x)
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     insert(iterator __position, const value_type& __x)
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       const size_type __n = __position - begin();
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (__position == end())
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				     __x);
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    ++this->_M_impl._M_finish;
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    const auto __pos = begin() + (__position - cbegin());
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    // __x could be an existing element of this vector, so make a
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    // copy of it before _M_insert_aux moves elements around.
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _Temporary_value __x_copy(this, __x);
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _M_insert_aux(__pos, std::move(__x_copy._M_val()));
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _M_insert_aux(__position, __x);
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       else
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	_M_realloc_insert(begin() + (__position - cbegin()), __x);
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	_M_realloc_insert(__position, __x);
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       return iterator(this->_M_impl._M_start + __n);
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     typename vector<_Tp, _Alloc>::iterator
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_erase(iterator __position)
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (__position + 1 != end())
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	_GLIBCXX_MOVE3(__position + 1, end(), __position);
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       --this->_M_impl._M_finish;
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _GLIBCXX_ASAN_ANNOTATE_SHRINK(1);
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       return __position;
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 72


 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     typename vector<_Tp, _Alloc>::iterator
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_erase(iterator __first, iterator __last)
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (__first != __last)
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (__last != end())
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_MOVE3(__last, end(), __first);
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_erase_at_end(__first.base() + (end() - __last));
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       return __first;
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>&
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     operator=(const vector<_Tp, _Alloc>& __x)
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (&__x != this)
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _GLIBCXX_ASAN_ANNOTATE_REINIT;
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (_Alloc_traits::_S_propagate_on_copy_assign())
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      if (!_Alloc_traits::_S_always_equal()
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	          && _M_get_Tp_allocator() != __x._M_get_Tp_allocator())
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	        {
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  // replacement allocator cannot free existing storage
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  this->clear();
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  _M_deallocate(this->_M_impl._M_start,
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				this->_M_impl._M_end_of_storage
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				- this->_M_impl._M_start);
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  this->_M_impl._M_start = nullptr;
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  this->_M_impl._M_finish = nullptr;
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  this->_M_impl._M_end_of_storage = nullptr;
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		}
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::__alloc_on_copy(_M_get_Tp_allocator(),
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   __x._M_get_Tp_allocator());
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  const size_type __xlen = __x.size();
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (__xlen > capacity())
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      pointer __tmp = _M_allocate_and_copy(__xlen, __x.begin(),
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						   __x.end());
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    _M_get_Tp_allocator());
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _M_deallocate(this->_M_impl._M_start,
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    this->_M_impl._M_end_of_storage
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    - this->_M_impl._M_start);
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      this->_M_impl._M_start = __tmp;
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __xlen;
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else if (size() >= __xlen)
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::_Destroy(std::copy(__x.begin(), __x.end(), begin()),
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 73


 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    end(), _M_get_Tp_allocator());
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::copy(__x._M_impl._M_start, __x._M_impl._M_start + size(),
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			this->_M_impl._M_start);
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::__uninitialized_copy_a(__x._M_impl._M_start + size(),
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  __x._M_impl._M_finish,
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  this->_M_impl._M_finish,
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  _M_get_Tp_allocator());
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_finish = this->_M_impl._M_start + __xlen;
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       return *this;
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     void
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_fill_assign(size_t __n, const value_type& __val)
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (__n > capacity())
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  vector __tmp(__n, __val, _M_get_Tp_allocator());
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  __tmp._M_impl._M_swap_data(this->_M_impl);
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       else if (__n > size())
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  std::fill(begin(), end(), __val);
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  const size_type __add = __n - size();
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _GLIBCXX_ASAN_ANNOTATE_GROW(__add);
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_finish =
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    std::__uninitialized_fill_n_a(this->_M_impl._M_finish,
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  __add, __val, _M_get_Tp_allocator());
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _GLIBCXX_ASAN_ANNOTATE_GREW(__add);
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       else
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****         _M_erase_at_end(std::fill_n(this->_M_impl._M_start, __n, __val));
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename _InputIterator>
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_assign_aux(_InputIterator __first, _InputIterator __last,
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::input_iterator_tag)
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       {
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	pointer __cur(this->_M_impl._M_start);
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	for (; __first != __last && __cur != this->_M_impl._M_finish;
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	     ++__cur, (void)++__first)
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  *__cur = *__first;
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (__first == __last)
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_erase_at_end(__cur);
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_range_insert(end(), __first, __last,
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			  std::__iterator_category(__first));
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 74


 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename _ForwardIterator>
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::forward_iterator_tag)
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       {
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	const size_type __len = std::distance(__first, __last);
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (__len > capacity())
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _S_check_init_len(__len, _M_get_Tp_allocator());
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    pointer __tmp(_M_allocate_and_copy(__len, __first, __last));
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			  _M_get_Tp_allocator());
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_REINIT;
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _M_deallocate(this->_M_impl._M_start,
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			  this->_M_impl._M_end_of_storage
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			  - this->_M_impl._M_start);
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    this->_M_impl._M_start = __tmp;
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    this->_M_impl._M_finish = this->_M_impl._M_start + __len;
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    this->_M_impl._M_end_of_storage = this->_M_impl._M_finish;
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else if (size() >= __len)
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_erase_at_end(std::copy(__first, __last, this->_M_impl._M_start));
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _ForwardIterator __mid = __first;
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    std::advance(__mid, size());
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    std::copy(__first, __mid, this->_M_impl._M_start);
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    const size_type __attribute__((__unused__)) __n = __len - size();
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    this->_M_impl._M_finish =
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::__uninitialized_copy_a(__mid, __last,
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  this->_M_impl._M_finish,
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  _M_get_Tp_allocator());
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(__n);
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       }
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     auto
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_insert_rval(const_iterator __position, value_type&& __v) -> iterator
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       const auto __n = __position - cbegin();
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (__position == cend())
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				     std::move(__v));
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    ++this->_M_impl._M_finish;
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 75


 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_insert_aux(begin() + __n, std::move(__v));
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       else
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	_M_realloc_insert(begin() + __n, std::move(__v));
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       return iterator(this->_M_impl._M_start + __n);
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename... _Args>
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       auto
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_emplace_aux(const_iterator __position, _Args&&... __args)
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       -> iterator
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       {
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	const auto __n = __position - cbegin();
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (__position == cend())
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				       std::forward<_Args>(__args)...);
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      ++this->_M_impl._M_finish;
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      // We need to construct a temporary because something in __args...
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      // could alias one of the elements of the container and so we
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      // need to use it before _M_insert_aux moves elements around.
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _Temporary_value __tmp(this, std::forward<_Args>(__args)...);
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _M_insert_aux(begin() + __n, std::move(__tmp._M_val()));
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_realloc_insert(begin() + __n, std::forward<_Args>(__args)...);
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	return iterator(this->_M_impl._M_start + __n);
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       }
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename _Arg>
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_insert_aux(iterator __position, _Arg&& __arg)
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     void
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_insert_aux(iterator __position, const _Tp& __x)
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			       _GLIBCXX_MOVE(*(this->_M_impl._M_finish - 1)));
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       ++this->_M_impl._M_finish;
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus < 201103L
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 76


 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _Tp __x_copy = __x;
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _GLIBCXX_MOVE_BACKWARD3(__position.base(),
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			      this->_M_impl._M_finish - 2,
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			      this->_M_impl._M_finish - 1);
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus < 201103L
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       *__position = __x_copy;
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       *__position = std::forward<_Arg>(__arg);
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename... _Args>
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_realloc_insert(iterator __position, _Args&&... __args)
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     void
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_realloc_insert(iterator __position, const _Tp& __x)
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       const size_type __len =
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	_M_check_len(size_type(1), "vector::_M_realloc_insert");
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       pointer __old_start = this->_M_impl._M_start;
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       pointer __old_finish = this->_M_impl._M_finish;
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       const size_type __elems_before = __position - begin();
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       pointer __new_start(this->_M_allocate(__len));
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       pointer __new_finish(__new_start);
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       __try
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  // The order of the three operations is dictated by the C++11
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  // case, where the moves could alter a new element belonging
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  // to the existing vector.  This is an issue only for callers
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  // taking the element by lvalue ref (see last bullet of C++11
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  // [res.on.arguments]).
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _Alloc_traits::construct(this->_M_impl,
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   __new_start + __elems_before,
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   std::forward<_Args>(__args)...);
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   __x);
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  __new_finish = pointer();
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __new_finish = _S_relocate(__old_start, __position.base(),
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					 __new_start, _M_get_Tp_allocator());
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      ++__new_finish;
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __new_finish = _S_relocate(__position.base(), __old_finish,
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 77


 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					 __new_finish, _M_get_Tp_allocator());
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __new_finish
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		= std::__uninitialized_move_if_noexcept_a
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		(__old_start, __position.base(),
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		 __new_start, _M_get_Tp_allocator());
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      ++__new_finish;
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __new_finish
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		= std::__uninitialized_move_if_noexcept_a
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		(__position.base(), __old_finish,
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		 __new_finish, _M_get_Tp_allocator());
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       __catch(...)
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (!__new_finish)
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _Alloc_traits::destroy(this->_M_impl,
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   __new_start + __elems_before);
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    std::_Destroy(__new_start, __new_finish, _M_get_Tp_allocator());
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_deallocate(__new_start, __len);
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  __throw_exception_again;
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if _GLIBCXX17_CONSTEXPR (!_S_use_relocate())
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	std::_Destroy(__old_start, __old_finish, _M_get_Tp_allocator());
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _GLIBCXX_ASAN_ANNOTATE_REINIT;
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_deallocate(__old_start,
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    this->_M_impl._M_end_of_storage - __old_start);
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_start = __new_start;
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_finish = __new_finish;
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_end_of_storage = __new_start + __len;
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     void
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_fill_insert(iterator __position, size_type __n, const value_type& __x)
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (__n != 0)
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (size_type(this->_M_impl._M_end_of_storage
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			- this->_M_impl._M_finish) >= __n)
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus < 201103L
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      value_type __x_copy = __x;
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _Temporary_value __tmp(this, __x);
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      value_type& __x_copy = __tmp._M_val();
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      const size_type __elems_after = end() - __position;
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 78


 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      pointer __old_finish(this->_M_impl._M_finish);
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      if (__elems_after > __n)
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		{
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  std::__uninitialized_move_a(this->_M_impl._M_finish - __n,
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					      this->_M_impl._M_finish,
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					      this->_M_impl._M_finish,
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					      _M_get_Tp_allocator());
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  this->_M_impl._M_finish += __n;
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  _GLIBCXX_ASAN_ANNOTATE_GREW(__n);
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  _GLIBCXX_MOVE_BACKWARD3(__position.base(),
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  __old_finish - __n, __old_finish);
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  std::fill(__position.base(), __position.base() + __n,
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    __x_copy);
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		}
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      else
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		{
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  this->_M_impl._M_finish =
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::__uninitialized_fill_n_a(this->_M_impl._M_finish,
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						  __n - __elems_after,
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						  __x_copy,
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						  _M_get_Tp_allocator());
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  _GLIBCXX_ASAN_ANNOTATE_GREW(__n - __elems_after);
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  std::__uninitialized_move_a(__position.base(), __old_finish,
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					      this->_M_impl._M_finish,
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					      _M_get_Tp_allocator());
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  this->_M_impl._M_finish += __elems_after;
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  _GLIBCXX_ASAN_ANNOTATE_GREW(__elems_after);
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  std::fill(__position.base(), __old_finish, __x_copy);
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		}
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      const size_type __len =
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		_M_check_len(__n, "vector::_M_fill_insert");
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      const size_type __elems_before = __position - begin();
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      pointer __new_start(this->_M_allocate(__len));
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      pointer __new_finish(__new_start);
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __try
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		{
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  // See _M_realloc_insert above.
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  std::__uninitialized_fill_n_a(__new_start + __elems_before,
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						__n, __x,
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						_M_get_Tp_allocator());
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  __new_finish = pointer();
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  __new_finish
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    = std::__uninitialized_move_if_noexcept_a
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    (this->_M_impl._M_start, __position.base(),
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		     __new_start, _M_get_Tp_allocator());
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  __new_finish += __n;
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  __new_finish
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    = std::__uninitialized_move_if_noexcept_a
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    (__position.base(), this->_M_impl._M_finish,
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 79


 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		     __new_finish, _M_get_Tp_allocator());
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		}
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __catch(...)
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		{
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  if (!__new_finish)
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::_Destroy(__new_start + __elems_before,
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				  __new_start + __elems_before + __n,
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				  _M_get_Tp_allocator());
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  else
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::_Destroy(__new_start, __new_finish,
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				  _M_get_Tp_allocator());
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  _M_deallocate(__new_start, __len);
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  __throw_exception_again;
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		}
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    _M_get_Tp_allocator());
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _GLIBCXX_ASAN_ANNOTATE_REINIT;
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _M_deallocate(this->_M_impl._M_start,
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    this->_M_impl._M_end_of_storage
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    - this->_M_impl._M_start);
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      this->_M_impl._M_start = __new_start;
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      this->_M_impl._M_finish = __new_finish;
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      this->_M_impl._M_end_of_storage = __new_start + __len;
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     void
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_default_append(size_type __n)
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (__n != 0)
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  const size_type __size = size();
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					 - this->_M_impl._M_finish);
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (__size > max_size() || __navail > max_size() - __size)
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    __builtin_unreachable();
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (__navail >= __n)
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      this->_M_impl._M_finish =
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						 __n, _M_get_Tp_allocator());
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _GLIBCXX_ASAN_ANNOTATE_GREW(__n);
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      const size_type __len =
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		_M_check_len(__n, "vector::_M_default_append");
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      pointer __new_start(this->_M_allocate(__len));
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		{
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 80


 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  __try
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    {
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		      std::__uninitialized_default_n_a(__new_start + __size,
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			      __n, _M_get_Tp_allocator());
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    }
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  __catch(...)
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    {
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		      _M_deallocate(__new_start, __len);
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		      __throw_exception_again;
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    }
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			      __new_start, _M_get_Tp_allocator());
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		}
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      else
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		{
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  pointer __destroy_from = pointer();
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  __try
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    {
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		      std::__uninitialized_default_n_a(__new_start + __size,
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			      __n, _M_get_Tp_allocator());
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		      __destroy_from = __new_start + __size;
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		      std::__uninitialized_move_if_noexcept_a(
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			      this->_M_impl._M_start, this->_M_impl._M_finish,
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			      __new_start, _M_get_Tp_allocator());
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    }
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  __catch(...)
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    {
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		      if (__destroy_from)
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			std::_Destroy(__destroy_from, __destroy_from + __n,
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				      _M_get_Tp_allocator());
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		      _M_deallocate(__new_start, __len);
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		      __throw_exception_again;
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    }
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				_M_get_Tp_allocator());
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		}
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _GLIBCXX_ASAN_ANNOTATE_REINIT;
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _M_deallocate(this->_M_impl._M_start,
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    this->_M_impl._M_end_of_storage
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    - this->_M_impl._M_start);
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      this->_M_impl._M_start = __new_start;
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      this->_M_impl._M_finish = __new_start + __size + __n;
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      this->_M_impl._M_end_of_storage = __new_start + __len;
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     bool
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_shrink_to_fit()
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (capacity() == size())
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	return false;
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _GLIBCXX_ASAN_ANNOTATE_REINIT;
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       return std::__shrink_to_fit_aux<vector>::_S_do_it(*this);
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 81


 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename _InputIterator>
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_range_insert(iterator __pos, _InputIterator __first,
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		      _InputIterator __last, std::input_iterator_tag)
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       {
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (__pos == end())
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    for (; __first != __last; ++__first)
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      insert(end(), *__first);
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else if (__first != __last)
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    vector __tmp(__first, __last, _M_get_Tp_allocator());
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    insert(__pos,
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		   _GLIBCXX_MAKE_MOVE_ITERATOR(__tmp.begin()),
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		   _GLIBCXX_MAKE_MOVE_ITERATOR(__tmp.end()));
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       }
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename _ForwardIterator>
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_range_insert(iterator __position, _ForwardIterator __first,
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		      _ForwardIterator __last, std::forward_iterator_tag)
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       {
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (__first != __last)
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    const size_type __n = std::distance(__first, __last);
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    if (size_type(this->_M_impl._M_end_of_storage
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			  - this->_M_impl._M_finish) >= __n)
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      {
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		const size_type __elems_after = end() - __position;
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		pointer __old_finish(this->_M_impl._M_finish);
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		if (__elems_after > __n)
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  {
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
 736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::__uninitialized_move_a(this->_M_impl._M_finish - __n,
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						this->_M_impl._M_finish,
 738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						this->_M_impl._M_finish,
 739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						_M_get_Tp_allocator());
 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    this->_M_impl._M_finish += __n;
 741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    _GLIBCXX_ASAN_ANNOTATE_GREW(__n);
 742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    _GLIBCXX_MOVE_BACKWARD3(__position.base(),
 743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					    __old_finish - __n, __old_finish);
 744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::copy(__first, __last, __position);
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  }
 746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		else
 747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  {
 748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    _ForwardIterator __mid = __first;
 749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::advance(__mid, __elems_after);
 750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
 751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::__uninitialized_copy_a(__mid, __last,
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 82


 752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						this->_M_impl._M_finish,
 753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						_M_get_Tp_allocator());
 754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    this->_M_impl._M_finish += __n - __elems_after;
 755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    _GLIBCXX_ASAN_ANNOTATE_GREW(__n - __elems_after);
 756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::__uninitialized_move_a(__position.base(),
 757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						__old_finish,
 758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						this->_M_impl._M_finish,
 759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						_M_get_Tp_allocator());
 760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    this->_M_impl._M_finish += __elems_after;
 761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    _GLIBCXX_ASAN_ANNOTATE_GREW(__elems_after);
 762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::copy(__first, __mid, __position);
 763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  }
 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      }
 765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    else
 766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      {
 767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		const size_type __len =
 768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  _M_check_len(__n, "vector::_M_range_insert");
 769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		pointer __new_start(this->_M_allocate(__len));
 770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		pointer __new_finish(__new_start);
 771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		__try
 772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  {
 773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    __new_finish
 774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		      = std::__uninitialized_move_if_noexcept_a
 775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		      (this->_M_impl._M_start, __position.base(),
 776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		       __new_start, _M_get_Tp_allocator());
 777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    __new_finish
 778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		      = std::__uninitialized_copy_a(__first, __last,
 779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						    __new_finish,
 780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						    _M_get_Tp_allocator());
 781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    __new_finish
 782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		      = std::__uninitialized_move_if_noexcept_a
 783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		      (__position.base(), this->_M_impl._M_finish,
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		       __new_finish, _M_get_Tp_allocator());
 785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  }
 786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		__catch(...)
 787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  {
 788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::_Destroy(__new_start, __new_finish,
 789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				  _M_get_Tp_allocator());
 790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    _M_deallocate(__new_start, __len);
 791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    __throw_exception_again;
 792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  }
 793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			      _M_get_Tp_allocator());
 795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		_GLIBCXX_ASAN_ANNOTATE_REINIT;
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		_M_deallocate(this->_M_impl._M_start,
 797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			      this->_M_impl._M_end_of_storage
 798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			      - this->_M_impl._M_start);
 799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		this->_M_impl._M_start = __new_start;
 800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		this->_M_impl._M_finish = __new_finish;
 801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		this->_M_impl._M_end_of_storage = __new_start + __len;
 802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      }
 803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       }
 805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   // vector<bool>
 808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Alloc>
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 83


 809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     void
 810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<bool, _Alloc>::
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_reallocate(size_type __n)
 812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _Bit_pointer __q = this->_M_allocate(__n);
 814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       iterator __start(std::__addressof(*__q), 0);
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       iterator __finish(_M_copy_aligned(begin(), end(), __start));
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_deallocate();
 817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_start = __start;
 818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_finish = __finish;
 819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_end_of_storage = __q + _S_nword(__n);
 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Alloc>
 823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     void
 824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<bool, _Alloc>::
 825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_fill_insert(iterator __position, size_type __n, bool __x)
 826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (__n == 0)
 828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	return;
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (capacity() - size() >= __n)
 830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  std::copy_backward(__position, end(),
 832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			     this->_M_impl._M_finish + difference_type(__n));
 833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  std::fill(__position, __position + difference_type(__n), __x);
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_finish += difference_type(__n);
 835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       else
 837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  const size_type __len = 
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _M_check_len(__n, "vector<bool>::_M_fill_insert");
 840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _Bit_pointer __q = this->_M_allocate(__len);
 841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  iterator __start(std::__addressof(*__q), 0);
 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  iterator __i = _M_copy_aligned(begin(), __position, __start);
 843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  std::fill(__i, __i + difference_type(__n), __x);
 844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  iterator __finish = std::copy(__position, end(),
 845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					__i + difference_type(__n));
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_deallocate();
 847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_end_of_storage = __q + _S_nword(__len);
 848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_start = __start;
 849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_finish = __finish;
 850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Alloc>
 854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename _ForwardIterator>
 855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<bool, _Alloc>::
 1511              		.loc 4 856 7 view .LVU288
 1512              	.LBB2580:
 857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_insert_range(iterator __position, _ForwardIterator __first, 
 858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		      _ForwardIterator __last, std::forward_iterator_tag)
 859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       {
 860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (__first != __last)
 1513              		.loc 4 860 2 is_stmt 0 view .LVU289
 1514 00ca 039B     		ldr	r3, [sp, #12]
 1515 00cc 9A42     		cmp	r2, r3
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 84


 1516 00ce CFD0     		beq	.L14
 1517              	.LVL61:
 1518              	.LBB2581:
 1519              	.LBB2582:
 1520              	.LBI2582:
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     {
 1521              		.loc 3 138 5 is_stmt 1 view .LVU290
 1522              	.LBB2583:
 1523              	.LBI2583:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****                random_access_iterator_tag)
 1524              		.loc 3 98 5 view .LVU291
 1525              	.LBB2584:
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     }
 1526              		.loc 3 104 23 is_stmt 0 view .LVU292
 1527 00d0 039B     		ldr	r3, [sp, #12]
 1528 00d2 A2EB0309 		sub	r9, r2, r3
 1529              	.LVL62:
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     }
 1530              		.loc 3 104 23 view .LVU293
 1531              	.LBE2584:
 1532              	.LBE2583:
 1533              	.LBE2582:
 1534              	.LBB2585:
 1535              	.LBB2586:
 1536              	.LBI2586:
 900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return size_type(const_iterator(this->_M_impl._M_end_addr(), 0)
 1537              		.loc 1 900 7 is_stmt 1 view .LVU294
 1538              	.LBB2587:
 1539              	.LBI2587:
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 1540              		.loc 1 513 2 view .LVU295
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 1541              		.loc 1 513 2 is_stmt 0 view .LVU296
 1542              	.LBE2587:
 1543              	.LBB2588:
 1544              	.LBI2588:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 1545              		.loc 1 336 5 is_stmt 1 view .LVU297
 1546              	.LBB2589:
 1547              	.LBI2589:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1548              		.loc 1 148 5 view .LVU298
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1549              		.loc 1 148 5 is_stmt 0 view .LVU299
 1550              	.LBE2589:
 1551              	.LBE2588:
 1552              	.LBB2590:
 1553              	.LBI2590:
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_iterator(this->_M_impl._M_start._M_p, 0); }
 1554              		.loc 1 838 7 is_stmt 1 view .LVU300
 1555              	.LBB2591:
 1556              	.LBI2591:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 1557              		.loc 1 336 5 view .LVU301
 1558              	.LBB2592:
 1559              	.LBI2592:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 85


 1560              		.loc 1 148 5 view .LVU302
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1561              		.loc 1 148 5 is_stmt 0 view .LVU303
 1562              	.LBE2592:
 1563              	.LBE2591:
 1564              	.LBE2590:
 1565              	.LBB2593:
 1566              	.LBI2593:
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 1567              		.loc 1 224 5 is_stmt 1 view .LVU304
 1568              	.LBB2594:
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 1569              		.loc 1 226 7 view .LVU305
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 1570              		.loc 1 226 7 is_stmt 0 view .LVU306
 1571              	.LBE2594:
 1572              	.LBE2593:
 1573              	.LBE2586:
 1574              	.LBB2597:
 1575              	.LBI2597:
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return size_type(end() - begin()); }
 1576              		.loc 1 884 7 is_stmt 1 view .LVU307
 1577              	.LBB2598:
 1578              	.LBI2598:
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl._M_finish; }
 1579              		.loc 1 846 7 view .LVU308
 1580              	.LBB2599:
 1581              	.LBI2599:
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x._M_p, __x._M_offset) { }
 1582              		.loc 1 339 5 view .LVU309
 1583              	.LBB2600:
 1584              	.LBI2600:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1585              		.loc 1 148 5 view .LVU310
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1586              		.loc 1 148 5 is_stmt 0 view .LVU311
 1587              	.LBE2600:
 1588              	.LBE2599:
 1589              	.LBE2598:
 1590              	.LBB2601:
 1591              	.LBI2601:
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_iterator(this->_M_impl._M_start._M_p, 0); }
 1592              		.loc 1 838 7 is_stmt 1 view .LVU312
 1593              	.LBB2602:
 1594              	.LBI2602:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 1595              		.loc 1 336 5 view .LVU313
 1596              	.LBB2603:
 1597              	.LBI2603:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1598              		.loc 1 148 5 view .LVU314
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1599              		.loc 1 148 5 is_stmt 0 view .LVU315
 1600              	.LBE2603:
 1601              	.LBE2602:
 1602              	.LBE2601:
 1603              	.LBE2597:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 86


 1604              	.LBE2585:
 1605              	.LBE2581:
 1606              	.LBE2580:
 1607              	.LBE2579:
 1608              	.LBE2578:
 1609              	.LBE3235:
 1610              	.LBE3266:
 1611              	.LBE3302:
 1612              	.LBE3350:
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 1613              		.loc 1 226 7 is_stmt 1 view .LVU316
 1614              	.LBB3351:
 1615              	.LBB3303:
 1616              	.LBB3267:
 1617              	.LBB3236:
 1618              	.LBB3199:
 1619              	.LBB3171:
 1620              	.LBB3143:
 1621              	.LBB3115:
 1622              	.LBB3087:
 1623              	.LBB2604:
 1624              	.LBB2596:
 1625              	.LBB2595:
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 1626              		.loc 1 226 44 is_stmt 0 view .LVU317
 1627 00d6 2369     		ldr	r3, [r4, #16]
 1628 00d8 A3EB0C03 		sub	r3, r3, ip
 1629              	.LBE2595:
 1630              	.LBE2596:
 1631              	.LBE2604:
 861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    size_type __n = std::distance(__first, __last);
 863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    if (capacity() - size() >= __n)
 1632              		.loc 4 863 21 view .LVU318
 1633 00dc C8EBC303 		rsb	r3, r8, r3, lsl #3
 1634              		.loc 4 863 6 view .LVU319
 1635 00e0 9945     		cmp	r9, r3
 1636 00e2 40F29880 		bls	.L82
 1637              	.LVL63:
 1638              	.LBB2605:
 1639              	.LBB2606:
 1640              	.LBI2606:
1318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 1641              		.loc 1 1318 7 is_stmt 1 view .LVU320
 1642              	.LBB2607:
 1643              	.LBB2608:
 1644              	.LBI2608:
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return size_type(end() - begin()); }
 1645              		.loc 1 884 7 view .LVU321
 1646              	.LBB2609:
 1647              	.LBI2609:
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl._M_finish; }
 1648              		.loc 1 846 7 view .LVU322
 1649              	.LBB2610:
 1650              	.LBI2610:
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x._M_p, __x._M_offset) { }
 1651              		.loc 1 339 5 view .LVU323
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 87


 1652              	.LBB2611:
 1653              	.LBI2611:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1654              		.loc 1 148 5 view .LVU324
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1655              		.loc 1 148 5 is_stmt 0 view .LVU325
 1656              	.LBE2611:
 1657              	.LBE2610:
 1658              	.LBE2609:
 1659              	.LBB2612:
 1660              	.LBI2612:
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_iterator(this->_M_impl._M_start._M_p, 0); }
 1661              		.loc 1 838 7 is_stmt 1 view .LVU326
 1662              	.LBB2613:
 1663              	.LBI2613:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 1664              		.loc 1 336 5 view .LVU327
 1665              	.LBB2614:
 1666              	.LBI2614:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1667              		.loc 1 148 5 view .LVU328
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1668              		.loc 1 148 5 is_stmt 0 view .LVU329
 1669              	.LBE2614:
 1670              	.LBE2613:
 1671              	.LBE2612:
 1672              	.LBE2608:
 1673              	.LBE2607:
 1674              	.LBE2606:
 1675              	.LBE2605:
 1676              	.LBE3087:
 1677              	.LBE3115:
 1678              	.LBE3143:
 1679              	.LBE3171:
 1680              	.LBE3199:
 1681              	.LBE3236:
 1682              	.LBE3267:
 1683              	.LBE3303:
 1684              	.LBE3351:
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 1685              		.loc 1 226 7 is_stmt 1 view .LVU330
 1686              	.LBB3352:
 1687              	.LBB3304:
 1688              	.LBB3268:
 1689              	.LBB3237:
 1690              	.LBB3200:
 1691              	.LBB3172:
 1692              	.LBB3144:
 1693              	.LBB3116:
 1694              	.LBB3088:
 1695              	.LBB2907:
 1696              	.LBB2632:
 1697              	.LBB2629:
1320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  __throw_length_error(__N(__s));
 1698              		.loc 1 1320 17 is_stmt 0 view .LVU331
 1699 00e6 734B     		ldr	r3, .L92
 1700 00e8 A3EB0802 		sub	r2, r3, r8
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 88


 1701              	.LVL64:
1320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  __throw_length_error(__N(__s));
 1702              		.loc 1 1320 2 view .LVU332
 1703 00ec 9145     		cmp	r9, r2
 1704 00ee 00F2DA80 		bhi	.L83
 1705              	.LVL65:
 1706              	.LBB2615:
 1707              	.LBI2615:
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return size_type(end() - begin()); }
 1708              		.loc 1 884 7 is_stmt 1 view .LVU333
 1709              	.LBB2616:
 1710              	.LBI2616:
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl._M_finish; }
 1711              		.loc 1 846 7 view .LVU334
 1712              	.LBB2617:
 1713              	.LBI2617:
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x._M_p, __x._M_offset) { }
 1714              		.loc 1 339 5 view .LVU335
 1715              	.LBB2618:
 1716              	.LBI2618:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1717              		.loc 1 148 5 view .LVU336
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1718              		.loc 1 148 5 is_stmt 0 view .LVU337
 1719              	.LBE2618:
 1720              	.LBE2617:
 1721              	.LBE2616:
 1722              	.LBB2619:
 1723              	.LBI2619:
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_iterator(this->_M_impl._M_start._M_p, 0); }
 1724              		.loc 1 838 7 is_stmt 1 view .LVU338
 1725              	.LBB2620:
 1726              	.LBI2620:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 1727              		.loc 1 336 5 view .LVU339
 1728              	.LBB2621:
 1729              	.LBI2621:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1730              		.loc 1 148 5 view .LVU340
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1731              		.loc 1 148 5 is_stmt 0 view .LVU341
 1732              	.LBE2621:
 1733              	.LBE2620:
 1734              	.LBE2619:
 1735              	.LBE2615:
 1736              	.LBE2629:
 1737              	.LBE2632:
 1738              	.LBE2907:
 1739              	.LBE3088:
 1740              	.LBE3116:
 1741              	.LBE3144:
 1742              	.LBE3172:
 1743              	.LBE3200:
 1744              	.LBE3237:
 1745              	.LBE3268:
 1746              	.LBE3304:
 1747              	.LBE3352:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 89


 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 1748              		.loc 1 226 7 is_stmt 1 view .LVU342
 1749              	.LBB3353:
 1750              	.LBB3305:
 1751              	.LBB3269:
 1752              	.LBB3238:
 1753              	.LBB3201:
 1754              	.LBB3173:
 1755              	.LBB3145:
 1756              	.LBB3117:
 1757              	.LBB3089:
 1758              	.LBB2908:
 1759              	.LBB2633:
 1760              	.LBB2630:
 1761              	.LBB2622:
 1762              	.LBI2622:
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return size_type(end() - begin()); }
 1763              		.loc 1 884 7 view .LVU343
 1764              	.LBB2623:
 1765              	.LBI2623:
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl._M_finish; }
 1766              		.loc 1 846 7 view .LVU344
 1767              	.LBB2624:
 1768              	.LBI2624:
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x._M_p, __x._M_offset) { }
 1769              		.loc 1 339 5 view .LVU345
 1770              	.LBB2625:
 1771              	.LBI2625:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1772              		.loc 1 148 5 view .LVU346
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1773              		.loc 1 148 5 is_stmt 0 view .LVU347
 1774              	.LBE2625:
 1775              	.LBE2624:
 1776              	.LBE2623:
 1777              	.LBB2626:
 1778              	.LBI2626:
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_iterator(this->_M_impl._M_start._M_p, 0); }
 1779              		.loc 1 838 7 is_stmt 1 view .LVU348
 1780              	.LBB2627:
 1781              	.LBI2627:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 1782              		.loc 1 336 5 view .LVU349
 1783              	.LBB2628:
 1784              	.LBI2628:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1785              		.loc 1 148 5 view .LVU350
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1786              		.loc 1 148 5 is_stmt 0 view .LVU351
 1787              	.LBE2628:
 1788              	.LBE2627:
 1789              	.LBE2626:
 1790              	.LBE2622:
 1791              	.LBE2630:
 1792              	.LBE2633:
 1793              	.LBE2908:
 1794              	.LBE3089:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 90


 1795              	.LBE3117:
 1796              	.LBE3145:
 1797              	.LBE3173:
 1798              	.LBE3201:
 1799              	.LBE3238:
 1800              	.LBE3269:
 1801              	.LBE3305:
 1802              	.LBE3353:
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 1803              		.loc 1 226 7 is_stmt 1 view .LVU352
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 1804              		.loc 1 226 7 is_stmt 0 view .LVU353
 1805 00f2 C845     		cmp	r8, r9
 1806 00f4 C246     		mov	r10, r8
 1807 00f6 38BF     		it	cc
 1808 00f8 CA46     		movcc	r10, r9
 1809 00fa 18EB0A0A 		adds	r10, r8, r10
 1810 00fe 80F0D580 		bcs	.L47
 1811              	.LVL66:
 1812              	.LBB3354:
 1813              	.LBB3306:
 1814              	.LBB3270:
 1815              	.LBB3239:
 1816              	.LBB3202:
 1817              	.LBB3174:
 1818              	.LBB3146:
 1819              	.LBB3118:
 1820              	.LBB3090:
 1821              	.LBB2909:
 1822              	.LBB2634:
 1823              	.LBB2635:
 1824              	.LBB2636:
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     };
 1825              		.loc 1 580 40 view .LVU354
 1826 0102 9A45     		cmp	r10, r3
 1827 0104 28BF     		it	cs
 1828 0106 9A46     		movcs	r10, r3
 1829 0108 0AF11F0A 		add	r10, r10, #31
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     };
 1830              		.loc 1 580 62 view .LVU355
 1831 010c 4FEA5A1A 		lsr	r10, r10, #5
 1832              	.LBE2636:
 1833              	.LBE2635:
 1834              	.LBB2637:
 1835              	.LBB2638:
 1836              	.LBB2639:
 1837              		.file 5 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\ext\\new_allocato
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 91


  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** /** @file ext/new_allocator.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****  */
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <bits/c++config.h>
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <new>
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <bits/functexcept.h>
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <bits/move.h>
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <type_traits>
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** {
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****   /**
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  @brief  An allocator that uses global new, as per [20.4].
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  @ingroup allocators
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *    - all allocation calls operator new
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *    - all deallocation calls operator delete
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    */
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****   template<typename _Tp>
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     class new_allocator
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     {
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     public:
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef _Tp        value_type;
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef std::size_t     size_type;
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef std::ptrdiff_t  difference_type;
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus <= 201703L
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef _Tp*       pointer;
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef const _Tp* const_pointer;
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef _Tp&       reference;
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef const _Tp& const_reference;
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Tp1>
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 92


  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	struct rebind
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	{ typedef new_allocator<_Tp1> other; };
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Tp1>
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	_GLIBCXX20_CONSTEXPR
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus <= 201703L
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       pointer
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       address(reference __x) const _GLIBCXX_NOEXCEPT
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       { return std::__addressof(__x); }
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       const_pointer
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       address(const_reference __x) const _GLIBCXX_NOEXCEPT
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       { return std::__addressof(__x); }
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // about what the return value is when __n == 0.
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       _GLIBCXX_NODISCARD _Tp*
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       allocate(size_type __n, const void* = static_cast<const void*>(0))
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	if (__n > this->_M_max_size())
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  std::__throw_bad_alloc();
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_aligned_new
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  {
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  }
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 1838              		.loc 5 115 41 view .LVU356
 1839 0110 4FEA8A0A 		lsl	r10, r10, #2
 1840              	.LVL67:
 1841              	.L48:
 1842              		.loc 5 115 41 view .LVU357
 1843              	.LBE2639:
 1844              	.LBE2638:
 1845              	.LBE2637:
 1846              	.LBI2634:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 93


 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return _Bit_alloc_traits::allocate(_M_impl, _S_nword(__n)); }
 1847              		.loc 1 556 7 is_stmt 1 view .LVU358
 1848              	.LBB2644:
 1849              	.LBI2635:
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return (__n + int(_S_word_bit) - 1) / int(_S_word_bit); }
 1850              		.loc 1 579 7 view .LVU359
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return (__n + int(_S_word_bit) - 1) / int(_S_word_bit); }
 1851              		.loc 1 579 7 is_stmt 0 view .LVU360
 1852              	.LBE2644:
 1853              	.LBB2645:
 1854              	.LBI2637:
 1855              		.file 6 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\alloc_trait
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Copyright (C) 2011-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** /** @file bits/alloc_traits.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****  *  This is an internal header file, included by other library headers.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****  *  Do not attempt to use it directly. @headername{memory}
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****  */
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #ifndef _ALLOC_TRAITS_H
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #define _ALLOC_TRAITS_H 1
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #include <bits/stl_construct.h>
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #include <bits/memoryfwd.h>
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201103L
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # include <bits/allocator.h>
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # include <bits/ptr_traits.h>
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # include <ext/numeric_traits.h>
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** {
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201103L
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 94


  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #define __cpp_lib_allocator_traits_is_always_equal 201411
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   struct __allocator_traits_base
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   {
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp, typename _Up, typename = void>
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       struct __rebind : __replace_first_arg<_Tp, _Up> { };
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp, typename _Up>
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       struct __rebind<_Tp, _Up,
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		      __void_t<typename _Tp::template rebind<_Up>::other>>
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { using type = typename _Tp::template rebind<_Up>::other; };
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   protected:
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pointer = typename _Tp::pointer;
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __c_pointer = typename _Tp::const_pointer;
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __v_pointer = typename _Tp::void_pointer;
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __cv_pointer = typename _Tp::const_void_pointer;
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pocca = typename _Tp::propagate_on_container_copy_assignment;
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pocma = typename _Tp::propagate_on_container_move_assignment;
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pocs = typename _Tp::propagate_on_container_swap;
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __equal = typename _Tp::is_always_equal;
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   };
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc, typename _Up>
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     using __alloc_rebind
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       = typename __allocator_traits_base::template __rebind<_Alloc, _Up>::type;
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   /**
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * @brief  Uniform interface to all allocator types.
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * @ingroup allocators
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   */
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct allocator_traits : __allocator_traits_base
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator type
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef _Alloc allocator_type;
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocated type
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef typename _Alloc::value_type value_type;
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's pointer type.
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::pointer if that type exists, otherwise @c value_type*
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using pointer = __detected_or_t<value_type*, __pointer, _Alloc>;
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     private:
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       // Select _Func<_Alloc> or pointer_traits<pointer>::rebind<_Tp>
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<template<typename> class _Func, typename _Tp, typename = void>
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 95


 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Ptr
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using type = typename pointer_traits<pointer>::template rebind<_Tp>;
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	};
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<template<typename> class _Func, typename _Tp>
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Ptr<_Func, _Tp, __void_t<_Func<_Alloc>>>
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using type = _Func<_Alloc>;
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	};
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       // Select _A2::difference_type or pointer_traits<_Ptr>::difference_type
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _PtrT, typename = void>
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Diff
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ using type = typename pointer_traits<_PtrT>::difference_type; };
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _PtrT>
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Diff<_A2, _PtrT, __void_t<typename _A2::difference_type>>
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ using type = typename _A2::difference_type; };
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       // Select _A2::size_type or make_unsigned<_DiffT>::type
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _DiffT, typename = void>
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Size : make_unsigned<_DiffT> { };
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _DiffT>
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Size<_A2, _DiffT, __void_t<typename _A2::size_type>>
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ using type = typename _A2::size_type; };
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     public:
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's const pointer type.
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::const_pointer if that type exists, otherwise
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const value_type> </tt>
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_pointer = typename _Ptr<__c_pointer, const value_type>::type;
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's void pointer type.
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::void_pointer if that type exists, otherwise
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<void> </tt>
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using void_pointer = typename _Ptr<__v_pointer, void>::type;
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's const void pointer type.
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::const_void_pointer if that type exists, otherwise
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const void> </tt>
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_void_pointer = typename _Ptr<__cv_pointer, const void>::type;
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's difference type
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::difference_type if that type exists, otherwise
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 96


 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::difference_type </tt>
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using difference_type = typename _Diff<_Alloc, pointer>::type;
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's size type
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::size_type if that type exists, otherwise
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> make_unsigned<difference_type>::type </tt>
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using size_type = typename _Size<_Alloc, difference_type>::type;
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   How the allocator is propagated on copy assignment
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::propagate_on_container_copy_assignment if that type exists,
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c false_type
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_copy_assignment
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<false_type, __pocca, _Alloc>;
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   How the allocator is propagated on move assignment
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::propagate_on_container_move_assignment if that type exists,
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c false_type
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_move_assignment
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<false_type, __pocma, _Alloc>;
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   How the allocator is propagated on swap
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::propagate_on_container_swap if that type exists,
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c false_type
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_swap
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<false_type, __pocs, _Alloc>;
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   Whether all instances of the allocator type compare equal.
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::is_always_equal if that type exists,
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c is_empty<Alloc>::type
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using is_always_equal
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<typename is_empty<_Alloc>::type, __equal, _Alloc>;
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp>
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_alloc = __alloc_rebind<_Alloc, _Tp>;
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp>
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_traits = allocator_traits<rebind_alloc<_Tp>>;
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     private:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr auto
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer __hint, int)
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 97


 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.allocate(__n, __hint))
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.allocate(__n, __hint); }
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr pointer
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer, ...)
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.allocate(__n); }
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct __construct_helper
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  template<typename _Alloc2,
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    typename = decltype(std::declval<_Alloc2*>()->construct(
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  std::declval<_Tp*>(), std::declval<_Args>()...))>
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    static true_type __test(int);
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  template<typename>
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    static false_type __test(...);
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using type = decltype(__test<_Alloc>(0));
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	};
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using __has_construct
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  = typename __construct_helper<_Tp, _Args...>::type;
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR _Require<__has_construct<_Tp, _Args...>>
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_Require<__and_<__not_<__has_construct<_Tp, _Args...>>,
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 			       is_constructible<_Tp, _Args...>>>
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_construct(_Alloc&, _Tp* __p, _Args&&... __args)
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(std::is_nothrow_constructible<_Tp, _Args...>::value)
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  std::construct_at(__p, std::forward<_Args>(__args)...);
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR auto
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_destroy(_Alloc2& __a, _Tp* __p, int)
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(__a.destroy(__p)))
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.destroy(__p))
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ __a.destroy(__p); }
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR void
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_destroy(_Alloc2&, _Tp* __p, ...)
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(std::is_nothrow_destructible<_Tp>::value)
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 98


 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ std::_Destroy(__p); }
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr auto
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_max_size(_Alloc2& __a, int)
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.max_size())
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.max_size(); }
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr size_type
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_max_size(_Alloc2&, ...)
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  // _GLIBCXX_RESOLVE_LIB_DEFECTS
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  // 2466. allocator_traits::max_size() default behavior is incorrect
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  return __gnu_cxx::__numeric_traits<size_type>::__max
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    / sizeof(value_type);
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr auto
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_select(_Alloc2& __a, int)
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.select_on_container_copy_construction())
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.select_on_container_copy_construction(); }
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr _Alloc2
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_select(_Alloc2& __a, ...)
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a; }
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     public:
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c a.allocate(n)
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(_Alloc& __a, size_type __n)
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __hint Aid to locality.
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *          of type @c value_type
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt> if that expression is
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  well-formed, otherwise returns @c a.allocate(n)
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(_Alloc& __a, size_type __n, const_void_pointer __hint)
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return _S_allocate(__a, __n, __hint, 0); }
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 99


 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Deallocate memory.
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR void
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       deallocate(_Alloc& __a, pointer __p, size_type __n)
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Construct an object of type @a _Tp
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for Tp
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __args Constructor arguments.
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls <tt> __a.construct(__p, std::forward<Args>(__args)...) </tt>
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  if that expression is well-formed, otherwise uses placement-new
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  to construct an object of type @a _Tp at location @a __p from the
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  arguments @a __args...
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR auto
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(_S_construct(__a, __p,
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 				       std::forward<_Args>(__args)...)))
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(_S_construct(__a, __p, std::forward<_Args>(__args)...))
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ _S_construct(__a, __p, std::forward<_Args>(__args)...); }
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Destroy an object of type @a _Tp
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c __a.destroy(__p) if that expression is well-formed,
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  otherwise calls @c __p->~_Tp()
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp>
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	destroy(_Alloc& __a, _Tp* __p)
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(_S_destroy(__a, __p, 0)))
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ _S_destroy(__a, __p, 0); }
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  The maximum supported allocation size
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __a.max_size() or @c numeric_limits<size_type>::max()
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns @c __a.max_size() if that expression is well-formed,
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  otherwise returns @c numeric_limits<size_type>::max()
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR size_type
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       max_size(const _Alloc& __a) noexcept
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return _S_max_size(__a, 0); }
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 100


 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __rhs  An allocator.
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __rhs.select_on_container_copy_construction() or @a __rhs
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns @c __rhs.select_on_container_copy_construction() if that
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  expression is well-formed, otherwise returns @a __rhs
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR _Alloc
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       select_on_container_copy_construction(const _Alloc& __rhs)
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return _S_select(__rhs, 0); }
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     };
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus > 201703L
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # define __cpp_lib_constexpr_dynamic_alloc 201907L
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   /// Partial specialization for std::allocator.
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Tp>
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct allocator_traits<allocator<_Tp>>
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator type
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using allocator_type = allocator<_Tp>;
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocated type
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using value_type = _Tp;
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's pointer type.
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using pointer = _Tp*;
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's const pointer type.
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_pointer = const _Tp*;
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's void pointer type.
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using void_pointer = void*;
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's const void pointer type.
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_void_pointer = const void*;
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's difference type
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using difference_type = std::ptrdiff_t;
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's size type
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using size_type = std::size_t;
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// How the allocator is propagated on copy assignment
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_copy_assignment = false_type;
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// How the allocator is propagated on move assignment
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_move_assignment = true_type;
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// How the allocator is propagated on swap
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_swap = false_type;
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// Whether all instances of the allocator type compare equal.
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using is_always_equal = true_type;
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 101


 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up>
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_alloc = allocator<_Up>;
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up>
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_traits = allocator_traits<allocator<_Up>>;
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c a.allocate(n)
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(allocator_type& __a, size_type __n)
 1856              		.loc 6 459 7 is_stmt 1 view .LVU361
 1857              	.LBB2642:
 1858              	.LBI2638:
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 1859              		.loc 5 103 7 view .LVU362
 1860              	.LBB2640:
 1861              		.loc 5 115 41 is_stmt 0 view .LVU363
 1862 0114 5046     		mov	r0, r10
 1863 0116 FFF7FEFF 		bl	_Znwj
 1864              	.LVL68:
 1865              	.LBE2640:
 1866              	.LBE2642:
 1867              	.LBE2645:
 1868              	.LBE2634:
 864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      {
 865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		std::copy_backward(__position, end(),
 866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   this->_M_impl._M_finish
 867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   + difference_type(__n));
 868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		std::copy(__first, __last, __position);
 869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		this->_M_impl._M_finish += difference_type(__n);
 870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      }
 871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    else
 872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      {
 873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		const size_type __len =
 874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  _M_check_len(__n, "vector<bool>::_M_insert_range");
 875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		_Bit_pointer __q = this->_M_allocate(__len);
 876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		iterator __start(std::__addressof(*__q), 0);
 877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		iterator __i = _M_copy_aligned(begin(), __position, __start);
 1869              		.loc 4 877 33 view .LVU364
 1870 011a 08AB     		add	r3, sp, #32
 1871 011c 0090     		str	r0, [sp]
 1872              	.LBB2647:
 1873              	.LBB2646:
 1874              	.LBB2643:
 1875              	.LBB2641:
 1876              		.loc 5 115 41 view .LVU365
 1877 011e 8346     		mov	fp, r0
 1878              	.LVL69:
 1879              		.loc 5 115 41 view .LVU366
 1880              	.LBE2641:
 1881              	.LBE2643:
 1882              	.LBE2646:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 102


 1883              	.LBE2647:
 1884              	.LBB2648:
 1885              	.LBI2648:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 1886              		.loc 1 243 5 is_stmt 1 view .LVU367
 1887              	.LBB2649:
 1888              	.LBI2649:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1889              		.loc 1 148 5 view .LVU368
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1890              		.loc 1 148 5 is_stmt 0 view .LVU369
 1891              	.LBE2649:
 1892              	.LBE2648:
 1893              	.LBB2650:
 1894              	.LBI2650:
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return iterator(this->_M_impl._M_start._M_p, 0); }
 1895              		.loc 1 834 7 is_stmt 1 view .LVU370
 1896              	.LBB2651:
 1897              	.LBB2652:
 1898              	.LBI2652:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 1899              		.loc 1 243 5 view .LVU371
 1900              	.LBB2653:
 1901              	.LBI2653:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1902              		.loc 1 148 5 view .LVU372
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1903              		.loc 1 148 5 is_stmt 0 view .LVU373
 1904              	.LBE2653:
 1905              	.LBE2652:
 1906              	.LBE2651:
 1907              	.LBE2650:
 1908              	.LBB2654:
 1909              	.LBI2654:
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x._M_p, __x._M_offset) { }
 1910              		.loc 1 339 5 is_stmt 1 view .LVU374
 1911              	.LBB2655:
 1912              	.LBI2655:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1913              		.loc 1 148 5 view .LVU375
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1914              		.loc 1 148 5 is_stmt 0 view .LVU376
 1915              	.LBE2655:
 1916              	.LBE2654:
 1917              	.LBB2656:
 1918              	.LBI2656:
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x._M_p, __x._M_offset) { }
 1919              		.loc 1 339 5 is_stmt 1 view .LVU377
 1920              	.LBB2657:
 1921              	.LBI2657:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1922              		.loc 1 148 5 view .LVU378
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 1923              		.loc 1 148 5 is_stmt 0 view .LVU379
 1924              	.LBE2657:
 1925              	.LBE2656:
 1926              		.loc 4 877 33 view .LVU380
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 103


 1927 0120 2168     		ldr	r1, [r4]
 1928 0122 04A8     		add	r0, sp, #16
 1929              	.LVL70:
 1930              	.LBB2661:
 1931              	.LBB2660:
 1932              	.LBB2658:
 1933              	.LBB2659:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 1934              		.loc 1 149 31 view .LVU381
 1935 0124 CDE90675 		strd	r7, r5, [sp, #24]
 1936              	.LBE2659:
 1937              	.LBE2658:
 1938              	.LBE2660:
 1939              	.LBE2661:
 1940              		.loc 4 877 33 view .LVU382
 1941 0128 13E90C00 		ldmdb	r3, {r2, r3}
 1942 012c FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator.isra.0
 1943              	.LVL71:
 1944              	.LBB2662:
 1945              	.LBB2663:
 1946              	.LBB2664:
 1947              	.LBB2665:
 1948              	.LBB2666:
 1949              	.LBB2667:
 1950              	.LBB2668:
 1951              	.LBB2669:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 1952              		.loc 2 378 46 view .LVU383
 1953 0130 B9F1000F 		cmp	r9, #0
 1954 0134 DDE90428 		ldrd	r2, r8, [sp, #16]
 1955              	.LVL72:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 1956              		.loc 2 378 46 view .LVU384
 1957              	.LBE2669:
 1958              	.LBE2668:
 1959              	.LBE2667:
 1960              	.LBE2666:
 1961              	.LBE2665:
 1962              	.LBE2664:
 1963              	.LBE2663:
 1964              	.LBI2662:
 1965              		.loc 2 560 5 is_stmt 1 view .LVU385
 1966              	.LBB2743:
 1967              	.LBI2663:
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 1968              		.loc 2 511 5 view .LVU386
 1969              	.LBB2738:
 1970              	.LBI2664:
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 1971              		.loc 2 505 5 view .LVU387
 1972              	.LBB2733:
 1973              	.LBI2665:
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 1974              		.loc 2 463 5 view .LVU388
 1975              	.LBB2728:
 1976              	.LBB2723:
 1977              	.LBI2667:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 104


 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 1978              		.loc 2 375 2 view .LVU389
 1979              	.LBB2718:
 1980              	.LBB2713:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 1981              		.loc 2 378 46 view .LVU390
 1982 0138 22DD     		ble	.L49
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 1983              		.loc 2 378 46 is_stmt 0 view .LVU391
 1984 013a 039B     		ldr	r3, [sp, #12]
 1985 013c 5E1E     		subs	r6, r3, #1
 1986 013e B144     		add	r9, r9, r6
 1987              	.LVL73:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 1988              		.loc 2 378 46 view .LVU392
 1989 0140 0AE0     		b	.L54
 1990              	.LVL74:
 1991              	.L84:
 1992              	.LBB2670:
 1993              	.LBB2671:
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       else
 1994              		.loc 1 93 2 is_stmt 1 view .LVU393
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       else
 1995              		.loc 1 93 8 is_stmt 0 view .LVU394
 1996 0142 1168     		ldr	r1, [r2]
 1997              	.LBE2671:
 1998              	.LBE2670:
 1999              	.LBB2680:
 2000              	.LBB2681:
 2001              	.LBB2682:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 2002              		.loc 1 154 7 view .LVU395
 2003 0144 B8F11F0F 		cmp	r8, #31
 2004              	.LBE2682:
 2005              	.LBE2681:
 2006              	.LBE2680:
 2007              	.LBB2697:
 2008              	.LBB2676:
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       else
 2009              		.loc 1 93 8 view .LVU396
 2010 0148 43EA0103 		orr	r3, r3, r1
 2011 014c 1360     		str	r3, [r2]
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 2012              		.loc 1 96 7 is_stmt 1 view .LVU397
 2013              	.LVL75:
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 2014              		.loc 1 96 7 is_stmt 0 view .LVU398
 2015              	.LBE2676:
 2016              	.LBE2697:
 2017              	.LBB2698:
 2018              	.LBI2680:
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 2019              		.loc 1 255 5 is_stmt 1 view .LVU399
 2020              	.LBE2698:
 2021              	.LBE2713:
 2022              	.LBE2718:
 2023              	.LBE2723:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 105


 2024              	.LBE2728:
 2025              	.LBE2733:
 2026              	.LBE2738:
 2027              	.LBE2743:
 2028              	.LBE2662:
 2029              	.LBE2909:
 2030              	.LBE3090:
 2031              	.LBE3118:
 2032              	.LBE3146:
 2033              	.LBE3174:
 2034              	.LBE3202:
 2035              	.LBE3239:
 2036              	.LBE3270:
 2037              	.LBE3306:
 2038              	.LBE3354:
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 2039              		.loc 1 257 7 view .LVU400
 2040              	.LBB3355:
 2041              	.LBB3307:
 2042              	.LBB3271:
 2043              	.LBB3240:
 2044              	.LBB3203:
 2045              	.LBB3175:
 2046              	.LBB3147:
 2047              	.LBB3119:
 2048              	.LBB3091:
 2049              	.LBB2910:
 2050              	.LBB2748:
 2051              	.LBB2744:
 2052              	.LBB2739:
 2053              	.LBB2734:
 2054              	.LBB2729:
 2055              	.LBB2724:
 2056              	.LBB2719:
 2057              	.LBB2714:
 2058              	.LBB2699:
 2059              	.LBB2692:
 2060              	.LBI2681:
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 2061              		.loc 1 152 5 view .LVU401
 2062              	.LBB2687:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 2063              		.loc 1 154 7 view .LVU402
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 2064              		.loc 1 154 7 is_stmt 0 view .LVU403
 2065 014e 11D0     		beq	.L52
 2066              	.LVL76:
 2067              	.L85:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 2068              		.loc 1 154 7 view .LVU404
 2069              	.LBE2687:
 2070              	.LBE2692:
 2071              	.LBE2699:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 2072              		.loc 2 378 46 view .LVU405
 2073 0150 4E45     		cmp	r6, r9
 2074              	.LBB2700:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 106


 2075              	.LBB2693:
 2076              	.LBB2688:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 2077              		.loc 1 154 20 view .LVU406
 2078 0152 08F10108 		add	r8, r8, #1
 2079              	.LVL77:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 2080              		.loc 1 154 20 view .LVU407
 2081              	.LBE2688:
 2082              	.LBE2693:
 2083              	.LBE2700:
 2084              	.LBE2714:
 2085              	.LBE2719:
 2086              	.LBE2724:
 2087              	.LBE2729:
 2088              	.LBE2734:
 2089              	.LBE2739:
 2090              	.LBE2744:
 2091              	.LBE2748:
 2092              	.LBE2910:
 2093              	.LBE3091:
 2094              	.LBE3119:
 2095              	.LBE3147:
 2096              	.LBE3175:
 2097              	.LBE3203:
 2098              	.LBE3240:
 2099              	.LBE3271:
 2100              	.LBE3307:
 2101              	.LBE3355:
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 2102              		.loc 1 258 7 is_stmt 1 view .LVU408
 2103              	.LBB3356:
 2104              	.LBB3308:
 2105              	.LBB3272:
 2106              	.LBB3241:
 2107              	.LBB3204:
 2108              	.LBB3176:
 2109              	.LBB3148:
 2110              	.LBB3120:
 2111              	.LBB3092:
 2112              	.LBB2911:
 2113              	.LBB2749:
 2114              	.LBB2745:
 2115              	.LBB2740:
 2116              	.LBB2735:
 2117              	.LBB2730:
 2118              	.LBB2725:
 2119              	.LBB2720:
 2120              	.LBB2715:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 2121              		.loc 2 378 4 view .LVU409
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 2122              		.loc 2 378 46 view .LVU410
 2123 0156 13D0     		beq	.L49
 2124              	.LVL78:
 2125              	.L54:
 2126              	.LBB2701:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 107


 2127              	.LBI2701:
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return reference(_M_p, 1UL << _M_offset); }
 2128              		.loc 1 251 5 view .LVU411
 2129              	.LBB2702:
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 2130              		.loc 1 252 7 view .LVU412
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 2131              		.loc 1 252 46 is_stmt 0 view .LVU413
 2132 0158 0123     		movs	r3, #1
 2133              	.LBE2702:
 2134              	.LBE2701:
 2135              	.LBB2705:
 2136              	.LBB2677:
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	*_M_p |= _M_mask;
 2137              		.loc 1 92 7 view .LVU414
 2138 015a 16F8011F 		ldrb	r1, [r6, #1]!	@ zero_extendqisi2
 2139              	.LVL79:
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	*_M_p |= _M_mask;
 2140              		.loc 1 92 7 view .LVU415
 2141              	.LBE2677:
 2142              	.LBE2705:
 2143              	.LBB2706:
 2144              	.LBB2704:
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 2145              		.loc 1 252 46 view .LVU416
 2146 015e 03FA08F3 		lsl	r3, r3, r8
 2147              	.LVL80:
 2148              	.LBB2703:
 2149              	.LBI2703:
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_mask(__y) { }
 2150              		.loc 1 77 5 is_stmt 1 view .LVU417
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_mask(__y) { }
 2151              		.loc 1 77 5 is_stmt 0 view .LVU418
 2152              	.LBE2703:
 2153              	.LBE2704:
 2154              	.LBE2706:
 2155              	.LBB2707:
 2156              	.LBI2670:
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 2157              		.loc 1 90 5 is_stmt 1 view .LVU419
 2158              	.LBB2678:
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	*_M_p |= _M_mask;
 2159              		.loc 1 92 7 view .LVU420
 2160 0162 0029     		cmp	r1, #0
 2161 0164 EDD1     		bne	.L84
 2162              	.LBB2672:
 2163              	.LBI2672:
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 2164              		.loc 1 90 5 view .LVU421
 2165              	.LVL81:
 2166              	.LBB2673:
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 2167              		.loc 1 95 2 view .LVU422
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 2168              		.loc 1 95 8 is_stmt 0 view .LVU423
 2169 0166 1168     		ldr	r1, [r2]
 2170              	.LBE2673:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 108


 2171              	.LBE2672:
 2172              	.LBE2678:
 2173              	.LBE2707:
 2174              	.LBB2708:
 2175              	.LBB2694:
 2176              	.LBB2689:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 2177              		.loc 1 154 7 view .LVU424
 2178 0168 B8F11F0F 		cmp	r8, #31
 2179              	.LBE2689:
 2180              	.LBE2694:
 2181              	.LBE2708:
 2182              	.LBB2709:
 2183              	.LBB2679:
 2184              	.LBB2675:
 2185              	.LBB2674:
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 2186              		.loc 1 95 8 view .LVU425
 2187 016c 21EA0303 		bic	r3, r1, r3
 2188 0170 1360     		str	r3, [r2]
 2189              	.LVL82:
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 2190              		.loc 1 95 8 view .LVU426
 2191              	.LBE2674:
 2192              	.LBE2675:
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 2193              		.loc 1 96 7 is_stmt 1 view .LVU427
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 2194              		.loc 1 96 7 is_stmt 0 view .LVU428
 2195              	.LBE2679:
 2196              	.LBE2709:
 2197              	.LBB2710:
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 2198              		.loc 1 255 5 is_stmt 1 view .LVU429
 2199              	.LBE2710:
 2200              	.LBE2715:
 2201              	.LBE2720:
 2202              	.LBE2725:
 2203              	.LBE2730:
 2204              	.LBE2735:
 2205              	.LBE2740:
 2206              	.LBE2745:
 2207              	.LBE2749:
 2208              	.LBE2911:
 2209              	.LBE3092:
 2210              	.LBE3120:
 2211              	.LBE3148:
 2212              	.LBE3176:
 2213              	.LBE3204:
 2214              	.LBE3241:
 2215              	.LBE3272:
 2216              	.LBE3308:
 2217              	.LBE3356:
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 2218              		.loc 1 257 7 view .LVU430
 2219              	.LBB3357:
 2220              	.LBB3309:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 109


 2221              	.LBB3273:
 2222              	.LBB3242:
 2223              	.LBB3205:
 2224              	.LBB3177:
 2225              	.LBB3149:
 2226              	.LBB3121:
 2227              	.LBB3093:
 2228              	.LBB2912:
 2229              	.LBB2750:
 2230              	.LBB2746:
 2231              	.LBB2741:
 2232              	.LBB2736:
 2233              	.LBB2731:
 2234              	.LBB2726:
 2235              	.LBB2721:
 2236              	.LBB2716:
 2237              	.LBB2711:
 2238              	.LBB2695:
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 2239              		.loc 1 152 5 view .LVU431
 2240              	.LBB2690:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 2241              		.loc 1 154 7 view .LVU432
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 2242              		.loc 1 154 7 is_stmt 0 view .LVU433
 2243 0172 EDD1     		bne	.L85
 2244              	.LVL83:
 2245              	.L52:
 2246              	.LBB2683:
 2247              	.LBI2683:
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 2248              		.loc 1 152 5 is_stmt 1 view .LVU434
 2249              	.LBB2684:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  ++_M_p;
 2250              		.loc 1 156 4 view .LVU435
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 2251              		.loc 1 157 4 view .LVU436
 2252              	.LBE2684:
 2253              	.LBE2683:
 2254              	.LBE2690:
 2255              	.LBE2695:
 2256              	.LBE2711:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 2257              		.loc 2 378 46 is_stmt 0 view .LVU437
 2258 0174 4E45     		cmp	r6, r9
 2259              	.LBB2712:
 2260              	.LBB2696:
 2261              	.LBB2691:
 2262              	.LBB2686:
 2263              	.LBB2685:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 2264              		.loc 1 157 4 view .LVU438
 2265 0176 02F10402 		add	r2, r2, #4
 2266              	.LVL84:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  ++_M_p;
 2267              		.loc 1 156 14 view .LVU439
 2268 017a 4FF00008 		mov	r8, #0
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 110


 2269              	.LVL85:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  ++_M_p;
 2270              		.loc 1 156 14 view .LVU440
 2271              	.LBE2685:
 2272              	.LBE2686:
 2273              	.LBE2691:
 2274              	.LBE2696:
 2275              	.LBE2712:
 2276              	.LBE2716:
 2277              	.LBE2721:
 2278              	.LBE2726:
 2279              	.LBE2731:
 2280              	.LBE2736:
 2281              	.LBE2741:
 2282              	.LBE2746:
 2283              	.LBE2750:
 2284              	.LBE2912:
 2285              	.LBE3093:
 2286              	.LBE3121:
 2287              	.LBE3149:
 2288              	.LBE3177:
 2289              	.LBE3205:
 2290              	.LBE3242:
 2291              	.LBE3273:
 2292              	.LBE3309:
 2293              	.LBE3357:
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 2294              		.loc 1 258 7 is_stmt 1 view .LVU441
 2295              	.LBB3358:
 2296              	.LBB3310:
 2297              	.LBB3274:
 2298              	.LBB3243:
 2299              	.LBB3206:
 2300              	.LBB3178:
 2301              	.LBB3150:
 2302              	.LBB3122:
 2303              	.LBB3094:
 2304              	.LBB2913:
 2305              	.LBB2751:
 2306              	.LBB2747:
 2307              	.LBB2742:
 2308              	.LBB2737:
 2309              	.LBB2732:
 2310              	.LBB2727:
 2311              	.LBB2722:
 2312              	.LBB2717:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 2313              		.loc 2 378 4 view .LVU442
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 2314              		.loc 2 378 46 view .LVU443
 2315 017e EBD1     		bne	.L54
 2316              	.LVL86:
 2317              	.L49:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 2318              		.loc 2 378 46 is_stmt 0 view .LVU444
 2319              	.LBE2717:
 2320              	.LBE2722:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 111


 2321              	.LBE2727:
 2322              	.LBE2732:
 2323              	.LBE2737:
 2324              	.LBE2742:
 2325              	.LBE2747:
 2326              	.LBE2751:
 2327              	.LBB2752:
 2328              	.LBI2752:
 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl._M_finish; }
 2329              		.loc 1 842 7 is_stmt 1 view .LVU445
 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl._M_finish; }
 2330              		.loc 1 842 7 is_stmt 0 view .LVU446
 2331              	.LBE2752:
 2332              	.LBB2753:
 2333              	.LBI2753:
 2334              		.loc 2 560 5 is_stmt 1 view .LVU447
 2335              	.LBB2754:
 2336              	.LBI2754:
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 2337              		.loc 2 511 5 view .LVU448
 2338              	.LBB2755:
 2339              	.LBI2755:
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 2340              		.loc 2 505 5 view .LVU449
 2341              	.LBB2756:
 2342              	.LBI2756:
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 2343              		.loc 2 463 5 view .LVU450
 2344              	.LBB2757:
 2345              	.LBB2758:
 2346              	.LBI2758:
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 2347              		.loc 2 375 2 view .LVU451
 2348              	.LBB2759:
 2349              	.LBB2760:
 2350              	.LBB2761:
 2351              	.LBI2761:
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 2352              		.loc 1 224 5 view .LVU452
 2353              	.LBB2762:
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 2354              		.loc 1 226 7 view .LVU453
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 2355              		.loc 1 226 44 is_stmt 0 view .LVU454
 2356 0180 A068     		ldr	r0, [r4, #8]
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 2357              		.loc 1 227 24 view .LVU455
 2358 0182 E368     		ldr	r3, [r4, #12]
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 2359              		.loc 1 226 44 view .LVU456
 2360 0184 C01B     		subs	r0, r0, r7
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 2361              		.loc 1 227 24 view .LVU457
 2362 0186 5B1B     		subs	r3, r3, r5
 2363 0188 03EBC000 		add	r0, r3, r0, lsl #3
 2364              	.LVL87:
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 112


 2365              		.loc 1 227 24 view .LVU458
 2366              	.LBE2762:
 2367              	.LBE2761:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 2368              		.loc 2 378 46 is_stmt 1 view .LVU459
 2369 018c 0028     		cmp	r0, #0
 2370 018e 09DC     		bgt	.L62
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 2371              		.loc 2 378 46 is_stmt 0 view .LVU460
 2372 0190 24E0     		b	.L55
 2373              	.LVL88:
 2374              	.L86:
 2375              	.LBB2763:
 2376              	.LBB2764:
 2377              	.LBB2765:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 2378              		.loc 1 154 7 view .LVU461
 2379 0192 B8F11F0F 		cmp	r8, #31
 2380              	.LBE2765:
 2381              	.LBE2764:
 2382              	.LBE2763:
 2383              	.LBB2780:
 2384              	.LBB2781:
 2385              	.LBB2782:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 2386              		.loc 1 154 20 view .LVU462
 2387 0196 05F10105 		add	r5, r5, #1
 2388              	.LVL89:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 2389              		.loc 1 154 20 view .LVU463
 2390              	.LBE2782:
 2391              	.LBE2781:
 2392              	.LBE2780:
 2393              	.LBE2760:
 2394              	.LBE2759:
 2395              	.LBE2758:
 2396              	.LBE2757:
 2397              	.LBE2756:
 2398              	.LBE2755:
 2399              	.LBE2754:
 2400              	.LBE2753:
 2401              	.LBE2913:
 2402              	.LBE3094:
 2403              	.LBE3122:
 2404              	.LBE3150:
 2405              	.LBE3178:
 2406              	.LBE3206:
 2407              	.LBE3243:
 2408              	.LBE3274:
 2409              	.LBE3310:
 2410              	.LBE3358:
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 2411              		.loc 1 258 7 is_stmt 1 view .LVU464
 2412              	.LBB3359:
 2413              	.LBB3311:
 2414              	.LBB3275:
 2415              	.LBB3244:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 113


 2416              	.LBB3207:
 2417              	.LBB3179:
 2418              	.LBB3151:
 2419              	.LBB3123:
 2420              	.LBB3095:
 2421              	.LBB2914:
 2422              	.LBB2886:
 2423              	.LBB2878:
 2424              	.LBB2870:
 2425              	.LBB2862:
 2426              	.LBB2854:
 2427              	.LBB2846:
 2428              	.LBB2838:
 2429              	.LBB2830:
 2430              	.LBB2793:
 2431              	.LBI2763:
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 2432              		.loc 1 255 5 view .LVU465
 2433              	.LBE2793:
 2434              	.LBE2830:
 2435              	.LBE2838:
 2436              	.LBE2846:
 2437              	.LBE2854:
 2438              	.LBE2862:
 2439              	.LBE2870:
 2440              	.LBE2878:
 2441              	.LBE2886:
 2442              	.LBE2914:
 2443              	.LBE3095:
 2444              	.LBE3123:
 2445              	.LBE3151:
 2446              	.LBE3179:
 2447              	.LBE3207:
 2448              	.LBE3244:
 2449              	.LBE3275:
 2450              	.LBE3311:
 2451              	.LBE3359:
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 2452              		.loc 1 257 7 view .LVU466
 2453              	.LBB3360:
 2454              	.LBB3312:
 2455              	.LBB3276:
 2456              	.LBB3245:
 2457              	.LBB3208:
 2458              	.LBB3180:
 2459              	.LBB3152:
 2460              	.LBB3124:
 2461              	.LBB3096:
 2462              	.LBB2915:
 2463              	.LBB2887:
 2464              	.LBB2879:
 2465              	.LBB2871:
 2466              	.LBB2863:
 2467              	.LBB2855:
 2468              	.LBB2847:
 2469              	.LBB2839:
 2470              	.LBB2831:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 114


 2471              	.LBB2794:
 2472              	.LBB2775:
 2473              	.LBI2764:
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 2474              		.loc 1 152 5 view .LVU467
 2475              	.LBB2770:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 2476              		.loc 1 154 7 view .LVU468
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 2477              		.loc 1 154 7 is_stmt 0 view .LVU469
 2478 019a 19D0     		beq	.L60
 2479              	.LVL90:
 2480              	.L87:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 2481              		.loc 1 154 7 view .LVU470
 2482              	.LBE2770:
 2483              	.LBE2775:
 2484              	.LBE2794:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 2485              		.loc 2 378 46 view .LVU471
 2486 019c 0138     		subs	r0, r0, #1
 2487              	.LVL91:
 2488              	.LBB2795:
 2489              	.LBB2776:
 2490              	.LBB2771:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 2491              		.loc 1 154 20 view .LVU472
 2492 019e 08F10108 		add	r8, r8, #1
 2493              	.LVL92:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 2494              		.loc 1 154 20 view .LVU473
 2495              	.LBE2771:
 2496              	.LBE2776:
 2497              	.LBE2795:
 2498              	.LBE2831:
 2499              	.LBE2839:
 2500              	.LBE2847:
 2501              	.LBE2855:
 2502              	.LBE2863:
 2503              	.LBE2871:
 2504              	.LBE2879:
 2505              	.LBE2887:
 2506              	.LBE2915:
 2507              	.LBE3096:
 2508              	.LBE3124:
 2509              	.LBE3152:
 2510              	.LBE3180:
 2511              	.LBE3208:
 2512              	.LBE3245:
 2513              	.LBE3276:
 2514              	.LBE3312:
 2515              	.LBE3360:
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 2516              		.loc 1 258 7 is_stmt 1 view .LVU474
 2517              	.LBB3361:
 2518              	.LBB3313:
 2519              	.LBB3277:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 115


 2520              	.LBB3246:
 2521              	.LBB3209:
 2522              	.LBB3181:
 2523              	.LBB3153:
 2524              	.LBB3125:
 2525              	.LBB3097:
 2526              	.LBB2916:
 2527              	.LBB2888:
 2528              	.LBB2880:
 2529              	.LBB2872:
 2530              	.LBB2864:
 2531              	.LBB2856:
 2532              	.LBB2848:
 2533              	.LBB2840:
 2534              	.LBB2832:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 2535              		.loc 2 378 4 view .LVU475
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 2536              		.loc 2 378 46 view .LVU476
 2537 01a2 1BD0     		beq	.L55
 2538              	.L62:
 2539              	.LVL93:
 2540              	.LBB2796:
 2541              	.LBI2796:
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return reference(_M_p, 1UL << _M_offset); }
 2542              		.loc 1 251 5 view .LVU477
 2543              	.LBB2797:
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 2544              		.loc 1 252 7 view .LVU478
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 2545              		.loc 1 252 46 is_stmt 0 view .LVU479
 2546 01a4 0123     		movs	r3, #1
 2547              	.LBE2797:
 2548              	.LBE2796:
 2549              	.LBB2800:
 2550              	.LBB2801:
 2551              	.LBB2802:
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 2552              		.loc 1 87 23 view .LVU480
 2553 01a6 3968     		ldr	r1, [r7]
 2554              	.LBE2802:
 2555              	.LBE2801:
 2556              	.LBE2800:
 2557              	.LBB2813:
 2558              	.LBB2814:
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 2559              		.loc 1 252 46 view .LVU481
 2560 01a8 03FA05F6 		lsl	r6, r3, r5
 2561              	.LBE2814:
 2562              	.LBE2813:
 2563              	.LBB2817:
 2564              	.LBB2799:
 2565 01ac 03FA08F3 		lsl	r3, r3, r8
 2566              	.LVL94:
 2567              	.LBB2798:
 2568              	.LBI2798:
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_mask(__y) { }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 116


 2569              		.loc 1 77 5 is_stmt 1 view .LVU482
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_mask(__y) { }
 2570              		.loc 1 77 5 is_stmt 0 view .LVU483
 2571              	.LBE2798:
 2572              	.LBE2799:
 2573              	.LBE2817:
 2574              	.LBB2818:
 2575              	.LBI2813:
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return reference(_M_p, 1UL << _M_offset); }
 2576              		.loc 1 251 5 is_stmt 1 view .LVU484
 2577              	.LBB2816:
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 2578              		.loc 1 252 7 view .LVU485
 2579              	.LBB2815:
 2580              	.LBI2815:
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_mask(__y) { }
 2581              		.loc 1 77 5 view .LVU486
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_mask(__y) { }
 2582              		.loc 1 77 5 is_stmt 0 view .LVU487
 2583              	.LBE2815:
 2584              	.LBE2816:
 2585              	.LBE2818:
 2586              	.LBB2819:
 2587              	.LBI2800:
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return *this = bool(__x); }
 2588              		.loc 1 100 5 is_stmt 1 view .LVU488
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return *this = bool(__x); }
 2589              		.loc 1 100 5 is_stmt 0 view .LVU489
 2590              	.LBE2819:
 2591              	.LBE2832:
 2592              	.LBE2840:
 2593              	.LBE2848:
 2594              	.LBE2856:
 2595              	.LBE2864:
 2596              	.LBE2872:
 2597              	.LBE2880:
 2598              	.LBE2888:
 2599              	.LBE2916:
 2600              	.LBE3097:
 2601              	.LBE3125:
 2602              	.LBE3153:
 2603              	.LBE3181:
 2604              	.LBE3209:
 2605              	.LBE3246:
 2606              	.LBE3277:
 2607              	.LBE3313:
 2608              	.LBE3361:
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 2609              		.loc 1 101 7 is_stmt 1 view .LVU490
 2610              	.LBB3362:
 2611              	.LBB3314:
 2612              	.LBB3278:
 2613              	.LBB3247:
 2614              	.LBB3210:
 2615              	.LBB3182:
 2616              	.LBB3154:
 2617              	.LBB3126:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 117


 2618              	.LBB3098:
 2619              	.LBB2917:
 2620              	.LBB2889:
 2621              	.LBB2881:
 2622              	.LBB2873:
 2623              	.LBB2865:
 2624              	.LBB2857:
 2625              	.LBB2849:
 2626              	.LBB2841:
 2627              	.LBB2833:
 2628              	.LBB2820:
 2629              	.LBB2804:
 2630              	.LBI2801:
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return !!(*_M_p & _M_mask); }
 2631              		.loc 1 86 5 view .LVU491
 2632              	.LBB2803:
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 2633              		.loc 1 87 7 view .LVU492
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 2634              		.loc 1 87 7 is_stmt 0 view .LVU493
 2635              	.LBE2803:
 2636              	.LBE2804:
 2637              	.LBB2805:
 2638              	.LBI2805:
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 2639              		.loc 1 90 5 is_stmt 1 view .LVU494
 2640              	.LBB2806:
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	*_M_p |= _M_mask;
 2641              		.loc 1 92 7 view .LVU495
 2642 01b0 0E42     		tst	r6, r1
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       else
 2643              		.loc 1 93 8 is_stmt 0 view .LVU496
 2644 01b2 1168     		ldr	r1, [r2]
 2645              	.LVL95:
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       else
 2646              		.loc 1 93 2 is_stmt 1 view .LVU497
 2647              	.LBB2807:
 2648              	.LBI2807:
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 2649              		.loc 1 90 5 view .LVU498
 2650              	.LBB2808:
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 2651              		.loc 1 95 2 view .LVU499
 2652              	.LBE2808:
 2653              	.LBE2807:
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       else
 2654              		.loc 1 93 8 is_stmt 0 view .LVU500
 2655 01b4 14BF     		ite	ne
 2656 01b6 0B43     		orrne	r3, r3, r1
 2657              	.LBB2810:
 2658              	.LBB2809:
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 2659              		.loc 1 95 8 view .LVU501
 2660 01b8 21EA0303 		biceq	r3, r1, r3
 2661              	.LBE2809:
 2662              	.LBE2810:
 2663              	.LBE2806:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 118


 2664              	.LBE2805:
 2665              	.LBE2820:
 2666              	.LBB2821:
 2667              	.LBB2790:
 2668              	.LBB2787:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 2669              		.loc 1 154 7 view .LVU502
 2670 01bc 1F2D     		cmp	r5, #31
 2671 01be 1360     		str	r3, [r2]
 2672              	.LVL96:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 2673              		.loc 1 154 7 view .LVU503
 2674              	.LBE2787:
 2675              	.LBE2790:
 2676              	.LBE2821:
 2677              	.LBB2822:
 2678              	.LBB2812:
 2679              	.LBB2811:
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 2680              		.loc 1 96 7 is_stmt 1 view .LVU504
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 2681              		.loc 1 96 7 is_stmt 0 view .LVU505
 2682              	.LBE2811:
 2683              	.LBE2812:
 2684              	.LBE2822:
 2685              	.LBB2823:
 2686              	.LBI2780:
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 2687              		.loc 1 255 5 is_stmt 1 view .LVU506
 2688              	.LBE2823:
 2689              	.LBE2833:
 2690              	.LBE2841:
 2691              	.LBE2849:
 2692              	.LBE2857:
 2693              	.LBE2865:
 2694              	.LBE2873:
 2695              	.LBE2881:
 2696              	.LBE2889:
 2697              	.LBE2917:
 2698              	.LBE3098:
 2699              	.LBE3126:
 2700              	.LBE3154:
 2701              	.LBE3182:
 2702              	.LBE3210:
 2703              	.LBE3247:
 2704              	.LBE3278:
 2705              	.LBE3314:
 2706              	.LBE3362:
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 2707              		.loc 1 257 7 view .LVU507
 2708              	.LBB3363:
 2709              	.LBB3315:
 2710              	.LBB3279:
 2711              	.LBB3248:
 2712              	.LBB3211:
 2713              	.LBB3183:
 2714              	.LBB3155:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 119


 2715              	.LBB3127:
 2716              	.LBB3099:
 2717              	.LBB2918:
 2718              	.LBB2890:
 2719              	.LBB2882:
 2720              	.LBB2874:
 2721              	.LBB2866:
 2722              	.LBB2858:
 2723              	.LBB2850:
 2724              	.LBB2842:
 2725              	.LBB2834:
 2726              	.LBB2824:
 2727              	.LBB2791:
 2728              	.LBI2781:
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 2729              		.loc 1 152 5 view .LVU508
 2730              	.LBB2788:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 2731              		.loc 1 154 7 view .LVU509
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 2732              		.loc 1 154 7 is_stmt 0 view .LVU510
 2733 01c0 E7D1     		bne	.L86
 2734              	.LVL97:
 2735              	.LBB2783:
 2736              	.LBI2783:
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 2737              		.loc 1 152 5 is_stmt 1 view .LVU511
 2738              	.LBB2784:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  ++_M_p;
 2739              		.loc 1 156 4 view .LVU512
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 2740              		.loc 1 157 4 view .LVU513
 2741              	.LBE2784:
 2742              	.LBE2783:
 2743              	.LBE2788:
 2744              	.LBE2791:
 2745              	.LBE2824:
 2746              	.LBB2825:
 2747              	.LBB2777:
 2748              	.LBB2772:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 2749              		.loc 1 154 7 is_stmt 0 view .LVU514
 2750 01c2 B8F11F0F 		cmp	r8, #31
 2751              	.LBE2772:
 2752              	.LBE2777:
 2753              	.LBE2825:
 2754              	.LBB2826:
 2755              	.LBB2792:
 2756              	.LBB2789:
 2757              	.LBB2786:
 2758              	.LBB2785:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 2759              		.loc 1 157 4 view .LVU515
 2760 01c6 07F10407 		add	r7, r7, #4
 2761              	.LVL98:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  ++_M_p;
 2762              		.loc 1 156 14 view .LVU516
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 120


 2763 01ca 4FF00005 		mov	r5, #0
 2764              	.LVL99:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  ++_M_p;
 2765              		.loc 1 156 14 view .LVU517
 2766              	.LBE2785:
 2767              	.LBE2786:
 2768              	.LBE2789:
 2769              	.LBE2792:
 2770              	.LBE2826:
 2771              	.LBE2834:
 2772              	.LBE2842:
 2773              	.LBE2850:
 2774              	.LBE2858:
 2775              	.LBE2866:
 2776              	.LBE2874:
 2777              	.LBE2882:
 2778              	.LBE2890:
 2779              	.LBE2918:
 2780              	.LBE3099:
 2781              	.LBE3127:
 2782              	.LBE3155:
 2783              	.LBE3183:
 2784              	.LBE3211:
 2785              	.LBE3248:
 2786              	.LBE3279:
 2787              	.LBE3315:
 2788              	.LBE3363:
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 2789              		.loc 1 258 7 is_stmt 1 view .LVU518
 2790              	.LBB3364:
 2791              	.LBB3316:
 2792              	.LBB3280:
 2793              	.LBB3249:
 2794              	.LBB3212:
 2795              	.LBB3184:
 2796              	.LBB3156:
 2797              	.LBB3128:
 2798              	.LBB3100:
 2799              	.LBB2919:
 2800              	.LBB2891:
 2801              	.LBB2883:
 2802              	.LBB2875:
 2803              	.LBB2867:
 2804              	.LBB2859:
 2805              	.LBB2851:
 2806              	.LBB2843:
 2807              	.LBB2835:
 2808              	.LBB2827:
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 2809              		.loc 1 255 5 view .LVU519
 2810              	.LBE2827:
 2811              	.LBE2835:
 2812              	.LBE2843:
 2813              	.LBE2851:
 2814              	.LBE2859:
 2815              	.LBE2867:
 2816              	.LBE2875:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 121


 2817              	.LBE2883:
 2818              	.LBE2891:
 2819              	.LBE2919:
 2820              	.LBE3100:
 2821              	.LBE3128:
 2822              	.LBE3156:
 2823              	.LBE3184:
 2824              	.LBE3212:
 2825              	.LBE3249:
 2826              	.LBE3280:
 2827              	.LBE3316:
 2828              	.LBE3364:
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 2829              		.loc 1 257 7 view .LVU520
 2830              	.LBB3365:
 2831              	.LBB3317:
 2832              	.LBB3281:
 2833              	.LBB3250:
 2834              	.LBB3213:
 2835              	.LBB3185:
 2836              	.LBB3157:
 2837              	.LBB3129:
 2838              	.LBB3101:
 2839              	.LBB2920:
 2840              	.LBB2892:
 2841              	.LBB2884:
 2842              	.LBB2876:
 2843              	.LBB2868:
 2844              	.LBB2860:
 2845              	.LBB2852:
 2846              	.LBB2844:
 2847              	.LBB2836:
 2848              	.LBB2828:
 2849              	.LBB2778:
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 2850              		.loc 1 152 5 view .LVU521
 2851              	.LBB2773:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 2852              		.loc 1 154 7 view .LVU522
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 2853              		.loc 1 154 7 is_stmt 0 view .LVU523
 2854 01ce E5D1     		bne	.L87
 2855              	.LVL100:
 2856              	.L60:
 2857              	.LBB2766:
 2858              	.LBI2766:
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 2859              		.loc 1 152 5 is_stmt 1 view .LVU524
 2860              	.LBB2767:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  ++_M_p;
 2861              		.loc 1 156 4 view .LVU525
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 2862              		.loc 1 157 4 view .LVU526
 2863              	.LBE2767:
 2864              	.LBE2766:
 2865              	.LBE2773:
 2866              	.LBE2778:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 122


 2867              	.LBE2828:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 2868              		.loc 2 378 46 is_stmt 0 view .LVU527
 2869 01d0 0138     		subs	r0, r0, #1
 2870              	.LVL101:
 2871              	.LBB2829:
 2872              	.LBB2779:
 2873              	.LBB2774:
 2874              	.LBB2769:
 2875              	.LBB2768:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 2876              		.loc 1 157 4 view .LVU528
 2877 01d2 02F10402 		add	r2, r2, #4
 2878              	.LVL102:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  ++_M_p;
 2879              		.loc 1 156 14 view .LVU529
 2880 01d6 4FF00008 		mov	r8, #0
 2881              	.LVL103:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  ++_M_p;
 2882              		.loc 1 156 14 view .LVU530
 2883              	.LBE2768:
 2884              	.LBE2769:
 2885              	.LBE2774:
 2886              	.LBE2779:
 2887              	.LBE2829:
 2888              	.LBE2836:
 2889              	.LBE2844:
 2890              	.LBE2852:
 2891              	.LBE2860:
 2892              	.LBE2868:
 2893              	.LBE2876:
 2894              	.LBE2884:
 2895              	.LBE2892:
 2896              	.LBE2920:
 2897              	.LBE3101:
 2898              	.LBE3129:
 2899              	.LBE3157:
 2900              	.LBE3185:
 2901              	.LBE3213:
 2902              	.LBE3250:
 2903              	.LBE3281:
 2904              	.LBE3317:
 2905              	.LBE3365:
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 2906              		.loc 1 258 7 is_stmt 1 view .LVU531
 2907              	.LBB3366:
 2908              	.LBB3318:
 2909              	.LBB3282:
 2910              	.LBB3251:
 2911              	.LBB3214:
 2912              	.LBB3186:
 2913              	.LBB3158:
 2914              	.LBB3130:
 2915              	.LBB3102:
 2916              	.LBB2921:
 2917              	.LBB2893:
 2918              	.LBB2885:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 123


 2919              	.LBB2877:
 2920              	.LBB2869:
 2921              	.LBB2861:
 2922              	.LBB2853:
 2923              	.LBB2845:
 2924              	.LBB2837:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 2925              		.loc 2 378 4 view .LVU532
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 2926              		.loc 2 378 46 view .LVU533
 2927 01da E3D1     		bne	.L62
 2928              	.L55:
 2929              	.LVL104:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 2930              		.loc 2 378 46 is_stmt 0 view .LVU534
 2931              	.LBE2837:
 2932              	.LBE2845:
 2933              	.LBE2853:
 2934              	.LBE2861:
 2935              	.LBE2869:
 2936              	.LBE2877:
 2937              	.LBE2885:
 2938              	.LBE2893:
 2939              	.LBB2894:
 2940              	.LBI2894:
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 2941              		.loc 1 560 7 is_stmt 1 view .LVU535
 2942              	.LBB2895:
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 2943              		.loc 1 562 23 is_stmt 0 view .LVU536
 2944 01dc 2068     		ldr	r0, [r4]
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 2945              		.loc 1 562 2 view .LVU537
 2946 01de 70B1     		cbz	r0, .L63
 2947              	.LVL105:
 2948              	.LBB2896:
 2949              	.LBB2897:
 2950              	.LBI2897:
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 2951              		.loc 1 513 2 is_stmt 1 view .LVU538
 2952              	.LBB2898:
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    return std::__addressof(this->_M_end_of_storage[-1]) + 1;
 2953              		.loc 1 515 14 is_stmt 0 view .LVU539
 2954 01e0 2169     		ldr	r1, [r4, #16]
 2955              	.LVL106:
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    return std::__addressof(this->_M_end_of_storage[-1]) + 1;
 2956              		.loc 1 515 14 view .LVU540
 2957              	.LBE2898:
 2958              	.LBE2897:
 2959              	.LBB2899:
 2960              	.LBI2899:
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 124


 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __hint Aid to locality.
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *          of type @c value_type
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt>
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(allocator_type& __a, size_type __n, const_void_pointer __hint)
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       {
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return __a.allocate(__n, __hint);
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return __a.allocate(__n);
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       }
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Deallocate memory.
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR void
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       deallocate(allocator_type& __a, pointer __p, size_type __n)
 2961              		.loc 6 491 7 is_stmt 1 view .LVU541
 2962              	.LBB2900:
 2963              	.LBI2900:
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // __p is not permitted to be a null pointer.
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       void
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       deallocate(_Tp* __p, size_type __t)
 2964              		.loc 5 120 7 view .LVU542
 2965 01e2 0392     		str	r2, [sp, #12]
 2966              	.LVL107:
 2967              	.LBB2901:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_aligned_new
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  {
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    ::operator delete(__p,
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** # if __cpp_sized_deallocation
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			      __t * sizeof(_Tp),
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** # endif
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			      std::align_val_t(alignof(_Tp)));
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    return;
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  }
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	::operator delete(__p
 2968              		.loc 5 133 19 is_stmt 0 view .LVU543
 2969 01e4 091A     		subs	r1, r1, r0
 2970              	.LVL108:
 2971              		.loc 5 133 19 view .LVU544
 2972 01e6 FFF7FEFF 		bl	_ZdlPvj
 2973              	.LVL109:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 125


 2974              		.loc 5 133 19 view .LVU545
 2975              	.LBE2901:
 2976              	.LBE2900:
 2977              	.LBE2899:
 2978              	.LBB2902:
 2979              	.LBI2902:
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 2980              		.loc 1 488 2 is_stmt 1 view .LVU546
 2981              	.LBB2903:
 2982              	.LBB2904:
 2983              	.LBI2904:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 2984              		.loc 1 241 5 view .LVU547
 2985              	.LBB2905:
 2986              	.LBI2905:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 2987              		.loc 1 148 5 view .LVU548
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 2988              		.loc 1 148 5 is_stmt 0 view .LVU549
 2989              	.LBE2905:
 2990              	.LBE2904:
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_end_of_storage = _Bit_pointer();
 2991              		.loc 1 490 4 view .LVU550
 2992 01ea 0023     		movs	r3, #0
 2993 01ec 039A     		ldr	r2, [sp, #12]
 2994 01ee C4E90233 		strd	r3, r3, [r4, #8]
 2995 01f2 04F10803 		add	r3, r4, #8
 2996 01f6 93E80300 		ldm	r3, {r0, r1}
 2997 01fa 84E80300 		stm	r4, {r0, r1}
 2998              	.LVL110:
 2999              	.L63:
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_end_of_storage = _Bit_pointer();
 3000              		.loc 1 490 4 view .LVU551
 3001              	.LBE2903:
 3002              	.LBE2902:
 3003              	.LBE2896:
 3004              	.LBE2895:
 3005              	.LBE2894:
 878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		__i = std::copy(__first, __last, __i);
 879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		iterator __finish = std::copy(__position, end(), __i);
 880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		this->_M_deallocate();
 881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		this->_M_impl._M_end_of_storage = __q + _S_nword(__len);
 3006              		.loc 4 881 41 view .LVU552
 3007 01fe 0BEB0A03 		add	r3, fp, r10
 882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		this->_M_impl._M_start = __start;
 3008              		.loc 4 882 3 view .LVU553
 3009 0202 0021     		movs	r1, #0
 3010 0204 C4F800B0 		str	fp, [r4]
 883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		this->_M_impl._M_finish = __finish;
 3011              		.loc 4 883 3 view .LVU554
 3012 0208 A260     		str	r2, [r4, #8]
 882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		this->_M_impl._M_start = __start;
 3013              		.loc 4 882 3 view .LVU555
 3014 020a 6160     		str	r1, [r4, #4]
 3015              		.loc 4 883 3 view .LVU556
 3016 020c C4E90383 		strd	r8, r3, [r4, #12]
 3017              	.LVL111:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 126


 3018              		.loc 4 883 3 view .LVU557
 3019              	.LBE2921:
 3020              	.LBE3102:
 3021              	.LBE3130:
 3022              	.LBE3158:
 3023              	.LBE3186:
 3024              	.LBE3214:
 3025              	.LBB3215:
 3026              	.LBI3215:
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return iterator(this->_M_impl._M_start._M_p, 0); }
 3027              		.loc 1 834 7 is_stmt 1 view .LVU558
 3028              	.LBB3216:
 3029              	.LBI3216:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 3030              		.loc 1 243 5 view .LVU559
 3031              	.LBB3217:
 3032              	.LBI3217:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 3033              		.loc 1 148 5 view .LVU560
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 3034              		.loc 1 148 5 is_stmt 0 view .LVU561
 3035              	.LBE3217:
 3036              	.LBE3216:
 3037              	.LBE3215:
 3038              	.LBB3218:
 3039              	.LBI3218:
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 3040              		.loc 1 303 5 is_stmt 1 view .LVU562
 3041              	.LBB3219:
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __tmp += __n;
 3042              		.loc 1 305 7 view .LVU563
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __tmp;
 3043              		.loc 1 306 7 view .LVU564
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __tmp;
 3044              		.loc 1 306 7 is_stmt 0 view .LVU565
 3045              	.LBE3219:
 3046              	.LBE3218:
 3047              	.LBE3251:
 3048              	.LBE3282:
 3049              	.LBE3318:
 3050              	.LBE3366:
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 3051              		.loc 1 287 7 is_stmt 1 view .LVU566
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_p += __n / int(_S_word_bit);
 3052              		.loc 1 174 7 view .LVU567
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 3053              		.loc 1 175 7 view .LVU568
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 3054              		.loc 1 176 7 view .LVU569
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 3055              		.loc 1 177 7 view .LVU570
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 3056              		.loc 1 182 7 view .LVU571
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 3057              		.loc 1 288 7 view .LVU572
 3058              	.LBB3367:
 3059              	.LBB3319:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 127


 3060              	.LBB3283:
 3061              	.LBB3252:
 3062              	.LBB3221:
 3063              	.LBB3220:
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 3064              		.loc 1 307 7 view .LVU573
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 3065              		.loc 1 307 7 is_stmt 0 view .LVU574
 3066              	.LBE3220:
 3067              	.LBE3221:
 3068              	.LBE3252:
 3069              	.LBE3283:
 3070              	.LBE3319:
 3071              	.LBE3367:
1274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 3072              		.loc 1 1274 2 view .LVU575
 3073 0210 09B0     		add	sp, sp, #36
 3074              		.cfi_remember_state
 3075              		.cfi_def_cfa_offset 36
 3076              		@ sp needed
 3077 0212 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3078              	.LVL112:
 3079              	.L82:
 3080              		.cfi_restore_state
 3081              	.LBB3368:
 3082              	.LBB3320:
 3083              	.LBB3284:
 3084              	.LBB3253:
 3085              	.LBB3222:
 3086              	.LBB3187:
 3087              	.LBB3159:
 3088              	.LBB3131:
 3089              	.LBB3103:
 3090              	.LBB2922:
 3091              	.LBI2922:
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 3092              		.loc 1 303 5 is_stmt 1 view .LVU576
 3093              	.LBB2923:
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __tmp += __n;
 3094              		.loc 1 305 7 view .LVU577
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __tmp;
 3095              		.loc 1 306 7 view .LVU578
 3096              	.LBB2924:
 3097              	.LBI2924:
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 3098              		.loc 1 285 5 view .LVU579
 3099              	.LBE2924:
 3100              	.LBE2923:
 3101              	.LBE2922:
 3102              	.LBE3103:
 3103              	.LBE3131:
 3104              	.LBE3159:
 3105              	.LBE3187:
 3106              	.LBE3222:
 3107              	.LBE3253:
 3108              	.LBE3284:
 3109              	.LBE3320:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 128


 3110              	.LBE3368:
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 3111              		.loc 1 287 7 view .LVU580
 3112              	.LBB3369:
 3113              	.LBB3321:
 3114              	.LBB3285:
 3115              	.LBB3254:
 3116              	.LBB3223:
 3117              	.LBB3188:
 3118              	.LBB3160:
 3119              	.LBB3132:
 3120              	.LBB3104:
 3121              	.LBB2943:
 3122              	.LBB2937:
 3123              	.LBB2933:
 3124              	.LBB2925:
 3125              	.LBI2925:
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 3126              		.loc 1 172 5 view .LVU581
 3127              	.LBB2926:
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_p += __n / int(_S_word_bit);
 3128              		.loc 1 174 7 view .LVU582
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_p += __n / int(_S_word_bit);
 3129              		.loc 1 174 33 is_stmt 0 view .LVU583
 3130 0216 05EB0901 		add	r1, r5, r9
 3131              	.LVL113:
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 3132              		.loc 1 175 7 is_stmt 1 view .LVU584
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 3133              		.loc 1 175 19 is_stmt 0 view .LVU585
 3134 021a 0029     		cmp	r1, #0
 3135 021c 0A46     		mov	r2, r1
 3136              	.LVL114:
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 3137              		.loc 1 175 19 view .LVU586
 3138 021e B8BF     		it	lt
 3139 0220 01F11F02 		addlt	r2, r1, #31
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 3140              		.loc 1 176 11 view .LVU587
 3141 0224 4B42     		rsbs	r3, r1, #0
 3142 0226 01F01F01 		and	r1, r1, #31
 3143              	.LVL115:
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 3144              		.loc 1 176 11 view .LVU588
 3145 022a 03F01F03 		and	r3, r3, #31
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 3146              		.loc 1 175 19 view .LVU589
 3147 022e 4FEA6212 		asr	r2, r2, #5
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 3148              		.loc 1 176 11 view .LVU590
 3149 0232 58BF     		it	pl
 3150 0234 5942     		rsbpl	r1, r3, #0
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 3151              		.loc 1 175 12 view .LVU591
 3152 0236 07EB8202 		add	r2, r7, r2, lsl #2
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 3153              		.loc 1 176 7 is_stmt 1 view .LVU592
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 129


 3154              	.LVL116:
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 3155              		.loc 1 177 7 view .LVU593
 3156 023a 0029     		cmp	r1, #0
 3157 023c 2DDB     		blt	.L88
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 3158              		.loc 1 182 7 view .LVU594
 3159              	.LBE2926:
 3160              	.LBE2925:
 3161              	.LBE2933:
 3162              	.LBE2937:
 3163              	.LBE2943:
 3164              	.LBB2944:
 3165              	.LBB2945:
 3166              	.LBB2946:
 3167              	.LBB2947:
 3168              	.LBB2948:
 3169              	.LBB2949:
 3170              	.LBB2950:
 3171              	.LBB2951:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 3172              		.loc 2 378 46 is_stmt 0 view .LVU595
 3173 023e B9F1000F 		cmp	r9, #0
 3174              	.LBE2951:
 3175              	.LBE2950:
 3176              	.LBE2949:
 3177              	.LBE2948:
 3178              	.LBE2947:
 3179              	.LBE2946:
 3180              	.LBE2945:
 3181              	.LBE2944:
 3182              	.LBB3044:
 3183              	.LBB2938:
 3184              	.LBB2934:
 3185              	.LBB2930:
 3186              	.LBB2927:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 3187              		.loc 1 182 19 view .LVU596
 3188 0242 8C46     		mov	ip, r1
 3189              	.LVL117:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 3190              		.loc 1 182 19 view .LVU597
 3191              	.LBE2927:
 3192              	.LBE2930:
 3193              	.LBE2934:
 3194              	.LBE2938:
 3195              	.LBE3044:
 3196              	.LBE3104:
 3197              	.LBE3132:
 3198              	.LBE3160:
 3199              	.LBE3188:
 3200              	.LBE3223:
 3201              	.LBE3254:
 3202              	.LBE3285:
 3203              	.LBE3321:
 3204              	.LBE3369:
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 130


 3205              		.loc 1 288 7 is_stmt 1 view .LVU598
 3206              	.LBB3370:
 3207              	.LBB3322:
 3208              	.LBB3286:
 3209              	.LBB3255:
 3210              	.LBB3224:
 3211              	.LBB3189:
 3212              	.LBB3161:
 3213              	.LBB3133:
 3214              	.LBB3105:
 3215              	.LBB3045:
 3216              	.LBB2939:
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 3217              		.loc 1 307 7 view .LVU599
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 3218              		.loc 1 307 7 is_stmt 0 view .LVU600
 3219              	.LBE2939:
 3220              	.LBE3045:
 3221              	.LBB3046:
 3222              	.LBI3046:
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_requires_can_increment_range(__first, __last, __result);
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return std::__copy_move_a<__is_move_iterator<_II>::__value>
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first  An input iterator.
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __last   An input iterator.
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __result An output iterator.
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   result + (last - first)
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  [first,last); the move_backward function should be used instead.
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  within [first,last).
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _II, typename _OI>
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     move(_II __first, _II __last, _OI __result)
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 131


 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_requires_can_increment_range(__first, __last, __result);
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return std::__copy_move_a<true>(std::__miter_base(__first),
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				      std::__miter_base(__last), __result);
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::move(_Tp, _Up, _Vp)
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #else
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::copy(_Tp, _Up, _Vp)
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, bool _IsSimple, typename _Category>
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move_backward
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _BI1, typename _BI2>
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _BI2
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  while (__first != __last)
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *--__result = *--__last;
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Category>
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move_backward<true, false, _Category>
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _BI1, typename _BI2>
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _BI2
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  while (__first != __last)
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *--__result = std::move(*--__last);
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<>
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move_backward<false, false, random_access_iterator_tag>
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _BI1, typename _BI2>
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _BI2
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __n = __last - __first;
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for (; __n > 0; --__n)
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *--__result = *--__last;
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 132


 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<>
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move_backward<true, false, random_access_iterator_tag>
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _BI1, typename _BI2>
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _BI2
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __n = __last - __first;
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for (; __n > 0; --__n)
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *--__result = std::move(*--__last);
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove>
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move_backward<_IsMove, true, random_access_iterator_tag>
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _Tp>
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _Tp*
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_move_b(const _Tp* __first, const _Tp* __last, _Tp* __result)
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					   is_move_assignable<_Tp>,
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  // trivial types can have deleted assignment
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  if (_Num)
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result - _Num;
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _BI2
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_BI1>::iterator_category _Category;
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (std::is_constant_evaluated())
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return std::__copy_move_backward<_IsMove, false, _Category>::
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  __copy_move_b(__first, __last, __result);
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return std::__copy_move_backward<_IsMove,
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				       __memcpyable<_BI2, _BI1>::__value,
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				       _Category>::__copy_move_b(__first,
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 								 __last,
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 								 __result);
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 133


 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _BI2
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_backward_a1(_BI1 __first, _BI1 __last, _BI2 __result)
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_backward_a2<_IsMove>(__first, __last, __result); }
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _Tp, typename _Ref, typename _Ptr, typename _OI>
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _OI
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_backward_a1(_GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 			    _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 			    _OI);
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _ITp, typename _IRef, typename _IPtr, typename _OTp>
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_backward_a1(
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 			_GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 			_GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 			_GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>);
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _Tp>
 736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __is_random_access_iter<_II>::__value,
 738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*> >::__type
 739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_backward_a1(_II, _II,
 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 			    _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>);
 741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_backward_a(_II __first, _II __last, _OI __result)
 746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return std::__niter_wrap(__result,
 748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		std::__copy_move_backward_a1<_IsMove>
 749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  (std::__niter_base(__first), std::__niter_base(__last),
 750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   std::__niter_base(__result)));
 751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _Ite, typename _Seq, typename _Cat, typename _OI>
 755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _OI
 756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_backward_a(
 757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		_OI);
 760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _II, typename _Ite, typename _Seq, typename _Cat>
 763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>
 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_backward_a(_II, _II,
 765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&);
 766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _IIte, typename _ISeq, typename _ICat,
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 134


 769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _OIte, typename _OSeq, typename _OCat>
 770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>
 771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_backward_a(
 772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>&);
 775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first  A bidirectional iterator.
 780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __last   A bidirectional iterator.
 781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __result A bidirectional iterator.
 782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   result - (last - first)
 783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  The function has the same effect as copy, but starts at the end of the
 785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  range and works its way to the start, returning the start of the result.
 786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  optimizations such as unrolling).
 790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  Result may not be in the range (first,last].  Use copy instead.  Note
 792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  that the start of the output range may overlap [first,last).
 793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _BI1, typename _BI2>
 795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _BI2
 797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 3223              		.loc 2 797 5 is_stmt 1 view .LVU601
 3224              	.LBB3047:
 3225              	.LBI3047:
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 3226              		.loc 2 745 5 view .LVU602
 3227              	.LBB3048:
 3228              	.LBI3048:
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_backward_a2<_IsMove>(__first, __last, __result); }
 3229              		.loc 2 717 5 view .LVU603
 3230              	.LBB3049:
 3231              	.LBI3049:
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 3232              		.loc 2 699 5 view .LVU604
 3233              	.LBB3050:
 3234              	.LBB3051:
 3235              	.LBI3051:
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 3236              		.loc 2 646 2 view .LVU605
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 3237              		.loc 2 646 2 is_stmt 0 view .LVU606
 3238              	.LBE3051:
 3239              	.LBE3050:
 3240              	.LBE3049:
 3241              	.LBE3048:
 3242              	.LBE3047:
 3243              	.LBE3046:
 3244              	.LBE3105:
 3245              	.LBE3133:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 135


 3246              	.LBE3161:
 3247              	.LBE3189:
 3248              	.LBE3224:
 3249              	.LBE3255:
 3250              	.LBE3286:
 3251              	.LBE3322:
 3252              	.LBE3370:
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 3253              		.loc 1 226 7 is_stmt 1 view .LVU607
 3254              	.LBB3371:
 3255              	.LBB3323:
 3256              	.LBB3287:
 3257              	.LBB3256:
 3258              	.LBB3225:
 3259              	.LBB3190:
 3260              	.LBB3162:
 3261              	.LBB3134:
 3262              	.LBB3106:
 3263              	.LBB3069:
 3264              	.LBB3066:
 3265              	.LBB3063:
 3266              	.LBB3060:
 3267              	.LBB3057:
 3268              	.LBB3054:
 3269              	.LBB3052:
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *--__result = *--__last;
 3270              		.loc 2 650 15 view .LVU608
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *--__result = *--__last;
 3271              		.loc 2 650 15 is_stmt 0 view .LVU609
 3272              	.LBE3052:
 3273              	.LBE3054:
 3274              	.LBE3057:
 3275              	.LBE3060:
 3276              	.LBE3063:
 3277              	.LBE3066:
 3278              	.LBE3069:
 3279              	.LBB3070:
 3280              	.LBI2944:
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 3281              		.loc 2 560 5 is_stmt 1 view .LVU610
 3282              	.LBB3037:
 3283              	.LBI2945:
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 3284              		.loc 2 511 5 view .LVU611
 3285              	.LBB3030:
 3286              	.LBI2946:
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 3287              		.loc 2 505 5 view .LVU612
 3288              	.LBB3023:
 3289              	.LBI2947:
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 3290              		.loc 2 463 5 view .LVU613
 3291              	.LBB3016:
 3292              	.LBB3009:
 3293              	.LBI2949:
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 3294              		.loc 2 375 2 view .LVU614
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 136


 3295              	.LBB3002:
 3296              	.LBB2995:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 3297              		.loc 2 378 46 view .LVU615
 3298 0244 22DD     		ble	.L77
 3299              	.LVL118:
 3300              	.L36:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 3301              		.loc 2 378 46 is_stmt 0 view .LVU616
 3302 0246 039B     		ldr	r3, [sp, #12]
 3303 0248 5E1E     		subs	r6, r3, #1
 3304 024a B144     		add	r9, r9, r6
 3305              	.LVL119:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 3306              		.loc 2 378 46 view .LVU617
 3307 024c 09E0     		b	.L44
 3308              	.LVL120:
 3309              	.L90:
 3310              	.LBB2952:
 3311              	.LBB2953:
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       else
 3312              		.loc 1 93 2 is_stmt 1 view .LVU618
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       else
 3313              		.loc 1 93 8 is_stmt 0 view .LVU619
 3314 024e 3868     		ldr	r0, [r7]
 3315              	.LBE2953:
 3316              	.LBE2952:
 3317              	.LBB2962:
 3318              	.LBB2963:
 3319              	.LBB2964:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 3320              		.loc 1 154 7 view .LVU620
 3321 0250 1F2D     		cmp	r5, #31
 3322              	.LBE2964:
 3323              	.LBE2963:
 3324              	.LBE2962:
 3325              	.LBB2979:
 3326              	.LBB2958:
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       else
 3327              		.loc 1 93 8 view .LVU621
 3328 0252 43EA0003 		orr	r3, r3, r0
 3329 0256 3B60     		str	r3, [r7]
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 3330              		.loc 1 96 7 is_stmt 1 view .LVU622
 3331              	.LVL121:
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 3332              		.loc 1 96 7 is_stmt 0 view .LVU623
 3333              	.LBE2958:
 3334              	.LBE2979:
 3335              	.LBB2980:
 3336              	.LBI2962:
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 3337              		.loc 1 255 5 is_stmt 1 view .LVU624
 3338              	.LBE2980:
 3339              	.LBE2995:
 3340              	.LBE3002:
 3341              	.LBE3009:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 137


 3342              	.LBE3016:
 3343              	.LBE3023:
 3344              	.LBE3030:
 3345              	.LBE3037:
 3346              	.LBE3070:
 3347              	.LBE3106:
 3348              	.LBE3134:
 3349              	.LBE3162:
 3350              	.LBE3190:
 3351              	.LBE3225:
 3352              	.LBE3256:
 3353              	.LBE3287:
 3354              	.LBE3323:
 3355              	.LBE3371:
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 3356              		.loc 1 257 7 view .LVU625
 3357              	.LBB3372:
 3358              	.LBB3324:
 3359              	.LBB3288:
 3360              	.LBB3257:
 3361              	.LBB3226:
 3362              	.LBB3191:
 3363              	.LBB3163:
 3364              	.LBB3135:
 3365              	.LBB3107:
 3366              	.LBB3071:
 3367              	.LBB3038:
 3368              	.LBB3031:
 3369              	.LBB3024:
 3370              	.LBB3017:
 3371              	.LBB3010:
 3372              	.LBB3003:
 3373              	.LBB2996:
 3374              	.LBB2981:
 3375              	.LBB2974:
 3376              	.LBI2963:
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 3377              		.loc 1 152 5 view .LVU626
 3378              	.LBB2969:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 3379              		.loc 1 154 7 view .LVU627
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 3380              		.loc 1 154 7 is_stmt 0 view .LVU628
 3381 0258 0FD0     		beq	.L41
 3382              	.LVL122:
 3383              	.L91:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 3384              		.loc 1 154 7 view .LVU629
 3385              	.LBE2969:
 3386              	.LBE2974:
 3387              	.LBE2981:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 3388              		.loc 2 378 46 view .LVU630
 3389 025a B145     		cmp	r9, r6
 3390              	.LBB2982:
 3391              	.LBB2975:
 3392              	.LBB2970:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 138


 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 3393              		.loc 1 154 20 view .LVU631
 3394 025c 05F10105 		add	r5, r5, #1
 3395              	.LVL123:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 3396              		.loc 1 154 20 view .LVU632
 3397              	.LBE2970:
 3398              	.LBE2975:
 3399              	.LBE2982:
 3400              	.LBE2996:
 3401              	.LBE3003:
 3402              	.LBE3010:
 3403              	.LBE3017:
 3404              	.LBE3024:
 3405              	.LBE3031:
 3406              	.LBE3038:
 3407              	.LBE3071:
 3408              	.LBE3107:
 3409              	.LBE3135:
 3410              	.LBE3163:
 3411              	.LBE3191:
 3412              	.LBE3226:
 3413              	.LBE3257:
 3414              	.LBE3288:
 3415              	.LBE3324:
 3416              	.LBE3372:
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 3417              		.loc 1 258 7 is_stmt 1 view .LVU633
 3418              	.LBB3373:
 3419              	.LBB3325:
 3420              	.LBB3289:
 3421              	.LBB3258:
 3422              	.LBB3227:
 3423              	.LBB3192:
 3424              	.LBB3164:
 3425              	.LBB3136:
 3426              	.LBB3108:
 3427              	.LBB3072:
 3428              	.LBB3039:
 3429              	.LBB3032:
 3430              	.LBB3025:
 3431              	.LBB3018:
 3432              	.LBB3011:
 3433              	.LBB3004:
 3434              	.LBB2997:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 3435              		.loc 2 378 4 view .LVU634
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 3436              		.loc 2 378 46 view .LVU635
 3437 0260 11D0     		beq	.L89
 3438              	.LVL124:
 3439              	.L44:
 3440              	.LBB2983:
 3441              	.LBI2983:
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return reference(_M_p, 1UL << _M_offset); }
 3442              		.loc 1 251 5 view .LVU636
 3443              	.LBB2984:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 139


 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 3444              		.loc 1 252 7 view .LVU637
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 3445              		.loc 1 252 46 is_stmt 0 view .LVU638
 3446 0262 0123     		movs	r3, #1
 3447              	.LBE2984:
 3448              	.LBE2983:
 3449              	.LBB2987:
 3450              	.LBB2959:
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	*_M_p |= _M_mask;
 3451              		.loc 1 92 7 view .LVU639
 3452 0264 16F8010F 		ldrb	r0, [r6, #1]!	@ zero_extendqisi2
 3453              	.LVL125:
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	*_M_p |= _M_mask;
 3454              		.loc 1 92 7 view .LVU640
 3455              	.LBE2959:
 3456              	.LBE2987:
 3457              	.LBB2988:
 3458              	.LBB2986:
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 3459              		.loc 1 252 46 view .LVU641
 3460 0268 AB40     		lsls	r3, r3, r5
 3461              	.LVL126:
 3462              	.LBB2985:
 3463              	.LBI2985:
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_mask(__y) { }
 3464              		.loc 1 77 5 is_stmt 1 view .LVU642
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_mask(__y) { }
 3465              		.loc 1 77 5 is_stmt 0 view .LVU643
 3466              	.LBE2985:
 3467              	.LBE2986:
 3468              	.LBE2988:
 3469              	.LBB2989:
 3470              	.LBI2952:
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 3471              		.loc 1 90 5 is_stmt 1 view .LVU644
 3472              	.LBB2960:
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	*_M_p |= _M_mask;
 3473              		.loc 1 92 7 view .LVU645
 3474 026a 0028     		cmp	r0, #0
 3475 026c EFD1     		bne	.L90
 3476              	.LBB2954:
 3477              	.LBI2954:
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 3478              		.loc 1 90 5 view .LVU646
 3479              	.LVL127:
 3480              	.LBB2955:
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 3481              		.loc 1 95 2 view .LVU647
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 3482              		.loc 1 95 8 is_stmt 0 view .LVU648
 3483 026e 3868     		ldr	r0, [r7]
 3484              	.LBE2955:
 3485              	.LBE2954:
 3486              	.LBE2960:
 3487              	.LBE2989:
 3488              	.LBB2990:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 140


 3489              	.LBB2976:
 3490              	.LBB2971:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 3491              		.loc 1 154 7 view .LVU649
 3492 0270 1F2D     		cmp	r5, #31
 3493              	.LBE2971:
 3494              	.LBE2976:
 3495              	.LBE2990:
 3496              	.LBB2991:
 3497              	.LBB2961:
 3498              	.LBB2957:
 3499              	.LBB2956:
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 3500              		.loc 1 95 8 view .LVU650
 3501 0272 20EA0303 		bic	r3, r0, r3
 3502 0276 3B60     		str	r3, [r7]
 3503              	.LVL128:
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 3504              		.loc 1 95 8 view .LVU651
 3505              	.LBE2956:
 3506              	.LBE2957:
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 3507              		.loc 1 96 7 is_stmt 1 view .LVU652
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 3508              		.loc 1 96 7 is_stmt 0 view .LVU653
 3509              	.LBE2961:
 3510              	.LBE2991:
 3511              	.LBB2992:
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 3512              		.loc 1 255 5 is_stmt 1 view .LVU654
 3513              	.LBE2992:
 3514              	.LBE2997:
 3515              	.LBE3004:
 3516              	.LBE3011:
 3517              	.LBE3018:
 3518              	.LBE3025:
 3519              	.LBE3032:
 3520              	.LBE3039:
 3521              	.LBE3072:
 3522              	.LBE3108:
 3523              	.LBE3136:
 3524              	.LBE3164:
 3525              	.LBE3192:
 3526              	.LBE3227:
 3527              	.LBE3258:
 3528              	.LBE3289:
 3529              	.LBE3325:
 3530              	.LBE3373:
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 3531              		.loc 1 257 7 view .LVU655
 3532              	.LBB3374:
 3533              	.LBB3326:
 3534              	.LBB3290:
 3535              	.LBB3259:
 3536              	.LBB3228:
 3537              	.LBB3193:
 3538              	.LBB3165:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 141


 3539              	.LBB3137:
 3540              	.LBB3109:
 3541              	.LBB3073:
 3542              	.LBB3040:
 3543              	.LBB3033:
 3544              	.LBB3026:
 3545              	.LBB3019:
 3546              	.LBB3012:
 3547              	.LBB3005:
 3548              	.LBB2998:
 3549              	.LBB2993:
 3550              	.LBB2977:
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 3551              		.loc 1 152 5 view .LVU656
 3552              	.LBB2972:
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 3553              		.loc 1 154 7 view .LVU657
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 3554              		.loc 1 154 7 is_stmt 0 view .LVU658
 3555 0278 EFD1     		bne	.L91
 3556              	.LVL129:
 3557              	.L41:
 3558              	.LBB2965:
 3559              	.LBI2965:
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 3560              		.loc 1 152 5 is_stmt 1 view .LVU659
 3561              	.LBB2966:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  ++_M_p;
 3562              		.loc 1 156 4 view .LVU660
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 3563              		.loc 1 157 4 view .LVU661
 3564              	.LBE2966:
 3565              	.LBE2965:
 3566              	.LBE2972:
 3567              	.LBE2977:
 3568              	.LBE2993:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 3569              		.loc 2 378 46 is_stmt 0 view .LVU662
 3570 027a B145     		cmp	r9, r6
 3571              	.LBB2994:
 3572              	.LBB2978:
 3573              	.LBB2973:
 3574              	.LBB2968:
 3575              	.LBB2967:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 3576              		.loc 1 157 4 view .LVU663
 3577 027c 07F10407 		add	r7, r7, #4
 3578              	.LVL130:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  ++_M_p;
 3579              		.loc 1 156 14 view .LVU664
 3580 0280 4FF00005 		mov	r5, #0
 3581              	.LVL131:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  ++_M_p;
 3582              		.loc 1 156 14 view .LVU665
 3583              	.LBE2967:
 3584              	.LBE2968:
 3585              	.LBE2973:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 142


 3586              	.LBE2978:
 3587              	.LBE2994:
 3588              	.LBE2998:
 3589              	.LBE3005:
 3590              	.LBE3012:
 3591              	.LBE3019:
 3592              	.LBE3026:
 3593              	.LBE3033:
 3594              	.LBE3040:
 3595              	.LBE3073:
 3596              	.LBE3109:
 3597              	.LBE3137:
 3598              	.LBE3165:
 3599              	.LBE3193:
 3600              	.LBE3228:
 3601              	.LBE3259:
 3602              	.LBE3290:
 3603              	.LBE3326:
 3604              	.LBE3374:
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 3605              		.loc 1 258 7 is_stmt 1 view .LVU666
 3606              	.LBB3375:
 3607              	.LBB3327:
 3608              	.LBB3291:
 3609              	.LBB3260:
 3610              	.LBB3229:
 3611              	.LBB3194:
 3612              	.LBB3166:
 3613              	.LBB3138:
 3614              	.LBB3110:
 3615              	.LBB3074:
 3616              	.LBB3041:
 3617              	.LBB3034:
 3618              	.LBB3027:
 3619              	.LBB3020:
 3620              	.LBB3013:
 3621              	.LBB3006:
 3622              	.LBB2999:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 3623              		.loc 2 378 4 view .LVU667
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 3624              		.loc 2 378 46 view .LVU668
 3625 0284 EDD1     		bne	.L44
 3626              	.LVL132:
 3627              	.L89:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 3628              		.loc 2 378 46 is_stmt 0 view .LVU669
 3629              	.LBE2999:
 3630              	.LBE3006:
 3631              	.LBE3013:
 3632              	.LBE3020:
 3633              	.LBE3027:
 3634              	.LBE3034:
 3635              	.LBE3041:
 3636              	.LBE3074:
 3637              	.LBB3075:
 3638              	.LBI3075:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 143


 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 3639              		.loc 1 285 5 is_stmt 1 view .LVU670
 3640              	.LBE3075:
 3641              	.LBE3110:
 3642              	.LBE3138:
 3643              	.LBE3166:
 3644              	.LBE3194:
 3645              	.LBE3229:
 3646              	.LBE3260:
 3647              	.LBE3291:
 3648              	.LBE3327:
 3649              	.LBE3375:
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 3650              		.loc 1 287 7 view .LVU671
 3651              	.LBB3376:
 3652              	.LBB3328:
 3653              	.LBB3292:
 3654              	.LBB3261:
 3655              	.LBB3230:
 3656              	.LBB3195:
 3657              	.LBB3167:
 3658              	.LBB3139:
 3659              	.LBB3111:
 3660              	.LBB3078:
 3661              	.LBB3076:
 3662              	.LBI3076:
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 3663              		.loc 1 172 5 view .LVU672
 3664              	.LBB3077:
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_p += __n / int(_S_word_bit);
 3665              		.loc 1 174 7 view .LVU673
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 3666              		.loc 1 175 7 view .LVU674
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 3667              		.loc 1 176 7 view .LVU675
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 3668              		.loc 1 177 7 view .LVU676
 3669 0286 0029     		cmp	r1, #0
 3670 0288 00DA     		bge	.L77
 3671              	.LVL133:
 3672              	.L37:
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  --_M_p;
 3673              		.loc 1 179 4 view .LVU677
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 3674              		.loc 1 180 4 view .LVU678
 3675 028a 043A     		subs	r2, r2, #4
 3676              	.LVL134:
 3677              	.L77:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 3678              		.loc 1 182 17 is_stmt 0 view .LVU679
 3679 028c C4E9022C 		strd	r2, ip, [r4, #8]
 3680              	.LVL135:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 3681              		.loc 1 182 17 view .LVU680
 3682              	.LBE3077:
 3683              	.LBE3076:
 3684              	.LBE3078:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 144


 3685              	.LBE3111:
 3686              	.LBE3139:
 3687              	.LBE3167:
 3688              	.LBE3195:
 3689              	.LBE3230:
 3690              	.LBE3261:
 3691              	.LBE3292:
 3692              	.LBE3328:
 3693              	.LBE3376:
1274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 3694              		.loc 1 1274 2 view .LVU681
 3695 0290 09B0     		add	sp, sp, #36
 3696              		.cfi_remember_state
 3697              		.cfi_def_cfa_offset 36
 3698              		@ sp needed
 3699 0292 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3700              	.LVL136:
 3701              	.L66:
 3702              		.cfi_restore_state
 3703              	.LBB3377:
 3704              	.LBB3329:
 3705              	.LBB2452:
 3706              	.LBB2447:
 3707              	.LBB2442:
 3708              	.LBB2437:
 3709              	.LBB2432:
 3710              	.LBB2427:
 3711              	.LBB2422:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 3712              		.loc 2 378 46 view .LVU682
 3713 0296 0022     		movs	r2, #0
 3714              	.LVL137:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 3715              		.loc 2 378 46 view .LVU683
 3716 0298 E8E6     		b	.L16
 3717              	.LVL138:
 3718              	.L88:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 3719              		.loc 2 378 46 view .LVU684
 3720              	.LBE2422:
 3721              	.LBE2427:
 3722              	.LBE2432:
 3723              	.LBE2437:
 3724              	.LBE2442:
 3725              	.LBE2447:
 3726              	.LBE2452:
 3727              	.LBE3329:
 3728              	.LBB3330:
 3729              	.LBB3293:
 3730              	.LBB3262:
 3731              	.LBB3231:
 3732              	.LBB3196:
 3733              	.LBB3168:
 3734              	.LBB3140:
 3735              	.LBB3112:
 3736              	.LBB3079:
 3737              	.LBB2940:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 145


 3738              	.LBB2935:
 3739              	.LBB2931:
 3740              	.LBB2928:
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  --_M_p;
 3741              		.loc 1 179 4 is_stmt 1 view .LVU685
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 3742              		.loc 1 180 4 view .LVU686
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 3743              		.loc 1 182 7 view .LVU687
 3744              	.LBE2928:
 3745              	.LBE2931:
 3746              	.LBE2935:
 3747              	.LBE2940:
 3748              	.LBE3079:
 3749              	.LBB3080:
 3750              	.LBB3042:
 3751              	.LBB3035:
 3752              	.LBB3028:
 3753              	.LBB3021:
 3754              	.LBB3014:
 3755              	.LBB3007:
 3756              	.LBB3000:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 3757              		.loc 2 378 46 is_stmt 0 view .LVU688
 3758 029a B9F1000F 		cmp	r9, #0
 3759              	.LBE3000:
 3760              	.LBE3007:
 3761              	.LBE3014:
 3762              	.LBE3021:
 3763              	.LBE3028:
 3764              	.LBE3035:
 3765              	.LBE3042:
 3766              	.LBE3080:
 3767              	.LBB3081:
 3768              	.LBB2941:
 3769              	.LBB2936:
 3770              	.LBB2932:
 3771              	.LBB2929:
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  --_M_p;
 3772              		.loc 1 179 8 view .LVU689
 3773 029e 01F1200C 		add	ip, r1, #32
 3774              	.LVL139:
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  --_M_p;
 3775              		.loc 1 179 8 view .LVU690
 3776              	.LBE2929:
 3777              	.LBE2932:
 3778              	.LBE2936:
 3779              	.LBE2941:
 3780              	.LBE3081:
 3781              	.LBE3112:
 3782              	.LBE3140:
 3783              	.LBE3168:
 3784              	.LBE3196:
 3785              	.LBE3231:
 3786              	.LBE3262:
 3787              	.LBE3293:
 3788              	.LBE3330:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 146


 3789              	.LBE3377:
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 3790              		.loc 1 288 7 is_stmt 1 view .LVU691
 3791              	.LBB3378:
 3792              	.LBB3331:
 3793              	.LBB3294:
 3794              	.LBB3263:
 3795              	.LBB3232:
 3796              	.LBB3197:
 3797              	.LBB3169:
 3798              	.LBB3141:
 3799              	.LBB3113:
 3800              	.LBB3082:
 3801              	.LBB2942:
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 3802              		.loc 1 307 7 view .LVU692
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 3803              		.loc 1 307 7 is_stmt 0 view .LVU693
 3804              	.LBE2942:
 3805              	.LBE3082:
 3806              	.LBB3083:
 3807              		.loc 2 797 5 is_stmt 1 view .LVU694
 3808              	.LBB3067:
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 3809              		.loc 2 745 5 view .LVU695
 3810              	.LBB3064:
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_backward_a2<_IsMove>(__first, __last, __result); }
 3811              		.loc 2 717 5 view .LVU696
 3812              	.LBB3061:
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 3813              		.loc 2 699 5 view .LVU697
 3814              	.LBB3058:
 3815              	.LBB3055:
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 3816              		.loc 2 646 2 view .LVU698
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 3817              		.loc 2 646 2 is_stmt 0 view .LVU699
 3818              	.LBE3055:
 3819              	.LBE3058:
 3820              	.LBE3061:
 3821              	.LBE3064:
 3822              	.LBE3067:
 3823              	.LBE3083:
 3824              	.LBE3113:
 3825              	.LBE3141:
 3826              	.LBE3169:
 3827              	.LBE3197:
 3828              	.LBE3232:
 3829              	.LBE3263:
 3830              	.LBE3294:
 3831              	.LBE3331:
 3832              	.LBE3378:
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 3833              		.loc 1 226 7 is_stmt 1 view .LVU700
 3834              	.LBB3379:
 3835              	.LBB3332:
 3836              	.LBB3295:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 147


 3837              	.LBB3264:
 3838              	.LBB3233:
 3839              	.LBB3198:
 3840              	.LBB3170:
 3841              	.LBB3142:
 3842              	.LBB3114:
 3843              	.LBB3084:
 3844              	.LBB3068:
 3845              	.LBB3065:
 3846              	.LBB3062:
 3847              	.LBB3059:
 3848              	.LBB3056:
 3849              	.LBB3053:
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *--__result = *--__last;
 3850              		.loc 2 650 15 view .LVU701
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *--__result = *--__last;
 3851              		.loc 2 650 15 is_stmt 0 view .LVU702
 3852              	.LBE3053:
 3853              	.LBE3056:
 3854              	.LBE3059:
 3855              	.LBE3062:
 3856              	.LBE3065:
 3857              	.LBE3068:
 3858              	.LBE3084:
 3859              	.LBB3085:
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 3860              		.loc 2 560 5 is_stmt 1 view .LVU703
 3861              	.LBB3043:
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 3862              		.loc 2 511 5 view .LVU704
 3863              	.LBB3036:
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 3864              		.loc 2 505 5 view .LVU705
 3865              	.LBB3029:
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 3866              		.loc 2 463 5 view .LVU706
 3867              	.LBB3022:
 3868              	.LBB3015:
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 3869              		.loc 2 375 2 view .LVU707
 3870              	.LBB3008:
 3871              	.LBB3001:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 3872              		.loc 2 378 46 view .LVU708
 3873 02a2 D0DC     		bgt	.L36
 3874 02a4 F1E7     		b	.L37
 3875              	.LVL140:
 3876              	.L83:
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 3877              		.loc 2 378 46 is_stmt 0 view .LVU709
 3878              	.LBE3001:
 3879              	.LBE3008:
 3880              	.LBE3015:
 3881              	.LBE3022:
 3882              	.LBE3029:
 3883              	.LBE3036:
 3884              	.LBE3043:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 148


 3885              	.LBE3085:
 3886              	.LBB3086:
 3887              	.LBB2906:
 3888              	.LBB2631:
1321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 3889              		.loc 1 1321 24 view .LVU710
 3890 02a6 0448     		ldr	r0, .L92+4
 3891 02a8 FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 3892              	.LVL141:
 3893              	.L47:
1321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 3894              		.loc 1 1321 24 view .LVU711
 3895 02ac DFF80CA0 		ldr	r10, .L92+8
 3896 02b0 30E7     		b	.L48
 3897              	.L93:
 3898 02b2 00BF     		.align	2
 3899              	.L92:
 3900 02b4 E0FFFF7F 		.word	2147483616
 3901 02b8 00000000 		.word	.LC11
 3902 02bc FCFFFF0F 		.word	268435452
 3903              	.LBE2631:
 3904              	.LBE2906:
 3905              	.LBE3086:
 3906              	.LBE3114:
 3907              	.LBE3142:
 3908              	.LBE3170:
 3909              	.LBE3198:
 3910              	.LBE3233:
 3911              	.LBE3264:
 3912              	.LBE3295:
 3913              	.LBE3332:
 3914              	.LBE3379:
 3915              		.cfi_endproc
 3916              	.LFE4457:
 3918              		.section	.text._ZNSt6vectorIbSaIbEEaSERKS1_.isra.0,"ax",%progbits
 3919              		.align	1
 3920              		.p2align 2,,3
 3921              		.syntax unified
 3922              		.thumb
 3923              		.thumb_func
 3924              		.fpu fpv5-d16
 3926              	_ZNSt6vectorIbSaIbEEaSERKS1_.isra.0:
 3927              	.LVL142:
 3928              	.LFB4455:
 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 3929              		.loc 1 740 7 is_stmt 1 view -0
 3930              		.cfi_startproc
 3931              		@ args = 0, pretend = 0, frame = 16
 3932              		@ frame_needed = 0, uses_anonymous_args = 0
 742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  return *this;
 3933              		.loc 1 742 2 is_stmt 0 view .LVU713
 3934 0000 8842     		cmp	r0, r1
 3935 0002 48D0     		beq	.L108
 3936              	.LVL143:
 3937              	.LBB3467:
 3938              	.LBI3467:
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return size_type(end() - begin()); }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 149


 3939              		.loc 1 884 7 is_stmt 1 view .LVU714
 3940              	.LBB3468:
 3941              	.LBI3468:
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl._M_finish; }
 3942              		.loc 1 846 7 view .LVU715
 3943              	.LBB3469:
 3944              	.LBI3469:
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x._M_p, __x._M_offset) { }
 3945              		.loc 1 339 5 view .LVU716
 3946              	.LBE3469:
 3947              	.LBE3468:
 3948              	.LBE3467:
 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 3949              		.loc 1 740 7 is_stmt 0 view .LVU717
 3950 0004 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 3951              		.cfi_def_cfa_offset 28
 3952              		.cfi_offset 4, -28
 3953              		.cfi_offset 5, -24
 3954              		.cfi_offset 6, -20
 3955              		.cfi_offset 7, -16
 3956              		.cfi_offset 8, -12
 3957              		.cfi_offset 9, -8
 3958              		.cfi_offset 14, -4
 3959 0008 0446     		mov	r4, r0
 3960 000a 0D46     		mov	r5, r1
 3961              	.LBB3489:
 3962              	.LBB3475:
 3963              	.LBB3473:
 3964              	.LBB3470:
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 3965              		.loc 1 340 30 view .LVU718
 3966 000c 8868     		ldr	r0, [r1, #8]
 3967              	.LVL144:
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 3968              		.loc 1 340 30 view .LVU719
 3969              	.LBE3470:
 3970              	.LBE3473:
 3971              	.LBE3475:
 3972              	.LBE3489:
 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 3973              		.loc 1 740 7 view .LVU720
 3974 000e 87B0     		sub	sp, sp, #28
 3975              		.cfi_def_cfa_offset 56
 3976              	.LBB3490:
 3977              	.LBB3476:
 3978              	.LBB3477:
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 3979              		.loc 1 839 54 view .LVU721
 3980 0010 0968     		ldr	r1, [r1]
 3981              	.LVL145:
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 3982              		.loc 1 839 54 view .LVU722
 3983              	.LBE3477:
 3984              	.LBE3476:
 3985              	.LBB3481:
 3986              	.LBB3474:
 3987              	.LBB3472:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 150


 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 3988              		.loc 1 340 40 view .LVU723
 3989 0012 EA68     		ldr	r2, [r5, #12]
 3990              	.LVL146:
 3991              	.LBB3471:
 3992              	.LBI3471:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 3993              		.loc 1 148 5 is_stmt 1 view .LVU724
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 3994              		.loc 1 148 5 is_stmt 0 view .LVU725
 3995              	.LBE3471:
 3996              	.LBE3472:
 3997              	.LBE3474:
 3998              	.LBE3481:
 3999              	.LBB3482:
 4000              	.LBI3476:
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_iterator(this->_M_impl._M_start._M_p, 0); }
 4001              		.loc 1 838 7 is_stmt 1 view .LVU726
 4002              	.LBB3480:
 4003              	.LBB3478:
 4004              	.LBI3478:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 4005              		.loc 1 336 5 view .LVU727
 4006              	.LBB3479:
 4007              	.LBI3479:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 4008              		.loc 1 148 5 view .LVU728
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 4009              		.loc 1 148 5 is_stmt 0 view .LVU729
 4010              	.LBE3479:
 4011              	.LBE3478:
 4012              	.LBE3480:
 4013              	.LBE3482:
 4014              	.LBB3483:
 4015              	.LBI3483:
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 4016              		.loc 1 224 5 is_stmt 1 view .LVU730
 4017              	.LBB3484:
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 4018              		.loc 1 226 7 view .LVU731
 4019              	.LBE3484:
 4020              	.LBE3483:
 4021              	.LBE3490:
 4022              	.LBB3491:
 4023              	.LBB3492:
 4024              	.LBB3493:
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    return std::__addressof(this->_M_end_of_storage[-1]) + 1;
 4025              		.loc 1 515 14 is_stmt 0 view .LVU732
 4026 0014 2769     		ldr	r7, [r4, #16]
 4027              	.LBE3493:
 4028              	.LBE3492:
 4029              	.LBE3491:
 4030              	.LBB3505:
 4031              	.LBB3487:
 4032              	.LBB3485:
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 4033              		.loc 1 226 44 view .LVU733
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 151


 4034 0016 461A     		subs	r6, r0, r1
 4035              	.LBE3485:
 4036              	.LBE3487:
 4037              	.LBE3505:
 4038              	.LBB3506:
 4039              	.LBB3494:
 4040              	.LBB3495:
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 4041              		.loc 1 839 54 view .LVU734
 4042 0018 2368     		ldr	r3, [r4]
 4043              	.LBE3495:
 4044              	.LBE3494:
 4045              	.LBE3506:
 4046              	.LBB3507:
 4047              	.LBB3488:
 4048              	.LBB3486:
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 4049              		.loc 1 227 8 view .LVU735
 4050 001a 02EBC606 		add	r6, r2, r6, lsl #3
 4051              	.LVL147:
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 4052              		.loc 1 227 8 view .LVU736
 4053              	.LBE3486:
 4054              	.LBE3488:
 4055              	.LBE3507:
 4056              	.LBB3508:
 4057              	.LBI3491:
 900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return size_type(const_iterator(this->_M_impl._M_end_addr(), 0)
 4058              		.loc 1 900 7 is_stmt 1 view .LVU737
 4059              	.LBB3499:
 4060              	.LBI3492:
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 4061              		.loc 1 513 2 view .LVU738
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 4062              		.loc 1 513 2 is_stmt 0 view .LVU739
 4063              	.LBE3499:
 4064              	.LBB3500:
 4065              	.LBI3500:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 4066              		.loc 1 336 5 is_stmt 1 view .LVU740
 4067              	.LBB3501:
 4068              	.LBI3501:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 4069              		.loc 1 148 5 view .LVU741
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 4070              		.loc 1 148 5 is_stmt 0 view .LVU742
 4071              	.LBE3501:
 4072              	.LBE3500:
 4073              	.LBB3502:
 4074              	.LBI3494:
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_iterator(this->_M_impl._M_start._M_p, 0); }
 4075              		.loc 1 838 7 is_stmt 1 view .LVU743
 4076              	.LBB3498:
 4077              	.LBB3496:
 4078              	.LBI3496:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 4079              		.loc 1 336 5 view .LVU744
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 152


 4080              	.LBB3497:
 4081              	.LBI3497:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 4082              		.loc 1 148 5 view .LVU745
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 4083              		.loc 1 148 5 is_stmt 0 view .LVU746
 4084              	.LBE3497:
 4085              	.LBE3496:
 4086              	.LBE3498:
 4087              	.LBE3502:
 4088              	.LBB3503:
 4089              	.LBI3503:
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 4090              		.loc 1 224 5 is_stmt 1 view .LVU747
 4091              	.LBB3504:
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 4092              		.loc 1 226 7 view .LVU748
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 4093              		.loc 1 226 44 is_stmt 0 view .LVU749
 4094 001e A7EB030C 		sub	ip, r7, r3
 4095              	.LVL148:
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 4096              		.loc 1 226 44 view .LVU750
 4097              	.LBE3504:
 4098              	.LBE3503:
 4099              	.LBE3508:
 759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 4100              		.loc 1 759 2 view .LVU751
 4101 0022 B6EBCC0F 		cmp	r6, ip, lsl #3
 4102 0026 12D8     		bhi	.L105
 4103 0028 04F10807 		add	r7, r4, #8
 4104              	.L96:
 4105              	.LVL149:
 4106              	.LBB3509:
 4107              	.LBI3509:
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_iterator(this->_M_impl._M_start._M_p, 0); }
 4108              		.loc 1 838 7 is_stmt 1 view .LVU752
 4109              	.LBB3510:
 4110              	.LBB3511:
 4111              	.LBI3511:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 4112              		.loc 1 336 5 view .LVU753
 4113              	.LBB3512:
 4114              	.LBI3512:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 4115              		.loc 1 148 5 view .LVU754
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 4116              		.loc 1 148 5 is_stmt 0 view .LVU755
 4117              	.LBE3512:
 4118              	.LBE3511:
 4119              	.LBE3510:
 4120              	.LBE3509:
 4121              	.LBB3514:
 4122              	.LBI3514:
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl._M_finish; }
 4123              		.loc 1 846 7 is_stmt 1 view .LVU756
 4124              	.LBB3515:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 153


 4125              	.LBB3516:
 4126              	.LBI3516:
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x._M_p, __x._M_offset) { }
 4127              		.loc 1 339 5 view .LVU757
 4128              	.LBB3517:
 4129              	.LBB3518:
 4130              	.LBI3518:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 4131              		.loc 1 148 5 view .LVU758
 4132              	.LBE3518:
 4133              	.LBE3517:
 4134              	.LBE3516:
 4135              	.LBE3515:
 4136              	.LBE3514:
 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 						  begin());
 4137              		.loc 1 764 43 is_stmt 0 view .LVU759
 4138 002c 0093     		str	r3, [sp]
 4139              	.LVL150:
 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 						  begin());
 4140              		.loc 1 764 43 view .LVU760
 4141 002e 02AC     		add	r4, sp, #8
 4142              	.LVL151:
 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 						  begin());
 4143              		.loc 1 764 43 view .LVU761
 4144 0030 06AB     		add	r3, sp, #24
 4145              	.LBB3528:
 4146              	.LBB3526:
 4147              	.LBB3524:
 4148              	.LBB3522:
 4149              	.LBB3521:
 4150              	.LBB3519:
 4151              	.LBB3520:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 4152              		.loc 1 149 31 view .LVU762
 4153 0032 0490     		str	r0, [sp, #16]
 4154 0034 0592     		str	r2, [sp, #20]
 4155              	.LVL152:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 4156              		.loc 1 149 31 view .LVU763
 4157              	.LBE3520:
 4158              	.LBE3519:
 4159              	.LBE3521:
 4160              	.LBE3522:
 4161              	.LBE3524:
 4162              	.LBE3526:
 4163              	.LBE3528:
 4164              	.LBB3529:
 4165              	.LBI3529:
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return iterator(this->_M_impl._M_start._M_p, 0); }
 4166              		.loc 1 834 7 is_stmt 1 view .LVU764
 4167              	.LBB3530:
 4168              	.LBI3530:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 4169              		.loc 1 243 5 view .LVU765
 4170              	.LBB3531:
 4171              	.LBI3531:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 154


 4172              		.loc 1 148 5 view .LVU766
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 4173              		.loc 1 148 5 is_stmt 0 view .LVU767
 4174              	.LBE3531:
 4175              	.LBE3530:
 4176              	.LBE3529:
 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 						  begin());
 4177              		.loc 1 764 43 view .LVU768
 4178 0036 2046     		mov	r0, r4
 4179 0038 13E90C00 		ldmdb	r3, {r2, r3}
 4180 003c FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator.isra.0
 4181              	.LVL153:
 4182 0040 94E80300 		ldm	r4, {r0, r1}
 4183 0044 87E80300 		stm	r7, {r0, r1}
 767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 4184              		.loc 1 767 7 view .LVU769
 4185 0048 07B0     		add	sp, sp, #28
 4186              		.cfi_remember_state
 4187              		.cfi_def_cfa_offset 28
 4188              		@ sp needed
 4189 004a BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 4190              	.LVL154:
 4191              	.L105:
 4192              		.cfi_restore_state
 4193              	.LBB3532:
 4194              	.LBI3532:
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 4195              		.loc 1 560 7 is_stmt 1 view .LVU770
 4196              	.LBB3533:
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 4197              		.loc 1 562 2 is_stmt 0 view .LVU771
 4198 004e FBB1     		cbz	r3, .L111
 4199              	.LVL155:
 4200              	.LBB3534:
 4201              	.LBB3535:
 4202              	.LBI3535:
 4203              		.loc 6 491 7 is_stmt 1 view .LVU772
 4204              	.LBB3536:
 4205              	.LBI3536:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 4206              		.loc 5 120 7 view .LVU773
 4207              	.LBB3537:
 4208              		.loc 5 133 19 is_stmt 0 view .LVU774
 4209 0050 6146     		mov	r1, ip
 4210 0052 781A     		subs	r0, r7, r1
 4211              	.LVL156:
 4212              		.loc 5 133 19 view .LVU775
 4213              	.LBE3537:
 4214              	.LBE3536:
 4215              	.LBE3535:
 4216              	.LBB3540:
 4217              	.LBB3541:
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_end_of_storage = _Bit_pointer();
 4218              		.loc 1 490 4 view .LVU776
 4219 0054 04F10807 		add	r7, r4, #8
 4220              	.LBE3541:
 4221              	.LBE3540:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 155


 4222              	.LBB3545:
 4223              	.LBB3539:
 4224              	.LBB3538:
 4225              		.loc 5 133 19 view .LVU777
 4226 0058 FFF7FEFF 		bl	_ZdlPvj
 4227              	.LVL157:
 4228              		.loc 5 133 19 view .LVU778
 4229              	.LBE3538:
 4230              	.LBE3539:
 4231              	.LBE3545:
 4232              	.LBB3546:
 4233              	.LBI3540:
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 4234              		.loc 1 488 2 is_stmt 1 view .LVU779
 4235              	.LBB3544:
 4236              	.LBB3542:
 4237              	.LBI3542:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 4238              		.loc 1 241 5 view .LVU780
 4239              	.LBB3543:
 4240              	.LBI3543:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 4241              		.loc 1 148 5 view .LVU781
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 4242              		.loc 1 148 5 is_stmt 0 view .LVU782
 4243              	.LBE3543:
 4244              	.LBE3542:
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_end_of_storage = _Bit_pointer();
 4245              		.loc 1 490 4 view .LVU783
 4246 005c 0023     		movs	r3, #0
 4247 005e C4E90233 		strd	r3, r3, [r4, #8]
 4248 0062 97E80300 		ldm	r7, {r0, r1}
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 4249              		.loc 1 491 22 view .LVU784
 4250 0066 2361     		str	r3, [r4, #16]
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_end_of_storage = _Bit_pointer();
 4251              		.loc 1 490 4 view .LVU785
 4252 0068 84E80300 		stm	r4, {r0, r1}
 4253              	.LBE3544:
 4254              	.LBE3546:
 4255              	.LBE3534:
 4256              	.LBE3533:
 4257              	.LBE3532:
 4258              	.LBB3547:
 4259              	.LBB3548:
 4260              	.LBB3549:
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 4261              		.loc 1 226 44 view .LVU786
 4262 006c 2B68     		ldr	r3, [r5]
 4263 006e AE68     		ldr	r6, [r5, #8]
 4264 0070 F61A     		subs	r6, r6, r3
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 4265              		.loc 1 227 8 view .LVU787
 4266 0072 EB68     		ldr	r3, [r5, #12]
 4267 0074 03EBC606 		add	r6, r3, r6, lsl #3
 4268              	.LVL158:
 4269              	.L97:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 156


 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 4270              		.loc 1 227 8 view .LVU788
 4271              	.LBE3549:
 4272              	.LBE3548:
 4273              	.LBI3547:
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return size_type(end() - begin()); }
 4274              		.loc 1 884 7 is_stmt 1 view .LVU789
 4275              	.LBB3551:
 4276              	.LBI3551:
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl._M_finish; }
 4277              		.loc 1 846 7 view .LVU790
 4278              	.LBB3552:
 4279              	.LBI3552:
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x._M_p, __x._M_offset) { }
 4280              		.loc 1 339 5 view .LVU791
 4281              	.LBB3553:
 4282              	.LBB3554:
 4283              	.LBI3554:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 4284              		.loc 1 148 5 view .LVU792
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 4285              		.loc 1 148 5 is_stmt 0 view .LVU793
 4286              	.LBE3554:
 4287              	.LBE3553:
 4288              	.LBE3552:
 4289              	.LBE3551:
 4290              	.LBB3555:
 4291              	.LBI3555:
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_iterator(this->_M_impl._M_start._M_p, 0); }
 4292              		.loc 1 838 7 is_stmt 1 view .LVU794
 4293              	.LBB3556:
 4294              	.LBB3557:
 4295              	.LBI3557:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 4296              		.loc 1 336 5 view .LVU795
 4297              	.LBB3558:
 4298              	.LBI3558:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 4299              		.loc 1 148 5 view .LVU796
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 4300              		.loc 1 148 5 is_stmt 0 view .LVU797
 4301              	.LBE3558:
 4302              	.LBE3557:
 4303              	.LBE3556:
 4304              	.LBE3555:
 4305              	.LBB3559:
 4306              	.LBI3548:
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 4307              		.loc 1 224 5 is_stmt 1 view .LVU798
 4308              	.LBB3550:
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 4309              		.loc 1 226 7 view .LVU799
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 4310              		.loc 1 226 7 is_stmt 0 view .LVU800
 4311              	.LBE3550:
 4312              	.LBE3559:
 4313              	.LBE3547:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 157


 4314              	.LBB3560:
 4315              	.LBI3560:
1143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 4316              		.loc 1 1143 7 is_stmt 1 view .LVU801
 4317              	.LBB3561:
 4318              	.LBB3562:
1145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 4319              		.loc 1 1145 2 is_stmt 0 view .LVU802
 4320 0078 76B9     		cbnz	r6, .L112
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 4321              		.loc 1 1154 6 view .LVU803
 4322 007a 3346     		mov	r3, r6
 4323              	.LBE3562:
 4324              	.LBB3592:
 4325              	.LBB3593:
 4326              	.LBB3594:
 4327              	.LBB3595:
 4328              	.LBB3596:
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 4329              		.loc 1 175 12 view .LVU804
 4330 007c 3246     		mov	r2, r6
 4331              	.LBE3596:
 4332              	.LBE3595:
 4333              	.LBE3594:
 4334              	.LBE3593:
 4335              	.LBE3592:
 4336              	.LBB3634:
1153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    this->_M_impl._M_start = iterator(0, 0);
 4337              		.loc 1 1153 38 view .LVU805
 4338 007e 2661     		str	r6, [r4, #16]
 4339              	.LVL159:
 4340              	.LBB3563:
 4341              	.LBI3563:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 4342              		.loc 1 243 5 is_stmt 1 view .LVU806
 4343              	.LBB3564:
 4344              	.LBI3564:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 4345              		.loc 1 148 5 view .LVU807
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 4346              		.loc 1 148 5 is_stmt 0 view .LVU808
 4347              	.LBE3564:
 4348              	.LBE3563:
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 4349              		.loc 1 1154 6 view .LVU809
 4350 0080 C4E90066 		strd	r6, r6, [r4]
 4351              	.LVL160:
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 4352              		.loc 1 1154 6 view .LVU810
 4353              	.LBE3634:
 4354              	.LBB3635:
 4355              	.LBI3592:
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 4356              		.loc 1 303 5 is_stmt 1 view .LVU811
 4357              	.LBB3623:
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __tmp += __n;
 4358              		.loc 1 305 7 view .LVU812
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 158


 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __tmp;
 4359              		.loc 1 306 7 view .LVU813
 4360              	.LBB3613:
 4361              	.LBI3594:
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 4362              		.loc 1 285 5 view .LVU814
 4363              	.LBE3613:
 4364              	.LBE3623:
 4365              	.LBE3635:
 4366              	.LBE3561:
 4367              	.LBE3560:
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 4368              		.loc 1 287 7 view .LVU815
 4369              	.LBB3657:
 4370              	.LBB3653:
 4371              	.LBB3636:
 4372              	.LBB3624:
 4373              	.LBB3614:
 4374              	.LBB3605:
 4375              	.LBI3595:
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 4376              		.loc 1 172 5 view .LVU816
 4377              	.LBB3597:
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_p += __n / int(_S_word_bit);
 4378              		.loc 1 174 7 view .LVU817
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 4379              		.loc 1 175 7 view .LVU818
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 4380              		.loc 1 176 7 view .LVU819
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 4381              		.loc 1 177 7 view .LVU820
 4382              	.L101:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 4383              		.loc 1 182 7 view .LVU821
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 4384              		.loc 1 182 7 is_stmt 0 view .LVU822
 4385              	.LBE3597:
 4386              	.LBE3605:
 4387              	.LBE3614:
 4388              	.LBE3624:
 4389              	.LBE3636:
 4390              	.LBE3653:
 4391              	.LBE3657:
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 4392              		.loc 1 288 7 is_stmt 1 view .LVU823
 4393              	.LBB3658:
 4394              	.LBB3654:
 4395              	.LBB3637:
 4396              	.LBB3625:
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 4397              		.loc 1 307 7 view .LVU824
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 4398              		.loc 1 307 7 is_stmt 0 view .LVU825
 4399              	.LBE3625:
 4400              	.LBE3637:
1156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 4401              		.loc 1 1156 51 view .LVU826
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 159


 4402 0084 C4E90226 		strd	r2, r6, [r4, #8]
 4403              	.LBE3654:
 4404              	.LBE3658:
 4405              	.LBB3659:
 4406              	.LBB3513:
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 4407              		.loc 1 839 54 view .LVU827
 4408 0088 2968     		ldr	r1, [r5]
 4409              	.LBE3513:
 4410              	.LBE3659:
 4411              	.LBB3660:
 4412              	.LBB3527:
 4413              	.LBB3525:
 4414              	.LBB3523:
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 4415              		.loc 1 340 40 view .LVU828
 4416 008a D5E90202 		ldrd	r0, r2, [r5, #8]
 4417              	.LBE3523:
 4418              	.LBE3525:
 4419              	.LBE3527:
 4420              	.LBE3660:
 4421              	.LBB3661:
 4422              	.LBB3655:
1158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 4423              		.loc 1 1158 7 view .LVU829
 4424 008e CDE7     		b	.L96
 4425              	.LVL161:
 4426              	.L111:
1158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 4427              		.loc 1 1158 7 view .LVU830
 4428 0090 04F10807 		add	r7, r4, #8
 4429 0094 F0E7     		b	.L97
 4430              	.LVL162:
 4431              	.L108:
 4432              		.cfi_def_cfa_offset 0
 4433              		.cfi_restore 4
 4434              		.cfi_restore 5
 4435              		.cfi_restore 6
 4436              		.cfi_restore 7
 4437              		.cfi_restore 8
 4438              		.cfi_restore 9
 4439              		.cfi_restore 14
1158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 4440              		.loc 1 1158 7 view .LVU831
 4441 0096 7047     		bx	lr
 4442              	.LVL163:
 4443              	.L112:
 4444              		.cfi_def_cfa_offset 56
 4445              		.cfi_offset 4, -28
 4446              		.cfi_offset 5, -24
 4447              		.cfi_offset 6, -20
 4448              		.cfi_offset 7, -16
 4449              		.cfi_offset 8, -12
 4450              		.cfi_offset 9, -8
 4451              		.cfi_offset 14, -4
 4452              	.LBB3638:
 4453              	.LBB3565:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 160


 4454              	.LBB3566:
 4455              	.LBI3566:
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return _Bit_alloc_traits::allocate(_M_impl, _S_nword(__n)); }
 4456              		.loc 1 556 7 is_stmt 1 view .LVU832
 4457              	.LBB3567:
 4458              	.LBI3567:
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return (__n + int(_S_word_bit) - 1) / int(_S_word_bit); }
 4459              		.loc 1 579 7 view .LVU833
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return (__n + int(_S_word_bit) - 1) / int(_S_word_bit); }
 4460              		.loc 1 579 7 is_stmt 0 view .LVU834
 4461              	.LBE3567:
 4462              	.LBB3569:
 4463              	.LBI3569:
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 4464              		.loc 6 459 7 is_stmt 1 view .LVU835
 4465              	.LBB3570:
 4466              	.LBI3570:
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 4467              		.loc 5 103 7 view .LVU836
 4468              	.LBE3570:
 4469              	.LBE3569:
 4470              	.LBB3577:
 4471              	.LBB3568:
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     };
 4472              		.loc 1 580 40 is_stmt 0 view .LVU837
 4473 0098 06F11F08 		add	r8, r6, #31
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     };
 4474              		.loc 1 580 62 view .LVU838
 4475 009c 4FEA5819 		lsr	r9, r8, #5
 4476              	.LVL164:
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     };
 4477              		.loc 1 580 62 view .LVU839
 4478              	.LBE3568:
 4479              	.LBE3577:
 4480              	.LBE3566:
 4481              	.LBE3565:
 4482              	.LBE3638:
 4483              	.LBB3639:
 4484              	.LBB3626:
 4485              	.LBB3615:
 4486              	.LBB3606:
 4487              	.LBB3598:
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 4488              		.loc 1 175 19 view .LVU840
 4489 00a0 18EA2608 		ands	r8, r8, r6, asr #32
 4490 00a4 38BF     		it	cc
 4491 00a6 B046     		movcc	r8, r6
 4492              	.LBE3598:
 4493              	.LBE3606:
 4494              	.LBE3615:
 4495              	.LBE3626:
 4496              	.LBE3639:
 4497              	.LBB3640:
 4498              	.LBB3586:
 4499              	.LBB3581:
 4500              	.LBB3578:
 4501              	.LBB3574:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 161


 4502              	.LBB3571:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 4503              		.loc 5 115 41 view .LVU841
 4504 00a8 4FEA8909 		lsl	r9, r9, #2
 4505              	.LVL165:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 4506              		.loc 5 115 41 view .LVU842
 4507              	.LBE3571:
 4508              	.LBE3574:
 4509              	.LBE3578:
 4510              	.LBE3581:
 4511              	.LBE3586:
 4512              	.LBE3640:
 4513              	.LBB3641:
 4514              	.LBB3627:
 4515              	.LBB3616:
 4516              	.LBB3607:
 4517              	.LBB3599:
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 4518              		.loc 1 175 19 view .LVU843
 4519 00ac 4FEA6818 		asr	r8, r8, #5
 4520              	.LBE3599:
 4521              	.LBE3607:
 4522              	.LBE3616:
 4523              	.LBE3627:
 4524              	.LBE3641:
 4525              	.LBB3642:
 4526              	.LBB3587:
 4527              	.LBB3582:
 4528              	.LBB3579:
 4529              	.LBB3575:
 4530              	.LBB3572:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 4531              		.loc 5 115 41 view .LVU844
 4532 00b0 4846     		mov	r0, r9
 4533 00b2 FFF7FEFF 		bl	_Znwj
 4534              	.LVL166:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 4535              		.loc 5 115 41 view .LVU845
 4536              	.LBE3572:
 4537              	.LBE3575:
 4538              	.LBE3579:
 4539              	.LBE3582:
 4540              	.LBE3587:
 4541              	.LBE3642:
 4542              	.LBB3643:
 4543              	.LBB3628:
 4544              	.LBB3617:
 4545              	.LBB3608:
 4546              	.LBB3600:
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 4547              		.loc 1 176 11 view .LVU846
 4548 00b6 7142     		rsbs	r1, r6, #0
 4549 00b8 06F01F06 		and	r6, r6, #31
 4550              	.LVL167:
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 4551              		.loc 1 176 11 view .LVU847
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 162


 4552              	.LBE3600:
 4553              	.LBE3608:
 4554              	.LBE3617:
 4555              	.LBE3628:
 4556              	.LBE3643:
 4557              	.LBB3644:
 4558              	.LBB3588:
1148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    this->_M_impl._M_start = iterator(std::__addressof(*__q), 0);
 4559              		.loc 1 1148 44 view .LVU848
 4560 00bc 00EB0902 		add	r2, r0, r9
 4561              	.LBE3588:
 4562              	.LBE3644:
 4563              	.LBB3645:
 4564              	.LBB3629:
 4565              	.LBB3618:
 4566              	.LBB3609:
 4567              	.LBB3601:
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 4568              		.loc 1 176 11 view .LVU849
 4569 00c0 01F01F01 		and	r1, r1, #31
 4570              	.LBE3601:
 4571              	.LBE3609:
 4572              	.LBE3618:
 4573              	.LBE3629:
 4574              	.LBE3645:
 4575              	.LBB3646:
 4576              	.LBB3589:
 4577              	.LBB3583:
 4578              	.LBB3580:
 4579              	.LBB3576:
 4580              	.LBB3573:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 4581              		.loc 5 115 41 view .LVU850
 4582 00c4 0346     		mov	r3, r0
 4583              	.LVL168:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 4584              		.loc 5 115 41 view .LVU851
 4585              	.LBE3573:
 4586              	.LBE3576:
 4587              	.LBE3580:
 4588              	.LBE3583:
1148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    this->_M_impl._M_start = iterator(std::__addressof(*__q), 0);
 4589              		.loc 1 1148 38 view .LVU852
 4590 00c6 2261     		str	r2, [r4, #16]
 4591              	.LVL169:
 4592              	.LBB3584:
 4593              	.LBI3584:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 4594              		.loc 1 243 5 is_stmt 1 view .LVU853
 4595              	.LBB3585:
 4596              	.LBI3585:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 4597              		.loc 1 148 5 view .LVU854
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 4598              		.loc 1 148 5 is_stmt 0 view .LVU855
 4599              	.LBE3585:
 4600              	.LBE3584:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 163


 4601              	.LBE3589:
 4602              	.LBE3646:
 4603              	.LBB3647:
 4604              	.LBB3630:
 4605              	.LBB3619:
 4606              	.LBB3610:
 4607              	.LBB3602:
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 4608              		.loc 1 175 12 view .LVU856
 4609 00c8 00EB8802 		add	r2, r0, r8, lsl #2
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 4610              		.loc 1 176 11 view .LVU857
 4611 00cc 58BF     		it	pl
 4612 00ce 4E42     		rsbpl	r6, r1, #0
 4613              	.LBE3602:
 4614              	.LBE3610:
 4615              	.LBE3619:
 4616              	.LBE3630:
 4617              	.LBE3647:
 4618              	.LBB3648:
 4619              	.LBB3590:
1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 4620              		.loc 1 1149 6 view .LVU858
 4621 00d0 0021     		movs	r1, #0
 4622 00d2 2060     		str	r0, [r4]
 4623              	.LBE3590:
 4624              	.LBE3648:
 4625              	.LBB3649:
 4626              	.LBB3631:
 4627              	.LBB3620:
 4628              	.LBB3611:
 4629              	.LBB3603:
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 4630              		.loc 1 177 7 view .LVU859
 4631 00d4 8E42     		cmp	r6, r1
 4632              	.LBE3603:
 4633              	.LBE3611:
 4634              	.LBE3620:
 4635              	.LBE3631:
 4636              	.LBE3649:
 4637              	.LBB3650:
 4638              	.LBB3591:
1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 4639              		.loc 1 1149 6 view .LVU860
 4640 00d6 6160     		str	r1, [r4, #4]
 4641              	.LVL170:
1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 4642              		.loc 1 1149 6 view .LVU861
 4643              	.LBE3591:
 4644              	.LBE3650:
 4645              	.LBB3651:
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 4646              		.loc 1 303 5 is_stmt 1 view .LVU862
 4647              	.LBB3632:
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __tmp += __n;
 4648              		.loc 1 305 7 view .LVU863
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __tmp;
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 164


 4649              		.loc 1 306 7 view .LVU864
 4650              	.LBB3621:
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 4651              		.loc 1 285 5 view .LVU865
 4652              	.LBE3621:
 4653              	.LBE3632:
 4654              	.LBE3651:
 4655              	.LBE3655:
 4656              	.LBE3661:
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 4657              		.loc 1 287 7 view .LVU866
 4658              	.LBB3662:
 4659              	.LBB3656:
 4660              	.LBB3652:
 4661              	.LBB3633:
 4662              	.LBB3622:
 4663              	.LBB3612:
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 4664              		.loc 1 172 5 view .LVU867
 4665              	.LBB3604:
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_p += __n / int(_S_word_bit);
 4666              		.loc 1 174 7 view .LVU868
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 4667              		.loc 1 175 7 view .LVU869
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 4668              		.loc 1 176 7 view .LVU870
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 4669              		.loc 1 177 7 view .LVU871
 4670 00d8 D4DA     		bge	.L101
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  --_M_p;
 4671              		.loc 1 179 4 view .LVU872
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  --_M_p;
 4672              		.loc 1 179 8 is_stmt 0 view .LVU873
 4673 00da 2036     		adds	r6, r6, #32
 4674              	.LVL171:
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 4675              		.loc 1 180 4 is_stmt 1 view .LVU874
 4676 00dc 043A     		subs	r2, r2, #4
 4677 00de D1E7     		b	.L101
 4678              	.LBE3604:
 4679              	.LBE3612:
 4680              	.LBE3622:
 4681              	.LBE3633:
 4682              	.LBE3652:
 4683              	.LBE3656:
 4684              	.LBE3662:
 4685              		.cfi_endproc
 4686              	.LFE4455:
 4688              		.section	.text._ZN9Sequencer4tickEv,"ax",%progbits
 4689              		.align	1
 4690              		.p2align 2,,3
 4691              		.global	_ZN9Sequencer4tickEv
 4692              		.syntax unified
 4693              		.thumb
 4694              		.thumb_func
 4695              		.fpu fpv5-d16
 4697              	_ZN9Sequencer4tickEv:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 165


 4698              	.LVL172:
 4699              	.LFB3598:
 4700              		.file 7 "Sequencer.cpp"
   1:Sequencer.cpp **** /*
   2:Sequencer.cpp **** GNU General Public License v3.0
   3:Sequencer.cpp **** Author: Jack Payne
   4:Sequencer.cpp **** 
   5:Sequencer.cpp ****  _______             __                                __                                  __ 
   6:Sequencer.cpp **** /       \           /  |                              /  |                                /  |
   7:Sequencer.cpp **** BBBBBBB  |  ______  BB/  ________   ______    _______ BB |____    ______    ______    ____BB |
   8:Sequencer.cpp **** BB |__BB | /      \ /  |/        | /      \  /       |BB      \  /      \  /      \  /    BB |
   9:Sequencer.cpp **** BB    BB< /BBBBBB  |BB |BBBBBBBB/  BBBBBB  |/BBBBBBB/ BBBBBBB  |/BBBBBB  |/BBBBBB  |/BBBBBBB |
  10:Sequencer.cpp **** BBBBBBB  |BB |  BB/ BB |  /  BB/   /    BB |BB |      BB |  BB |BB |  BB |BB |  BB/ BB |  BB |
  11:Sequencer.cpp **** BB |__BB |BB |      BB | /BBBB/__ /BBBBBBB |BB \_____ BB |  BB |BB \__BB |BB |      BB \__BB |
  12:Sequencer.cpp **** BB    BB/ BB |      BB |/BB      |BB    BB |BB       |BB |  BB |BB    BB/ BB |      BB    BB |
  13:Sequencer.cpp **** BBBBBBB/  BB/       BB/ BBBBBBBB/  BBBBBBB/  BBBBBBB/ BB/   BB/  BBBBBB/  BB/        BBBBBBB/	v1.0
  14:Sequencer.cpp **** */
  15:Sequencer.cpp **** 
  16:Sequencer.cpp **** #include "Sequencer.h"
  17:Sequencer.cpp **** 
  18:Sequencer.cpp **** Sequencer::Sequencer(float sample_rate, DrumSynth& drum_synth, ChordSynth& chord_synth) 
  19:Sequencer.cpp ****     : sample_rate(sample_rate), drum_synth(drum_synth), chord_synth(chord_synth), bpm(105) {
  20:Sequencer.cpp ****         init_sequences();
  21:Sequencer.cpp ****     }
  22:Sequencer.cpp **** 
  23:Sequencer.cpp **** void Sequencer::tick() {
 4701              		.loc 7 23 24 view -0
 4702              		.cfi_startproc
 4703              		@ args = 0, pretend = 0, frame = 0
 4704              		@ frame_needed = 0, uses_anonymous_args = 0
  24:Sequencer.cpp ****     int SAMPLES_IN_BAR = static_cast<int>(sample_rate * ((60.f * 4.f )/ bpm));
 4705              		.loc 7 24 5 view .LVU876
  23:Sequencer.cpp ****     int SAMPLES_IN_BAR = static_cast<int>(sample_rate * ((60.f * 4.f )/ bpm));
 4706              		.loc 7 23 24 is_stmt 0 view .LVU877
 4707 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4708              		.cfi_def_cfa_offset 24
 4709              		.cfi_offset 4, -24
 4710              		.cfi_offset 5, -20
 4711              		.cfi_offset 6, -16
 4712              		.cfi_offset 7, -12
 4713              		.cfi_offset 8, -8
 4714              		.cfi_offset 14, -4
 4715              		.loc 7 24 73 view .LVU878
 4716 0004 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
  23:Sequencer.cpp ****     int SAMPLES_IN_BAR = static_cast<int>(sample_rate * ((60.f * 4.f )/ bpm));
 4717              		.loc 7 23 24 view .LVU879
 4718 0006 0446     		mov	r4, r0
 4719              		.loc 7 24 71 view .LVU880
 4720 0008 9FED3C6A 		vldr.32	s12, .L144
 4721              		.loc 7 24 73 view .LVU881
 4722 000c 07EE103A 		vmov	s14, r3	@ int
 4723              		.loc 7 24 55 view .LVU882
 4724 0010 D0ED016A 		vldr.32	s13, [r0, #4]
  25:Sequencer.cpp ****     int step_duration = SAMPLES_IN_BAR / 16;
  26:Sequencer.cpp ****     int current_step = current_tick / step_duration;
 4725              		.loc 7 26 24 view .LVU883
 4726 0014 8268     		ldr	r2, [r0, #8]
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 166


  24:Sequencer.cpp ****     int step_duration = SAMPLES_IN_BAR / 16;
 4727              		.loc 7 24 71 view .LVU884
 4728 0016 B8EEC77A 		vcvt.f32.s32	s14, s14
 4729 001a C6EE077A 		vdiv.f32	s15, s12, s14
  24:Sequencer.cpp ****     int step_duration = SAMPLES_IN_BAR / 16;
 4730              		.loc 7 24 55 view .LVU885
 4731 001e 67EEA67A 		vmul.f32	s15, s15, s13
  24:Sequencer.cpp ****     int step_duration = SAMPLES_IN_BAR / 16;
 4732              		.loc 7 24 9 view .LVU886
 4733 0022 FDEEE77A 		vcvt.s32.f32	s15, s15
 4734 0026 17EE905A 		vmov	r5, s15	@ int
 4735              	.LVL173:
  25:Sequencer.cpp ****     int step_duration = SAMPLES_IN_BAR / 16;
 4736              		.loc 7 25 5 is_stmt 1 view .LVU887
  25:Sequencer.cpp ****     int step_duration = SAMPLES_IN_BAR / 16;
 4737              		.loc 7 25 9 is_stmt 0 view .LVU888
 4738 002a 002D     		cmp	r5, #0
 4739 002c B4BF     		ite	lt
 4740 002e 05F10F03 		addlt	r3, r5, #15
 4741 0032 17EE903A 		vmovge	r3, s15	@ int
 4742 0036 1B11     		asrs	r3, r3, #4
 4743              	.LVL174:
 4744              		.loc 7 26 5 is_stmt 1 view .LVU889
 4745              		.loc 7 26 9 is_stmt 0 view .LVU890
 4746 0038 92FBF3F6 		sdiv	r6, r2, r3
 4747              	.LVL175:
  27:Sequencer.cpp **** 
  28:Sequencer.cpp ****     // If at a 16th note
  29:Sequencer.cpp ****     if (current_tick % step_duration == 0 && current_step < 16) {
 4748              		.loc 7 29 5 is_stmt 1 view .LVU891
 4749              		.loc 7 29 22 is_stmt 0 view .LVU892
 4750 003c 03FB1623 		mls	r3, r3, r6, r2
 4751              	.LVL176:
 4752              		.loc 7 29 43 view .LVU893
 4753 0040 0BB9     		cbnz	r3, .L115
 4754              	.LVL177:
 4755              		.loc 7 29 43 view .LVU894
 4756 0042 0F2E     		cmp	r6, #15
 4757 0044 09DD     		ble	.L140
 4758              	.LVL178:
 4759              	.L115:
  30:Sequencer.cpp ****         if (sequences[sequence_idx].drum_sequence.kick_steps[current_step])    drum_synth.trigger_k
  31:Sequencer.cpp ****         if (sequences[sequence_idx].drum_sequence.snare_steps[current_step])   drum_synth.trigger_s
  32:Sequencer.cpp ****         if (sequences[sequence_idx].drum_sequence.hat_steps[current_step])     drum_synth.trigger_h
  33:Sequencer.cpp **** 
  34:Sequencer.cpp ****         chord_synth.enable();
  35:Sequencer.cpp ****         if (groove && !sequences[sequence_idx].chord_sequence[current_step])
  36:Sequencer.cpp ****             chord_synth.disable();
  37:Sequencer.cpp ****     }
  38:Sequencer.cpp **** 
  39:Sequencer.cpp ****     current_tick++;
 4760              		.loc 7 39 5 is_stmt 1 view .LVU895
 4761              		.loc 7 39 17 is_stmt 0 view .LVU896
 4762 0046 0132     		adds	r2, r2, #1
  40:Sequencer.cpp ****     if (current_tick >= SAMPLES_IN_BAR)
 4763              		.loc 7 40 5 is_stmt 1 view .LVU897
 4764 0048 AA42     		cmp	r2, r5
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 167


 4765 004a 02DA     		bge	.L121
  39:Sequencer.cpp ****     if (current_tick >= SAMPLES_IN_BAR)
 4766              		.loc 7 39 17 is_stmt 0 view .LVU898
 4767 004c A260     		str	r2, [r4, #8]
  41:Sequencer.cpp ****         current_tick = 0;
  42:Sequencer.cpp **** }
 4768              		.loc 7 42 1 view .LVU899
 4769 004e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4770              	.LVL179:
 4771              	.L121:
  41:Sequencer.cpp ****         current_tick = 0;
 4772              		.loc 7 41 9 is_stmt 1 view .LVU900
  41:Sequencer.cpp ****         current_tick = 0;
 4773              		.loc 7 41 22 is_stmt 0 view .LVU901
 4774 0052 0023     		movs	r3, #0
 4775 0054 A360     		str	r3, [r4, #8]
 4776              		.loc 7 42 1 view .LVU902
 4777 0056 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4778              	.LVL180:
 4779              	.L140:
  30:Sequencer.cpp ****         if (sequences[sequence_idx].drum_sequence.snare_steps[current_step])   drum_synth.trigger_s
 4780              		.loc 7 30 9 is_stmt 1 view .LVU903
 4781              	.LBB3663:
 4782              	.LBI3663:
 4783              		.file 8 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_vector.
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Vector implementation -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * provided that the above copyright notice appear in all copies and
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 168


  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Copyright (c) 1996
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * representations about the suitability of this  software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** /** @file bits/stl_vector.h
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *  Do not attempt to use it directly. @headername{vector}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #ifndef _STL_VECTOR_H
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _STL_VECTOR_H 1
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <bits/stl_iterator_base_funcs.h>
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <bits/functexcept.h>
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <bits/concept_check.h>
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <initializer_list>
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus > 201703L
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # include <compare>
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <debug/assertions.h>
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** extern "C" void
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** __sanitizer_annotate_contiguous_container(const void*, const void*,
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  const void*, const void*);
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** namespace std _GLIBCXX_VISIBILITY(default)
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** {
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   /// See bits/stl_deque.h's _Deque_base for an explanation.
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   template<typename _Tp, typename _Alloc>
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     struct _Vector_base
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     {
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	rebind<_Tp>::other _Tp_alloc_type;
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        	pointer;
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 169


  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       struct _Vector_impl_data
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer _M_start;
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer _M_finish;
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer _M_end_of_storage;
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl_data() _GLIBCXX_NOEXCEPT
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl_data(_Vector_impl_data&& __x) noexcept
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage(__x._M_end_of_storage)
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_copy_data(_Vector_impl_data const& __x) _GLIBCXX_NOEXCEPT
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_start = __x._M_start;
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_finish = __x._M_finish;
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage = __x._M_end_of_storage;
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_swap_data(_Vector_impl_data& __x) _GLIBCXX_NOEXCEPT
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Do not use std::swap(_M_start, __x._M_start), etc as it loses
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // information used by TBAA.
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Vector_impl_data __tmp;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __tmp._M_copy_data(*this);
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_copy_data(__x);
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __x._M_copy_data(__tmp);
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       };
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       struct _Vector_impl
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    is_nothrow_default_constructible<_Tp_alloc_type>::value)
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type()
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(__a)
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// Not defaulted, to enforce noexcept(true) even when
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// !is_nothrow_move_constructible<_Tp_alloc_type>.
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Vector_impl&& __x) noexcept
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 170


 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a) noexcept
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__a))
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a, _Vector_impl&& __rv) noexcept
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__a)), _Vector_impl_data(std::move(__rv))
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	template<typename = _Tp_alloc_type>
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  struct _Asan
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ::size_type size_type;
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void _S_shrink(_Vector_impl&, size_type) { }
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void _S_on_dealloc(_Vector_impl&) { }
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    typedef _Vector_impl& _Reinit;
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    struct _Grow
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow(_Vector_impl&, size_type) { }
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      void _M_grew(size_type) { }
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    };
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  };
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// Enable ASan annotations for memory obtained from std::allocator.
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	template<typename _Up>
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  struct _Asan<allocator<_Up> >
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ::size_type size_type;
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // Adjust ASan annotation for [_M_start, _M_end_of_storage) to
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // mark end of valid region as __curr instead of __prev.
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_adjust(_Vector_impl& __impl, pointer __prev, pointer __curr)
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __sanitizer_annotate_contiguous_container(__impl._M_start,
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  __impl._M_end_of_storage, __prev, __curr);
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_grow(_Vector_impl& __impl, size_type __n)
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    { _S_adjust(__impl, __impl._M_finish, __impl._M_finish + __n); }
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_shrink(_Vector_impl& __impl, size_type __n)
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    { _S_adjust(__impl, __impl._M_finish + __n, __impl._M_finish); }
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_on_dealloc(_Vector_impl& __impl)
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      if (__impl._M_start)
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		_S_adjust(__impl, __impl._M_finish, __impl._M_end_of_storage);
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 171


 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // Used on reallocation to tell ASan unused capacity is invalid.
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    struct _Reinit
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      explicit _Reinit(_Vector_impl& __impl) : _M_impl(__impl)
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      {
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		// Mark unused capacity as valid again before deallocating it.
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		_S_on_dealloc(_M_impl);
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      }
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ~_Reinit()
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      {
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		// Mark unused capacity as invalid after reallocation.
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		if (_M_impl._M_start)
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _S_adjust(_M_impl, _M_impl._M_end_of_storage,
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    _M_impl._M_finish);
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      }
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Vector_impl& _M_impl;
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Reinit(const _Reinit&) = delete;
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Reinit& operator=(const _Reinit&) = delete;
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    };
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // Tell ASan when unused capacity is initialized to be valid.
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    struct _Grow
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow(_Vector_impl& __impl, size_type __n)
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      : _M_impl(__impl), _M_n(__n)
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      { _S_grow(_M_impl, __n); }
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ~_Grow() { if (_M_n) _S_shrink(_M_impl, _M_n); }
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      void _M_grew(size_type __n) { _M_n -= __n; }
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow(const _Grow&) = delete;
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow& operator=(const _Grow&) = delete;
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    private:
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Vector_impl& _M_impl;
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      size_type _M_n;
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    };
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  };
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_REINIT \
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   typename _Base::_Vector_impl::template _Asan<>::_Reinit const \
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__attribute__((__unused__)) __reinit_guard(this->_M_impl)
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GROW(n) \
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   typename _Base::_Vector_impl::template _Asan<>::_Grow \
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__attribute__((__unused__)) __grow_guard(this->_M_impl, (n))
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GREW(n) __grow_guard._M_grew(n)
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_SHRINK(n) \
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   _Base::_Vector_impl::template _Asan<>::_S_shrink(this->_M_impl, n)
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 172


 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC \
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   _Base::_Vector_impl::template _Asan<>::_S_on_dealloc(this->_M_impl)
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else // ! (_GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR)
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_REINIT
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GROW(n)
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GREW(n)
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_SHRINK(n)
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif // _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       };
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Alloc allocator_type;
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Tp_alloc_type&
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const _Tp_alloc_type&
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       allocator_type
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return allocator_type(_M_get_Tp_allocator()); }
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base() = default;
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base() { }
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a) { }
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Kept for ABI compatibility.
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if !_GLIBCXX_INLINE_VERSION
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(size_t __n)
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl()
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_create_storage(__n); }
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(size_t __n, const allocator_type& __a)
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a)
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_create_storage(__n); }
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(_Vector_base&&) = default;
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Kept for ABI compatibility.
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # if !_GLIBCXX_INLINE_VERSION
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(_Tp_alloc_type&& __a) noexcept
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(std::move(__a)) { }
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(_Vector_base&& __x, const allocator_type& __a)
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a)
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 173


 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__x.get_allocator() == __a)
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_swap_data(__x._M_impl);
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    size_t __n = __x._M_impl._M_finish - __x._M_impl._M_start;
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _M_create_storage(__n);
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # endif
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(const allocator_type& __a, _Vector_base&& __x)
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(_Tp_alloc_type(__a), std::move(__x._M_impl))
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { }
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       ~_Vector_base() _GLIBCXX_NOEXCEPT
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_deallocate(_M_impl._M_start,
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_impl _M_impl;
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       pointer
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_allocate(size_t __n)
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_deallocate(pointer __p, size_t __n)
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__p)
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_create_storage(size_t __n)
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_start = this->_M_allocate(__n);
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     };
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   /**
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @brief A standard container which offers fixed time access to
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  individual elements in any order.
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @ingroup sequences
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @tparam _Tp  Type of element.
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_Tp>.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 174


 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  <a href="tables.html#66">reversible container</a>, and a
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  <a href="tables.html#67">sequence</a>, including the
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  <a href="tables.html#68">optional sequence requirements</a> with the
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  %exception of @c push_front and @c pop_front.
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  In some terminology a %vector can be described as a dynamic
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  C-style array, it offers fast and efficient access to individual
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  elements in any order and saves the user from worrying about
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  memory and size allocation.  Subscripting ( @c [] ) access is
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  also provided as with C-style arrays.
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   */
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   template<typename _Tp, typename _Alloc = std::allocator<_Tp> >
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     class vector : protected _Vector_base<_Tp, _Alloc>
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     {
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #ifdef _GLIBCXX_CONCEPT_CHECKS
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Concept requirements.
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc::value_type		_Alloc_value_type;
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # if __cplusplus < 201103L
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # endif
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       __glibcxx_class_requires2(_Tp, _Alloc_value_type, _SameTypeConcept)
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static_assert(is_same<typename remove_cv<_Tp>::type, _Tp>::value,
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  "std::vector must have a non-const, non-volatile value_type");
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # if __cplusplus > 201703L || defined __STRICT_ANSI__
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static_assert(is_same<typename _Alloc::value_type, _Tp>::value,
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  "std::vector must have the same value_type as its allocator");
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # endif
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Vector_base<_Tp, _Alloc>			_Base;
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Base::_Tp_alloc_type		_Tp_alloc_type;
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>	_Alloc_traits;
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Tp					value_type;
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Base::pointer			pointer;
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc_traits::reference		reference;
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<pointer, vector> iterator;
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, vector>
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator;
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef size_t					size_type;
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef ptrdiff_t					difference_type;
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Alloc					allocator_type;
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     private:
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static constexpr bool
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_nothrow_relocate(true_type)
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 175


 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return noexcept(std::__relocate_a(std::declval<pointer>(),
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  std::declval<pointer>(),
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  std::declval<pointer>(),
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  std::declval<_Tp_alloc_type&>()));
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static constexpr bool
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_nothrow_relocate(false_type)
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return false; }
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static constexpr bool
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_use_relocate()
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// Instantiating std::__relocate_a might cause an error outside the
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// immediate context (in __relocate_object_a's noexcept-specifier),
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// so only do it if we know the type can be move-inserted into *this.
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return _S_nothrow_relocate(__is_move_insertable<_Tp_alloc_type>{});
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static pointer
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_do_relocate(pointer __first, pointer __last, pointer __result,
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return std::__relocate_a(__first, __last, __result, __alloc);
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static pointer
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_do_relocate(pointer, pointer, pointer __result,
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type&, false_type) noexcept
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return __result; }
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static pointer
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_relocate(pointer __first, pointer __last, pointer __result,
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	using __do_it = __bool_constant<_S_use_relocate()>;
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif // C++11
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_allocate;
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_deallocate;
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_impl;
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_get_Tp_allocator;
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // [23.2.4.1] construct/copy/destroy
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // (assign() and get_allocator() are also listed in this section)
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector() = default;
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 176


 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector() { }
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator object.
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       explicit
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__a) { }
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with default constructed elements.
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n default
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  constructed elements.
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       explicit
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(size_type __n, const allocator_type& __a = allocator_type())
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_default_initialize(__n); }
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __value  An element to copy.
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(size_type __n, const value_type& __value,
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __value  An element to copy.
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       explicit
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(size_type __n, const value_type& __value = value_type(),
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector copy constructor.
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 177


 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  All the elements of @a __x are copied, but any unused capacity in
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @a __x  will not be copied
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  (i.e. capacity() == size() in the new %vector).
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The newly-created %vector uses a copy of the allocator object used
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  by @a __x (unless the allocator traits dictate a different object).
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(const vector& __x)
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(),
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      this->_M_impl._M_start,
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      _M_get_Tp_allocator());
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector move constructor.
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The newly-created %vector contains the exact contents of the
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  moved instance.
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The contents of the moved instance are a valid, but unspecified
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector.
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&&) noexcept = default;
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Copy constructor with alternative allocator
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(const vector& __x, const allocator_type& __a)
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(), __a)
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      this->_M_impl._M_start,
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      _M_get_Tp_allocator());
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     private:
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m, true_type) noexcept
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__m, std::move(__rv))
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { }
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m, false_type)
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__m)
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__rv.get_allocator() == __m)
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_swap_data(__rv._M_impl);
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (!__rv.empty())
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_create_storage(__rv.size());
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_impl._M_finish =
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      std::__uninitialized_move_a(__rv.begin(), __rv.end(),
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  this->_M_impl._M_start,
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  _M_get_Tp_allocator());
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    __rv.clear();
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 178


 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Move constructor with alternative allocator
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m)
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       noexcept( noexcept(
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector(std::declval<vector&&>(), std::declval<const allocator_type&>(),
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       std::declval<typename _Alloc_traits::is_always_equal>())) )
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : vector(std::move(__rv), __m, typename _Alloc_traits::is_always_equal{})
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { }
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Builds a %vector from an initializer list.
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Create a %vector consisting of copies of the elements in the
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer_list @a __l.
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This will call the element type's copy constructor N times
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  (where N is @a __l.size()) and do no memory reallocation.
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(initializer_list<value_type> __l,
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__a)
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_initialize(__l.begin(), __l.end(),
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Builds a %vector from a range.
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last  An input iterator.
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Create a %vector consisting of copies of the elements from
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [first,last).
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  If the iterators are forward, bidirectional, or
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  random-access, then this will call the elements' copy
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  constructor N times (where N is distance(first,last)) and do
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  no memory reallocation.  But if only input iterators are
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used, then this will do at most 2N calls to the copy
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  constructor, and logN memory reallocations.
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator,
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Base(__a)
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_range_initialize(__first, __last,
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			      std::__iterator_category(__first));
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 179


 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Base(__a)
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_initialize_dispatch(__first, __last, _Integral());
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The dtor only erases the elements, and note that if the
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  elements themselves are pointers, the pointed-to memory is
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  not touched in any way.  Managing the pointer is the user's
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  responsibility.
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       ~vector() _GLIBCXX_NOEXCEPT
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_get_Tp_allocator());
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector assignment operator.
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  All the elements of @a __x are copied, but any unused capacity in
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @a __x will not be copied.
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Whether the allocator is copied depends on the allocator traits.
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector&
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator=(const vector& __x);
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector move assignment operator.
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The contents of @a __x are moved into this %vector (without copying,
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  if the allocators permit it).
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Afterwards @a __x is a valid, but unspecified %vector.
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Whether the allocator is moved depends on the allocator traits.
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector&
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	constexpr bool __move_storage =
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Alloc_traits::_S_propagate_on_move_assign()
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  || _Alloc_traits::_S_always_equal();
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *this;
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 180


 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector list assignment operator.
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer list @a __l.
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  of elements assigned.
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector&
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator=(initializer_list<value_type> __l)
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_assign_aux(__l.begin(), __l.end(),
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *this;
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Assigns a given value to a %vector.
 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements to be assigned.
 741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __val  Value to be assigned.
 742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with @a __n copies of the given
 744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  value.  Note that the assignment completely changes the
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and that the resulting %vector's size is the same as
 746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the number of elements assigned.
 747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       assign(size_type __n, const value_type& __val)
 750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_assign(__n, __val); }
 751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Assigns a range to a %vector.
 754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
 755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last   An input iterator.
 756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  range [__first,__last).
 759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  of elements assigned.
 763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator,
 766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	assign(_InputIterator __first, _InputIterator __last)
 769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_assign_dispatch(__first, __last, __false_type()); }
 770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
 772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	assign(_InputIterator __first, _InputIterator __last)
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 181


 774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_assign_dispatch(__first, __last, _Integral());
 778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Assigns an initializer list to a %vector.
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer list @a __l.
 788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  of elements assigned.
 792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       assign(initializer_list<value_type> __l)
 795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_assign_aux(__l.begin(), __l.end(),
 797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Get a copy of the memory allocation object.
 802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::get_allocator;
 803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // iterators
 805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write iterator that points to the first
 807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       begin() _GLIBCXX_NOEXCEPT
 812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       begin() const _GLIBCXX_NOEXCEPT
 821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write iterator that points one past the last
 825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       end() _GLIBCXX_NOEXCEPT
 830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 182


 831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  ordinary element order.
 836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       end() const _GLIBCXX_NOEXCEPT
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reverse iterator that points to the
 843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  last element in the %vector.  Iteration is done in reverse
 844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reverse_iterator
 847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rbegin() _GLIBCXX_NOEXCEPT
 848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return reverse_iterator(end()); }
 849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  reverse element order.
 854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(end()); }
 858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reverse iterator that points to one
 861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  before the first element in the %vector.  Iteration is done
 862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  in reverse element order.
 863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reverse_iterator
 865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rend() _GLIBCXX_NOEXCEPT
 866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return reverse_iterator(begin()); }
 867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is done in reverse element order.
 872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rend() const _GLIBCXX_NOEXCEPT
 875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(begin()); }
 876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       cbegin() const noexcept
 885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 183


 888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  ordinary element order.
 891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       cend() const noexcept
 894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  reverse element order.
 900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       crbegin() const noexcept
 903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(end()); }
 904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is done in reverse element order.
 909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       crend() const noexcept
 912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(begin()); }
 913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // [23.2.4.2] capacity
 916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**  Returns the number of elements in the %vector.  */
 917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size() const _GLIBCXX_NOEXCEPT
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**  Returns the size() of the largest possible %vector.  */
 922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
 923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       max_size() const _GLIBCXX_NOEXCEPT
 924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _S_max_size(_M_get_Tp_allocator()); }
 925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will %resize the %vector to the specified
 932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number of elements.  If the number is smaller than the
 933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  default constructed elements are appended.
 935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       resize(size_type __new_size)
 938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__new_size > size())
 940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_default_append(__new_size - size());
 941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (__new_size < size())
 942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 184


 945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will %resize the %vector to the specified
 951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number of elements.  If the number is smaller than the
 952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the %vector is extended and new elements are populated with
 954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  given data.
 955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       resize(size_type __new_size, const value_type& __x)
 958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__new_size > size())
 960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_fill_insert(end(), __new_size - size(), __x);
 961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (__new_size < size())
 962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will %resize the %vector to the specified
 971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number of elements.  If the number is smaller than the
 972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the %vector is extended and new elements are populated with
 974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  given data.
 975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       resize(size_type __new_size, value_type __x = value_type())
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__new_size > size())
 980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_fill_insert(end(), __new_size - size(), __x);
 981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (__new_size < size())
 982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**  A non-binding request to reduce capacity() to size().  */
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       shrink_to_fit()
 990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_shrink_to_fit(); }
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns the total number of elements that the %vector can
 995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  hold before needing to allocate more memory.
 996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
 998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       capacity() const _GLIBCXX_NOEXCEPT
 999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_end_of_storage
1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			 - this->_M_impl._M_start); }
1001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 185


1002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns true if the %vector is empty.  (Thus begin() would
1004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  equal end().)
1005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _GLIBCXX_NODISCARD bool
1007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       empty() const _GLIBCXX_NOEXCEPT
1008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return begin() == end(); }
1009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
1012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *          elements.
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements required.
1014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @throw  std::length_error  If @a n exceeds @c max_size().
1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function attempts to reserve enough memory for the
1017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector to hold the specified number of elements.  If the
1018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number requested is more than max_size(), length_error is
1019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  thrown.
1020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The advantage of this function is that if optimal code is a
1022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  necessity and the user can determine the number of elements
1023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that will be required, the user can reserve the memory in
1024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %advance, and thus prevent a possible reallocation of memory
1025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  and copying of %vector data.
1026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reserve(size_type __n);
1029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // element access
1031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
1033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read/write reference to data.
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This operator allows for easy, array-style, data access.
1038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that data access with this operator is unchecked and
1039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
1040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  see at().)
1041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator[](size_type __n) _GLIBCXX_NOEXCEPT
 4784              		.loc 8 1043 7 view .LVU904
 4785              	.LBB3664:
1044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_subscript(__n);
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(this->_M_impl._M_start + __n);
 4786              		.loc 8 1046 34 is_stmt 0 view .LVU905
 4787 005a 037E     		ldrb	r3, [r0, #24]	@ zero_extendqisi2
 4788              	.LVL181:
 4789              		.loc 8 1046 34 view .LVU906
 4790              	.LBE3664:
 4791              	.LBE3663:
 4792              	.LBB3668:
 4793              	.LBB3669:
 911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 			 + __n / int(_S_word_bit), __n % int(_S_word_bit));
 4794              		.loc 1 911 10 view .LVU907
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 186


 4795 005c 06F01F01 		and	r1, r6, #31
 4796              	.LBB3670:
 4797              	.LBB3671:
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 4798              		.loc 1 252 46 view .LVU908
 4799 0060 0127     		movs	r7, #1
 4800              	.LBE3671:
 4801              	.LBE3670:
 912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 4802              		.loc 1 912 11 view .LVU909
 4803 0062 4FEA5618 		lsr	r8, r6, #5
 4804              	.LBE3669:
 4805              	.LBE3668:
 4806              	.LBB3681:
 4807              	.LBB3665:
 4808              		.loc 8 1046 34 view .LVU910
 4809 0066 03EBC302 		add	r2, r3, r3, lsl #3
 4810              	.LBE3665:
 4811              	.LBE3681:
 4812              	.LBB3682:
 4813              	.LBB3679:
 4814              	.LBB3675:
 4815              	.LBB3673:
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 4816              		.loc 1 252 46 view .LVU911
 4817 006a 8F40     		lsls	r7, r7, r1
 4818              	.LBE3673:
 4819              	.LBE3675:
 4820              	.LBE3679:
 4821              	.LBE3682:
 4822              	.LBB3683:
 4823              	.LBB3666:
 4824              		.loc 8 1046 34 view .LVU912
 4825 006c 03EB4202 		add	r2, r3, r2, lsl #1
 4826              		.loc 8 1046 39 view .LVU913
 4827 0070 C368     		ldr	r3, [r0, #12]
 4828              	.LVL182:
 4829              		.loc 8 1046 39 view .LVU914
 4830              	.LBE3666:
 4831              	.LBE3683:
 4832              	.LBB3684:
 4833              	.LBB3685:
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 4834              		.loc 1 87 17 view .LVU915
 4835 0072 53F82210 		ldr	r1, [r3, r2, lsl #2]
 4836              	.LBE3685:
 4837              	.LBE3684:
 4838              	.LBB3687:
 4839              	.LBB3667:
 4840              		.loc 8 1046 39 view .LVU916
 4841 0076 03EB8203 		add	r3, r3, r2, lsl #2
 4842              	.LVL183:
 4843              		.loc 8 1046 39 view .LVU917
 4844              	.LBE3667:
 4845              	.LBE3687:
 4846              	.LBB3688:
 4847              	.LBI3668:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 187


 909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 4848              		.loc 1 909 7 is_stmt 1 view .LVU918
 4849              	.LBB3680:
 4850              	.LBB3676:
 4851              	.LBI3676:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 4852              		.loc 1 243 5 view .LVU919
 4853              	.LBB3677:
 4854              	.LBI3677:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 4855              		.loc 1 148 5 view .LVU920
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 4856              		.loc 1 148 5 is_stmt 0 view .LVU921
 4857              	.LBE3677:
 4858              	.LBE3676:
 4859              	.LBB3678:
 4860              	.LBI3670:
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return reference(_M_p, 1UL << _M_offset); }
 4861              		.loc 1 251 5 is_stmt 1 view .LVU922
 4862              	.LBB3674:
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 4863              		.loc 1 252 7 view .LVU923
 4864              	.LBB3672:
 4865              	.LBI3672:
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_mask(__y) { }
 4866              		.loc 1 77 5 view .LVU924
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_mask(__y) { }
 4867              		.loc 1 77 5 is_stmt 0 view .LVU925
 4868              	.LBE3672:
 4869              	.LBE3674:
 4870              	.LBE3678:
 4871              	.LBE3680:
 4872              	.LBE3688:
 4873              	.LBB3689:
 4874              	.LBI3684:
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return !!(*_M_p & _M_mask); }
 4875              		.loc 1 86 5 is_stmt 1 view .LVU926
 4876              	.LBB3686:
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 4877              		.loc 1 87 7 view .LVU927
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 4878              		.loc 1 87 23 is_stmt 0 view .LVU928
 4879 007a 51F82820 		ldr	r2, [r1, r8, lsl #2]
 4880              	.LBE3686:
 4881              	.LBE3689:
  30:Sequencer.cpp ****         if (sequences[sequence_idx].drum_sequence.snare_steps[current_step])   drum_synth.trigger_s
 4882              		.loc 7 30 9 view .LVU929
 4883 007e 1742     		tst	r7, r2
 4884 0080 30D1     		bne	.L141
 4885              	.LVL184:
 4886              	.L116:
  31:Sequencer.cpp ****         if (sequences[sequence_idx].drum_sequence.hat_steps[current_step])     drum_synth.trigger_h
 4887              		.loc 7 31 9 is_stmt 1 view .LVU930
 4888              	.LBB3690:
 4889              	.LBI3690:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 4890              		.loc 8 1043 7 view .LVU931
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 188


1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 4891              		.loc 8 1043 7 is_stmt 0 view .LVU932
 4892              	.LBE3690:
 4893              	.LBB3692:
 4894              	.LBI3692:
 909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 4895              		.loc 1 909 7 is_stmt 1 view .LVU933
 4896              	.LBB3693:
 4897              	.LBB3694:
 4898              	.LBI3694:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 4899              		.loc 1 243 5 view .LVU934
 4900              	.LBB3695:
 4901              	.LBI3695:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 4902              		.loc 1 148 5 view .LVU935
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 4903              		.loc 1 148 5 is_stmt 0 view .LVU936
 4904              	.LBE3695:
 4905              	.LBE3694:
 4906              	.LBB3696:
 4907              	.LBI3696:
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return reference(_M_p, 1UL << _M_offset); }
 4908              		.loc 1 251 5 is_stmt 1 view .LVU937
 4909              	.LBE3696:
 4910              	.LBE3693:
 4911              	.LBE3692:
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 4912              		.loc 1 252 7 view .LVU938
 4913              	.LBB3700:
 4914              	.LBB3699:
 4915              	.LBB3698:
 4916              	.LBB3697:
 4917              	.LBI3697:
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_mask(__y) { }
 4918              		.loc 1 77 5 view .LVU939
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_mask(__y) { }
 4919              		.loc 1 77 5 is_stmt 0 view .LVU940
 4920              	.LBE3697:
 4921              	.LBE3698:
 4922              	.LBE3699:
 4923              	.LBE3700:
 4924              	.LBB3701:
 4925              	.LBI3701:
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return !!(*_M_p & _M_mask); }
 4926              		.loc 1 86 5 is_stmt 1 view .LVU941
 4927              	.LBB3702:
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 4928              		.loc 1 87 7 view .LVU942
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 4929              		.loc 1 87 17 is_stmt 0 view .LVU943
 4930 0082 9A6A     		ldr	r2, [r3, #40]
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 4931              		.loc 1 87 23 view .LVU944
 4932 0084 52F82820 		ldr	r2, [r2, r8, lsl #2]
 4933              	.LBE3702:
 4934              	.LBE3701:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 189


  31:Sequencer.cpp ****         if (sequences[sequence_idx].drum_sequence.hat_steps[current_step])     drum_synth.trigger_h
 4935              		.loc 7 31 9 view .LVU945
 4936 0088 1742     		tst	r7, r2
 4937 008a 1FD1     		bne	.L142
 4938              	.L117:
  32:Sequencer.cpp **** 
 4939              		.loc 7 32 9 is_stmt 1 view .LVU946
 4940              	.LVL185:
 4941              	.LBB3703:
 4942              	.LBI3703:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 4943              		.loc 8 1043 7 view .LVU947
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 4944              		.loc 8 1043 7 is_stmt 0 view .LVU948
 4945              	.LBE3703:
 4946              	.LBB3705:
 4947              	.LBI3705:
 909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 4948              		.loc 1 909 7 is_stmt 1 view .LVU949
 4949              	.LBB3706:
 4950              	.LBB3707:
 4951              	.LBI3707:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 4952              		.loc 1 243 5 view .LVU950
 4953              	.LBB3708:
 4954              	.LBI3708:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 4955              		.loc 1 148 5 view .LVU951
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 4956              		.loc 1 148 5 is_stmt 0 view .LVU952
 4957              	.LBE3708:
 4958              	.LBE3707:
 4959              	.LBB3709:
 4960              	.LBI3709:
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return reference(_M_p, 1UL << _M_offset); }
 4961              		.loc 1 251 5 is_stmt 1 view .LVU953
 4962              	.LBE3709:
 4963              	.LBE3706:
 4964              	.LBE3705:
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 4965              		.loc 1 252 7 view .LVU954
 4966              	.LBB3713:
 4967              	.LBB3712:
 4968              	.LBB3711:
 4969              	.LBB3710:
 4970              	.LBI3710:
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_mask(__y) { }
 4971              		.loc 1 77 5 view .LVU955
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_mask(__y) { }
 4972              		.loc 1 77 5 is_stmt 0 view .LVU956
 4973              	.LBE3710:
 4974              	.LBE3711:
 4975              	.LBE3712:
 4976              	.LBE3713:
 4977              	.LBB3714:
 4978              	.LBI3714:
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     { return !!(*_M_p & _M_mask); }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 190


 4979              		.loc 1 86 5 is_stmt 1 view .LVU957
 4980              	.LBB3715:
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 4981              		.loc 1 87 7 view .LVU958
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 4982              		.loc 1 87 17 is_stmt 0 view .LVU959
 4983 008c 5B69     		ldr	r3, [r3, #20]
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 4984              		.loc 1 87 23 view .LVU960
 4985 008e 53F82830 		ldr	r3, [r3, r8, lsl #2]
 4986              	.LBE3715:
 4987              	.LBE3714:
  32:Sequencer.cpp **** 
 4988              		.loc 7 32 9 view .LVU961
 4989 0092 1F42     		tst	r7, r3
 4990 0094 16D1     		bne	.L143
 4991              	.L118:
  34:Sequencer.cpp ****         if (groove && !sequences[sequence_idx].chord_sequence[current_step])
 4992              		.loc 7 34 9 is_stmt 1 view .LVU962
 4993              	.LBB3716:
 4994              	.LBB3717:
 4995              		.file 9 "ChordSynth.h"
   1:ChordSynth.h  **** #pragma once
   2:ChordSynth.h  **** #include "daisysp.h"
   3:ChordSynth.h  **** #include <vector>
   4:ChordSynth.h  **** 
   5:ChordSynth.h  **** using namespace daisysp;
   6:ChordSynth.h  **** 
   7:ChordSynth.h  **** class ChordSynth
   8:ChordSynth.h  **** {
   9:ChordSynth.h  **** public:
  10:ChordSynth.h  ****     ChordSynth(float sample_rate) : sample_rate(sample_rate) {};
  11:ChordSynth.h  **** 
  12:ChordSynth.h  ****     void set_chord(std::vector<int> midi_notes);
  13:ChordSynth.h  ****     float process();
  14:ChordSynth.h  **** 
  15:ChordSynth.h  ****     void enable()  {enabled  = true;}
 4996              		.loc 9 15 30 is_stmt 0 view .LVU963
 4997 0096 0123     		movs	r3, #1
 4998              	.LBE3717:
 4999              	.LBE3716:
  34:Sequencer.cpp ****         if (groove && !sequences[sequence_idx].chord_sequence[current_step])
 5000              		.loc 7 34 9 view .LVU964
 5001 0098 216A     		ldr	r1, [r4, #32]
 5002              	.LVL186:
 5003              	.LBB3719:
 5004              	.LBI3716:
 5005              		.loc 9 15 10 is_stmt 1 view .LVU965
 5006              	.LBB3718:
 5007              		.loc 9 15 21 view .LVU966
 5008              		.loc 9 15 30 is_stmt 0 view .LVU967
 5009 009a 0B71     		strb	r3, [r1, #4]
 5010              	.LVL187:
 5011              		.loc 9 15 30 view .LVU968
 5012              	.LBE3718:
 5013              	.LBE3719:
  35:Sequencer.cpp ****             chord_synth.disable();
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 191


 5014              		.loc 7 35 9 is_stmt 1 view .LVU969
  35:Sequencer.cpp ****             chord_synth.disable();
 5015              		.loc 7 35 20 is_stmt 0 view .LVU970
 5016 009c 94F82430 		ldrb	r3, [r4, #36]	@ zero_extendqisi2
 5017 00a0 73B1     		cbz	r3, .L120
 5018              	.LVL188:
 5019              	.LBB3720:
 5020              	.LBI3720:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 5021              		.loc 8 1043 7 is_stmt 1 discriminator 1 view .LVU971
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 5022              		.loc 8 1043 7 is_stmt 0 discriminator 1 view .LVU972
 5023              	.LBE3720:
 5024              	.LBB3723:
 5025              	.LBI3723:
 5026              		.file 10 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\array"
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // <array> -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // Copyright (C) 2007-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** /** @file include/array
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****  *  This is a Standard C++ Library header.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****  */
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** #ifndef _GLIBCXX_ARRAY
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** #define _GLIBCXX_ARRAY 1
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** #pragma GCC system_header
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** #if __cplusplus < 201103L
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** # include <bits/c++0x_warning.h>
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** #else
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** #include <utility>
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** #include <bits/functexcept.h>
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** #include <bits/stl_algobase.h>
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** #include <bits/range_access.h>
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 192


  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** namespace std _GLIBCXX_VISIBILITY(default)
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** {
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****   template<typename _Tp, std::size_t _Nm>
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****     struct __array_traits
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****     {
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       typedef _Tp _Type[_Nm];
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       typedef __is_swappable<_Tp> _Is_swappable;
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       typedef __is_nothrow_swappable<_Tp> _Is_nothrow_swappable;
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       static constexpr _Tp&
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _S_ref(const _Type& __t, std::size_t __n) noexcept
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       static constexpr _Tp*
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _S_ptr(const _Type& __t) noexcept
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp*>(__t); }
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****     };
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****  template<typename _Tp>
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****    struct __array_traits<_Tp, 0>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****    {
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****      struct _Type { };
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****      typedef true_type _Is_swappable;
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****      typedef true_type _Is_nothrow_swappable;
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****      static constexpr _Tp&
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****      _S_ref(const _Type&, std::size_t) noexcept
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****      { return *static_cast<_Tp*>(nullptr); }
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****      static constexpr _Tp*
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****      _S_ptr(const _Type&) noexcept
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****      { return nullptr; }
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****    };
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****   /**
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****    *  @brief A standard container for storing a fixed size sequence of elements.
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****    *
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****    *  @ingroup sequences
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****    *
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****    *  <a href="tables.html#66">reversible container</a>, and a
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****    *  <a href="tables.html#67">sequence</a>.
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****    *
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****    *  Sets support random access iterators.
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****    *
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****    *  @tparam  Tp  Type of element. Required to be a complete type.
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****    *  @tparam  Nm  Number of elements.
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****   */
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****   template<typename _Tp, std::size_t _Nm>
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****     struct array
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****     {
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       typedef _Tp 	    			      value_type;
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       typedef value_type*			      pointer;
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       typedef const value_type*                       const_pointer;
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 193


  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       typedef value_type&                   	      reference;
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       typedef const value_type&             	      const_reference;
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       typedef value_type*          		      iterator;
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       typedef const value_type*			      const_iterator;
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       typedef std::size_t                    	      size_type;
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       typedef std::ptrdiff_t                   	      difference_type;
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       typedef std::reverse_iterator<iterator>	      reverse_iterator;
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       typedef std::reverse_iterator<const_iterator>   const_reverse_iterator;
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       // Support for zero-sized arrays mandatory.
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       typedef _GLIBCXX_STD_C::__array_traits<_Tp, _Nm> _AT_Type;
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       typename _AT_Type::_Type                         _M_elems;
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       // No explicit construct/copy/destroy for aggregate type.
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       // DR 776.
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX20_CONSTEXPR void
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       fill(const value_type& __u)
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { std::fill_n(begin(), size(), __u); }
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX20_CONSTEXPR void
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       swap(array& __other)
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       noexcept(_AT_Type::_Is_nothrow_swappable::value)
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { std::swap_ranges(begin(), end(), __other.begin()); }
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       // Iterators.
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR iterator
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       begin() noexcept
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { return iterator(data()); }
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_iterator
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       begin() const noexcept
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { return const_iterator(data()); }
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR iterator
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       end() noexcept
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { return iterator(data() + _Nm); }
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_iterator
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       end() const noexcept
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { return const_iterator(data() + _Nm); }
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       rbegin() noexcept
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { return reverse_iterator(end()); }
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       rbegin() const noexcept
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { return const_reverse_iterator(end()); }
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       rend() noexcept
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { return reverse_iterator(begin()); }
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       rend() const noexcept
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { return const_reverse_iterator(begin()); }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 194


 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_iterator
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       cbegin() const noexcept
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { return const_iterator(data()); }
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_iterator
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       cend() const noexcept
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { return const_iterator(data() + _Nm); }
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       crbegin() const noexcept
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { return const_reverse_iterator(end()); }
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       crend() const noexcept
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { return const_reverse_iterator(begin()); }
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       // Capacity.
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       constexpr size_type
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       size() const noexcept { return _Nm; }
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       constexpr size_type
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       max_size() const noexcept { return _Nm; }
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX_NODISCARD constexpr bool
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       empty() const noexcept { return size() == 0; }
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array **** 
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       // Element access.
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR reference
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       operator[](size_type __n) noexcept
 5027              		.loc 10 185 7 is_stmt 1 discriminator 1 view .LVU973
 5028              	.LBB3724:
 5029              	.LBI3724:
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 5030              		.loc 10 55 7 discriminator 1 view .LVU974
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 5031              		.loc 10 55 7 is_stmt 0 discriminator 1 view .LVU975
 5032              	.LBE3724:
 5033              	.LBE3723:
 5034              	.LBB3725:
 5035              	.LBB3721:
 5036              		.loc 8 1046 34 discriminator 1 view .LVU976
 5037 00a2 227E     		ldrb	r2, [r4, #24]	@ zero_extendqisi2
 5038              	.LBE3721:
 5039              	.LBE3725:
  35:Sequencer.cpp ****             chord_synth.disable();
 5040              		.loc 7 35 23 discriminator 1 view .LVU977
 5041 00a4 E368     		ldr	r3, [r4, #12]
 5042              	.LBB3726:
 5043              	.LBB3722:
 5044              		.loc 8 1046 34 discriminator 1 view .LVU978
 5045 00a6 02EBC200 		add	r0, r2, r2, lsl #3
 5046 00aa 02EB4002 		add	r2, r2, r0, lsl #1
 5047              	.LBE3722:
 5048              	.LBE3726:
  35:Sequencer.cpp ****             chord_synth.disable();
 5049              		.loc 7 35 23 discriminator 1 view .LVU979
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 195


 5050 00ae 03EB8203 		add	r3, r3, r2, lsl #2
 5051 00b2 1E44     		add	r6, r6, r3
 5052              	.LVL189:
  35:Sequencer.cpp ****             chord_synth.disable();
 5053              		.loc 7 35 20 discriminator 1 view .LVU980
 5054 00b4 96F83C30 		ldrb	r3, [r6, #60]	@ zero_extendqisi2
 5055 00b8 13B9     		cbnz	r3, .L120
  36:Sequencer.cpp ****     }
 5056              		.loc 7 36 13 is_stmt 1 view .LVU981
 5057              	.LVL190:
 5058              	.LBB3727:
 5059              	.LBI3727:
  16:ChordSynth.h  ****     void disable() {enabled  = false;}
 5060              		.loc 9 16 10 view .LVU982
 5061              	.LBB3728:
 5062              		.loc 9 16 21 view .LVU983
 5063              	.LBE3728:
 5064              	.LBE3727:
  39:Sequencer.cpp ****     if (current_tick >= SAMPLES_IN_BAR)
 5065              		.loc 7 39 5 is_stmt 0 view .LVU984
 5066 00ba A268     		ldr	r2, [r4, #8]
 5067              	.LBB3730:
 5068              	.LBB3729:
 5069              		.loc 9 16 30 view .LVU985
 5070 00bc 0B71     		strb	r3, [r1, #4]
 5071              		.loc 9 16 38 view .LVU986
 5072 00be C2E7     		b	.L115
 5073              	.LVL191:
 5074              	.L120:
 5075              		.loc 9 16 38 view .LVU987
 5076              	.LBE3729:
 5077              	.LBE3730:
  39:Sequencer.cpp ****     if (current_tick >= SAMPLES_IN_BAR)
 5078              		.loc 7 39 5 view .LVU988
 5079 00c0 A268     		ldr	r2, [r4, #8]
 5080 00c2 C0E7     		b	.L115
 5081              	.LVL192:
 5082              	.L143:
  32:Sequencer.cpp **** 
 5083              		.loc 7 32 80 is_stmt 1 discriminator 1 view .LVU989
  32:Sequencer.cpp **** 
 5084              		.loc 7 32 102 is_stmt 0 discriminator 1 view .LVU990
 5085 00c4 E069     		ldr	r0, [r4, #28]
 5086 00c6 FFF7FEFF 		bl	_ZN9DrumSynth11trigger_hatEv
 5087              	.LVL193:
 5088 00ca E4E7     		b	.L118
 5089              	.L142:
  31:Sequencer.cpp ****         if (sequences[sequence_idx].drum_sequence.hat_steps[current_step])     drum_synth.trigger_h
 5090              		.loc 7 31 80 is_stmt 1 discriminator 1 view .LVU991
  31:Sequencer.cpp ****         if (sequences[sequence_idx].drum_sequence.hat_steps[current_step])     drum_synth.trigger_h
 5091              		.loc 7 31 104 is_stmt 0 discriminator 1 view .LVU992
 5092 00cc E069     		ldr	r0, [r4, #28]
 5093 00ce FFF7FEFF 		bl	_ZN9DrumSynth13trigger_snareEv
 5094              	.LVL194:
 5095              	.LBB3731:
 5096              	.LBB3704:
 5097              		.loc 8 1046 34 discriminator 1 view .LVU993
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 196


 5098 00d2 227E     		ldrb	r2, [r4, #24]	@ zero_extendqisi2
 5099              		.loc 8 1046 39 discriminator 1 view .LVU994
 5100 00d4 E368     		ldr	r3, [r4, #12]
 5101              		.loc 8 1046 34 discriminator 1 view .LVU995
 5102 00d6 02EBC201 		add	r1, r2, r2, lsl #3
 5103 00da 02EB4102 		add	r2, r2, r1, lsl #1
 5104              		.loc 8 1046 39 discriminator 1 view .LVU996
 5105 00de 03EB8203 		add	r3, r3, r2, lsl #2
 5106              	.LBE3704:
 5107              	.LBE3731:
 5108 00e2 D3E7     		b	.L117
 5109              	.LVL195:
 5110              	.L141:
  30:Sequencer.cpp ****         if (sequences[sequence_idx].drum_sequence.snare_steps[current_step])   drum_synth.trigger_s
 5111              		.loc 7 30 80 is_stmt 1 discriminator 1 view .LVU997
  30:Sequencer.cpp ****         if (sequences[sequence_idx].drum_sequence.snare_steps[current_step])   drum_synth.trigger_s
 5112              		.loc 7 30 103 is_stmt 0 discriminator 1 view .LVU998
 5113 00e4 C069     		ldr	r0, [r0, #28]
 5114              	.LVL196:
  30:Sequencer.cpp ****         if (sequences[sequence_idx].drum_sequence.snare_steps[current_step])   drum_synth.trigger_s
 5115              		.loc 7 30 103 discriminator 1 view .LVU999
 5116 00e6 FFF7FEFF 		bl	_ZN9DrumSynth12trigger_kickEv
 5117              	.LVL197:
 5118              	.LBB3732:
 5119              	.LBB3691:
 5120              		.loc 8 1046 34 discriminator 1 view .LVU1000
 5121 00ea 227E     		ldrb	r2, [r4, #24]	@ zero_extendqisi2
 5122              		.loc 8 1046 39 discriminator 1 view .LVU1001
 5123 00ec E368     		ldr	r3, [r4, #12]
 5124              		.loc 8 1046 34 discriminator 1 view .LVU1002
 5125 00ee 02EBC201 		add	r1, r2, r2, lsl #3
 5126 00f2 02EB4102 		add	r2, r2, r1, lsl #1
 5127              		.loc 8 1046 39 discriminator 1 view .LVU1003
 5128 00f6 03EB8203 		add	r3, r3, r2, lsl #2
 5129              	.LBE3691:
 5130              	.LBE3732:
 5131 00fa C2E7     		b	.L116
 5132              	.L145:
 5133              		.align	2
 5134              	.L144:
 5135 00fc 00007043 		.word	1131413504
 5136              		.cfi_endproc
 5137              	.LFE3598:
 5139              		.section	.text._ZN9Sequencer14scroll_patternEb,"ax",%progbits
 5140              		.align	1
 5141              		.p2align 2,,3
 5142              		.global	_ZN9Sequencer14scroll_patternEb
 5143              		.syntax unified
 5144              		.thumb
 5145              		.thumb_func
 5146              		.fpu fpv5-d16
 5148              	_ZN9Sequencer14scroll_patternEb:
 5149              	.LVL198:
 5150              	.LFB3599:
  43:Sequencer.cpp **** 
  44:Sequencer.cpp **** void Sequencer::scroll_pattern(bool direction) {
 5151              		.loc 7 44 48 is_stmt 1 view -0
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 197


 5152              		.cfi_startproc
 5153              		@ args = 0, pretend = 0, frame = 0
 5154              		@ frame_needed = 0, uses_anonymous_args = 0
 5155              		@ link register save eliminated.
  45:Sequencer.cpp ****     if (direction) {
 5156              		.loc 7 45 5 view .LVU1005
 5157 0000 A1B1     		cbz	r1, .L147
  46:Sequencer.cpp ****         sequence_idx++;
 5158              		.loc 7 46 9 view .LVU1006
 5159              	.LBB3733:
 5160              	.LBB3734:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 5161              		.loc 8 919 50 is_stmt 0 view .LVU1007
 5162 0002 0369     		ldr	r3, [r0, #16]
 5163              	.LBE3734:
 5164              	.LBE3733:
 5165              		.loc 7 46 21 view .LVU1008
 5166 0004 027E     		ldrb	r2, [r0, #24]	@ zero_extendqisi2
 5167              	.LBB3739:
 5168              	.LBB3735:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 5169              		.loc 8 919 50 view .LVU1009
 5170 0006 1349     		ldr	r1, .L155
 5171              	.LVL199:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 5172              		.loc 8 919 50 view .LVU1010
 5173              	.LBE3735:
 5174              	.LBE3739:
 5175              		.loc 7 46 21 view .LVU1011
 5176 0008 0132     		adds	r2, r2, #1
  44:Sequencer.cpp ****     if (direction) {
 5177              		.loc 7 44 48 view .LVU1012
 5178 000a 10B4     		push	{r4}
 5179              		.cfi_def_cfa_offset 4
 5180              		.cfi_offset 4, -4
 5181              	.LBB3740:
 5182              	.LBB3736:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 5183              		.loc 8 919 50 view .LVU1013
 5184 000c C468     		ldr	r4, [r0, #12]
 5185              	.LBE3736:
 5186              	.LBE3740:
 5187              		.loc 7 46 21 view .LVU1014
 5188 000e D2B2     		uxtb	r2, r2
 5189              	.LBB3741:
 5190              	.LBB3737:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 5191              		.loc 8 919 50 view .LVU1015
 5192 0010 1B1B     		subs	r3, r3, r4
 5193              	.LBE3737:
 5194              	.LBE3741:
 5195              		.loc 7 46 21 view .LVU1016
 5196 0012 0276     		strb	r2, [r0, #24]
  47:Sequencer.cpp ****         if (sequence_idx >= sequences.size())
 5197              		.loc 7 47 9 is_stmt 1 view .LVU1017
 5198              	.LVL200:
 5199              	.LBB3742:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 198


 5200              	.LBI3733:
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 5201              		.loc 8 918 7 view .LVU1018
 5202              	.LBB3738:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 5203              		.loc 8 919 50 is_stmt 0 view .LVU1019
 5204 0014 9B10     		asrs	r3, r3, #2
 5205 0016 01FB03F3 		mul	r3, r1, r3
 5206              	.LBE3738:
 5207              	.LBE3742:
 5208              		.loc 7 47 9 view .LVU1020
 5209 001a 9A42     		cmp	r2, r3
 5210 001c 01D3     		bcc	.L148
  48:Sequencer.cpp ****             sequence_idx = 0;
 5211              		.loc 7 48 13 is_stmt 1 view .LVU1021
 5212              		.loc 7 48 26 is_stmt 0 view .LVU1022
 5213 001e 0023     		movs	r3, #0
 5214 0020 0376     		strb	r3, [r0, #24]
 5215              	.L148:
  49:Sequencer.cpp ****     } else {
  50:Sequencer.cpp ****         if (sequence_idx == 0)
  51:Sequencer.cpp ****             sequence_idx = sequences.size() - 1;
  52:Sequencer.cpp ****         else
  53:Sequencer.cpp ****             sequence_idx--;
  54:Sequencer.cpp ****     }
  55:Sequencer.cpp **** 
  56:Sequencer.cpp ****     // Reset the current tick to the start of the new pattern
  57:Sequencer.cpp ****     current_tick = 0;
 5216              		.loc 7 57 5 is_stmt 1 view .LVU1023
 5217              		.loc 7 57 18 is_stmt 0 view .LVU1024
 5218 0022 0023     		movs	r3, #0
  58:Sequencer.cpp **** }
 5219              		.loc 7 58 1 view .LVU1025
 5220 0024 5DF8044B 		ldr	r4, [sp], #4
 5221              		.cfi_restore 4
 5222              		.cfi_def_cfa_offset 0
  57:Sequencer.cpp **** }
 5223              		.loc 7 57 18 view .LVU1026
 5224 0028 8360     		str	r3, [r0, #8]
 5225              		.loc 7 58 1 view .LVU1027
 5226 002a 7047     		bx	lr
 5227              	.LVL201:
 5228              	.L147:
  50:Sequencer.cpp ****             sequence_idx = sequences.size() - 1;
 5229              		.loc 7 50 9 is_stmt 1 view .LVU1028
  50:Sequencer.cpp ****             sequence_idx = sequences.size() - 1;
 5230              		.loc 7 50 13 is_stmt 0 view .LVU1029
 5231 002c 037E     		ldrb	r3, [r0, #24]	@ zero_extendqisi2
  50:Sequencer.cpp ****             sequence_idx = sequences.size() - 1;
 5232              		.loc 7 50 9 view .LVU1030
 5233 002e 23B1     		cbz	r3, .L154
  53:Sequencer.cpp ****     }
 5234              		.loc 7 53 13 is_stmt 1 view .LVU1031
  53:Sequencer.cpp ****     }
 5235              		.loc 7 53 25 is_stmt 0 view .LVU1032
 5236 0030 013B     		subs	r3, r3, #1
 5237 0032 0376     		strb	r3, [r0, #24]
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 199


  57:Sequencer.cpp **** }
 5238              		.loc 7 57 5 is_stmt 1 view .LVU1033
  57:Sequencer.cpp **** }
 5239              		.loc 7 57 18 is_stmt 0 view .LVU1034
 5240 0034 0023     		movs	r3, #0
 5241 0036 8360     		str	r3, [r0, #8]
 5242 0038 7047     		bx	lr
 5243              	.L154:
  51:Sequencer.cpp ****         else
 5244              		.loc 7 51 13 is_stmt 1 view .LVU1035
 5245              	.LVL202:
 5246              	.LBB3743:
 5247              	.LBI3743:
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 5248              		.loc 8 918 7 view .LVU1036
 5249              	.LBB3744:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 5250              		.loc 8 919 50 is_stmt 0 view .LVU1037
 5251 003a D0E90313 		ldrd	r1, r3, [r0, #12]
 5252              	.LVL203:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 5253              		.loc 8 919 50 view .LVU1038
 5254 003e 054A     		ldr	r2, .L155
 5255 0040 5B1A     		subs	r3, r3, r1
 5256 0042 9B10     		asrs	r3, r3, #2
 5257 0044 02FB03F3 		mul	r3, r2, r3
 5258              	.LBE3744:
 5259              	.LBE3743:
  51:Sequencer.cpp ****         else
 5260              		.loc 7 51 45 view .LVU1039
 5261 0048 013B     		subs	r3, r3, #1
  51:Sequencer.cpp ****         else
 5262              		.loc 7 51 26 view .LVU1040
 5263 004a 0376     		strb	r3, [r0, #24]
  57:Sequencer.cpp **** }
 5264              		.loc 7 57 5 is_stmt 1 view .LVU1041
  57:Sequencer.cpp **** }
 5265              		.loc 7 57 18 is_stmt 0 view .LVU1042
 5266 004c 0023     		movs	r3, #0
 5267 004e 8360     		str	r3, [r0, #8]
 5268 0050 7047     		bx	lr
 5269              	.L156:
 5270 0052 00BF     		.align	2
 5271              	.L155:
 5272 0054 1BCA6B28 		.word	678152731
 5273              		.cfi_endproc
 5274              	.LFE3599:
 5276              		.section	.rodata._ZNSt6vectorIN9Sequencer8SequenceESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_c
 5277              		.align	2
 5278              	.LC12:
 5279 0000 76656374 		.ascii	"vector::_M_realloc_insert\000"
 5279      6F723A3A 
 5279      5F4D5F72 
 5279      65616C6C 
 5279      6F635F69 
 5280              		.section	.text._ZNSt6vectorIN9Sequencer8SequenceESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx
 5281              		.align	1
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 200


 5282              		.p2align 2,,3
 5283              		.weak	_ZNSt6vectorIN9Sequencer8SequenceESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__norma
 5284              		.syntax unified
 5285              		.thumb
 5286              		.thumb_func
 5287              		.fpu fpv5-d16
 5289              	_ZNSt6vectorIN9Sequencer8SequenceESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_itera
 5290              	.LVL204:
 5291              	.LFB4120:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_realloc_insert(iterator __position, _Args&&... __args)
 5292              		.loc 4 426 7 is_stmt 1 view -0
 5293              		.cfi_startproc
 5294              		@ args = 0, pretend = 0, frame = 64
 5295              		@ frame_needed = 0, uses_anonymous_args = 0
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_realloc_insert(iterator __position, _Args&&... __args)
 5296              		.loc 4 426 7 is_stmt 0 view .LVU1044
 5297 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5298              		.cfi_def_cfa_offset 36
 5299              		.cfi_offset 4, -36
 5300              		.cfi_offset 5, -32
 5301              		.cfi_offset 6, -28
 5302              		.cfi_offset 7, -24
 5303              		.cfi_offset 8, -20
 5304              		.cfi_offset 9, -16
 5305              		.cfi_offset 10, -12
 5306              		.cfi_offset 11, -8
 5307              		.cfi_offset 14, -4
 5308 0004 93B0     		sub	sp, sp, #76
 5309              		.cfi_def_cfa_offset 112
 5310 0006 0368     		ldr	r3, [r0]
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_realloc_insert(iterator __position, _Args&&... __args)
 5311              		.loc 4 426 7 view .LVU1045
 5312 0008 1646     		mov	r6, r2
 5313              	.LBB4255:
 5314              	.LBB4256:
 5315              	.LBB4257:
 5316              	.LBB4258:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 5317              		.loc 8 919 50 view .LVU1046
 5318 000a CE4A     		ldr	r2, .L219
 5319              	.LVL205:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 5320              		.loc 8 919 50 view .LVU1047
 5321              	.LBE4258:
 5322              	.LBE4257:
 5323              	.LBE4256:
 5324              	.LBE4255:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_realloc_insert(iterator __position, _Args&&... __args)
 5325              		.loc 4 426 7 view .LVU1048
 5326 000c 0690     		str	r0, [sp, #24]
 5327 000e 4068     		ldr	r0, [r0, #4]
 5328              	.LVL206:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_realloc_insert(iterator __position, _Args&&... __args)
 5329              		.loc 4 426 7 view .LVU1049
 5330 0010 0593     		str	r3, [sp, #20]
 5331              	.LBB4268:
 5332              	.LBB4264:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 201


 5333              	.LBB4261:
 5334              	.LBB4259:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 5335              		.loc 8 919 50 view .LVU1050
 5336 0012 C31A     		subs	r3, r0, r3
 5337              	.LBE4259:
 5338              	.LBE4261:
1047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
1051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read-only (constant) reference to data.
1054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This operator allows for easy, array-style, data access.
1056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that data access with this operator is unchecked and
1057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
1058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  see at().)
1059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
1062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_subscript(__n);
1064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(this->_M_impl._M_start + __n);
1065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
1068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Safety check used only from at().
1069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_range_check(size_type __n) const
1071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__n >= this->size())
1073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_out_of_range_fmt(__N("vector::_M_range_check: __n "
1074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				       "(which is %zu) >= this->size() "
1075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				       "(which is %zu)"),
1076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				   __n, this->size());
1077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
1080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
1082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read/write reference to data.
1085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
1086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function provides for safer data access.  The parameter
1088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
1089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  function throws out_of_range if the check fails.
1090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       at(size_type __n)
1093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_check(__n);
1095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (*this)[__n];
1096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 202


1097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
1100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read-only (constant) reference to data.
1103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
1104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function provides for safer data access.  The parameter
1106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
1107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  function throws out_of_range if the check fails.
1108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       at(size_type __n) const
1111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_check(__n);
1113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (*this)[__n];
1114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reference to the data at the first
1118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element of the %vector.
1119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       front() _GLIBCXX_NOEXCEPT
1122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *begin();
1125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the first
1129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element of the %vector.
1130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       front() const _GLIBCXX_NOEXCEPT
1133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *begin();
1136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reference to the data at the last
1140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element of the %vector.
1141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       back() _GLIBCXX_NOEXCEPT
1144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(end() - 1);
1147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the
1151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  last element of the %vector.
1152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 203


1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       back() const _GLIBCXX_NOEXCEPT
1155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(end() - 1);
1158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // DR 464. Suggestion for new member functions in standard containers.
1162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // data access
1163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *   Returns a pointer such that [data(), data() + size()) is a valid
1165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *   range.  For a non-empty %vector, data() == &front().
1166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Tp*
1168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       data() _GLIBCXX_NOEXCEPT
1169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
1170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const _Tp*
1172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       data() const _GLIBCXX_NOEXCEPT
1173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
1174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // [23.2.4.3] modifiers
1176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Add data to the end of the %vector.
1178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be added.
1179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This is a typical stack operation.  The function creates an
1181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element at the end of the %vector and assigns the given data
1182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to it.  Due to the nature of a %vector this operation can be
1183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  done in constant time if the %vector has preallocated space
1184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  available.
1185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       push_back(const value_type& __x)
1188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
1190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
1191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
1192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
1193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				     __x);
1194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    ++this->_M_impl._M_finish;
1195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
1196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
1197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else
1198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_realloc_insert(end(), __x);
1199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       push_back(value_type&& __x)
1204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
1205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus > 201402L
1208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	reference
1209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 204


1211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	emplace_back(_Args&&... __args);
1213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Removes last element.
1217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This is a typical stack operation. It shrinks the %vector by one.
1219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that no data is returned, and if the last element's
1221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  data is needed, it should be retrieved before pop_back() is
1222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  called.
1223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       pop_back() _GLIBCXX_NOEXCEPT
1226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	--this->_M_impl._M_finish;
1229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
1230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_GLIBCXX_ASAN_ANNOTATE_SHRINK(1);
1231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts an object in %vector before specified iterator.
1236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __args  Arguments.
1238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert an object of type T constructed
1241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  with T(std::forward<Args>(args)...) before the specified location.
1242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a %vector
1243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  and if it is frequently used the user should consider using
1244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  std::list.
1245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	iterator
1248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	emplace(const_iterator __position, _Args&&... __args)
1249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ return _M_emplace_aux(__position, std::forward<_Args>(__args)...); }
1250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
1253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a copy of the given value before
1258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the specified location.  Note that this kind of operation
1259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used the user should consider using std::list.
1261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, const value_type& __x);
1264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
1267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 205


1268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a copy of the given value before
1272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the specified location.  Note that this kind of operation
1273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used the user should consider using std::list.
1275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(iterator __position, const value_type& __x);
1278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts given rvalue into %vector before specified iterator.
1283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a copy of the given rvalue before
1288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the specified location.  Note that this kind of operation
1289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used the user should consider using std::list.
1291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, value_type&& __x)
1294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_insert_rval(__position, std::move(__x)); }
1295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts an initializer_list into the %vector.
1298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
1300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert copies of the data in the
1302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer_list @a l into the %vector before the location
1303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  specified by @a position.
1304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, initializer_list<value_type> __l)
1311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	auto __offset = __position - cbegin();
1313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_insert(begin() + __offset, __l.begin(), __l.end(),
1314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			std::random_access_iterator_tag());
1315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return begin() + __offset;
1316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 206


1325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a specified number of copies of
1328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the given data before the location specified by @a position.
1329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, size_type __n, const value_type& __x)
1336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	difference_type __offset = __position - cbegin();
1338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_fill_insert(begin() + __offset, __n, __x);
1339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return begin() + __offset;
1340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a specified number of copies of
1349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the given data before the location specified by @a position.
1350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(iterator __position, size_type __n, const value_type& __x)
1357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_insert(__position, __n, __x); }
1358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
1365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last   An input iterator.
1366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert copies of the data in the range
1369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  by @a pos.
1371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator,
1377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	iterator
1379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	insert(const_iterator __position, _InputIterator __first,
1380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       _InputIterator __last)
1381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 207


1382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  difference_type __offset = __position - cbegin();
1383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_insert_dispatch(begin() + __offset,
1384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			     __first, __last, __false_type());
1385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  return begin() + __offset;
1386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
1392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last   An input iterator.
1393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert copies of the data in the range
1395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  by @a pos.
1397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	insert(iterator __position, _InputIterator __first,
1405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       _InputIterator __last)
1406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
1408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
1409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_insert_dispatch(__position, __first, __last, _Integral());
1410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Remove element at given position.
1415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  Iterator pointing to element to be erased.
1416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator pointing to the next element (or end()).
1417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will erase the element at the given position and thus
1419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  shorten the %vector by one.
1420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note This operation could be expensive and if it is
1422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  frequently used the user should consider using std::list.
1423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The user is also cautioned that this function only erases
1424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the element, and that if the element is itself a pointer,
1425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the pointed-to memory is not touched in any way.  Managing
1426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the pointer is the user's responsibility.
1427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(const_iterator __position)
1431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_erase(begin() + (__position - cbegin())); }
1432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(iterator __position)
1434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_erase(__position); }
1435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Remove a range of elements.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 208


1439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  Iterator pointing to the first element to be erased.
1440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last  Iterator pointing to one past the last element to be
1441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *                  erased.
1442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator pointing to the element pointed to by @a __last
1443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *           prior to erasing (or end()).
1444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will erase the elements in the range
1446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [__first,__last) and shorten the %vector accordingly.
1447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note This operation could be expensive and if it is
1449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  frequently used the user should consider using std::list.
1450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The user is also cautioned that this function only erases
1451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the elements, and that if the elements themselves are
1452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  pointers, the pointed-to memory is not touched in any way.
1453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Managing the pointer is the user's responsibility.
1454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(const_iterator __first, const_iterator __last)
1458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const auto __beg = begin();
1460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const auto __cbeg = cbegin();
1461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return _M_erase(__beg + (__first - __cbeg), __beg + (__last - __cbeg));
1462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(iterator __first, iterator __last)
1465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_erase(__first, __last); }
1466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Swaps data with another %vector.
1470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of the same element and allocator types.
1471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This exchanges the elements between two vectors in constant time.
1473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  (Three pointers, so it should be quite fast.)
1474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the global std::swap() function is specialized such that
1475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  std::swap(v1,v2) will feed to this function.
1476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Whether the allocators are swapped depends on the allocator traits.
1478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       swap(vector& __x) _GLIBCXX_NOEXCEPT
1481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_assert(_Alloc_traits::propagate_on_container_swap::value
1484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			 || _M_get_Tp_allocator() == __x._M_get_Tp_allocator());
1485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_swap_data(__x._M_impl);
1487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Alloc_traits::_S_on_swap(_M_get_Tp_allocator(),
1488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				  __x._M_get_Tp_allocator());
1489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Erases all the elements.  Note that this function only erases the
1493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  elements, and that if the elements themselves are pointers, the
1494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  pointed-to memory is not touched in any way.  Managing the pointer is
1495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the user's responsibility.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 209


1496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       clear() _GLIBCXX_NOEXCEPT
1499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_erase_at_end(this->_M_impl._M_start); }
1500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
1502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Memory expansion handler.  Uses the member allocation function to
1504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  obtain @a n bytes of memory, and then copies [first,last) into it.
1505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer
1508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_allocate_and_copy(size_type __n,
1509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			     _ForwardIterator __first, _ForwardIterator __last)
1510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  pointer __result = this->_M_allocate(__n);
1512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __try
1513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
1514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      std::__uninitialized_copy_a(__first, __last, __result,
1515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  _M_get_Tp_allocator());
1516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      return __result;
1517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
1518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __catch(...)
1519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
1520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _M_deallocate(__result, __n);
1521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __throw_exception_again;
1522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
1523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Internal constructor functions follow.
1527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus < 201103L
1531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Integer>
1534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_initialize_dispatch(_Integer __n, _Integer __value, __true_type)
1536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_start = _M_allocate(_S_check_init_len(
1538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		static_cast<size_type>(__n), _M_get_Tp_allocator()));
1539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_end_of_storage =
1540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_impl._M_start + static_cast<size_type>(__n);
1541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_fill_initialize(static_cast<size_type>(__n), __value);
1542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_initialize_dispatch(_InputIterator __first, _InputIterator __last,
1548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			       __false_type)
1549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_range_initialize(__first, __last,
1551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			      std::__iterator_category(__first));
1552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 210


1553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second initialize_dispatch above
1556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_initialize(_InputIterator __first, _InputIterator __last,
1559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    std::input_iterator_tag)
1560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __try {
1562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    for (; __first != __last; ++__first)
1563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      emplace_back(*__first);
1565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      push_back(*__first);
1567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  } __catch(...) {
1569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    clear();
1570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    __throw_exception_again;
1571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
1572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second initialize_dispatch above
1575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
1578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    std::forward_iterator_tag)
1579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  const size_type __n = std::distance(__first, __last);
1581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_start
1582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
1583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
1584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_finish =
1585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
1586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					this->_M_impl._M_start,
1587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					_M_get_Tp_allocator());
1588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the first initialize_dispatch above and by the
1591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // vector(n,value,a) constructor.
1592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_fill_initialize(size_type __n, const value_type& __value)
1594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
1596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_fill_n_a(this->_M_impl._M_start, __n, __value,
1597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					_M_get_Tp_allocator());
1598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the vector(n) constructor.
1602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_default_initialize(size_type __n)
1604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
1606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
1607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					   _M_get_Tp_allocator());
1608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 211


1610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Internal assign functions follow.  The *_aux functions do the actual
1612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // assignment work for the range versions.
1613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range assign to implement [23.1.1]/9
1615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Integer>
1619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_dispatch(_Integer __n, _Integer __val, __true_type)
1621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_fill_assign(__n, __val); }
1622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range assign to implement [23.1.1]/9
1624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_dispatch(_InputIterator __first, _InputIterator __last,
1627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			   __false_type)
1628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_assign_aux(__first, __last, std::__iterator_category(__first)); }
1629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second assign_dispatch above
1631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_aux(_InputIterator __first, _InputIterator __last,
1634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      std::input_iterator_tag);
1635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second assign_dispatch above
1637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,
1640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      std::forward_iterator_tag);
1641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by assign(n,t), and the range assign when it turns out
1643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // to be the same thing.
1644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_fill_assign(size_type __n, const value_type& __val);
1646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Internal insert functions follow.
1648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range insert to implement [23.1.1]/9
1650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Integer>
1654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_insert_dispatch(iterator __pos, _Integer __n, _Integer __val,
1656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			   __true_type)
1657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_fill_insert(__pos, __n, __val); }
1658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range insert to implement [23.1.1]/9
1660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_insert_dispatch(iterator __pos, _InputIterator __first,
1663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			   _InputIterator __last, __false_type)
1664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_range_insert(__pos, __first, __last,
1666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			  std::__iterator_category(__first));
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 212


1667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second insert_dispatch above
1670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_insert(iterator __pos, _InputIterator __first,
1673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			_InputIterator __last, std::input_iterator_tag);
1674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second insert_dispatch above
1676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_insert(iterator __pos, _ForwardIterator __first,
1679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			_ForwardIterator __last, std::forward_iterator_tag);
1680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by insert(p,n,x), and the range insert when it turns out to be
1682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // the same thing.
1683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_fill_insert(iterator __pos, size_type __n, const value_type& __x);
1685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by resize(n).
1688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_default_append(size_type __n);
1690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       bool
1692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_shrink_to_fit();
1693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus < 201103L
1696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by insert(p,x)
1697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_insert_aux(iterator __position, const value_type& __x);
1699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_realloc_insert(iterator __position, const value_type& __x);
1702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // A value_type object constructed with _Alloc_traits::construct()
1704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // and destroyed with _Alloc_traits::destroy().
1705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       struct _Temporary_value
1706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	template<typename... _Args>
1708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  explicit
1709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Temporary_value(vector* __vec, _Args&&... __args) : _M_this(__vec)
1710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
1711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _Alloc_traits::construct(_M_this->_M_impl, _M_ptr(),
1712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				     std::forward<_Args>(__args)...);
1713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
1714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	~_Temporary_value()
1716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _Alloc_traits::destroy(_M_this->_M_impl, _M_ptr()); }
1717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	value_type&
1719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_val() { return *_M_ptr(); }
1720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       private:
1722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Tp*
1723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_ptr() { return reinterpret_cast<_Tp*>(&__buf); }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 213


1724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector* _M_this;
1726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	typename aligned_storage<sizeof(_Tp), alignof(_Tp)>::type __buf;
1727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       };
1728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by insert(p,x) and other functions when insertion needs to
1730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // reallocate or move existing elements. _Arg is either _Tp& or _Tp.
1731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Arg>
1732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_insert_aux(iterator __position, _Arg&& __arg);
1734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_realloc_insert(iterator __position, _Args&&... __args);
1738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Either move-construct at the end, or forward to _M_insert_aux.
1740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_insert_rval(const_iterator __position, value_type&& __v);
1742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Try to emplace at the end, otherwise forward to _M_insert_aux.
1744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	iterator
1746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_emplace_aux(const_iterator __position, _Args&&... __args);
1747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Emplacing an rvalue of the correct type can use _M_insert_rval.
1749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_emplace_aux(const_iterator __position, value_type&& __v)
1751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_insert_rval(__position, std::move(__v)); }
1752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by _M_fill_insert, _M_insert_aux etc.
1755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
1756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_check_len(size_type __n, const char* __s) const
1757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (max_size() - size() < __n)
 5339              		.loc 8 1758 2 view .LVU1051
 5340 0014 CC4C     		ldr	r4, .L219+4
 5341              	.LBE4264:
 5342              	.LBE4268:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_realloc_insert(iterator __position, _Args&&... __args)
 5343              		.loc 4 426 7 view .LVU1052
 5344 0016 0391     		str	r1, [sp, #12]
 5345              	.LBB4269:
 5346              	.LBB4265:
 5347              	.LBB4262:
 5348              	.LBB4260:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 5349              		.loc 8 919 50 view .LVU1053
 5350 0018 9B10     		asrs	r3, r3, #2
 5351 001a 02FB03F3 		mul	r3, r2, r3
 5352              	.LBE4260:
 5353              	.LBE4262:
 5354              		.loc 8 1758 2 view .LVU1054
 5355 001e A342     		cmp	r3, r4
 5356 0020 CDE90801 		strd	r0, r1, [sp, #32]
 5357              	.LVL207:
 5358              		.loc 8 1758 2 view .LVU1055
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 214


 5359              	.LBE4265:
 5360              	.LBI4255:
1756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 5361              		.loc 8 1756 7 is_stmt 1 view .LVU1056
 5362              	.LBB4266:
 5363              	.LBB4263:
 5364              	.LBI4257:
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 5365              		.loc 8 918 7 view .LVU1057
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 5366              		.loc 8 918 7 is_stmt 0 view .LVU1058
 5367              	.LBE4263:
 5368              		.loc 8 1758 2 view .LVU1059
 5369 0024 00F01D82 		beq	.L214
 5370 0028 012B     		cmp	r3, #1
 5371 002a 1A46     		mov	r2, r3
 5372 002c 38BF     		it	cc
 5373 002e 0122     		movcc	r2, #1
 5374 0030 9B18     		adds	r3, r3, r2
 5375 0032 80F01082 		bcs	.L160
 5376              	.LVL208:
 5377              		.loc 8 1758 2 view .LVU1060
 5378              	.LBE4266:
 5379              	.LBE4269:
 5380              	.LBB4270:
 5381              	.LBI4270:
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 5382              		.loc 8 811 7 is_stmt 1 view .LVU1061
 5383              	.LBB4271:
 5384              	.LBI4271:
 5385              		.file 11 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_iterat
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // Iterators -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 215


  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Copyright (c) 1996-1998
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * representations about the suitability of this software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** /** @file bits/stl_iterator.h
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  Do not attempt to use it directly. @headername{iterator}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  This file implements reverse_iterator, back_insert_iterator,
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  front_insert_iterator, insert_iterator, __normal_iterator, and their
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  supporting functions and overloaded operators.
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  */
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #ifndef _STL_ITERATOR_H
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #define _STL_ITERATOR_H 1
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #include <bits/cpp_type_traits.h>
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #include <ext/type_traits.h>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #include <bits/move.h>
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #include <bits/ptr_traits.h>
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus >= 201103L
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # include <type_traits>
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # define __cpp_lib_array_constexpr 201811L
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # define __cpp_lib_constexpr_iterator 201811L
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #elif __cplusplus == 201703L
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # define __cpp_lib_array_constexpr 201803L
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # include <compare>
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # include <new>
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # include <bits/iterator_concepts.h>
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 216


  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** {
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    * @addtogroup iterators
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    * @{
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    */
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   namespace __detail
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   {
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     // Weaken iterator_category _Cat to _Limit if it is derived from that,
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     // otherwise use _Otherwise.
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     template<typename _Cat, typename _Limit, typename _Otherwise = _Cat>
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using __clamp_iter_cat
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	= conditional_t<derived_from<_Cat, _Limit>, _Limit, _Otherwise>;
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   }
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // 24.4.1 Reverse iterators
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Bidirectional and random access iterators have corresponding reverse
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  %iterator adaptors that iterate through the data structure in the
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  opposite direction.  They have the same signatures as the corresponding
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  iterators.  The fundamental relation between a reverse %iterator and its
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  corresponding %iterator @c i is established by the identity:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @code
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *      &*(reverse_iterator(i)) == &*(i - 1)
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @endcode
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  <em>This mapping is dictated by the fact that while there is always a
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  pointer past the end of an array, there might not be a valid pointer
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  before the beginning of an array.</em> [24.4.1]/1,2
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Reverse iterators can be tricky and surprising at first.  Their
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  semantics make sense, however, and the trickiness is a side effect of
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  the requirement that the iterators must be safe.
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class reverse_iterator
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : public iterator<typename iterator_traits<_Iterator>::iterator_category,
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		      typename iterator_traits<_Iterator>::value_type,
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		      typename iterator_traits<_Iterator>::difference_type,
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		      typename iterator_traits<_Iterator>::pointer,
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****                       typename iterator_traits<_Iterator>::reference>
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Iterator current;
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef iterator_traits<_Iterator>		__traits_type;
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Iterator					iterator_type;
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::difference_type	difference_type;
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::pointer		pointer;
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 217


 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::reference		reference;
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using iterator_concept
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	= conditional_t<random_access_iterator<_Iterator>,
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 			random_access_iterator_tag,
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 			bidirectional_iterator_tag>;
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using iterator_category
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	= __detail::__clamp_iter_cat<typename __traits_type::iterator_category,
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 				     random_access_iterator_tag>;
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The default constructor value-initializes member @p current.
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  If it is a pointer, that means it is zero-initialized.
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // 235 No specification of default ctor for reverse_iterator
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // 1012. reverse_iterator default ctor should value initialize
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reverse_iterator() : current() { }
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This %iterator will move in the opposite direction that @p x does.
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       explicit _GLIBCXX17_CONSTEXPR
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reverse_iterator(iterator_type __x) : current(__x) { }
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The copy constructor is normal.
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reverse_iterator(const reverse_iterator& __x)
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : current(__x.current) { }
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus >= 201103L
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reverse_iterator& operator=(const reverse_iterator&) = default;
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  A %reverse_iterator across other types can be copied if the
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  underlying %iterator can be converted to the type of @c current.
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _Iter>
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_GLIBCXX17_CONSTEXPR
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         reverse_iterator(const reverse_iterator<_Iter>& __x)
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	: current(__x.base()) { }
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  @c current, the %iterator used for underlying work.
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR iterator_type
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       base() const
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return current; }
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A reference to the value at @c --current
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 218


 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This requires that @c --current is dereferenceable.
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @warning This implementation requires that for an iterator of the
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *           underlying iterator type, @c x, a reference obtained by
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *           @c *x remains valid after @c x has been modified or
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *           destroyed. This is a bug: http://gcc.gnu.org/PR51823
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reference
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*() const
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_Iterator __tmp = current;
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *--__tmp;
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A pointer to the value at @c --current
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This requires that @c --current is dereferenceable.
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR pointer
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator->() const
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_concepts >= 201907L
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       requires is_pointer_v<_Iterator>
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	|| requires(const _Iterator __i) { __i.operator->(); }
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	// 1052. operator-> should also support smart pointers
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_Iterator __tmp = current;
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	--__tmp;
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return _S_to_pointer(__tmp);
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  @c *this
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Decrements the underlying iterator.
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++()
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	--current;
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  The original value of @c *this
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Decrements the underlying iterator.
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int)
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	reverse_iterator __tmp = *this;
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	--current;
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return __tmp;
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 219


 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  @c *this
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Increments the underlying iterator.
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator--()
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++current;
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A reverse_iterator with the previous value of @c *this
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Increments the underlying iterator.
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator--(int)
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	reverse_iterator __tmp = *this;
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++current;
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return __tmp;
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A reverse_iterator that refers to @c current - @a __n
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator+(difference_type __n) const
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return reverse_iterator(current - __n); }
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  *this
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Moves the underlying iterator backwards @a __n steps.
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator+=(difference_type __n)
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	current -= __n;
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A reverse_iterator that refers to @c current - @a __n
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator-(difference_type __n) const
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return reverse_iterator(current + __n); }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 220


 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  *this
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Moves the underlying iterator forwards @a __n steps.
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator-=(difference_type __n)
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	current += __n;
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  The value at @c current - @a __n - 1
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reference
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator[](difference_type __n) const
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *(*this + __n); }
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       friend constexpr iter_rvalue_reference_t<_Iterator>
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       iter_move(const reverse_iterator& __i)
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       noexcept(is_nothrow_copy_constructible_v<_Iterator>
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       && noexcept(ranges::iter_move(--std::declval<_Iterator&>())))
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	auto __tmp = __i.base();
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return ranges::iter_move(--__tmp);
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<indirectly_swappable<_Iterator> _Iter2>
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	friend constexpr void
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	iter_swap(const reverse_iterator& __x,
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		  const reverse_iterator<_Iter2>& __y)
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	noexcept(is_nothrow_copy_constructible_v<_Iterator>
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		 && is_nothrow_copy_constructible_v<_Iter2>
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		 && noexcept(ranges::iter_swap(--std::declval<_Iterator&>(),
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 					       --std::declval<_Iter2&>())))
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	{
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  auto __xtmp = __x.base();
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  auto __ytmp = __y.base();
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  ranges::iter_swap(--__xtmp, --__ytmp);
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	}
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     private:
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _Tp>
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	static _GLIBCXX17_CONSTEXPR _Tp*
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_S_to_pointer(_Tp* __p)
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         { return __p; }
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _Tp>
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	static _GLIBCXX17_CONSTEXPR pointer
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_S_to_pointer(_Tp __t)
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 221


 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         { return __t.operator->(); }
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   //@{
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param  __x  A %reverse_iterator.
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param  __y  A %reverse_iterator.
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @return  A simple bool.
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Reverse iterators forward comparisons to their underlying base()
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  iterators.
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus <= 201703L || ! defined __cpp_lib_concepts
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const reverse_iterator<_Iterator>& __x,
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() == __y.base(); }
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const reverse_iterator<_Iterator>& __x,
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() < __x.base(); }
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const reverse_iterator<_Iterator>& __x,
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x == __y); }
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const reverse_iterator<_Iterator>& __x,
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y < __x; }
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const reverse_iterator<_Iterator>& __x,
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__y < __x); }
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const reverse_iterator<_Iterator>& __x,
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x < __y); }
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // DR 280. Comparison of reverse_iterator to const reverse_iterator.
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const reverse_iterator<_IteratorL>& __x,
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() == __y.base(); }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 222


 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const reverse_iterator<_IteratorL>& __x,
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() < __x.base(); }
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const reverse_iterator<_IteratorL>& __x,
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x == __y); }
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const reverse_iterator<_IteratorL>& __x,
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y < __x; }
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const reverse_iterator<_IteratorL>& __x,
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__y < __x); }
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const reverse_iterator<_IteratorL>& __x,
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x < __y); }
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else // C++20
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const reverse_iterator<_IteratorL>& __x,
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() == __y.base() } -> convertible_to<bool>; }
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() == __y.base(); }
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const reverse_iterator<_IteratorL>& __x,
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() != __y.base() } -> convertible_to<bool>; }
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() != __y.base(); }
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const reverse_iterator<_IteratorL>& __x,
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() > __y.base() } -> convertible_to<bool>; }
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() > __y.base(); }
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const reverse_iterator<_IteratorL>& __x,
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() < __y.base() } -> convertible_to<bool>; }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 223


 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() < __y.base(); }
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const reverse_iterator<_IteratorL>& __x,
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() >= __y.base() } -> convertible_to<bool>; }
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() >= __y.base(); }
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const reverse_iterator<_IteratorL>& __x,
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() <= __y.base() } -> convertible_to<bool>; }
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() <= __y.base(); }
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL,
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	   three_way_comparable_with<_IteratorL> _IteratorR>
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr compare_three_way_result_t<_IteratorL, _IteratorR>
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=>(const reverse_iterator<_IteratorL>& __x,
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		const reverse_iterator<_IteratorR>& __y)
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() <=> __x.base(); }
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif // C++20
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   //@}
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus < 201103L
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline typename reverse_iterator<_Iterator>::difference_type
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const reverse_iterator<_Iterator>& __x,
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() - __x.base(); }
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline typename reverse_iterator<_IteratorL>::difference_type
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const reverse_iterator<_IteratorL>& __x,
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() - __x.base(); }
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // DR 685. reverse_iterator/move_iterator difference has invalid signatures
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR auto
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const reverse_iterator<_IteratorL>& __x,
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     -> decltype(__y.base() - __x.base())
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() - __x.base(); }
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR reverse_iterator<_Iterator>
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator+(typename reverse_iterator<_Iterator>::difference_type __n,
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __x)
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return reverse_iterator<_Iterator>(__x.base() - __n); }
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus >= 201103L
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // Same as C++14 make_reverse_iterator but used in C++11 mode too.
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 224


 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR reverse_iterator<_Iterator>
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     __make_reverse_iterator(_Iterator __i)
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return reverse_iterator<_Iterator>(__i); }
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # if __cplusplus >= 201402L
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #  define __cpp_lib_make_reverse_iterator 201402
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // DR 2285. make_reverse_iterator
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /// Generator function for reverse_iterator.
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR reverse_iterator<_Iterator>
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     make_reverse_iterator(_Iterator __i)
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return reverse_iterator<_Iterator>(__i); }
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #  if __cplusplus > 201703L && defined __cpp_lib_concepts
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator1, typename _Iterator2>
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires (!sized_sentinel_for<_Iterator1, _Iterator2>)
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline constexpr bool
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     disable_sized_sentinel_for<reverse_iterator<_Iterator1>,
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 			       reverse_iterator<_Iterator2>> = true;
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #  endif // C++20
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # endif // C++14
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     auto
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     __niter_base(reverse_iterator<_Iterator> __it)
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     -> decltype(__make_reverse_iterator(__niter_base(__it.base())))
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __make_reverse_iterator(__niter_base(__it.base())); }
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     struct __is_move_iterator<reverse_iterator<_Iterator> >
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : __is_move_iterator<_Iterator>
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { };
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     auto
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     __miter_base(reverse_iterator<_Iterator> __it)
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     -> decltype(__make_reverse_iterator(__miter_base(__it.base())))
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __make_reverse_iterator(__miter_base(__it.base())); }
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif // C++11
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // 24.4.2.2.1 back_insert_iterator
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Assigning a T to the iterator appends it to the container using
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  push_back.
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Tip:  Using the back_inserter function to create these iterators can
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  save typing.
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class back_insert_iterator
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 225


 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Container* container;
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Container          container_type;
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using difference_type = ptrdiff_t;
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       constexpr back_insert_iterator() noexcept : container(nullptr) { }
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// The only way to create this %iterator is with a container.
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       explicit _GLIBCXX20_CONSTEXPR
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator(_Container& __x)
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : container(std::__addressof(__x)) { }
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @param  __value  An instance of whatever type
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 reference-to-const T for container<T>.
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This kind of %iterator doesn't really have a @a position in the
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  container (you can think of the position as being permanently at
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  the end, if you like).  Assigning a value to the %iterator will
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  always append the value to the end of the container.
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus < 201103L
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_back(__value);
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_back(__value);
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_back(std::move(__value));
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 226


 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*()
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++()
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int)
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param  __x  A container of arbitrary type.
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @return  An instance of back_insert_iterator working on @p __x.
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  This wrapper function helps in creating back_insert_iterator instances.
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  types for you.
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline back_insert_iterator<_Container>
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     back_inserter(_Container& __x)
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return back_insert_iterator<_Container>(__x); }
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Assigning a T to the iterator prepends it to the container using
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  push_front.
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Tip:  Using the front_inserter function to create these iterators can
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  save typing.
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class front_insert_iterator
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Container* container;
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Container          container_type;
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using difference_type = ptrdiff_t;
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 227


 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       constexpr front_insert_iterator() noexcept : container(nullptr) { }
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// The only way to create this %iterator is with a container.
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       explicit _GLIBCXX20_CONSTEXPR
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator(_Container& __x)
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : container(std::__addressof(__x)) { }
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @param  __value  An instance of whatever type
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 reference-to-const T for container<T>.
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This kind of %iterator doesn't really have a @a position in the
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  container (you can think of the position as being permanently at
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  the front, if you like).  Assigning a value to the %iterator will
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  always prepend the value to the front of the container.
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus < 201103L
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_front(__value);
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_front(__value);
 743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_front(std::move(__value));
 751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.
 756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*()
 759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++()
 765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 228


 768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator
 770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int)
 771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
 773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param  __x  A container of arbitrary type.
 776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @return  An instance of front_insert_iterator working on @p x.
 777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  This wrapper function helps in creating front_insert_iterator instances.
 779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  types for you.
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
 787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline front_insert_iterator<_Container>
 788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     front_inserter(_Container& __x)
 789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return front_insert_iterator<_Container>(__x); }
 790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Assigning a T to the iterator inserts it in the container at the
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  %iterator's position, rather than overwriting the value at that
 797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  position.
 798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  (Sequences will actually insert a @e copy of the value before the
 800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  %iterator's position.)
 801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Tip:  Using the inserter function to create these iterators can
 803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  save typing.
 804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class insert_iterator
 807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && defined __cpp_lib_concepts
 810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using _Iter = std::__detail::__range_iter_t<_Container>;
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Container* container = nullptr;
 814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Iter iter = _Iter();
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename _Container::iterator		_Iter;
 817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Container* container;
 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Iter iter;
 821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 229


 825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Container          container_type;
 826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && defined __cpp_lib_concepts
 828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using difference_type = ptrdiff_t;
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator() = default;
 831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The only way to create this %iterator is with a container and an
 835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  initial position (a normal %iterator into the container).
 836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator(_Container& __x, _Iter __i)
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : container(std::__addressof(__x)), iter(__i) {}
 840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @param  __value  An instance of whatever type
 843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 reference-to-const T for container<T>.
 845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This kind of %iterator maintains its own position in the
 848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  container.  Assigning a value to the %iterator will insert the
 849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  value into the container at the place before the %iterator.
 850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The position is maintained such that subsequent assignments will
 852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  insert values immediately after one another.  For example,
 853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @code
 854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     // vector v contains A and Z
 855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     insert_iterator i (v, ++v.begin());
 857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     i = 1;
 858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     i = 2;
 859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     i = 3;
 860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     // vector v contains A, 1, 2, 3, and Z
 862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @endcode
 863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus < 201103L
 865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	iter = container->insert(iter, __value);
 869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++iter;
 870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	iter = container->insert(iter, __value);
 878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++iter;
 879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 230


 882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	iter = container->insert(iter, std::move(__value));
 887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++iter;
 888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.
 893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*()
 896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++()
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int)
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
 910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param __x  A container of arbitrary type.
 913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param __i  An iterator into the container.
 914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @return  An instance of insert_iterator working on @p __x.
 915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  This wrapper function helps in creating insert_iterator instances.
 917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  types for you.
 922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && defined __cpp_lib_concepts
 924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr insert_iterator<_Container>
 926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inserter(_Container& __x, std::__detail::__range_iter_t<_Container> __i)
 927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return insert_iterator<_Container>(__x, __i); }
 928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container, typename _Iterator>
 930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline insert_iterator<_Container>
 931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inserter(_Container& __x, _Iterator __i)
 932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       return insert_iterator<_Container>(__x,
 934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 					 typename _Container::iterator(__i));
 935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     }
 936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // @} group iterators
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 231


 939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** _GLIBCXX_END_NAMESPACE_VERSION
 941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** } // namespace
 942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
 944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** {
 945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // This iterator adapter is @a normal in the sense that it does not
 948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // change the semantics of any of the operators of its iterator
 949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // parameter.  Its primary purpose is to convert an iterator that is
 950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // not a class, e.g. a pointer, into an iterator that is a class.
 951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // The _Container parameter exists solely so that different containers
 952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // using this template can instantiate different types, even if the
 953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _Iterator parameter is the same.
 954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
 955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class __normal_iterator
 956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Iterator _M_current;
 959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef std::iterator_traits<_Iterator>		__traits_type;
 961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Iterator					iterator_type;
 964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::iterator_category iterator_category;
 965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::value_type  	value_type;
 966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::difference_type 	difference_type;
 967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::reference 	reference;
 968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::pointer   	pointer;
 969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
 971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using iterator_concept = std::__detail::__iter_concept<_Iterator>;
 972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX_CONSTEXPR __normal_iterator() _GLIBCXX_NOEXCEPT
 975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(_Iterator()) { }
 976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       explicit _GLIBCXX20_CONSTEXPR
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 5386              		.loc 11 978 7 view .LVU1062
 5387              		.loc 11 978 7 is_stmt 0 view .LVU1063
 5388              	.LBE4271:
 5389              	.LBE4270:
 5390              	.LBB4273:
 5391              	.LBI4273:
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // Allow iterator to const_iterator conversion
 982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _Iter>
 983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         _GLIBCXX20_CONSTEXPR
 984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         __normal_iterator(const __normal_iterator<_Iter,
 985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 			  typename __enable_if<
 986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       	       (std::__are_same<_Iter, typename _Container::pointer>::__value),
 987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		      _Container>::__type>& __i) _GLIBCXX_NOEXCEPT
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         : _M_current(__i.base()) { }
 989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 232


 990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // Forward iterator requirements
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reference
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*() const _GLIBCXX_NOEXCEPT
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *_M_current; }
 995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       pointer
 998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator->() const _GLIBCXX_NOEXCEPT
 999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return _M_current; }
1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator&
1003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++() _GLIBCXX_NOEXCEPT
1004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
1005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++_M_current;
1006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
1007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
1008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator
1011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int) _GLIBCXX_NOEXCEPT
1012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return __normal_iterator(_M_current++); }
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // Bidirectional iterator requirements
1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator&
1017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator--() _GLIBCXX_NOEXCEPT
1018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
1019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	--_M_current;
1020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
1021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
1022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator
1025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator--(int) _GLIBCXX_NOEXCEPT
1026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return __normal_iterator(_M_current--); }
1027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // Random access iterator requirements
1029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reference
1031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator[](difference_type __n) const _GLIBCXX_NOEXCEPT
1032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return _M_current[__n]; }
1033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator&
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator+=(difference_type __n) _GLIBCXX_NOEXCEPT
1037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { _M_current += __n; return *this; }
1038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator
1041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT
1042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return __normal_iterator(_M_current + __n); }
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator&
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator-=(difference_type __n) _GLIBCXX_NOEXCEPT
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 233


1047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { _M_current -= __n; return *this; }
1048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator
1051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
1052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return __normal_iterator(_M_current - __n); }
1053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       const _Iterator&
1056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       base() const _GLIBCXX_NOEXCEPT
1057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return _M_current; }
1058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
1059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // Note: In what follows, the left- and right-hand-side iterators are
1061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // allowed to vary in types (conceptually in cv-qualification) so that
1062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // comparison between cv-qualified and non-cv-qualified iterators be
1063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // valid.  However, the greedy and unfriendly operators in std::rel_ops
1064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // will make overload resolution ambiguous (when in scope) if we don't
1065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // provide overloads whose operands are of the same type.  Can someone
1066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // remind me what generic programming is about? -- Gaby
1067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cpp_lib_three_way_comparison
1069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires (_IteratorL __lhs, _IteratorR __rhs)
1071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { { __lhs == __rhs } -> std::convertible_to<bool>; }
1072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
1073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
1074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
1075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     noexcept(noexcept(__lhs.base() == __rhs.base()))
1076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() == __rhs.base(); }
1077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr std::__detail::__synth3way_t<_IteratorR, _IteratorL>
1080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=>(const __normal_iterator<_IteratorL, _Container>& __lhs,
1081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		const __normal_iterator<_IteratorR, _Container>& __rhs)
1082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     noexcept(noexcept(std::__detail::__synth3way(__lhs.base(), __rhs.base())))
1083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return std::__detail::__synth3way(__lhs.base(), __rhs.base()); }
1084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
1085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    // Forward iterator requirements
1086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
1090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
1091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() == __rhs.base(); }
1093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
1098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
1099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() == __rhs.base(); }
1101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 234


1104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const __normal_iterator<_IteratorL, _Container>& __lhs,
1106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
1107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() != __rhs.base(); }
1109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
1114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
1115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() != __rhs.base(); }
1117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // Random access iterator requirements
1119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const __normal_iterator<_IteratorL, _Container>& __lhs,
1122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs)
1123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() < __rhs.base(); }
1125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const __normal_iterator<_Iterator, _Container>& __lhs,
1130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
1131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() < __rhs.base(); }
1133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const __normal_iterator<_IteratorL, _Container>& __lhs,
1137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs)
1138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() > __rhs.base(); }
1140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const __normal_iterator<_Iterator, _Container>& __lhs,
1145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
1146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() > __rhs.base(); }
1148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const __normal_iterator<_IteratorL, _Container>& __lhs,
1152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
1153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() <= __rhs.base(); }
1155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const __normal_iterator<_Iterator, _Container>& __lhs,
1160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 235


1161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() <= __rhs.base(); }
1163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const __normal_iterator<_IteratorL, _Container>& __lhs,
1167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
1168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() >= __rhs.base(); }
1170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const __normal_iterator<_Iterator, _Container>& __lhs,
1175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
1176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() >= __rhs.base(); }
1178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif // three-way comparison
1179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
1181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // According to the resolution of DR179 not only the various comparison
1182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // operators but also operator- must accept mixed iterator/const_iterator
1183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // parameters.
1184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus >= 201103L
1186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     // DR 685.
1187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline auto
1189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const __normal_iterator<_IteratorL, _Container>& __lhs,
1190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs) noexcept
1191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     -> decltype(__lhs.base() - __rhs.base())
1192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
1193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline typename __normal_iterator<_IteratorL, _Container>::difference_type
1194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const __normal_iterator<_IteratorL, _Container>& __lhs,
1195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs)
1196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
1197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() - __rhs.base(); }
1198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline typename __normal_iterator<_Iterator, _Container>::difference_type
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 5392              		.loc 11 1202 5 is_stmt 1 view .LVU1064
 5393              	.LBB4274:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
1204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() - __rhs.base(); }
 5394              		.loc 11 1205 27 is_stmt 0 view .LVU1065
 5395 0036 039A     		ldr	r2, [sp, #12]
 5396              	.LVL209:
 5397              		.loc 11 1205 27 view .LVU1066
 5398 0038 0599     		ldr	r1, [sp, #20]
 5399 003a A2EB0109 		sub	r9, r2, r1
 5400              	.LVL210:
 5401              		.loc 11 1205 27 view .LVU1067
 5402              	.LBE4274:
 5403              	.LBE4273:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 236


 5404              	.LBB4276:
 5405              	.LBI4276:
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 5406              		.loc 8 343 7 is_stmt 1 view .LVU1068
 5407              	.LBB4277:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 5408              		.loc 8 346 18 is_stmt 0 view .LVU1069
 5409 003e 002B     		cmp	r3, #0
 5410 0040 40F0FA81 		bne	.L215
 5411 0044 4C24     		movs	r4, #76
 5412 0046 0793     		str	r3, [sp, #28]
 5413 0048 0493     		str	r3, [sp, #16]
 5414              	.LVL211:
 5415              	.L187:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 5416              		.loc 8 346 18 view .LVU1070
 5417              	.LBE4277:
 5418              	.LBE4276:
 5419              	.LBB4289:
 5420              	.LBB4290:
 5421              	.LBB4291:
 5422              	.LBB4292:
 5423              	.LBB4293:
 5424              	.LBB4294:
 5425              	.LBB4295:
 5426              	.LBB4296:
 5427              	.LBB4297:
 5428              	.LBB4298:
 5429              	.LBB4299:
 5430              	.LBB4300:
 5431              	.LBB4301:
 5432              	.LBB4302:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 5433              		.loc 1 149 31 view .LVU1071
 5434 004a 0023     		movs	r3, #0
 5435 004c 049A     		ldr	r2, [sp, #16]
 5436              	.LVL212:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 5437              		.loc 1 149 31 view .LVU1072
 5438              	.LBE4302:
 5439              	.LBE4301:
 5440              	.LBE4300:
 5441              	.LBE4299:
 5442              	.LBE4298:
 5443              	.LBE4297:
 5444              	.LBE4296:
 5445              	.LBB4321:
 5446              	.LBB4322:
 5447              	.LBB4323:
 5448              	.LBB4324:
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 5449              		.loc 1 340 30 view .LVU1073
 5450 004e D6F808C0 		ldr	ip, [r6, #8]
 5451              	.LBE4324:
 5452              	.LBE4323:
 5453              	.LBE4322:
 5454              	.LBB4330:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 237


 5455              	.LBB4331:
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 5456              		.loc 1 839 54 view .LVU1074
 5457 0052 3168     		ldr	r1, [r6]
 5458              	.LBE4331:
 5459              	.LBE4330:
 5460              	.LBE4321:
 5461              	.LBE4295:
 5462              	.LBE4294:
 5463              	.LBE4293:
 5464              	.LBE4292:
 5465              	.LBE4291:
 5466              	.LBE4290:
 5467              	.LBE4289:
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   __new_start + __elems_before,
 5468              		.loc 4 449 28 view .LVU1075
 5469 0054 02EB0905 		add	r5, r2, r9
 5470              	.LVL213:
 5471              	.LBB4950:
 5472              	.LBI4289:
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Construct an object of type `_Up`
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *	       an object of type `_Up`.
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __args Constructor arguments.
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls `__a.construct(__p, std::forward<_Args>(__args)...)`
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  in C++11, C++14 and C++17. Changed in C++20 to call
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  `std::construct_at(__p, std::forward<_Args>(__args)...)` instead.
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up, typename... _Args>
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
 5473              		.loc 6 507 2 is_stmt 1 view .LVU1076
 5474              	.LBB4938:
 5475              	.LBI4290:
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			  , __t * sizeof(_Tp)
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			 );
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus <= 201703L
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       size_type
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       max_size() const _GLIBCXX_USE_NOEXCEPT
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       { return _M_max_size(); }
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Up, typename... _Args>
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	void
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	construct(_Up* __p, _Args&&... __args)
 5476              		.loc 5 148 2 view .LVU1077
 5477              		.loc 5 148 2 is_stmt 0 view .LVU1078
 5478              	.LBE4938:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 238


 5479              	.LBE4950:
 5480              		.file 12 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\new"
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // The -*- C++ -*- dynamic memory management header.
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // Copyright (C) 1994-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // This file is part of GCC.
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** //
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // GCC is free software; you can redistribute it and/or modify
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // it under the terms of the GNU General Public License as published by
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // the Free Software Foundation; either version 3, or (at your option)
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // any later version.
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // 
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // GCC is distributed in the hope that it will be useful,
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // GNU General Public License for more details.
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // 
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // Under Section 7 of GPL version 3, you are granted additional
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // permissions described in the GCC Runtime Library Exception, version
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // 3.1, as published by the Free Software Foundation.
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // You should have received a copy of the GNU General Public License and
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // a copy of the GCC Runtime Library Exception along with this program;
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // <http://www.gnu.org/licenses/>.
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** /** @file new
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  This is a Standard C++ Library header.
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  The header @c new defines several functions to manage dynamic memory and
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  handling memory allocation errors; see
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  https://gcc.gnu.org/onlinedocs/libstdc++/manual/dynamic_memory.html
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  for more.
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  */
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #ifndef _NEW
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #define _NEW
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #pragma GCC system_header
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #include <bits/c++config.h>
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #include <exception>
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #pragma GCC visibility push(default)
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** extern "C++" {
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** namespace std 
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** {
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   /**
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****    *  @brief  Exception possibly thrown by @c new.
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****    *  @ingroup exceptions
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****    *
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****    *  @c bad_alloc (or classes derived from it) is used to report allocation
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****    *  errors from the throwing forms of @c new.  */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   class bad_alloc : public exception 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 239


  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   {
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   public:
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     bad_alloc() throw() { }
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     bad_alloc(const bad_alloc&) = default;
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     bad_alloc& operator=(const bad_alloc&) = default;
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     // This declaration is not useless:
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     // http://gcc.gnu.org/onlinedocs/gcc-3.0.2/gcc_6.html#SEC118
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     virtual ~bad_alloc() throw();
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     // See comment in eh_exception.cc.
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     virtual const char* what() const throw();
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   };
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   class bad_array_new_length : public bad_alloc
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   {
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   public:
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     bad_array_new_length() throw() { }
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     // This declaration is not useless:
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     // http://gcc.gnu.org/onlinedocs/gcc-3.0.2/gcc_6.html#SEC118
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     virtual ~bad_array_new_length() throw();
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     // See comment in eh_exception.cc.
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     virtual const char* what() const throw();
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   };
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_aligned_new
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   enum class align_val_t: size_t {};
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   struct nothrow_t
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   {
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     explicit nothrow_t() = default;
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   };
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   extern const nothrow_t nothrow;
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   /** If you write your own error handler to be called by @c new, it must
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****    *  be of this type.  */
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   typedef void (*new_handler)();
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   /// Takes a replacement handler as the argument, returns the
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   /// previous handler.
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   new_handler set_new_handler(new_handler) throw();
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   /// Return the current new handler.
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   new_handler get_new_handler() noexcept;
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 240


 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** } // namespace std
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** //@{
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** /** These are replaceable signatures:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  - normal single new and delete (no arguments, throw @c bad_alloc on error)
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  - normal array new and delete (same)
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  - @c nothrow single new and delete (take a @c nothrow argument, return
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *    @c NULL on error)
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  - @c nothrow array new and delete (same)
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  Placement new and delete signatures (take a memory address argument,
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  does nothing) may not be replaced by a user's program.
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** */
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t) _GLIBCXX_THROW (std::bad_alloc)
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t) _GLIBCXX_THROW (std::bad_alloc)
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*) _GLIBCXX_USE_NOEXCEPT
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*) _GLIBCXX_USE_NOEXCEPT
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_sized_deallocation
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::size_t) _GLIBCXX_USE_NOEXCEPT
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::size_t) _GLIBCXX_USE_NOEXCEPT
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__, __malloc__));
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__, __malloc__));
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_aligned_new
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t, std::align_val_t)
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t, std::align_val_t, const std::nothrow_t&)
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__, __malloc__));
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::align_val_t)
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::align_val_t, const std::nothrow_t&)
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t, std::align_val_t)
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t, std::align_val_t, const std::nothrow_t&)
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__, __malloc__));
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::align_val_t)
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::align_val_t, const std::nothrow_t&)
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_sized_deallocation
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::size_t, std::align_val_t)
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::size_t, std::align_val_t)
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 241


 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif // __cpp_sized_deallocation
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif // __cpp_aligned_new
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // Default placement versions of operator new.
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** { return __p; }
 5481              		.loc 12 175 3 is_stmt 1 view .LVU1079
 5482              	.LBB4951:
 5483              	.LBB4939:
 5484              	.LBB4927:
 5485              	.LBI4291:
 5486              		.file 13 "Sequencer.h"
   1:Sequencer.h   **** #pragma once
   2:Sequencer.h   **** #include <cstdint>
   3:Sequencer.h   **** #include <vector>
   4:Sequencer.h   **** #include <array>
   5:Sequencer.h   **** #include "DrumSynth.h"
   6:Sequencer.h   **** #include "ChordSynth.h"
   7:Sequencer.h   **** 
   8:Sequencer.h   **** 
   9:Sequencer.h   **** class Sequencer
  10:Sequencer.h   **** {
  11:Sequencer.h   **** public:
  12:Sequencer.h   ****     Sequencer(float sample_rate, DrumSynth& drum_synth, ChordSynth& chord_synth);
  13:Sequencer.h   **** 
  14:Sequencer.h   ****     void tick();
  15:Sequencer.h   **** 
  16:Sequencer.h   ****     void scroll_pattern(bool direction); // Pattern select switches call this function with 0,1 for
  17:Sequencer.h   ****     void set_bpm(uint8_t new_bpm) { bpm = new_bpm; }
  18:Sequencer.h   **** 
  19:Sequencer.h   ****     inline void toggle_groove() { groove = !groove; }
  20:Sequencer.h   **** 
  21:Sequencer.h   **** private:
  22:Sequencer.h   ****     uint8_t bpm{80};
  23:Sequencer.h   ****     float sample_rate{};
  24:Sequencer.h   ****     int current_tick;
  25:Sequencer.h   **** 
  26:Sequencer.h   ****     struct DrumSequence {
  27:Sequencer.h   ****         std::vector<bool> kick_steps;
  28:Sequencer.h   ****         std::vector<bool> hat_steps;
  29:Sequencer.h   ****         std::vector<bool> snare_steps;
  30:Sequencer.h   ****     };
  31:Sequencer.h   **** 
  32:Sequencer.h   ****     struct Sequence {
 5487              		.loc 13 32 12 view .LVU1080
 5488              	.LBB4916:
 5489              	.LBB4903:
 5490              	.LBI4293:
  26:Sequencer.h   ****         std::vector<bool> kick_steps;
 5491              		.loc 13 26 12 view .LVU1081
 5492              	.LBB4487:
 5493              	.LBI4294:
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       : _Base(_Bit_alloc_traits::_S_select_on_copy(__x._M_get_Bit_allocator()))
 5494              		.loc 1 679 7 view .LVU1082
 5495              	.LBB4481:
 5496              	.LBB4342:
 5497              	.LBI4342:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 242


 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl; }
 5498              		.loc 1 529 7 view .LVU1083
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl; }
 5499              		.loc 1 529 7 is_stmt 0 view .LVU1084
 5500              	.LBE4342:
 5501              	.LBB4343:
 5502              	.LBI4343:
 5503              		.file 14 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\ext\\alloc_trait
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // Copyright (C) 2011-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** /** @file ext/alloc_traits.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****  */
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #ifndef _EXT_ALLOC_TRAITS_H
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #define _EXT_ALLOC_TRAITS_H 1
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #pragma GCC system_header
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** # include <bits/alloc_traits.h>
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #if __cplusplus < 201103L
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** # include <bits/allocator.h>  // for __alloc_swap
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #endif
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** {
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** /**
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****  * @brief  Uniform interface to C++98 and C++11 allocators.
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****  * @ingroup allocators
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** */
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** template<typename _Alloc, typename = typename _Alloc::value_type>
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   struct __alloc_traits
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #if __cplusplus >= 201103L
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 243


  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   : std::allocator_traits<_Alloc>
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #endif
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   {
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef _Alloc allocator_type;
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #if __cplusplus >= 201103L
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef std::allocator_traits<_Alloc>           _Base_type;
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::value_type         value_type;
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::pointer            pointer;
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::const_pointer      const_pointer;
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::size_type          size_type;
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::difference_type    difference_type;
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     // C++11 allocators do not define reference or const_reference
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef value_type&                             reference;
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef const value_type&                       const_reference;
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::allocate;
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::deallocate;
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::construct;
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::destroy;
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::max_size;
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   private:
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     template<typename _Ptr>
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       using __is_custom_pointer
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 	= std::__and_<std::is_same<pointer, _Ptr>,
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 		      std::__not_<std::is_pointer<_Ptr>>>;
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   public:
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     // overload construct for non-standard pointer types
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     template<typename _Ptr, typename... _Args>
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       static _GLIBCXX14_CONSTEXPR
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       std::__enable_if_t<__is_custom_pointer<_Ptr>::value>
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       construct(_Alloc& __a, _Ptr __p, _Args&&... __args)
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       noexcept(noexcept(_Base_type::construct(__a, std::__to_address(__p),
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 					      std::forward<_Args>(__args)...)))
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       {
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 	_Base_type::construct(__a, std::__to_address(__p),
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 			      std::forward<_Args>(__args)...);
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       }
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     // overload destroy for non-standard pointer types
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     template<typename _Ptr>
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       static _GLIBCXX14_CONSTEXPR
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       std::__enable_if_t<__is_custom_pointer<_Ptr>::value>
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       destroy(_Alloc& __a, _Ptr __p)
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       noexcept(noexcept(_Base_type::destroy(__a, std::__to_address(__p))))
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       { _Base_type::destroy(__a, std::__to_address(__p)); }
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     static constexpr _Alloc _S_select_on_copy(const _Alloc& __a)
 5504              		.loc 14 97 29 is_stmt 1 view .LVU1085
 5505              	.LBB4344:
 5506              	.LBI4344:
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  __a.construct(__p, std::forward<_Args>(__args)...);
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 244


 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  std::construct_at(__p, std::forward<_Args>(__args)...);
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Destroy an object of type @a _Up
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c __a.destroy(__p).
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up>
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(is_nothrow_destructible<_Up>::value)
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  __a.destroy(__p);
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  std::destroy_at(__p);
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  The maximum supported allocation size
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __a.max_size()
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR size_type
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       {
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return __a.max_size();
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return size_t(-1) / sizeof(value_type);
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       }
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __rhs  An allocator.
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __rhs
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR allocator_type
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       select_on_container_copy_construction(const allocator_type& __rhs)
 5507              		.loc 6 558 7 view .LVU1086
 5508              	.LBB4345:
 5509              	.LBI4345:
 5510              		.file 15 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\allocator.
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Allocators -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Free Software Foundation; either version 3, or (at your option)
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 245


   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * Copyright (c) 1996-1997
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * Silicon Graphics Computer Systems, Inc.
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  *
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * provided that the above copyright notice appear in all copies and
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * that both that copyright notice and this permission notice appear
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * in supporting documentation.  Silicon Graphics makes no
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * representations about the suitability of this software for any
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  */
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** /** @file bits/allocator.h
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  *  This is an internal header file, included by other library headers.
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  *  Do not attempt to use it directly. @headername{memory}
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  */
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #ifndef _ALLOCATOR_H
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #define _ALLOCATOR_H 1
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #include <bits/c++allocator.h> // Define the base class to std::allocator.
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #include <bits/memoryfwd.h>
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #include <type_traits>
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #define __cpp_lib_incomplete_container_elements 201505
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** {
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   /**
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  @addtogroup allocators
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  @{
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    */
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   /// allocator<void> specialization.
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   template<>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     class allocator<void>
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 246


  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     {
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     public:
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef void        value_type;
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef size_t      size_type;
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef ptrdiff_t   difference_type;
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus <= 201703L
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef void*       pointer;
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef const void* const_pointer;
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Tp1>
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	struct rebind
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ typedef allocator<_Tp1> other; };
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #else
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator() = default;
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Up>
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	constexpr
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	allocator(const allocator<_Up>&) { }
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif // ! C++20
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L && __cplusplus <= 201703L
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type propagate_on_container_move_assignment;
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type is_always_equal;
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Up, typename... _Args>
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	void
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	construct(_Up* __p, _Args&&... __args)
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Up>
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	void
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	destroy(_Up* __p)
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	noexcept(std::is_nothrow_destructible<_Up>::value)
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ __p->~_Up(); }
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif // C++11 to C++17
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     };
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   /**
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    * @brief  The @a standard allocator, as per [20.4].
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/memory.html#std.util.memory.allocator
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  for further details.
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  @tparam  _Tp  Type of allocated object.
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    */
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   template<typename _Tp>
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     class allocator : public __allocator_base<_Tp>
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     {
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     public:
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef _Tp        value_type;
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef size_t     size_type;
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef ptrdiff_t  difference_type;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus <= 201703L
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 247


 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef _Tp*       pointer;
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef const _Tp* const_pointer;
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef _Tp&       reference;
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef const _Tp& const_reference;
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Tp1>
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	struct rebind
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ typedef allocator<_Tp1> other; };
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type propagate_on_container_move_assignment;
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type is_always_equal;
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // 3035. std::allocator's constructors should be constexpr
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       _GLIBCXX20_CONSTEXPR
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator() _GLIBCXX_NOTHROW { }
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       _GLIBCXX20_CONSTEXPR
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator(const allocator& __a) _GLIBCXX_NOTHROW
 5511              		.loc 15 147 7 view .LVU1087
 5512              	.LBB4346:
 5513              	.LBI4346:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5514              		.loc 5 82 7 view .LVU1088
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5515              		.loc 5 82 7 is_stmt 0 view .LVU1089
 5516              	.LBE4346:
 5517              	.LBE4345:
 5518              	.LBE4344:
 5519              	.LBE4343:
 5520              	.LBB4347:
 5521              	.LBI4347:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // Avoid implicit deprecation.
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator& operator=(const allocator&) = default;
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Tp1>
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	_GLIBCXX20_CONSTEXPR
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 5522              		.loc 15 157 2 is_stmt 1 view .LVU1090
 5523              	.LBB4348:
 5524              	.LBI4348:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5525              		.loc 5 79 7 view .LVU1091
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5526              		.loc 5 79 7 is_stmt 0 view .LVU1092
 5527              	.LBE4348:
 5528              	.LBE4347:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 248


 5529              	.LBB4349:
 5530              	.LBI4296:
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       : _M_impl(__a) { }
 5531              		.loc 1 542 7 is_stmt 1 view .LVU1093
 5532              	.LBB4315:
 5533              	.LBI4315:
 5534              		.loc 15 157 2 view .LVU1094
 5535              	.LBB4316:
 5536              	.LBI4316:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5537              		.loc 5 79 7 view .LVU1095
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5538              		.loc 5 79 7 is_stmt 0 view .LVU1096
 5539              	.LBE4316:
 5540              	.LBE4315:
 5541              	.LBB4317:
 5542              	.LBI4297:
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  : _Bit_alloc_type(__a)
 5543              		.loc 1 504 4 is_stmt 1 view .LVU1097
 5544              	.LBB4311:
 5545              	.LBI4311:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 5546              		.loc 15 147 7 view .LVU1098
 5547              	.LBB4312:
 5548              	.LBI4312:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5549              		.loc 5 82 7 view .LVU1099
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5550              		.loc 5 82 7 is_stmt 0 view .LVU1100
 5551              	.LBE4312:
 5552              	.LBE4311:
 5553              	.LBB4313:
 5554              	.LBI4298:
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 5555              		.loc 1 467 2 is_stmt 1 view .LVU1101
 5556              	.LBB4309:
 5557              	.LBB4305:
 5558              	.LBI4300:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 5559              		.loc 1 241 5 view .LVU1102
 5560              	.LBB4304:
 5561              	.LBI4301:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 5562              		.loc 1 148 5 view .LVU1103
 5563              	.LBB4303:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 5564              		.loc 1 149 31 is_stmt 0 view .LVU1104
 5565 0058 42F80930 		str	r3, [r2, r9]
 5566              	.LBE4303:
 5567              	.LBE4304:
 5568              	.LBE4305:
 5569              	.LBE4309:
 5570              	.LBE4313:
 5571              	.LBE4317:
 5572              	.LBE4349:
 5573              	.LBB4350:
 5574              	.LBB4335:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 249


 5575              	.LBB4336:
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 5576              		.loc 1 226 44 view .LVU1105
 5577 005c ACEB0107 		sub	r7, ip, r1
 5578              	.LBE4336:
 5579              	.LBE4335:
 5580              	.LBB4338:
 5581              	.LBB4328:
 5582              	.LBB4326:
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 5583              		.loc 1 340 40 view .LVU1106
 5584 0060 F268     		ldr	r2, [r6, #12]
 5585              	.LBE4326:
 5586              	.LBE4328:
 5587              	.LBE4338:
 5588              	.LBE4350:
 5589              	.LBB4351:
 5590              	.LBB4352:
 5591              	.LBB4353:
1145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 5592              		.loc 1 1145 2 view .LVU1107
 5593 0062 12EBC707 		adds	r7, r2, r7, lsl #3
 5594              	.LBE4353:
 5595              	.LBE4352:
 5596              	.LBE4351:
 5597              	.LBB4446:
 5598              	.LBB4318:
 5599              	.LBB4314:
 5600              	.LBB4310:
 5601              	.LBB4306:
 5602              	.LBB4307:
 5603              	.LBB4308:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 5604              		.loc 1 149 31 view .LVU1108
 5605 0066 C5E90133 		strd	r3, r3, [r5, #4]
 5606              	.LBE4308:
 5607              	.LBE4307:
 5608              	.LBE4306:
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ }
 5609              		.loc 1 468 47 view .LVU1109
 5610 006a C5E90333 		strd	r3, r3, [r5, #12]
 5611              	.LVL214:
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ }
 5612              		.loc 1 468 47 view .LVU1110
 5613              	.LBE4310:
 5614              	.LBE4314:
 5615              	.LBE4318:
 5616              	.LBB4319:
 5617              	.LBI4319:
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cpp_constexpr_dynamic_alloc
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       constexpr
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       ~allocator() _GLIBCXX_NOTHROW { }
 5618              		.loc 15 162 7 is_stmt 1 view .LVU1111
 5619              	.LBB4320:
 5620              	.LBI4320:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 250


  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5621              		.loc 5 89 7 view .LVU1112
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5622              		.loc 5 89 7 is_stmt 0 view .LVU1113
 5623              	.LBE4320:
 5624              	.LBE4319:
 5625              	.LBE4446:
 5626              	.LBB4447:
 5627              	.LBI4447:
 5628              		.loc 15 162 7 is_stmt 1 view .LVU1114
 5629              	.LBB4448:
 5630              	.LBI4448:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5631              		.loc 5 89 7 view .LVU1115
 5632              	.LBE4448:
 5633              	.LBE4447:
 5634              	.LBB4449:
 5635              	.LBI4449:
 5636              		.loc 15 162 7 view .LVU1116
 5637              	.LBB4450:
 5638              	.LBI4450:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5639              		.loc 5 89 7 view .LVU1117
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5640              		.loc 5 89 7 is_stmt 0 view .LVU1118
 5641              	.LBE4450:
 5642              	.LBE4449:
 5643              	.LBB4451:
 5644              	.LBI4321:
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return size_type(end() - begin()); }
 5645              		.loc 1 884 7 is_stmt 1 view .LVU1119
 5646              	.LBB4339:
 5647              	.LBI4322:
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl._M_finish; }
 5648              		.loc 1 846 7 view .LVU1120
 5649              	.LBB4329:
 5650              	.LBI4323:
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x._M_p, __x._M_offset) { }
 5651              		.loc 1 339 5 view .LVU1121
 5652              	.LBB4327:
 5653              	.LBB4325:
 5654              	.LBI4325:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 5655              		.loc 1 148 5 view .LVU1122
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 5656              		.loc 1 148 5 is_stmt 0 view .LVU1123
 5657              	.LBE4325:
 5658              	.LBE4327:
 5659              	.LBE4329:
 5660              	.LBE4339:
 5661              	.LBB4340:
 5662              	.LBI4330:
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_iterator(this->_M_impl._M_start._M_p, 0); }
 5663              		.loc 1 838 7 is_stmt 1 view .LVU1124
 5664              	.LBB4334:
 5665              	.LBB4332:
 5666              	.LBI4332:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 251


 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 5667              		.loc 1 336 5 view .LVU1125
 5668              	.LBB4333:
 5669              	.LBI4333:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 5670              		.loc 1 148 5 view .LVU1126
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 5671              		.loc 1 148 5 is_stmt 0 view .LVU1127
 5672              	.LBE4333:
 5673              	.LBE4332:
 5674              	.LBE4334:
 5675              	.LBE4340:
 5676              	.LBB4341:
 5677              	.LBI4335:
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 5678              		.loc 1 224 5 is_stmt 1 view .LVU1128
 5679              	.LBB4337:
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 5680              		.loc 1 226 7 view .LVU1129
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 5681              		.loc 1 226 7 is_stmt 0 view .LVU1130
 5682              	.LBE4337:
 5683              	.LBE4341:
 5684              	.LBE4451:
 5685              	.LBB4452:
 5686              	.LBI4351:
1143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 5687              		.loc 1 1143 7 is_stmt 1 view .LVU1131
 5688              	.LBB4439:
 5689              	.LBB4378:
1145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 5690              		.loc 1 1145 2 is_stmt 0 view .LVU1132
 5691 006e 40F06D81 		bne	.L216
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 5692              		.loc 1 1154 6 view .LVU1133
 5693 0072 049B     		ldr	r3, [sp, #16]
 5694 0074 3846     		mov	r0, r7
1153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    this->_M_impl._M_start = iterator(0, 0);
 5695              		.loc 1 1153 38 view .LVU1134
 5696 0076 2F61     		str	r7, [r5, #16]
 5697              	.LVL215:
 5698              	.LBB4354:
 5699              	.LBI4354:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 5700              		.loc 1 243 5 is_stmt 1 view .LVU1135
 5701              	.LBB4355:
 5702              	.LBI4355:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 5703              		.loc 1 148 5 view .LVU1136
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 5704              		.loc 1 148 5 is_stmt 0 view .LVU1137
 5705              	.LBE4355:
 5706              	.LBE4354:
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 5707              		.loc 1 1154 6 view .LVU1138
 5708 0078 43F80970 		str	r7, [r3, r9]
 5709              	.LBE4378:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 252


 5710              	.LBB4379:
 5711              	.LBB4380:
 5712              	.LBB4381:
 5713              	.LBB4382:
 5714              	.LBB4383:
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 5715              		.loc 1 175 12 view .LVU1139
 5716 007c 3B46     		mov	r3, r7
 5717              	.LBE4383:
 5718              	.LBE4382:
 5719              	.LBE4381:
 5720              	.LBE4380:
 5721              	.LBE4379:
 5722              	.LBB4421:
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 5723              		.loc 1 1154 6 view .LVU1140
 5724 007e 6F60     		str	r7, [r5, #4]
 5725              	.LVL216:
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 5726              		.loc 1 1154 6 view .LVU1141
 5727              	.LBE4421:
 5728              	.LBB4422:
 5729              	.LBI4379:
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 5730              		.loc 1 303 5 is_stmt 1 view .LVU1142
 5731              	.LBB4410:
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __tmp += __n;
 5732              		.loc 1 305 7 view .LVU1143
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __tmp;
 5733              		.loc 1 306 7 view .LVU1144
 5734              	.LBB4400:
 5735              	.LBI4381:
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 5736              		.loc 1 285 5 view .LVU1145
 5737              	.LBE4400:
 5738              	.LBE4410:
 5739              	.LBE4422:
 5740              	.LBE4439:
 5741              	.LBE4452:
 5742              	.LBE4481:
 5743              	.LBE4487:
 5744              	.LBE4903:
 5745              	.LBE4916:
 5746              	.LBE4927:
 5747              	.LBE4939:
 5748              	.LBE4951:
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 5749              		.loc 1 287 7 view .LVU1146
 5750              	.LBB4952:
 5751              	.LBB4940:
 5752              	.LBB4928:
 5753              	.LBB4917:
 5754              	.LBB4904:
 5755              	.LBB4488:
 5756              	.LBB4482:
 5757              	.LBB4453:
 5758              	.LBB4440:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 253


 5759              	.LBB4423:
 5760              	.LBB4411:
 5761              	.LBB4401:
 5762              	.LBB4392:
 5763              	.LBI4382:
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 5764              		.loc 1 172 5 view .LVU1147
 5765              	.LBB4384:
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_p += __n / int(_S_word_bit);
 5766              		.loc 1 174 7 view .LVU1148
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 5767              		.loc 1 175 7 view .LVU1149
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 5768              		.loc 1 176 7 view .LVU1150
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 5769              		.loc 1 177 7 view .LVU1151
 5770              	.L167:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 5771              		.loc 1 182 7 view .LVU1152
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 5772              		.loc 1 182 7 is_stmt 0 view .LVU1153
 5773              	.LBE4384:
 5774              	.LBE4392:
 5775              	.LBE4401:
 5776              	.LBE4411:
 5777              	.LBE4423:
 5778              	.LBE4440:
 5779              	.LBE4453:
 5780              	.LBE4482:
 5781              	.LBE4488:
 5782              	.LBE4904:
 5783              	.LBE4917:
 5784              	.LBE4928:
 5785              	.LBE4940:
 5786              	.LBE4952:
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 5787              		.loc 1 288 7 is_stmt 1 view .LVU1154
 5788              	.LBB4953:
 5789              	.LBB4941:
 5790              	.LBB4929:
 5791              	.LBB4918:
 5792              	.LBB4905:
 5793              	.LBB4489:
 5794              	.LBB4483:
 5795              	.LBB4454:
 5796              	.LBB4441:
 5797              	.LBB4424:
 5798              	.LBB4412:
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 5799              		.loc 1 307 7 view .LVU1155
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 5800              		.loc 1 307 7 is_stmt 0 view .LVU1156
 5801              	.LBE4412:
 5802              	.LBE4424:
1156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 5803              		.loc 1 1156 51 view .LVU1157
 5804 0080 C5E90237 		strd	r3, r7, [r5, #8]
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 254


 5805              	.LVL217:
1156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 5806              		.loc 1 1156 51 view .LVU1158
 5807              	.LBE4441:
 5808              	.LBE4454:
 5809              	.LBB4455:
 5810              	.LBI4455:
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_iterator(this->_M_impl._M_start._M_p, 0); }
 5811              		.loc 1 838 7 is_stmt 1 view .LVU1159
 5812              	.LBB4456:
 5813              	.LBB4457:
 5814              	.LBI4457:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 5815              		.loc 1 336 5 view .LVU1160
 5816              	.LBB4458:
 5817              	.LBI4458:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 5818              		.loc 1 148 5 view .LVU1161
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 5819              		.loc 1 148 5 is_stmt 0 view .LVU1162
 5820              	.LBE4458:
 5821              	.LBE4457:
 5822              	.LBE4456:
 5823              	.LBE4455:
 5824              	.LBB4460:
 5825              	.LBI4460:
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl._M_finish; }
 5826              		.loc 1 846 7 is_stmt 1 view .LVU1163
 5827              	.LBB4461:
 5828              	.LBB4462:
 5829              	.LBI4462:
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x._M_p, __x._M_offset) { }
 5830              		.loc 1 339 5 view .LVU1164
 5831              	.LBB4463:
 5832              	.LBB4464:
 5833              	.LBI4464:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 5834              		.loc 1 148 5 view .LVU1165
 5835              	.LBE4464:
 5836              	.LBE4463:
 5837              	.LBE4462:
 5838              	.LBE4461:
 5839              	.LBE4460:
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 5840              		.loc 1 683 17 is_stmt 0 view .LVU1166
 5841 0084 0EAB     		add	r3, sp, #56
 5842              	.LVL218:
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 5843              		.loc 1 683 17 view .LVU1167
 5844 0086 0090     		str	r0, [sp]
 5845              	.LVL219:
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 5846              		.loc 1 683 17 view .LVU1168
 5847 0088 10A8     		add	r0, sp, #64
 5848              	.LBE4483:
 5849              	.LBE4489:
 5850              	.LBB4490:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 255


 5851              	.LBB4491:
 5852              	.LBB4492:
 5853              	.LBB4493:
 5854              	.LBB4494:
 5855              	.LBB4495:
 5856              	.LBB4496:
 5857              	.LBB4497:
 5858              	.LBB4498:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 5859              		.loc 1 149 31 view .LVU1169
 5860 008a 0027     		movs	r7, #0
 5861              	.LBE4498:
 5862              	.LBE4497:
 5863              	.LBE4496:
 5864              	.LBE4495:
 5865              	.LBE4494:
 5866              	.LBE4493:
 5867              	.LBE4492:
 5868              	.LBE4491:
 5869              	.LBE4490:
 5870              	.LBB4688:
 5871              	.LBB4484:
 5872              	.LBB4474:
 5873              	.LBB4472:
 5874              	.LBB4470:
 5875              	.LBB4468:
 5876              	.LBB4467:
 5877              	.LBB4465:
 5878              	.LBB4466:
 5879 008c CDE90EC2 		strd	ip, r2, [sp, #56]
 5880              	.LVL220:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 5881              		.loc 1 149 31 view .LVU1170
 5882              	.LBE4466:
 5883              	.LBE4465:
 5884              	.LBE4467:
 5885              	.LBE4468:
 5886              	.LBE4470:
 5887              	.LBE4472:
 5888              	.LBE4474:
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 5889              		.loc 1 683 17 view .LVU1171
 5890 0090 0CCB     		ldm	r3, {r2, r3}
 5891 0092 FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator.isra.0
 5892              	.LVL221:
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 5893              		.loc 1 683 17 view .LVU1172
 5894              	.LBE4484:
 5895              	.LBE4688:
 5896              	.LBB4689:
 5897              	.LBI4490:
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       : _Base(_Bit_alloc_traits::_S_select_on_copy(__x._M_get_Bit_allocator()))
 5898              		.loc 1 679 7 is_stmt 1 view .LVU1173
 5899              	.LBB4682:
 5900              	.LBB4522:
 5901              	.LBI4522:
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl; }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 256


 5902              		.loc 1 529 7 view .LVU1174
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl; }
 5903              		.loc 1 529 7 is_stmt 0 view .LVU1175
 5904              	.LBE4522:
 5905              	.LBB4523:
 5906              	.LBI4523:
 5907              		.loc 14 97 29 is_stmt 1 view .LVU1176
 5908              	.LBB4524:
 5909              	.LBI4524:
 5910              		.loc 6 558 7 view .LVU1177
 5911              	.LBB4525:
 5912              	.LBI4525:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 5913              		.loc 15 147 7 view .LVU1178
 5914              	.LBB4526:
 5915              	.LBI4526:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5916              		.loc 5 82 7 view .LVU1179
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5917              		.loc 5 82 7 is_stmt 0 view .LVU1180
 5918              	.LBE4526:
 5919              	.LBE4525:
 5920              	.LBE4524:
 5921              	.LBE4523:
 5922              	.LBB4527:
 5923              	.LBI4527:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 5924              		.loc 15 157 2 is_stmt 1 view .LVU1181
 5925              	.LBB4528:
 5926              	.LBI4528:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5927              		.loc 5 79 7 view .LVU1182
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5928              		.loc 5 79 7 is_stmt 0 view .LVU1183
 5929              	.LBE4528:
 5930              	.LBE4527:
 5931              	.LBB4529:
 5932              	.LBI4492:
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       : _M_impl(__a) { }
 5933              		.loc 1 542 7 is_stmt 1 view .LVU1184
 5934              	.LBB4515:
 5935              	.LBI4515:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 5936              		.loc 15 157 2 view .LVU1185
 5937              	.LBB4516:
 5938              	.LBI4516:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5939              		.loc 5 79 7 view .LVU1186
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5940              		.loc 5 79 7 is_stmt 0 view .LVU1187
 5941              	.LBE4516:
 5942              	.LBE4515:
 5943              	.LBB4517:
 5944              	.LBI4493:
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  : _Bit_alloc_type(__a)
 5945              		.loc 1 504 4 is_stmt 1 view .LVU1188
 5946              	.LBB4510:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 257


 5947              	.LBI4510:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 5948              		.loc 15 147 7 view .LVU1189
 5949              	.LBB4511:
 5950              	.LBI4511:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5951              		.loc 5 82 7 view .LVU1190
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5952              		.loc 5 82 7 is_stmt 0 view .LVU1191
 5953              	.LBE4511:
 5954              	.LBE4510:
 5955              	.LBB4512:
 5956              	.LBI4494:
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 5957              		.loc 1 467 2 is_stmt 1 view .LVU1192
 5958              	.LBB4507:
 5959              	.LBB4502:
 5960              	.LBI4496:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 5961              		.loc 1 241 5 view .LVU1193
 5962              	.LBB4500:
 5963              	.LBI4497:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 5964              		.loc 1 148 5 view .LVU1194
 5965              	.LBE4500:
 5966              	.LBE4502:
 5967              	.LBE4507:
 5968              	.LBE4512:
 5969              	.LBE4517:
 5970              	.LBE4529:
 5971              	.LBB4530:
 5972              	.LBB4531:
 5973              	.LBB4532:
 5974              	.LBB4533:
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 5975              		.loc 1 340 30 is_stmt 0 view .LVU1195
 5976 0096 D6F81CC0 		ldr	ip, [r6, #28]
 5977              	.LBE4533:
 5978              	.LBE4532:
 5979              	.LBE4531:
 5980              	.LBB4539:
 5981              	.LBB4540:
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 5982              		.loc 1 839 54 view .LVU1196
 5983 009a 7169     		ldr	r1, [r6, #20]
 5984              	.LBE4540:
 5985              	.LBE4539:
 5986              	.LBB4544:
 5987              	.LBB4537:
 5988              	.LBB4535:
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 5989              		.loc 1 340 40 view .LVU1197
 5990 009c 326A     		ldr	r2, [r6, #32]
 5991              	.LBE4535:
 5992              	.LBE4537:
 5993              	.LBE4544:
 5994              	.LBB4545:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 258


 5995              	.LBB4546:
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 5996              		.loc 1 226 44 view .LVU1198
 5997 009e ACEB0108 		sub	r8, ip, r1
 5998              	.LBE4546:
 5999              	.LBE4545:
 6000              	.LBE4530:
 6001              	.LBB4551:
 6002              	.LBB4518:
 6003              	.LBB4513:
 6004              	.LBB4508:
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ }
 6005              		.loc 1 468 47 view .LVU1199
 6006 00a2 6F62     		str	r7, [r5, #36]
 6007              	.LBE4508:
 6008              	.LBE4513:
 6009              	.LBE4518:
 6010              	.LBE4551:
 6011              	.LBB4552:
 6012              	.LBB4553:
 6013              	.LBB4554:
1145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 6014              		.loc 1 1145 2 view .LVU1200
 6015 00a4 12EBC808 		adds	r8, r2, r8, lsl #3
 6016              	.LBE4554:
 6017              	.LBE4553:
 6018              	.LBE4552:
 6019              	.LBB4647:
 6020              	.LBB4519:
 6021              	.LBB4514:
 6022              	.LBB4509:
 6023              	.LBB4503:
 6024              	.LBB4501:
 6025              	.LBB4499:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 6026              		.loc 1 149 31 view .LVU1201
 6027 00a8 C5E90577 		strd	r7, r7, [r5, #20]
 6028              	.LVL222:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 6029              		.loc 1 149 31 view .LVU1202
 6030              	.LBE4499:
 6031              	.LBE4501:
 6032              	.LBE4503:
 6033              	.LBB4504:
 6034              	.LBI4504:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 6035              		.loc 1 241 5 is_stmt 1 view .LVU1203
 6036              	.LBB4505:
 6037              	.LBI4505:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 6038              		.loc 1 148 5 view .LVU1204
 6039              	.LBB4506:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 6040              		.loc 1 149 31 is_stmt 0 view .LVU1205
 6041 00ac C5E90777 		strd	r7, r7, [r5, #28]
 6042              	.LVL223:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 259


 6043              		.loc 1 149 31 view .LVU1206
 6044              	.LBE4506:
 6045              	.LBE4505:
 6046              	.LBE4504:
 6047              	.LBE4509:
 6048              	.LBE4514:
 6049              	.LBE4519:
 6050              	.LBB4520:
 6051              	.LBI4520:
 6052              		.loc 15 162 7 is_stmt 1 view .LVU1207
 6053              	.LBB4521:
 6054              	.LBI4521:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6055              		.loc 5 89 7 view .LVU1208
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6056              		.loc 5 89 7 is_stmt 0 view .LVU1209
 6057              	.LBE4521:
 6058              	.LBE4520:
 6059              	.LBE4647:
 6060              	.LBB4648:
 6061              	.LBI4648:
 6062              		.loc 15 162 7 is_stmt 1 view .LVU1210
 6063              	.LBB4649:
 6064              	.LBI4649:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6065              		.loc 5 89 7 view .LVU1211
 6066              	.LBE4649:
 6067              	.LBE4648:
 6068              	.LBB4650:
 6069              	.LBI4650:
 6070              		.loc 15 162 7 view .LVU1212
 6071              	.LBB4651:
 6072              	.LBI4651:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6073              		.loc 5 89 7 view .LVU1213
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6074              		.loc 5 89 7 is_stmt 0 view .LVU1214
 6075              	.LBE4651:
 6076              	.LBE4650:
 6077              	.LBB4652:
 6078              	.LBI4530:
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return size_type(end() - begin()); }
 6079              		.loc 1 884 7 is_stmt 1 view .LVU1215
 6080              	.LBB4548:
 6081              	.LBI4531:
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl._M_finish; }
 6082              		.loc 1 846 7 view .LVU1216
 6083              	.LBB4538:
 6084              	.LBI4532:
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x._M_p, __x._M_offset) { }
 6085              		.loc 1 339 5 view .LVU1217
 6086              	.LBB4536:
 6087              	.LBB4534:
 6088              	.LBI4534:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 6089              		.loc 1 148 5 view .LVU1218
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 260


 6090              		.loc 1 148 5 is_stmt 0 view .LVU1219
 6091              	.LBE4534:
 6092              	.LBE4536:
 6093              	.LBE4538:
 6094              	.LBE4548:
 6095              	.LBB4549:
 6096              	.LBI4539:
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_iterator(this->_M_impl._M_start._M_p, 0); }
 6097              		.loc 1 838 7 is_stmt 1 view .LVU1220
 6098              	.LBB4543:
 6099              	.LBB4541:
 6100              	.LBI4541:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 6101              		.loc 1 336 5 view .LVU1221
 6102              	.LBB4542:
 6103              	.LBI4542:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 6104              		.loc 1 148 5 view .LVU1222
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 6105              		.loc 1 148 5 is_stmt 0 view .LVU1223
 6106              	.LBE4542:
 6107              	.LBE4541:
 6108              	.LBE4543:
 6109              	.LBE4549:
 6110              	.LBB4550:
 6111              	.LBI4545:
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 6112              		.loc 1 224 5 is_stmt 1 view .LVU1224
 6113              	.LBB4547:
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 6114              		.loc 1 226 7 view .LVU1225
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 6115              		.loc 1 226 7 is_stmt 0 view .LVU1226
 6116              	.LBE4547:
 6117              	.LBE4550:
 6118              	.LBE4652:
 6119              	.LBB4653:
 6120              	.LBI4552:
1143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 6121              		.loc 1 1143 7 is_stmt 1 view .LVU1227
 6122              	.LBB4640:
 6123              	.LBB4579:
1145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 6124              		.loc 1 1145 2 is_stmt 0 view .LVU1228
 6125 00b0 40F09C81 		bne	.L217
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 6126              		.loc 1 1154 6 view .LVU1229
 6127 00b4 4046     		mov	r0, r8
 6128              	.LBE4579:
 6129              	.LBB4580:
 6130              	.LBB4581:
 6131              	.LBB4582:
 6132              	.LBB4583:
 6133              	.LBB4584:
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 6134              		.loc 1 175 12 view .LVU1230
 6135 00b6 4346     		mov	r3, r8
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 261


 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 6136              		.loc 1 176 11 view .LVU1231
 6137 00b8 4746     		mov	r7, r8
 6138              	.LBE4584:
 6139              	.LBE4583:
 6140              	.LBE4582:
 6141              	.LBE4581:
 6142              	.LBE4580:
 6143              	.LBB4622:
1153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    this->_M_impl._M_start = iterator(0, 0);
 6144              		.loc 1 1153 38 view .LVU1232
 6145 00ba C5F82480 		str	r8, [r5, #36]
 6146              	.LVL224:
 6147              	.LBB4555:
 6148              	.LBI4555:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 6149              		.loc 1 243 5 is_stmt 1 view .LVU1233
 6150              	.LBB4556:
 6151              	.LBI4556:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 6152              		.loc 1 148 5 view .LVU1234
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 6153              		.loc 1 148 5 is_stmt 0 view .LVU1235
 6154              	.LBE4556:
 6155              	.LBE4555:
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 6156              		.loc 1 1154 6 view .LVU1236
 6157 00be C5E90588 		strd	r8, r8, [r5, #20]
 6158              	.LVL225:
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 6159              		.loc 1 1154 6 view .LVU1237
 6160              	.LBE4622:
 6161              	.LBB4623:
 6162              	.LBI4580:
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 6163              		.loc 1 303 5 is_stmt 1 view .LVU1238
 6164              	.LBB4611:
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __tmp += __n;
 6165              		.loc 1 305 7 view .LVU1239
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __tmp;
 6166              		.loc 1 306 7 view .LVU1240
 6167              	.LBB4601:
 6168              	.LBI4582:
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 6169              		.loc 1 285 5 view .LVU1241
 6170              	.LBE4601:
 6171              	.LBE4611:
 6172              	.LBE4623:
 6173              	.LBE4640:
 6174              	.LBE4653:
 6175              	.LBE4682:
 6176              	.LBE4689:
 6177              	.LBE4905:
 6178              	.LBE4918:
 6179              	.LBE4929:
 6180              	.LBE4941:
 6181              	.LBE4953:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 262


 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 6182              		.loc 1 287 7 view .LVU1242
 6183              	.LBB4954:
 6184              	.LBB4942:
 6185              	.LBB4930:
 6186              	.LBB4919:
 6187              	.LBB4906:
 6188              	.LBB4690:
 6189              	.LBB4683:
 6190              	.LBB4654:
 6191              	.LBB4641:
 6192              	.LBB4624:
 6193              	.LBB4612:
 6194              	.LBB4602:
 6195              	.LBB4593:
 6196              	.LBI4583:
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 6197              		.loc 1 172 5 view .LVU1243
 6198              	.LBB4585:
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_p += __n / int(_S_word_bit);
 6199              		.loc 1 174 7 view .LVU1244
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 6200              		.loc 1 175 7 view .LVU1245
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 6201              		.loc 1 176 7 view .LVU1246
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 6202              		.loc 1 177 7 view .LVU1247
 6203              	.L171:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 6204              		.loc 1 182 7 view .LVU1248
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 6205              		.loc 1 182 7 is_stmt 0 view .LVU1249
 6206              	.LBE4585:
 6207              	.LBE4593:
 6208              	.LBE4602:
 6209              	.LBE4612:
 6210              	.LBE4624:
 6211              	.LBE4641:
 6212              	.LBE4654:
 6213              	.LBE4683:
 6214              	.LBE4690:
 6215              	.LBE4906:
 6216              	.LBE4919:
 6217              	.LBE4930:
 6218              	.LBE4942:
 6219              	.LBE4954:
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 6220              		.loc 1 288 7 is_stmt 1 view .LVU1250
 6221              	.LBB4955:
 6222              	.LBB4943:
 6223              	.LBB4931:
 6224              	.LBB4920:
 6225              	.LBB4907:
 6226              	.LBB4691:
 6227              	.LBB4684:
 6228              	.LBB4655:
 6229              	.LBB4642:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 263


 6230              	.LBB4625:
 6231              	.LBB4613:
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 6232              		.loc 1 307 7 view .LVU1251
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 6233              		.loc 1 307 7 is_stmt 0 view .LVU1252
 6234              	.LBE4613:
 6235              	.LBE4625:
1156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 6236              		.loc 1 1156 51 view .LVU1253
 6237 00c2 C5E90737 		strd	r3, r7, [r5, #28]
 6238              	.LVL226:
1156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 6239              		.loc 1 1156 51 view .LVU1254
 6240              	.LBE4642:
 6241              	.LBE4655:
 6242              	.LBB4656:
 6243              	.LBI4656:
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_iterator(this->_M_impl._M_start._M_p, 0); }
 6244              		.loc 1 838 7 is_stmt 1 view .LVU1255
 6245              	.LBB4657:
 6246              	.LBB4658:
 6247              	.LBI4658:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 6248              		.loc 1 336 5 view .LVU1256
 6249              	.LBB4659:
 6250              	.LBI4659:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 6251              		.loc 1 148 5 view .LVU1257
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 6252              		.loc 1 148 5 is_stmt 0 view .LVU1258
 6253              	.LBE4659:
 6254              	.LBE4658:
 6255              	.LBE4657:
 6256              	.LBE4656:
 6257              	.LBB4661:
 6258              	.LBI4661:
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl._M_finish; }
 6259              		.loc 1 846 7 is_stmt 1 view .LVU1259
 6260              	.LBB4662:
 6261              	.LBB4663:
 6262              	.LBI4663:
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x._M_p, __x._M_offset) { }
 6263              		.loc 1 339 5 view .LVU1260
 6264              	.LBB4664:
 6265              	.LBB4665:
 6266              	.LBI4665:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 6267              		.loc 1 148 5 view .LVU1261
 6268              	.LBE4665:
 6269              	.LBE4664:
 6270              	.LBE4663:
 6271              	.LBE4662:
 6272              	.LBE4661:
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 6273              		.loc 1 683 17 is_stmt 0 view .LVU1262
 6274 00c6 0CAB     		add	r3, sp, #48
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 264


 6275              	.LVL227:
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 6276              		.loc 1 683 17 view .LVU1263
 6277 00c8 0090     		str	r0, [sp]
 6278              	.LVL228:
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 6279              		.loc 1 683 17 view .LVU1264
 6280 00ca 10A8     		add	r0, sp, #64
 6281              	.LBE4684:
 6282              	.LBE4691:
 6283              	.LBB4692:
 6284              	.LBB4693:
 6285              	.LBB4694:
 6286              	.LBB4695:
 6287              	.LBB4696:
 6288              	.LBB4697:
 6289              	.LBB4698:
 6290              	.LBB4699:
 6291              	.LBB4700:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 6292              		.loc 1 149 31 view .LVU1265
 6293 00cc 0027     		movs	r7, #0
 6294              	.LBE4700:
 6295              	.LBE4699:
 6296              	.LBE4698:
 6297              	.LBE4697:
 6298              	.LBE4696:
 6299              	.LBE4695:
 6300              	.LBE4694:
 6301              	.LBE4693:
 6302              	.LBE4692:
 6303              	.LBB4891:
 6304              	.LBB4685:
 6305              	.LBB4675:
 6306              	.LBB4673:
 6307              	.LBB4671:
 6308              	.LBB4669:
 6309              	.LBB4668:
 6310              	.LBB4666:
 6311              	.LBB4667:
 6312 00ce CDE90CC2 		strd	ip, r2, [sp, #48]
 6313              	.LVL229:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 6314              		.loc 1 149 31 view .LVU1266
 6315              	.LBE4667:
 6316              	.LBE4666:
 6317              	.LBE4668:
 6318              	.LBE4669:
 6319              	.LBE4671:
 6320              	.LBE4673:
 6321              	.LBE4675:
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 6322              		.loc 1 683 17 view .LVU1267
 6323 00d2 0CCB     		ldm	r3, {r2, r3}
 6324 00d4 FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator.isra.0
 6325              	.LVL230:
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 265


 6326              		.loc 1 683 17 view .LVU1268
 6327              	.LBE4685:
 6328              	.LBE4891:
 6329              	.LBB4892:
 6330              	.LBI4692:
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       : _Base(_Bit_alloc_traits::_S_select_on_copy(__x._M_get_Bit_allocator()))
 6331              		.loc 1 679 7 is_stmt 1 view .LVU1269
 6332              	.LBB4884:
 6333              	.LBB4724:
 6334              	.LBI4724:
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl; }
 6335              		.loc 1 529 7 view .LVU1270
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl; }
 6336              		.loc 1 529 7 is_stmt 0 view .LVU1271
 6337              	.LBE4724:
 6338              	.LBB4725:
 6339              	.LBI4725:
 6340              		.loc 14 97 29 is_stmt 1 view .LVU1272
 6341              	.LBB4726:
 6342              	.LBI4726:
 6343              		.loc 6 558 7 view .LVU1273
 6344              	.LBB4727:
 6345              	.LBI4727:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 6346              		.loc 15 147 7 view .LVU1274
 6347              	.LBB4728:
 6348              	.LBI4728:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6349              		.loc 5 82 7 view .LVU1275
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6350              		.loc 5 82 7 is_stmt 0 view .LVU1276
 6351              	.LBE4728:
 6352              	.LBE4727:
 6353              	.LBE4726:
 6354              	.LBE4725:
 6355              	.LBB4729:
 6356              	.LBI4729:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 6357              		.loc 15 157 2 is_stmt 1 view .LVU1277
 6358              	.LBB4730:
 6359              	.LBI4730:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6360              		.loc 5 79 7 view .LVU1278
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6361              		.loc 5 79 7 is_stmt 0 view .LVU1279
 6362              	.LBE4730:
 6363              	.LBE4729:
 6364              	.LBB4731:
 6365              	.LBI4694:
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       : _M_impl(__a) { }
 6366              		.loc 1 542 7 is_stmt 1 view .LVU1280
 6367              	.LBB4717:
 6368              	.LBI4717:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 6369              		.loc 15 157 2 view .LVU1281
 6370              	.LBB4718:
 6371              	.LBI4718:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 266


  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6372              		.loc 5 79 7 view .LVU1282
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6373              		.loc 5 79 7 is_stmt 0 view .LVU1283
 6374              	.LBE4718:
 6375              	.LBE4717:
 6376              	.LBB4719:
 6377              	.LBI4695:
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  : _Bit_alloc_type(__a)
 6378              		.loc 1 504 4 is_stmt 1 view .LVU1284
 6379              	.LBB4712:
 6380              	.LBI4712:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 6381              		.loc 15 147 7 view .LVU1285
 6382              	.LBB4713:
 6383              	.LBI4713:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6384              		.loc 5 82 7 view .LVU1286
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6385              		.loc 5 82 7 is_stmt 0 view .LVU1287
 6386              	.LBE4713:
 6387              	.LBE4712:
 6388              	.LBB4714:
 6389              	.LBI4696:
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 6390              		.loc 1 467 2 is_stmt 1 view .LVU1288
 6391              	.LBB4709:
 6392              	.LBB4704:
 6393              	.LBI4698:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 6394              		.loc 1 241 5 view .LVU1289
 6395              	.LBB4702:
 6396              	.LBI4699:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 6397              		.loc 1 148 5 view .LVU1290
 6398              	.LBE4702:
 6399              	.LBE4704:
 6400              	.LBE4709:
 6401              	.LBE4714:
 6402              	.LBE4719:
 6403              	.LBE4731:
 6404              	.LBB4732:
 6405              	.LBB4733:
 6406              	.LBB4734:
 6407              	.LBB4735:
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 6408              		.loc 1 340 30 is_stmt 0 view .LVU1291
 6409 00d8 D6F830C0 		ldr	ip, [r6, #48]
 6410              	.LBE4735:
 6411              	.LBE4734:
 6412              	.LBE4733:
 6413              	.LBB4741:
 6414              	.LBB4742:
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 6415              		.loc 1 839 54 view .LVU1292
 6416 00dc B16A     		ldr	r1, [r6, #40]
 6417              	.LBE4742:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 267


 6418              	.LBE4741:
 6419              	.LBB4746:
 6420              	.LBB4739:
 6421              	.LBB4737:
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 6422              		.loc 1 340 40 view .LVU1293
 6423 00de 726B     		ldr	r2, [r6, #52]
 6424              	.LBE4737:
 6425              	.LBE4739:
 6426              	.LBE4746:
 6427              	.LBB4747:
 6428              	.LBB4748:
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 6429              		.loc 1 226 44 view .LVU1294
 6430 00e0 ACEB0108 		sub	r8, ip, r1
 6431              	.LBE4748:
 6432              	.LBE4747:
 6433              	.LBE4732:
 6434              	.LBB4753:
 6435              	.LBB4720:
 6436              	.LBB4715:
 6437              	.LBB4710:
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ }
 6438              		.loc 1 468 47 view .LVU1295
 6439 00e4 AF63     		str	r7, [r5, #56]
 6440              	.LBE4710:
 6441              	.LBE4715:
 6442              	.LBE4720:
 6443              	.LBE4753:
 6444              	.LBB4754:
 6445              	.LBB4755:
 6446              	.LBB4756:
1145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 6447              		.loc 1 1145 2 view .LVU1296
 6448 00e6 12EBC808 		adds	r8, r2, r8, lsl #3
 6449              	.LBE4756:
 6450              	.LBE4755:
 6451              	.LBE4754:
 6452              	.LBB4849:
 6453              	.LBB4721:
 6454              	.LBB4716:
 6455              	.LBB4711:
 6456              	.LBB4705:
 6457              	.LBB4703:
 6458              	.LBB4701:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 6459              		.loc 1 149 31 view .LVU1297
 6460 00ea C5E90A77 		strd	r7, r7, [r5, #40]
 6461              	.LVL231:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 6462              		.loc 1 149 31 view .LVU1298
 6463              	.LBE4701:
 6464              	.LBE4703:
 6465              	.LBE4705:
 6466              	.LBB4706:
 6467              	.LBI4706:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 268


 6468              		.loc 1 241 5 is_stmt 1 view .LVU1299
 6469              	.LBB4707:
 6470              	.LBI4707:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 6471              		.loc 1 148 5 view .LVU1300
 6472              	.LBB4708:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 6473              		.loc 1 149 31 is_stmt 0 view .LVU1301
 6474 00ee C5E90C77 		strd	r7, r7, [r5, #48]
 6475              	.LVL232:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 6476              		.loc 1 149 31 view .LVU1302
 6477              	.LBE4708:
 6478              	.LBE4707:
 6479              	.LBE4706:
 6480              	.LBE4711:
 6481              	.LBE4716:
 6482              	.LBE4721:
 6483              	.LBB4722:
 6484              	.LBI4722:
 6485              		.loc 15 162 7 is_stmt 1 view .LVU1303
 6486              	.LBB4723:
 6487              	.LBI4723:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6488              		.loc 5 89 7 view .LVU1304
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6489              		.loc 5 89 7 is_stmt 0 view .LVU1305
 6490              	.LBE4723:
 6491              	.LBE4722:
 6492              	.LBE4849:
 6493              	.LBB4850:
 6494              	.LBI4850:
 6495              		.loc 15 162 7 is_stmt 1 view .LVU1306
 6496              	.LBB4851:
 6497              	.LBI4851:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6498              		.loc 5 89 7 view .LVU1307
 6499              	.LBE4851:
 6500              	.LBE4850:
 6501              	.LBB4852:
 6502              	.LBI4852:
 6503              		.loc 15 162 7 view .LVU1308
 6504              	.LBB4853:
 6505              	.LBI4853:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6506              		.loc 5 89 7 view .LVU1309
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6507              		.loc 5 89 7 is_stmt 0 view .LVU1310
 6508              	.LBE4853:
 6509              	.LBE4852:
 6510              	.LBB4854:
 6511              	.LBI4732:
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return size_type(end() - begin()); }
 6512              		.loc 1 884 7 is_stmt 1 view .LVU1311
 6513              	.LBB4750:
 6514              	.LBI4733:
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl._M_finish; }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 269


 6515              		.loc 1 846 7 view .LVU1312
 6516              	.LBB4740:
 6517              	.LBI4734:
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x._M_p, __x._M_offset) { }
 6518              		.loc 1 339 5 view .LVU1313
 6519              	.LBB4738:
 6520              	.LBB4736:
 6521              	.LBI4736:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 6522              		.loc 1 148 5 view .LVU1314
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 6523              		.loc 1 148 5 is_stmt 0 view .LVU1315
 6524              	.LBE4736:
 6525              	.LBE4738:
 6526              	.LBE4740:
 6527              	.LBE4750:
 6528              	.LBB4751:
 6529              	.LBI4741:
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_iterator(this->_M_impl._M_start._M_p, 0); }
 6530              		.loc 1 838 7 is_stmt 1 view .LVU1316
 6531              	.LBB4745:
 6532              	.LBB4743:
 6533              	.LBI4743:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 6534              		.loc 1 336 5 view .LVU1317
 6535              	.LBB4744:
 6536              	.LBI4744:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 6537              		.loc 1 148 5 view .LVU1318
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 6538              		.loc 1 148 5 is_stmt 0 view .LVU1319
 6539              	.LBE4744:
 6540              	.LBE4743:
 6541              	.LBE4745:
 6542              	.LBE4751:
 6543              	.LBB4752:
 6544              	.LBI4747:
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 6545              		.loc 1 224 5 is_stmt 1 view .LVU1320
 6546              	.LBB4749:
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 6547              		.loc 1 226 7 view .LVU1321
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 6548              		.loc 1 226 7 is_stmt 0 view .LVU1322
 6549              	.LBE4749:
 6550              	.LBE4752:
 6551              	.LBE4854:
 6552              	.LBB4855:
 6553              	.LBI4754:
1143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 6554              		.loc 1 1143 7 is_stmt 1 view .LVU1323
 6555              	.LBB4842:
 6556              	.LBB4781:
1145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 6557              		.loc 1 1145 2 is_stmt 0 view .LVU1324
 6558 00f2 40F05581 		bne	.L218
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 270


 6559              		.loc 1 1154 6 view .LVU1325
 6560 00f6 4046     		mov	r0, r8
 6561              	.LBE4781:
 6562              	.LBB4782:
 6563              	.LBB4783:
 6564              	.LBB4784:
 6565              	.LBB4785:
 6566              	.LBB4786:
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 6567              		.loc 1 175 12 view .LVU1326
 6568 00f8 4346     		mov	r3, r8
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 6569              		.loc 1 176 11 view .LVU1327
 6570 00fa 4746     		mov	r7, r8
 6571              	.LBE4786:
 6572              	.LBE4785:
 6573              	.LBE4784:
 6574              	.LBE4783:
 6575              	.LBE4782:
 6576              	.LBB4824:
1153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    this->_M_impl._M_start = iterator(0, 0);
 6577              		.loc 1 1153 38 view .LVU1328
 6578 00fc C5F83880 		str	r8, [r5, #56]
 6579              	.LVL233:
 6580              	.LBB4757:
 6581              	.LBI4757:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 6582              		.loc 1 243 5 is_stmt 1 view .LVU1329
 6583              	.LBB4758:
 6584              	.LBI4758:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 6585              		.loc 1 148 5 view .LVU1330
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 6586              		.loc 1 148 5 is_stmt 0 view .LVU1331
 6587              	.LBE4758:
 6588              	.LBE4757:
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 6589              		.loc 1 1154 6 view .LVU1332
 6590 0100 C5E90A88 		strd	r8, r8, [r5, #40]
 6591              	.LVL234:
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 6592              		.loc 1 1154 6 view .LVU1333
 6593              	.LBE4824:
 6594              	.LBB4825:
 6595              	.LBI4782:
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 6596              		.loc 1 303 5 is_stmt 1 view .LVU1334
 6597              	.LBB4813:
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __tmp += __n;
 6598              		.loc 1 305 7 view .LVU1335
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __tmp;
 6599              		.loc 1 306 7 view .LVU1336
 6600              	.LBB4803:
 6601              	.LBI4784:
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 6602              		.loc 1 285 5 view .LVU1337
 6603              	.LBE4803:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 271


 6604              	.LBE4813:
 6605              	.LBE4825:
 6606              	.LBE4842:
 6607              	.LBE4855:
 6608              	.LBE4884:
 6609              	.LBE4892:
 6610              	.LBE4907:
 6611              	.LBE4920:
 6612              	.LBE4931:
 6613              	.LBE4943:
 6614              	.LBE4955:
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 6615              		.loc 1 287 7 view .LVU1338
 6616              	.LBB4956:
 6617              	.LBB4944:
 6618              	.LBB4932:
 6619              	.LBB4921:
 6620              	.LBB4908:
 6621              	.LBB4893:
 6622              	.LBB4885:
 6623              	.LBB4856:
 6624              	.LBB4843:
 6625              	.LBB4826:
 6626              	.LBB4814:
 6627              	.LBB4804:
 6628              	.LBB4795:
 6629              	.LBI4785:
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 6630              		.loc 1 172 5 view .LVU1339
 6631              	.LBB4787:
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_p += __n / int(_S_word_bit);
 6632              		.loc 1 174 7 view .LVU1340
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 6633              		.loc 1 175 7 view .LVU1341
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 6634              		.loc 1 176 7 view .LVU1342
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 6635              		.loc 1 177 7 view .LVU1343
 6636              	.L175:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 6637              		.loc 1 182 7 view .LVU1344
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 6638              		.loc 1 182 7 is_stmt 0 view .LVU1345
 6639              	.LBE4787:
 6640              	.LBE4795:
 6641              	.LBE4804:
 6642              	.LBE4814:
 6643              	.LBE4826:
 6644              	.LBE4843:
 6645              	.LBE4856:
 6646              	.LBE4885:
 6647              	.LBE4893:
 6648              	.LBE4908:
 6649              	.LBE4921:
 6650              	.LBE4932:
 6651              	.LBE4944:
 6652              	.LBE4956:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 272


 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 6653              		.loc 1 288 7 is_stmt 1 view .LVU1346
 6654              	.LBB4957:
 6655              	.LBB4945:
 6656              	.LBB4933:
 6657              	.LBB4922:
 6658              	.LBB4909:
 6659              	.LBB4894:
 6660              	.LBB4886:
 6661              	.LBB4857:
 6662              	.LBB4844:
 6663              	.LBB4827:
 6664              	.LBB4815:
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 6665              		.loc 1 307 7 view .LVU1347
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 6666              		.loc 1 307 7 is_stmt 0 view .LVU1348
 6667              	.LBE4815:
 6668              	.LBE4827:
1156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 6669              		.loc 1 1156 51 view .LVU1349
 6670 0104 C5E90C37 		strd	r3, r7, [r5, #48]
 6671              	.LVL235:
1156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 6672              		.loc 1 1156 51 view .LVU1350
 6673              	.LBE4844:
 6674              	.LBE4857:
 6675              	.LBB4858:
 6676              	.LBI4858:
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_iterator(this->_M_impl._M_start._M_p, 0); }
 6677              		.loc 1 838 7 is_stmt 1 view .LVU1351
 6678              	.LBB4859:
 6679              	.LBB4860:
 6680              	.LBI4860:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 6681              		.loc 1 336 5 view .LVU1352
 6682              	.LBB4861:
 6683              	.LBI4861:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 6684              		.loc 1 148 5 view .LVU1353
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 6685              		.loc 1 148 5 is_stmt 0 view .LVU1354
 6686              	.LBE4861:
 6687              	.LBE4860:
 6688              	.LBE4859:
 6689              	.LBE4858:
 6690              	.LBB4863:
 6691              	.LBI4863:
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl._M_finish; }
 6692              		.loc 1 846 7 is_stmt 1 view .LVU1355
 6693              	.LBB4864:
 6694              	.LBB4865:
 6695              	.LBI4865:
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x._M_p, __x._M_offset) { }
 6696              		.loc 1 339 5 view .LVU1356
 6697              	.LBB4866:
 6698              	.LBB4867:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 273


 6699              	.LBI4867:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 6700              		.loc 1 148 5 view .LVU1357
 6701              	.LBE4867:
 6702              	.LBE4866:
 6703              	.LBE4865:
 6704              	.LBE4864:
 6705              	.LBE4863:
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 6706              		.loc 1 683 17 is_stmt 0 view .LVU1358
 6707 0108 0AAB     		add	r3, sp, #40
 6708              	.LVL236:
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 6709              		.loc 1 683 17 view .LVU1359
 6710              	.LBE4886:
 6711              	.LBE4894:
 6712              	.LBE4909:
 6713              		.loc 13 32 12 view .LVU1360
 6714 010a 3C36     		adds	r6, r6, #60
 6715              	.LVL237:
 6716              	.LBB4910:
 6717              	.LBB4895:
 6718              	.LBB4887:
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 6719              		.loc 1 683 17 view .LVU1361
 6720 010c 0090     		str	r0, [sp]
 6721              	.LVL238:
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 6722              		.loc 1 683 17 view .LVU1362
 6723 010e 10A8     		add	r0, sp, #64
 6724              	.LBE4887:
 6725              	.LBE4895:
 6726              	.LBE4910:
 6727              		.loc 13 32 12 view .LVU1363
 6728 0110 3C35     		adds	r5, r5, #60
 6729              	.LVL239:
 6730              	.LBB4911:
 6731              	.LBB4896:
 6732              	.LBB4888:
 6733              	.LBB4877:
 6734              	.LBB4875:
 6735              	.LBB4873:
 6736              	.LBB4871:
 6737              	.LBB4870:
 6738              	.LBB4868:
 6739              	.LBB4869:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 6740              		.loc 1 149 31 view .LVU1364
 6741 0112 CDE90AC2 		strd	ip, r2, [sp, #40]
 6742              	.LVL240:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 6743              		.loc 1 149 31 view .LVU1365
 6744              	.LBE4869:
 6745              	.LBE4868:
 6746              	.LBE4870:
 6747              	.LBE4871:
 6748              	.LBE4873:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 274


 6749              	.LBE4875:
 6750              	.LBE4877:
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 6751              		.loc 1 683 17 view .LVU1366
 6752 0116 0CCB     		ldm	r3, {r2, r3}
 6753 0118 FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator.isra.0
 6754              	.LVL241:
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 6755              		.loc 1 683 17 view .LVU1367
 6756              	.LBE4888:
 6757              	.LBE4896:
 6758              	.LBE4911:
 6759              		.loc 13 32 12 view .LVU1368
 6760 011c 96E80F00 		ldm	r6, {r0, r1, r2, r3}
 6761 0120 85E80F00 		stm	r5, {r0, r1, r2, r3}
 6762              	.LVL242:
 6763              		.loc 13 32 12 view .LVU1369
 6764              	.LBE4922:
 6765              	.LBE4933:
 6766              	.LBE4945:
 6767              	.LBE4957:
 6768              	.LBB4958:
 6769              	.LBI4958:
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 6770              		.loc 8 465 7 is_stmt 1 view .LVU1370
 6771              	.LBB4959:
 6772              	.LBB4960:
 6773              	.LBI4960:
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 6774              		.loc 8 453 7 view .LVU1371
 6775              	.LBB4961:
 6776              	.LBI4961:
 6777              		.file 16 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_uninit
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Raw memory manipulators -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 275


  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Copyright (c) 1996,1997
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * representations about the suitability of this software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** /** @file bits/stl_uninitialized.h
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #ifndef _STL_UNINITIALIZED_H
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #define _STL_UNINITIALIZED_H 1
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus > 201402L
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #include <bits/stl_pair.h>
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus >= 201103L
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #include <type_traits>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #include <ext/alloc_traits.h>
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** namespace std _GLIBCXX_VISIBILITY(default)
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** {
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /** @addtogroup memory
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @{
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    */
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueTypes>
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_copy
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 276


  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __result;
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __first != __last; ++__first, (void)++__cur)
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      return __cur;
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__result, __cur);
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_copy<true>
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         { return std::copy(__first, __last, __result); }
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Copies the range [first,last) into result.
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __last   An input iterator.
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __result An output iterator.
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   __result + (__first - __last)
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  Like copy(), but does not require an initialized output range.
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator>
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_copy(_InputIterator __first, _InputIterator __last,
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       _ForwardIterator __result)
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::value_type
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType1;
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType2;
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus < 201103L
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = true;
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #else
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted copy constructor, but the std::copy
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // optimization that uses memmove would happily "copy" them anyway.
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       static_assert(is_constructible<_ValueType2, decltype(*__first)>::value,
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  "result type must be constructible from value type of input range");
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 277


 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::reference _RefType1;
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::reference _RefType2;
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted assignment, so using std::copy
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // would be ill-formed. Require assignability before using std::copy:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return std::__uninitialized_copy<__is_trivial(_ValueType1)
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       && __is_trivial(_ValueType2)
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       && __assignable>::
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_copy(__first, __last, __result);
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static void
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      const _Tp& __x)
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __cur != __last; ++__cur)
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill<true>
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static void
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      const _Tp& __x)
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         { std::fill(__first, __last, __x); }
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,last).
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __last   An input iterator.
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __x      The source value.
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   Nothing.
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 278


 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  Like fill(), but does not require an initialized output range.
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp>
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_fill(_ForwardIterator __first, _ForwardIterator __last,
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       const _Tp& __x)
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus < 201103L
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = true;
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #else
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted copy constructor, but the std::fill
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // optimization that uses memmove would happily "copy" them anyway.
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       static_assert(is_constructible<_ValueType, const _Tp&>::value,
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  "result type must be constructible from input type");
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted assignment, so using std::fill
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // would be ill-formed. Require assignability before using std::fill:
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       std::__uninitialized_fill<__is_trivial(_ValueType) && __assignable>::
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_fill(__first, __last, __x);
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill_n
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			const _Tp& __x)
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __n > 0; --__n, (void) ++__cur)
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      return __cur;
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill_n<true>
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 279


 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			const _Tp& __x)
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         { return std::fill_n(__first, __n, __x); }
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    // _GLIBCXX_RESOLVE_LIB_DEFECTS
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    // DR 1339. uninitialized_fill_n should return the end of its range
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,first+n).
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __n      The number of copies to make.
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __x      The source value.
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   Nothing.
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  Like fill_n(), but does not require an initialized output range.
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp>
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_fill_n(_ForwardIterator __first, _Size __n, const _Tp& __x)
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus < 201103L
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = true;
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #else
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted copy constructor, but the std::fill
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // optimization that uses memmove would happily "copy" them anyway.
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       static_assert(is_constructible<_ValueType, const _Tp&>::value,
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  "result type must be constructible from input type");
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted assignment, so using std::fill
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // would be ill-formed. Require assignability before using std::fill:
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __uninitialized_fill_n<__is_trivial(_ValueType) && __assignable>::
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_fill_n(__first, __n, __x);
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Extensions: versions of uninitialized_copy, uninitialized_fill,
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  and uninitialized_fill_n that take an allocator parameter.
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  We dispatch back to the standard versions when we're given the
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  default allocator.  For nondefault allocators we do not use 
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  any of the POD optimizations.
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     _ForwardIterator
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, _Allocator& __alloc)
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __result;
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 280


 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __first != __last; ++__first, (void)++__cur)
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), *__first);
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return __cur;
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __cur, __alloc);
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator, typename _Tp>
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, allocator<_Tp>&)
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { return std::uninitialized_copy(__first, __last, __result); }
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_move_a(_InputIterator __first, _InputIterator __last,
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, _Allocator& __alloc)
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return std::__uninitialized_copy_a(_GLIBCXX_MAKE_MOVE_ITERATOR(__first),
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 					 _GLIBCXX_MAKE_MOVE_ITERATOR(__last),
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 					 __result, __alloc);
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_move_if_noexcept_a(_InputIterator __first,
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       _InputIterator __last,
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       _ForwardIterator __result,
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       _Allocator& __alloc)
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return std::__uninitialized_copy_a
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	(_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(__first),
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	 _GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(__last), __result, __alloc);
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp, typename _Allocator>
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     void
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last,
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   const _Tp& __x, _Allocator& __alloc)
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __first;
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __cur != __last; ++__cur)
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), __x);
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 281


 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp, typename _Tp2>
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last,
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   const _Tp& __x, allocator<_Tp2>&)
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { std::uninitialized_fill(__first, __last, __x); }
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp,
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     _ForwardIterator
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, 
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			     const _Tp& __x, _Allocator& __alloc)
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __first;
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __n > 0; --__n, (void) ++__cur)
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), __x);
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return __cur;
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp,
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Tp2>
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, 
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			     const _Tp& __x, allocator<_Tp2>&)
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { return std::uninitialized_fill_n(__first, __n, __x); }
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Extensions: __uninitialized_copy_move, __uninitialized_move_copy,
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_fill_move, __uninitialized_move_fill.
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // All of these algorithms take a user-supplied allocator, which is used
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // for construction and destruction.
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_copy_move
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Copies [first1, last1) into [result, result + (last1 - first1)), and
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  move [first2, last2) into
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  [result, result + (last1 - first1) + (last2 - first2)).
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator1, typename _InputIterator2,
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _ForwardIterator, typename _Allocator>
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_move(_InputIterator1 __first1,
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator1 __last1,
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator2 __first2,
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator2 __last2,
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __result,
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _Allocator& __alloc)
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 282


 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __mid = std::__uninitialized_copy_a(__first1, __last1,
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 							   __result,
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 							   __alloc);
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return std::__uninitialized_move_a(__first2, __last2, __mid, __alloc);
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __mid, __alloc);
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_move_copy
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Moves [first1, last1) into [result, result + (last1 - first1)), and
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  copies [first2, last2) into
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  [result, result + (last1 - first1) + (last2 - first2)).
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator1, typename _InputIterator2,
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _ForwardIterator, typename _Allocator>
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_move_copy(_InputIterator1 __first1,
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator1 __last1,
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator2 __first2,
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator2 __last2,
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __result,
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _Allocator& __alloc)
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __mid = std::__uninitialized_move_a(__first1, __last1,
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 							   __result,
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 							   __alloc);
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return std::__uninitialized_copy_a(__first2, __last2, __mid, __alloc);
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __mid, __alloc);
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_fill_move
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [result, mid) with x, and moves [first, last) into
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  [mid, mid + (last - first)).
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp, typename _InputIterator,
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_fill_move(_ForwardIterator __result, _ForwardIterator __mid,
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      const _Tp& __x, _InputIterator __first,
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator __last, _Allocator& __alloc)
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       std::__uninitialized_fill_a(__result, __mid, __x, __alloc);
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return std::__uninitialized_move_a(__first, __last, __mid, __alloc);
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 283


 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __mid, __alloc);
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_move_fill
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Moves [first1, last1) into [first2, first2 + (last1 - first1)), and
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  fills [first2 + (last1 - first1), last2) with x.
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator, typename _Tp,
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_move_fill(_InputIterator __first1, _InputIterator __last1,
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __first2,
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __last2, const _Tp& __x,
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _Allocator& __alloc)
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __mid2 = std::__uninitialized_move_a(__first1, __last1,
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 							    __first2,
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 							    __alloc);
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::__uninitialized_fill_a(__mid2, __last2, __x, __alloc);
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__first2, __mid2, __alloc);
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus >= 201103L
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Extensions: __uninitialized_default, __uninitialized_default_n,
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default_a, __uninitialized_default_n_a.
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_1
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator>
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static void
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_default(_ForwardIterator __first, _ForwardIterator __last)
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __cur != __last; ++__cur)
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur));
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 284


 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_1<true>
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator>
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static void
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_default(_ForwardIterator __first, _ForwardIterator __last)
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef typename iterator_traits<_ForwardIterator>::value_type
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    _ValueType;
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::fill(__first, __last, _ValueType());
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_n_1
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size>
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_default_n(_ForwardIterator __first, _Size __n)
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __n > 0; --__n, (void) ++__cur)
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur));
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      return __cur;
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_n_1<true>
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size>
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_default_n(_ForwardIterator __first, _Size __n)
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef typename iterator_traits<_ForwardIterator>::value_type
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    _ValueType;
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return std::fill_n(__first, __n, _ValueType());
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [first, last) with std::distance(first, last) default
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // constructed value_types(s).
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 285


 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator>
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default(_ForwardIterator __first,
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			    _ForwardIterator __last)
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // trivial types can have deleted assignment
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       std::__uninitialized_default_1<__is_trivial(_ValueType)
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				     && __assignable>::
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_default(__first, __last);
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default_n
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [first, first + n) with n default constructed value_type(s).
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size>
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_n(_ForwardIterator __first, _Size __n)
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // trivial types can have deleted assignment
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __uninitialized_default_n_1<__is_trivial(_ValueType)
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       && __assignable>::
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_default_n(__first, __n);
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default_a
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [first, last) with std::distance(first, last) default
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // constructed value_types(s), constructed with the allocator alloc.
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Allocator>
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     void
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_a(_ForwardIterator __first,
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __last,
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _Allocator& __alloc)
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __first;
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __cur != __last; ++__cur)
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur));
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp>
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 286


 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_a(_ForwardIterator __first,
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __last,
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      allocator<_Tp>&)
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { std::__uninitialized_default(__first, __last); }
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default_n_a
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [first, first + n) with n default constructed value_types(s),
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // constructed with the allocator alloc.
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Allocator>
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     _ForwardIterator
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_n_a(_ForwardIterator __first, _Size __n, 
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				_Allocator& __alloc)
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __first;
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __n > 0; --__n, (void) ++__cur)
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur));
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return __cur;
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp>
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_n_a(_ForwardIterator __first, _Size __n, 
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				allocator<_Tp>&)
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { return std::__uninitialized_default_n(__first, __n); }
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_novalue_1
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator>
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	static void
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_default_novalue(_ForwardIterator __first,
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				 _ForwardIterator __last)
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __cur != __last; ++__cur)
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct_novalue(std::__addressof(*__cur));
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 287


 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_novalue_1<true>
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator>
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static void
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_default_novalue(_ForwardIterator __first,
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				 _ForwardIterator __last)
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_novalue_n_1
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size>
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	static _ForwardIterator
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_default_novalue_n(_ForwardIterator __first, _Size __n)
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __n > 0; --__n, (void) ++__cur)
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct_novalue(std::__addressof(*__cur));
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      return __cur;
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_novalue_n_1<true>
 744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size>
 746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	static _ForwardIterator
 747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_default_novalue_n(_ForwardIterator __first, _Size __n)
 748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{ return std::next(__first, __n); }
 749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default_novalue
 752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [first, last) with std::distance(first, last) default-initialized
 753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // value_types(s).
 754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator>
 755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_novalue(_ForwardIterator __first,
 757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				    _ForwardIterator __last)
 758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       std::__uninitialized_default_novalue_1<
 763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	is_trivially_default_constructible<_ValueType>::value>::
 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_default_novalue(__first, __last);
 765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 288


 766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default_n
 768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [first, first + n) with n default-initialized value_type(s).
 769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size>
 770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_novalue_n(_ForwardIterator __first, _Size __n)
 772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __uninitialized_default_novalue_n_1<
 777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	is_trivially_default_constructible<_ValueType>::value>::
 778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_default_novalue_n(__first, __n);
 779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _Size,
 782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _ForwardIterator>
 783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     _ForwardIterator
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_n(_InputIterator __first, _Size __n,
 785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, input_iterator_tag)
 786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __result;
 788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __n > 0; --__n, (void) ++__first, ++__cur)
 791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    std::_Construct(std::__addressof(*__cur), *__first);
 792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return __cur;
 793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __cur);
 797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _RandomAccessIterator, typename _Size,
 802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _ForwardIterator>
 803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_n(_RandomAccessIterator __first, _Size __n,
 805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result,
 806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   random_access_iterator_tag)
 807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { return std::uninitialized_copy(__first, __first + __n, __result); }
 808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _Size,
 810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _ForwardIterator>
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     pair<_InputIterator, _ForwardIterator>
 812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_n_pair(_InputIterator __first, _Size __n,
 813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, input_iterator_tag)
 814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __result;
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __n > 0; --__n, (void) ++__first, ++__cur)
 819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    std::_Construct(std::__addressof(*__cur), *__first);
 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return {__first, __cur};
 821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 289


 823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __cur);
 825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _RandomAccessIterator, typename _Size,
 830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _ForwardIterator>
 831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline pair<_RandomAccessIterator, _ForwardIterator>
 832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_n_pair(_RandomAccessIterator __first, _Size __n,
 833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result,
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   random_access_iterator_tag)
 835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       auto __second_res = uninitialized_copy(__first, __first + __n, __result);
 837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       auto __first_res = std::next(__first, __n);
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return {__first_res, __second_res};
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Copies the range [first,first+n) into result.
 845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __n      The number of elements to copy.
 847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __result An output iterator.
 848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return  __result + __n
 849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *
 850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  Like copy_n(), but does not require an initialized output range.
 851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _Size, typename _ForwardIterator>
 853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_copy_n(_InputIterator __first, _Size __n,
 855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			 _ForwardIterator __result)
 856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { return std::__uninitialized_copy_n(__first, __n, __result,
 857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 					 std::__iterator_category(__first)); }
 858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _Size, typename _ForwardIterator>
 861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline pair<_InputIterator, _ForwardIterator>
 862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_n_pair(_InputIterator __first, _Size __n,
 863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __result)
 864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return
 866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	std::__uninitialized_copy_n_pair(__first, __n, __result,
 867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 					 std::__iterator_category(__first));
 868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
 871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus >= 201703L
 873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** # define __cpp_lib_raw_memory_algorithms 201606L
 874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Default-initializes objects in the range [first,last).
 877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  A forward iterator.
 878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __last   A forward iterator.
 879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 290


 880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _ForwardIterator>
 881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_default_construct(_ForwardIterator __first,
 883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				    _ForwardIterator __last)
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __uninitialized_default_novalue(__first, __last);
 886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Default-initializes objects in the range [first,first+count).
 890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  A forward iterator.
 891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __count  The number of objects to construct.
 892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   __first + __count
 893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _ForwardIterator, typename _Size>
 895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_default_construct_n(_ForwardIterator __first, _Size __count)
 897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __uninitialized_default_novalue_n(__first, __count);
 899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Value-initializes objects in the range [first,last).
 903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  A forward iterator.
 904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __last   A forward iterator.
 905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _ForwardIterator>
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_value_construct(_ForwardIterator __first,
 909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				  _ForwardIterator __last)
 910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __uninitialized_default(__first, __last);
 912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Value-initializes objects in the range [first,first+count).
 916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  A forward iterator.
 917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __count  The number of objects to construct.
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   __result + __count
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _ForwardIterator, typename _Size>
 921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_value_construct_n(_ForwardIterator __first, _Size __count)
 923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __uninitialized_default_n(__first, __count);
 925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Move-construct from the range [first,last) into result.
 929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __last   An input iterator.
 931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __result An output iterator.
 932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   __result + (__first - __last)
 933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _InputIterator, typename _ForwardIterator>
 935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_move(_InputIterator __first, _InputIterator __last,
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 291


 937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       _ForwardIterator __result)
 938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return std::uninitialized_copy
 940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	(_GLIBCXX_MAKE_MOVE_ITERATOR(__first),
 941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	 _GLIBCXX_MAKE_MOVE_ITERATOR(__last), __result);
 942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Move-construct from the range [first,first+count) into result.
 946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __count  The number of objects to initialize.
 948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __result An output iterator.
 949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return  __result + __count
 950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _InputIterator, typename _Size, typename _ForwardIterator>
 952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline pair<_InputIterator, _ForwardIterator>
 953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_move_n(_InputIterator __first, _Size __count,
 954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			 _ForwardIterator __result)
 955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       auto __res = std::__uninitialized_copy_n_pair
 957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	(_GLIBCXX_MAKE_MOVE_ITERATOR(__first),
 958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	 __count, __result);
 959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return {__res.first.base(), __res.second};
 960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif // C++17
 962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus >= 201103L
 964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _Tp, typename _Up, typename _Allocator>
 967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __relocate_object_a(_Tp* __restrict __dest, _Up* __restrict __orig,
 969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			_Allocator& __alloc)
 970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     noexcept(noexcept(std::allocator_traits<_Allocator>::construct(__alloc,
 971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			 __dest, std::move(*__orig)))
 972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	     && noexcept(std::allocator_traits<_Allocator>::destroy(
 973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			    __alloc, std::__addressof(*__orig))))
 974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef std::allocator_traits<_Allocator> __traits;
 976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __traits::construct(__alloc, __dest, std::move(*__orig));
 977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __traits::destroy(__alloc, std::__addressof(*__orig));
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // This class may be specialized for specific types.
 981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Also known as is_trivially_relocatable.
 982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _Tp, typename = void>
 983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __is_bitwise_relocatable
 984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     : is_trivial<_Tp> { };
 985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _Tp, typename _Up>
 987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline __enable_if_t<std::__is_bitwise_relocatable<_Tp>::value, _Tp*>
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __relocate_a_1(_Tp* __first, _Tp* __last,
 989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		   _Tp* __result, allocator<_Up>&) noexcept
 990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       ptrdiff_t __count = __last - __first;
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       if (__count > 0)
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 292


 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __result + __count;
 995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _InputIterator, typename _ForwardIterator,
 998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    typename _Allocator>
 999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __relocate_a_1(_InputIterator __first, _InputIterator __last,
1001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		   _ForwardIterator __result, _Allocator& __alloc)
1002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     noexcept(noexcept(std::__relocate_object_a(std::addressof(*__result),
1003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 					       std::addressof(*__first),
1004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 					       __alloc)))
1005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
1006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::value_type
1007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
1008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
1009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType2;
1010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       static_assert(std::is_same<_ValueType, _ValueType2>::value,
1011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  "relocation is only possible for values of the same type");
1012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __result;
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       for (; __first != __last; ++__first, (void)++__cur)
1014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				 std::__addressof(*__first), __alloc);
1016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __cur;
1017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
1018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
1019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _InputIterator, typename _ForwardIterator,
1020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    typename _Allocator>
1021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
1022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __relocate_a(_InputIterator __first, _InputIterator __last,
 6778              		.loc 16 1022 5 view .LVU1372
 6779              	.LBB4962:
 6780              	.LBI4962:
1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		   _ForwardIterator __result, _Allocator& __alloc)
 6781              		.loc 16 1000 5 view .LVU1373
 6782              	.LBB4963:
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 6783              		.loc 16 1013 22 view .LVU1374
 6784 0124 039B     		ldr	r3, [sp, #12]
 6785              	.LVL243:
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 6786              		.loc 16 1013 22 is_stmt 0 view .LVU1375
 6787 0126 1946     		mov	r1, r3
 6788 0128 059B     		ldr	r3, [sp, #20]
 6789              	.LVL244:
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 6790              		.loc 16 1013 22 view .LVU1376
 6791 012a 9942     		cmp	r1, r3
 6792 012c 00F08180 		beq	.L176
 6793 0130 03F14C06 		add	r6, r3, #76
 6794              	.LVL245:
1012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       for (; __first != __last; ++__first, (void)++__cur)
 6795              		.loc 16 1012 24 view .LVU1377
 6796 0134 DDF810A0 		ldr	r10, [sp, #16]
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 6797              		.loc 16 1013 22 view .LVU1378
 6798 0138 0293     		str	r3, [sp, #8]
 6799 013a 00E0     		b	.L180
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 293


 6800              	.LVL246:
 6801              	.L188:
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 6802              		.loc 16 1013 44 view .LVU1379
 6803 013c 9A46     		mov	r10, r3
 6804              	.LVL247:
 6805              	.L180:
 6806              	.LBB4964:
 6807              	.LBI4964:
 968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			_Allocator& __alloc)
 6808              		.loc 16 968 5 is_stmt 1 view .LVU1380
 6809              	.LBB4965:
 6810              	.LBB4966:
 6811              	.LBI4966:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 6812              		.loc 6 507 2 view .LVU1381
 6813              	.LBB4967:
 6814              	.LBI4967:
 6815              		.loc 5 148 2 view .LVU1382
 6816              		.loc 5 148 2 is_stmt 0 view .LVU1383
 6817              	.LBE4967:
 6818              	.LBE4966:
 6819              	.LBE4965:
 6820              	.LBE4964:
 6821              	.LBE4963:
 6822              	.LBE4962:
 6823              	.LBE4961:
 6824              	.LBE4960:
 6825              	.LBE4959:
 6826              	.LBE4958:
 6827              		.loc 12 175 3 is_stmt 1 view .LVU1384
 6828              	.LBB5120:
 6829              	.LBB5118:
 6830              	.LBB5116:
 6831              	.LBB5114:
 6832              	.LBB5112:
 6833              	.LBB5110:
 6834              	.LBB5109:
 6835              	.LBB5108:
 6836              	.LBB5045:
 6837              	.LBB5043:
 6838              	.LBB4968:
 6839              	.LBI4968:
 6840              		.loc 13 32 12 view .LVU1385
 6841              	.LBB4969:
 6842              	.LBB4970:
 6843              	.LBI4970:
  26:Sequencer.h   ****         std::vector<bool> kick_steps;
 6844              		.loc 13 26 12 view .LVU1386
 6845              	.LBB4971:
 6846              	.LBI4971:
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 6847              		.loc 1 687 7 view .LVU1387
 6848              	.LBB4972:
 6849              	.LBI4972:
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 6850              		.loc 1 546 7 view .LVU1388
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 294


 6851              	.LBB4973:
 6852              	.LBI4973:
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 6853              		.loc 1 509 2 view .LVU1389
 6854              	.LBB4974:
 6855              	.LBI4974:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 6856              		.loc 15 147 7 view .LVU1390
 6857              	.LBB4975:
 6858              	.LBI4975:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6859              		.loc 5 82 7 view .LVU1391
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6860              		.loc 5 82 7 is_stmt 0 view .LVU1392
 6861              	.LBE4975:
 6862              	.LBE4974:
 6863              	.LBB4976:
 6864              	.LBI4976:
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish)
 6865              		.loc 1 472 2 is_stmt 1 view .LVU1393
 6866              	.LBB4977:
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 6867              		.loc 1 474 43 is_stmt 0 view .LVU1394
 6868 013e A6F14C09 		sub	r9, r6, #76
 6869 0142 A6F14407 		sub	r7, r6, #68
 6870 0146 0AF1080B 		add	fp, r10, #8
 6871              	.LBB4978:
 6872              	.LBB4979:
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_end_of_storage = _Bit_pointer();
 6873              		.loc 1 490 4 view .LVU1395
 6874 014a 0023     		movs	r3, #0
 6875              	.LBE4979:
 6876              	.LBE4978:
 6877              	.LBE4977:
 6878              	.LBE4976:
 6879              	.LBE4973:
 6880              	.LBE4972:
 6881              	.LBE4971:
 6882              	.LBB4988:
 6883              	.LBB4989:
 6884              	.LBB4990:
 6885              	.LBB4991:
 6886              	.LBB4992:
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 6887              		.loc 1 474 43 view .LVU1396
 6888 014c A6F13804 		sub	r4, r6, #56
 6889 0150 A6F13005 		sub	r5, r6, #48
 6890 0154 0AF11408 		add	r8, r10, #20
 6891 0158 0AF11C0E 		add	lr, r10, #28
 6892              	.LBE4992:
 6893              	.LBE4991:
 6894              	.LBE4990:
 6895              	.LBE4989:
 6896              	.LBE4988:
 6897              	.LBB5009:
 6898              	.LBB5010:
 6899              	.LBB5011:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 295


 6900              	.LBB5012:
 6901              	.LBB5013:
 6902 015c A6F12402 		sub	r2, r6, #36
 6903 0160 0AF1280C 		add	ip, r10, #40
 6904              	.LBE5013:
 6905              	.LBE5012:
 6906              	.LBE5011:
 6907              	.LBE5010:
 6908              	.LBE5009:
 6909              	.LBB5034:
 6910              	.LBB4987:
 6911              	.LBB4986:
 6912              	.LBB4985:
 6913              	.LBB4984:
 6914 0164 99E80300 		ldm	r9, {r0, r1}
 6915              	.LVL248:
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 6916              		.loc 1 474 43 view .LVU1397
 6917 0168 8AE80300 		stm	r10, {r0, r1}
 6918 016c 97E80300 		ldm	r7, {r0, r1}
 6919 0170 8BE80300 		stm	fp, {r0, r1}
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 6920              		.loc 1 474 26 view .LVU1398
 6921 0174 56F83C1C 		ldr	r1, [r6, #-60]
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 6922              		.loc 1 474 43 view .LVU1399
 6923 0178 CAF81010 		str	r1, [r10, #16]
 6924              	.LVL249:
 6925              	.LBB4983:
 6926              	.LBI4978:
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 6927              		.loc 1 488 2 is_stmt 1 view .LVU1400
 6928              	.LBB4982:
 6929              	.LBB4980:
 6930              	.LBI4980:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 6931              		.loc 1 241 5 view .LVU1401
 6932              	.LBB4981:
 6933              	.LBI4981:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 6934              		.loc 1 148 5 view .LVU1402
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 6935              		.loc 1 148 5 is_stmt 0 view .LVU1403
 6936              	.LBE4981:
 6937              	.LBE4980:
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_end_of_storage = _Bit_pointer();
 6938              		.loc 1 490 4 view .LVU1404
 6939 017c 46E91133 		strd	r3, r3, [r6, #-68]
 6940 0180 97E80300 		ldm	r7, {r0, r1}
 6941 0184 89E80300 		stm	r9, {r0, r1}
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 6942              		.loc 1 491 22 view .LVU1405
 6943 0188 46F83C3C 		str	r3, [r6, #-60]
 6944              	.LVL250:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 6945              		.loc 1 491 22 view .LVU1406
 6946              	.LBE4982:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 296


 6947              	.LBE4983:
 6948              	.LBE4984:
 6949              	.LBE4985:
 6950              	.LBE4986:
 6951              	.LBE4987:
 6952              	.LBE5034:
 6953              	.LBB5035:
 6954              	.LBI4988:
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 6955              		.loc 1 687 7 is_stmt 1 view .LVU1407
 6956              	.LBB5007:
 6957              	.LBI4989:
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 6958              		.loc 1 546 7 view .LVU1408
 6959              	.LBB5005:
 6960              	.LBI4990:
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 6961              		.loc 1 509 2 view .LVU1409
 6962              	.LBB5001:
 6963              	.LBI5001:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 6964              		.loc 15 147 7 view .LVU1410
 6965              	.LBB5002:
 6966              	.LBI5002:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6967              		.loc 5 82 7 view .LVU1411
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6968              		.loc 5 82 7 is_stmt 0 view .LVU1412
 6969              	.LBE5002:
 6970              	.LBE5001:
 6971              	.LBB5003:
 6972              	.LBI4991:
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish)
 6973              		.loc 1 472 2 is_stmt 1 view .LVU1413
 6974              	.LBB4999:
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 6975              		.loc 1 474 43 is_stmt 0 view .LVU1414
 6976 018c 94E80300 		ldm	r4, {r0, r1}
 6977 0190 88E80300 		stm	r8, {r0, r1}
 6978 0194 95E80300 		ldm	r5, {r0, r1}
 6979 0198 8EE80300 		stm	lr, {r0, r1}
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 6980              		.loc 1 474 26 view .LVU1415
 6981 019c 56F8281C 		ldr	r1, [r6, #-40]
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 6982              		.loc 1 474 43 view .LVU1416
 6983 01a0 CAF82410 		str	r1, [r10, #36]
 6984              	.LVL251:
 6985              	.LBB4993:
 6986              	.LBI4993:
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 6987              		.loc 1 488 2 is_stmt 1 view .LVU1417
 6988              	.LBB4994:
 6989              	.LBB4995:
 6990              	.LBI4995:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 6991              		.loc 1 241 5 view .LVU1418
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 297


 6992              	.LBB4996:
 6993              	.LBI4996:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 6994              		.loc 1 148 5 view .LVU1419
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 6995              		.loc 1 148 5 is_stmt 0 view .LVU1420
 6996              	.LBE4996:
 6997              	.LBE4995:
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_end_of_storage = _Bit_pointer();
 6998              		.loc 1 490 4 view .LVU1421
 6999 01a4 46E90C33 		strd	r3, r3, [r6, #-48]
 7000 01a8 95E80300 		ldm	r5, {r0, r1}
 7001              	.LBE4994:
 7002              	.LBE4993:
 7003              	.LBE4999:
 7004              	.LBE5003:
 7005              	.LBE5005:
 7006              	.LBE5007:
 7007              	.LBE5035:
 7008              	.LBB5036:
 7009              	.LBB5031:
 7010              	.LBB5028:
 7011              	.LBB5023:
 7012              	.LBB5020:
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 7013              		.loc 1 474 43 view .LVU1422
 7014 01ac 0AF13005 		add	r5, r10, #48
 7015              	.LBE5020:
 7016              	.LBE5023:
 7017              	.LBE5028:
 7018              	.LBE5031:
 7019              	.LBE5036:
 7020              	.LBB5037:
 7021              	.LBB5008:
 7022              	.LBB5006:
 7023              	.LBB5004:
 7024              	.LBB5000:
 7025              	.LBB4998:
 7026              	.LBB4997:
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_end_of_storage = _Bit_pointer();
 7027              		.loc 1 490 4 view .LVU1423
 7028 01b0 84E80300 		stm	r4, {r0, r1}
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 7029              		.loc 1 491 22 view .LVU1424
 7030 01b4 46F8283C 		str	r3, [r6, #-40]
 7031              	.LVL252:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 7032              		.loc 1 491 22 view .LVU1425
 7033              	.LBE4997:
 7034              	.LBE4998:
 7035              	.LBE5000:
 7036              	.LBE5004:
 7037              	.LBE5006:
 7038              	.LBE5008:
 7039              	.LBE5037:
 7040              	.LBB5038:
 7041              	.LBI5009:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 298


 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 7042              		.loc 1 687 7 is_stmt 1 view .LVU1426
 7043              	.LBB5032:
 7044              	.LBI5010:
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 7045              		.loc 1 546 7 view .LVU1427
 7046              	.LBB5029:
 7047              	.LBI5011:
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 7048              		.loc 1 509 2 view .LVU1428
 7049              	.LBB5024:
 7050              	.LBI5024:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 7051              		.loc 15 147 7 view .LVU1429
 7052              	.LBB5025:
 7053              	.LBI5025:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7054              		.loc 5 82 7 view .LVU1430
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7055              		.loc 5 82 7 is_stmt 0 view .LVU1431
 7056              	.LBE5025:
 7057              	.LBE5024:
 7058              	.LBB5026:
 7059              	.LBI5012:
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish)
 7060              		.loc 1 472 2 is_stmt 1 view .LVU1432
 7061              	.LBB5021:
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 7062              		.loc 1 474 43 is_stmt 0 view .LVU1433
 7063 01b8 A6F11C04 		sub	r4, r6, #28
 7064 01bc 92E80300 		ldm	r2, {r0, r1}
 7065 01c0 8CE80300 		stm	ip, {r0, r1}
 7066 01c4 94E80300 		ldm	r4, {r0, r1}
 7067 01c8 85E80300 		stm	r5, {r0, r1}
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 7068              		.loc 1 474 26 view .LVU1434
 7069 01cc 56F8141C 		ldr	r1, [r6, #-20]
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 7070              		.loc 1 474 43 view .LVU1435
 7071 01d0 CAF83810 		str	r1, [r10, #56]
 7072              	.LVL253:
 7073              	.LBB5014:
 7074              	.LBI5014:
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 7075              		.loc 1 488 2 is_stmt 1 view .LVU1436
 7076              	.LBB5015:
 7077              	.LBB5016:
 7078              	.LBI5016:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 7079              		.loc 1 241 5 view .LVU1437
 7080              	.LBB5017:
 7081              	.LBI5017:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 7082              		.loc 1 148 5 view .LVU1438
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 7083              		.loc 1 148 5 is_stmt 0 view .LVU1439
 7084              	.LBE5017:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 299


 7085              	.LBE5016:
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_end_of_storage = _Bit_pointer();
 7086              		.loc 1 490 4 view .LVU1440
 7087 01d4 46E90733 		strd	r3, r3, [r6, #-28]
 7088 01d8 94E80300 		ldm	r4, {r0, r1}
 7089              	.LBE5015:
 7090              	.LBE5014:
 7091              	.LBE5021:
 7092              	.LBE5026:
 7093              	.LBE5029:
 7094              	.LBE5032:
 7095              	.LBE5038:
 7096              	.LBE4970:
 7097              		.loc 13 32 12 view .LVU1441
 7098 01dc 0AF13C04 		add	r4, r10, #60
 7099              	.LBE4969:
 7100              	.LBE4968:
 7101              	.LBE5043:
 7102              	.LBE5045:
 7103              	.LBB5046:
 7104              	.LBB5047:
 7105              	.LBB5048:
 7106              	.LBB5049:
 7107              	.LBB5050:
 7108              	.LBB5051:
 7109              	.LBB5052:
 7110              	.LBB5053:
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 7111              		.loc 1 562 23 view .LVU1442
 7112 01e0 0546     		mov	r5, r0
 7113              	.LBE5053:
 7114              	.LBE5052:
 7115              	.LBE5051:
 7116              	.LBE5050:
 7117              	.LBE5049:
 7118              	.LBE5048:
 7119              	.LBE5047:
 7120              	.LBE5046:
 7121              	.LBB5106:
 7122              	.LBB5044:
 7123              	.LBB5042:
 7124              	.LBB5041:
 7125              	.LBB5040:
 7126              	.LBB5039:
 7127              	.LBB5033:
 7128              	.LBB5030:
 7129              	.LBB5027:
 7130              	.LBB5022:
 7131              	.LBB5019:
 7132              	.LBB5018:
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_end_of_storage = _Bit_pointer();
 7133              		.loc 1 490 4 view .LVU1443
 7134 01e2 82E80300 		stm	r2, {r0, r1}
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 7135              		.loc 1 491 22 view .LVU1444
 7136 01e6 46F8143C 		str	r3, [r6, #-20]
 7137              	.LVL254:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 300


 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 7138              		.loc 1 491 22 view .LVU1445
 7139              	.LBE5018:
 7140              	.LBE5019:
 7141              	.LBE5022:
 7142              	.LBE5027:
 7143              	.LBE5030:
 7144              	.LBE5033:
 7145              	.LBE5039:
 7146              	.LBE5040:
 7147              		.loc 13 32 12 view .LVU1446
 7148 01ea 16E90F00 		ldmdb	r6, {r0, r1, r2, r3}
 7149 01ee 84E80F00 		stm	r4, {r0, r1, r2, r3}
 7150              	.LVL255:
 7151              		.loc 13 32 12 view .LVU1447
 7152              	.LBE5041:
 7153              	.LBE5042:
 7154              	.LBE5044:
 7155              	.LBE5106:
 7156              	.LBB5107:
 7157              	.LBI5046:
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(is_nothrow_destructible<_Up>::value)
 7158              		.loc 6 527 2 is_stmt 1 view .LVU1448
 7159              	.LBB5105:
 7160              	.LBI5047:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Up>
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	void
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	destroy(_Up* __p)
 7161              		.loc 5 154 2 view .LVU1449
 7162              	.LBB5104:
 7163              	.LBI5048:
 7164              		.loc 13 32 12 view .LVU1450
 7165              	.LBB5103:
 7166              	.LBI5049:
  26:Sequencer.h   ****         std::vector<bool> kick_steps;
 7167              		.loc 13 26 12 view .LVU1451
 7168              	.LBB5068:
 7169              	.LBI5050:
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 7170              		.loc 1 737 7 view .LVU1452
 7171              	.LBB5067:
 7172              	.LBI5051:
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { this->_M_deallocate(); }
 7173              		.loc 1 549 7 view .LVU1453
 7174              	.LBB5063:
 7175              	.LBI5052:
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 7176              		.loc 1 560 7 view .LVU1454
 7177              	.LBB5062:
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 7178              		.loc 1 562 2 is_stmt 0 view .LVU1455
 7179 01f2 1DB1     		cbz	r5, .L177
 7180              	.LVL256:
 7181              	.LBB5054:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 301


 7182              	.LBB5055:
 7183              	.LBI5055:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 7184              		.loc 6 491 7 is_stmt 1 view .LVU1456
 7185              	.LBB5056:
 7186              	.LBI5056:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 7187              		.loc 5 120 7 view .LVU1457
 7188              	.LBB5057:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7189              		.loc 5 133 19 is_stmt 0 view .LVU1458
 7190 01f4 6942     		rsbs	r1, r5, #0
 7191 01f6 2846     		mov	r0, r5
 7192 01f8 FFF7FEFF 		bl	_ZdlPvj
 7193              	.LVL257:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7194              		.loc 5 133 19 view .LVU1459
 7195              	.LBE5057:
 7196              	.LBE5056:
 7197              	.LBE5055:
 7198              	.LBB5058:
 7199              	.LBI5058:
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 7200              		.loc 1 488 2 is_stmt 1 view .LVU1460
 7201              	.LBB5059:
 7202              	.LBB5060:
 7203              	.LBI5060:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 7204              		.loc 1 241 5 view .LVU1461
 7205              	.LBB5061:
 7206              	.LBI5061:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 7207              		.loc 1 148 5 view .LVU1462
 7208              	.L177:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 7209              		.loc 1 148 5 is_stmt 0 view .LVU1463
 7210              	.LBE5061:
 7211              	.LBE5060:
 7212              	.LBE5059:
 7213              	.LBE5058:
 7214              	.LBE5054:
 7215              	.LBE5062:
 7216              	.LBE5063:
 7217              	.LBB5064:
 7218              	.LBI5064:
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: public _Bit_alloc_type, public _Bvector_impl_data
 7219              		.loc 1 495 14 is_stmt 1 view .LVU1464
 7220              	.LBB5065:
 7221              	.LBI5065:
 7222              		.loc 15 162 7 view .LVU1465
 7223              	.LBB5066:
 7224              	.LBI5066:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7225              		.loc 5 89 7 view .LVU1466
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7226              		.loc 5 89 7 is_stmt 0 view .LVU1467
 7227              	.LBE5066:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 302


 7228              	.LBE5065:
 7229              	.LBE5064:
 7230              	.LBE5067:
 7231              	.LBE5068:
 7232              	.LBB5069:
 7233              	.LBI5069:
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 7234              		.loc 1 737 7 is_stmt 1 view .LVU1468
 7235              	.LBB5070:
 7236              	.LBI5070:
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { this->_M_deallocate(); }
 7237              		.loc 1 549 7 view .LVU1469
 7238              	.LBB5071:
 7239              	.LBI5071:
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 7240              		.loc 1 560 7 view .LVU1470
 7241              	.LBB5072:
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 7242              		.loc 1 562 23 is_stmt 0 view .LVU1471
 7243 01fc 56F8380C 		ldr	r0, [r6, #-56]
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 7244              		.loc 1 562 2 view .LVU1472
 7245 0200 20B1     		cbz	r0, .L178
 7246              	.LVL258:
 7247              	.LBB5073:
 7248              	.LBB5074:
 7249              	.LBI5074:
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 7250              		.loc 1 513 2 is_stmt 1 view .LVU1473
 7251              	.LBB5075:
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    return std::__addressof(this->_M_end_of_storage[-1]) + 1;
 7252              		.loc 1 515 14 is_stmt 0 view .LVU1474
 7253 0202 56F8281C 		ldr	r1, [r6, #-40]
 7254              	.LVL259:
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    return std::__addressof(this->_M_end_of_storage[-1]) + 1;
 7255              		.loc 1 515 14 view .LVU1475
 7256              	.LBE5075:
 7257              	.LBE5074:
 7258              	.LBB5076:
 7259              	.LBI5076:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 7260              		.loc 6 491 7 is_stmt 1 view .LVU1476
 7261              	.LBB5077:
 7262              	.LBI5077:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 7263              		.loc 5 120 7 view .LVU1477
 7264              	.LBB5078:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7265              		.loc 5 133 19 is_stmt 0 view .LVU1478
 7266 0206 091A     		subs	r1, r1, r0
 7267              	.LVL260:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7268              		.loc 5 133 19 view .LVU1479
 7269 0208 FFF7FEFF 		bl	_ZdlPvj
 7270              	.LVL261:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7271              		.loc 5 133 19 view .LVU1480
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 303


 7272              	.LBE5078:
 7273              	.LBE5077:
 7274              	.LBE5076:
 7275              	.LBB5079:
 7276              	.LBI5079:
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 7277              		.loc 1 488 2 is_stmt 1 view .LVU1481
 7278              	.LBB5080:
 7279              	.LBB5081:
 7280              	.LBI5081:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 7281              		.loc 1 241 5 view .LVU1482
 7282              	.LBB5082:
 7283              	.LBI5082:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 7284              		.loc 1 148 5 view .LVU1483
 7285              	.L178:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 7286              		.loc 1 148 5 is_stmt 0 view .LVU1484
 7287              	.LBE5082:
 7288              	.LBE5081:
 7289              	.LBE5080:
 7290              	.LBE5079:
 7291              	.LBE5073:
 7292              	.LBE5072:
 7293              	.LBE5071:
 7294              	.LBB5083:
 7295              	.LBI5083:
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: public _Bit_alloc_type, public _Bvector_impl_data
 7296              		.loc 1 495 14 is_stmt 1 view .LVU1485
 7297              	.LBB5084:
 7298              	.LBI5084:
 7299              		.loc 15 162 7 view .LVU1486
 7300              	.LBB5085:
 7301              	.LBI5085:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7302              		.loc 5 89 7 view .LVU1487
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7303              		.loc 5 89 7 is_stmt 0 view .LVU1488
 7304              	.LBE5085:
 7305              	.LBE5084:
 7306              	.LBE5083:
 7307              	.LBE5070:
 7308              	.LBE5069:
 7309              	.LBB5086:
 7310              	.LBI5086:
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 7311              		.loc 1 737 7 is_stmt 1 view .LVU1489
 7312              	.LBB5087:
 7313              	.LBI5087:
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { this->_M_deallocate(); }
 7314              		.loc 1 549 7 view .LVU1490
 7315              	.LBB5088:
 7316              	.LBI5088:
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 7317              		.loc 1 560 7 view .LVU1491
 7318              	.LBB5089:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 304


 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 7319              		.loc 1 562 23 is_stmt 0 view .LVU1492
 7320 020c 56F84C0C 		ldr	r0, [r6, #-76]
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 7321              		.loc 1 562 2 view .LVU1493
 7322 0210 20B1     		cbz	r0, .L179
 7323              	.LVL262:
 7324              	.LBB5090:
 7325              	.LBB5091:
 7326              	.LBI5091:
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 7327              		.loc 1 513 2 is_stmt 1 view .LVU1494
 7328              	.LBB5092:
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    return std::__addressof(this->_M_end_of_storage[-1]) + 1;
 7329              		.loc 1 515 14 is_stmt 0 view .LVU1495
 7330 0212 56F83C1C 		ldr	r1, [r6, #-60]
 7331              	.LVL263:
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    return std::__addressof(this->_M_end_of_storage[-1]) + 1;
 7332              		.loc 1 515 14 view .LVU1496
 7333              	.LBE5092:
 7334              	.LBE5091:
 7335              	.LBB5093:
 7336              	.LBI5093:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 7337              		.loc 6 491 7 is_stmt 1 view .LVU1497
 7338              	.LBB5094:
 7339              	.LBI5094:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 7340              		.loc 5 120 7 view .LVU1498
 7341              	.LBB5095:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7342              		.loc 5 133 19 is_stmt 0 view .LVU1499
 7343 0216 091A     		subs	r1, r1, r0
 7344              	.LVL264:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7345              		.loc 5 133 19 view .LVU1500
 7346 0218 FFF7FEFF 		bl	_ZdlPvj
 7347              	.LVL265:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7348              		.loc 5 133 19 view .LVU1501
 7349              	.LBE5095:
 7350              	.LBE5094:
 7351              	.LBE5093:
 7352              	.LBB5096:
 7353              	.LBI5096:
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 7354              		.loc 1 488 2 is_stmt 1 view .LVU1502
 7355              	.LBB5097:
 7356              	.LBB5098:
 7357              	.LBI5098:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 7358              		.loc 1 241 5 view .LVU1503
 7359              	.LBB5099:
 7360              	.LBI5099:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 7361              		.loc 1 148 5 view .LVU1504
 7362              	.L179:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 305


 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 7363              		.loc 1 148 5 is_stmt 0 view .LVU1505
 7364              	.LBE5099:
 7365              	.LBE5098:
 7366              	.LBE5097:
 7367              	.LBE5096:
 7368              	.LBE5090:
 7369              	.LBE5089:
 7370              	.LBE5088:
 7371              	.LBB5100:
 7372              	.LBI5100:
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: public _Bit_alloc_type, public _Bvector_impl_data
 7373              		.loc 1 495 14 is_stmt 1 view .LVU1506
 7374              	.LBB5101:
 7375              	.LBI5101:
 7376              		.loc 15 162 7 view .LVU1507
 7377              	.LBB5102:
 7378              	.LBI5102:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7379              		.loc 5 89 7 view .LVU1508
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7380              		.loc 5 89 7 is_stmt 0 view .LVU1509
 7381              	.LBE5102:
 7382              	.LBE5101:
 7383              	.LBE5100:
 7384              	.LBE5087:
 7385              	.LBE5086:
 7386              	.LBE5103:
 7387              	.LBE5104:
 7388              	.LBE5105:
 7389              	.LBE5107:
 7390              	.LBE5108:
 7391              	.LBE5109:
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 7392              		.loc 16 1013 7 is_stmt 1 view .LVU1510
 7393 021c 029A     		ldr	r2, [sp, #8]
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 7394              		.loc 16 1013 44 is_stmt 0 view .LVU1511
 7395 021e 0AF14C03 		add	r3, r10, #76
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 7396              		.loc 16 1013 22 view .LVU1512
 7397 0222 0399     		ldr	r1, [sp, #12]
 7398              	.LVL266:
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 7399              		.loc 16 1013 22 view .LVU1513
 7400 0224 4C36     		adds	r6, r6, #76
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 7401              		.loc 16 1013 7 view .LVU1514
 7402 0226 4C32     		adds	r2, r2, #76
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 7403              		.loc 16 1013 22 view .LVU1515
 7404 0228 9142     		cmp	r1, r2
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 7405              		.loc 16 1013 7 view .LVU1516
 7406 022a 0292     		str	r2, [sp, #8]
 7407              	.LVL267:
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 306


 7408              		.loc 16 1013 22 is_stmt 1 view .LVU1517
 7409 022c 86D1     		bne	.L188
 7410              	.LBE5110:
 7411              	.LBE5112:
 7412              	.LBE5114:
 7413              	.LBE5116:
 7414              	.LBE5118:
 7415              	.LBE5120:
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 7416              		.loc 4 464 8 is_stmt 0 view .LVU1518
 7417 022e 0AF19804 		add	r4, r10, #152
 7418              	.LVL268:
 7419              	.L176:
 7420              	.LBB5121:
 7421              	.LBI5121:
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 7422              		.loc 8 465 7 is_stmt 1 view .LVU1519
 7423              	.LBB5122:
 7424              	.LBB5123:
 7425              	.LBI5123:
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 7426              		.loc 8 453 7 view .LVU1520
 7427              	.LBB5124:
 7428              	.LBI5124:
 7429              		.loc 16 1022 5 view .LVU1521
 7430              	.LBB5125:
 7431              	.LBI5125:
1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		   _ForwardIterator __result, _Allocator& __alloc)
 7432              		.loc 16 1000 5 view .LVU1522
 7433              	.LBB5126:
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 7434              		.loc 16 1013 22 view .LVU1523
 7435 0232 039B     		ldr	r3, [sp, #12]
 7436              	.LVL269:
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 7437              		.loc 16 1013 22 is_stmt 0 view .LVU1524
 7438 0234 0899     		ldr	r1, [sp, #32]
 7439 0236 8B42     		cmp	r3, r1
 7440 0238 73D0     		beq	.L181
 7441 023a 4C33     		adds	r3, r3, #76
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 7442              		.loc 16 1013 22 view .LVU1525
 7443 023c 8846     		mov	r8, r1
 7444 023e 099F     		ldr	r7, [sp, #36]
 7445 0240 1D46     		mov	r5, r3
 7446              	.LVL270:
 7447              	.L185:
 7448              	.LBB5127:
 7449              	.LBI5127:
 968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			_Allocator& __alloc)
 7450              		.loc 16 968 5 is_stmt 1 view .LVU1526
 7451              	.LBB5128:
 7452              	.LBB5129:
 7453              	.LBI5129:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 7454              		.loc 6 507 2 view .LVU1527
 7455              	.LBB5130:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 307


 7456              	.LBI5130:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 7457              		.loc 5 148 2 view .LVU1528
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 7458              		.loc 5 148 2 is_stmt 0 view .LVU1529
 7459              	.LBE5130:
 7460              	.LBE5129:
 7461              	.LBE5128:
 7462              	.LBE5127:
 7463              	.LBE5126:
 7464              	.LBE5125:
 7465              	.LBE5124:
 7466              	.LBE5123:
 7467              	.LBE5122:
 7468              	.LBE5121:
 7469              		.loc 12 175 3 is_stmt 1 view .LVU1530
 7470              	.LBB5315:
 7471              	.LBB5314:
 7472              	.LBB5313:
 7473              	.LBB5312:
 7474              	.LBB5311:
 7475              	.LBB5310:
 7476              	.LBB5309:
 7477              	.LBB5308:
 7478              	.LBB5254:
 7479              	.LBB5253:
 7480              	.LBB5131:
 7481              	.LBI5131:
 7482              		.loc 13 32 12 view .LVU1531
 7483              	.LBB5132:
 7484              	.LBB5133:
 7485              	.LBI5133:
  26:Sequencer.h   ****         std::vector<bool> kick_steps;
 7486              		.loc 13 26 12 view .LVU1532
 7487              	.LBB5134:
 7488              	.LBI5134:
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 7489              		.loc 1 687 7 view .LVU1533
 7490              	.LBB5135:
 7491              	.LBI5135:
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 7492              		.loc 1 546 7 view .LVU1534
 7493              	.LBB5136:
 7494              	.LBI5136:
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 7495              		.loc 1 509 2 view .LVU1535
 7496              	.LBB5137:
 7497              	.LBI5137:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 7498              		.loc 15 147 7 view .LVU1536
 7499              	.LBB5138:
 7500              	.LBI5138:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7501              		.loc 5 82 7 view .LVU1537
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7502              		.loc 5 82 7 is_stmt 0 view .LVU1538
 7503              	.LBE5138:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 308


 7504              	.LBE5137:
 7505              	.LBB5139:
 7506              	.LBI5139:
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish)
 7507              		.loc 1 472 2 is_stmt 1 view .LVU1539
 7508              	.LBB5140:
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 7509              		.loc 1 474 43 is_stmt 0 view .LVU1540
 7510 0242 A5F14C06 		sub	r6, r5, #76
 7511 0246 A5F14402 		sub	r2, r5, #68
 7512              	.LBB5141:
 7513              	.LBB5142:
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_end_of_storage = _Bit_pointer();
 7514              		.loc 1 490 4 view .LVU1541
 7515 024a 0023     		movs	r3, #0
 7516              	.LVL271:
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_end_of_storage = _Bit_pointer();
 7517              		.loc 1 490 4 view .LVU1542
 7518              	.LBE5142:
 7519              	.LBE5141:
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 7520              		.loc 1 474 43 view .LVU1543
 7521 024c 04F1080C 		add	ip, r4, #8
 7522              	.LBE5140:
 7523              	.LBE5139:
 7524              	.LBE5136:
 7525              	.LBE5135:
 7526              	.LBE5134:
 7527              	.LBB5167:
 7528              	.LBB5168:
 7529              	.LBB5169:
 7530              	.LBB5170:
 7531              	.LBB5171:
 7532 0250 A5F1300E 		sub	lr, r5, #48
 7533              	.LBE5171:
 7534              	.LBE5170:
 7535              	.LBE5169:
 7536              	.LBE5168:
 7537              	.LBE5167:
 7538              	.LBB5208:
 7539              	.LBB5164:
 7540              	.LBB5161:
 7541              	.LBB5158:
 7542              	.LBB5155:
 7543 0254 96E80300 		ldm	r6, {r0, r1}
 7544 0258 84E80300 		stm	r4, {r0, r1}
 7545 025c 92E80300 		ldm	r2, {r0, r1}
 7546              	.LBB5150:
 7547              	.LBB5145:
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_end_of_storage = _Bit_pointer();
 7548              		.loc 1 490 4 view .LVU1544
 7549 0260 45E91133 		strd	r3, r3, [r5, #-68]
 7550              	.LBE5145:
 7551              	.LBE5150:
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 7552              		.loc 1 474 43 view .LVU1545
 7553 0264 8CE80300 		stm	ip, {r0, r1}
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 309


 7554              	.LBB5151:
 7555              	.LBB5146:
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_end_of_storage = _Bit_pointer();
 7556              		.loc 1 490 4 view .LVU1546
 7557 0268 92E80300 		ldm	r2, {r0, r1}
 7558              	.LBE5146:
 7559              	.LBE5151:
 7560              	.LBE5155:
 7561              	.LBE5158:
 7562              	.LBE5161:
 7563              	.LBE5164:
 7564              	.LBE5208:
 7565              	.LBB5209:
 7566              	.LBB5202:
 7567              	.LBB5196:
 7568              	.LBB5188:
 7569              	.LBB5182:
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 7570              		.loc 1 474 43 view .LVU1547
 7571 026c A5F1380C 		sub	ip, r5, #56
 7572              	.LBE5182:
 7573              	.LBE5188:
 7574              	.LBE5196:
 7575              	.LBE5202:
 7576              	.LBE5209:
 7577              	.LBB5210:
 7578              	.LBB5165:
 7579              	.LBB5162:
 7580              	.LBB5159:
 7581              	.LBB5156:
 7582 0270 55F83C2C 		ldr	r2, [r5, #-60]
 7583              	.LBB5152:
 7584              	.LBB5147:
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_end_of_storage = _Bit_pointer();
 7585              		.loc 1 490 4 view .LVU1548
 7586 0274 86E80300 		stm	r6, {r0, r1}
 7587              	.LBE5147:
 7588              	.LBE5152:
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 7589              		.loc 1 474 43 view .LVU1549
 7590 0278 2261     		str	r2, [r4, #16]
 7591              	.LVL272:
 7592              	.LBB5153:
 7593              	.LBI5141:
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 7594              		.loc 1 488 2 is_stmt 1 view .LVU1550
 7595              	.LBB5148:
 7596              	.LBB5143:
 7597              	.LBI5143:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 7598              		.loc 1 241 5 view .LVU1551
 7599              	.LBB5144:
 7600              	.LBI5144:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 7601              		.loc 1 148 5 view .LVU1552
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 7602              		.loc 1 148 5 is_stmt 0 view .LVU1553
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 310


 7603              	.LBE5144:
 7604              	.LBE5143:
 7605              	.LBE5148:
 7606              	.LBE5153:
 7607              	.LBE5156:
 7608              	.LBE5159:
 7609              	.LBE5162:
 7610              	.LBE5165:
 7611              	.LBE5210:
 7612              	.LBB5211:
 7613              	.LBB5203:
 7614              	.LBB5197:
 7615              	.LBB5189:
 7616              	.LBB5183:
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 7617              		.loc 1 474 43 view .LVU1554
 7618 027a 04F11402 		add	r2, r4, #20
 7619              	.LBE5183:
 7620              	.LBE5189:
 7621              	.LBE5197:
 7622              	.LBE5203:
 7623              	.LBE5211:
 7624              	.LBB5212:
 7625              	.LBB5166:
 7626              	.LBB5163:
 7627              	.LBB5160:
 7628              	.LBB5157:
 7629              	.LBB5154:
 7630              	.LBB5149:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 7631              		.loc 1 491 22 view .LVU1555
 7632 027e 45F83C3C 		str	r3, [r5, #-60]
 7633              	.LVL273:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 7634              		.loc 1 491 22 view .LVU1556
 7635              	.LBE5149:
 7636              	.LBE5154:
 7637              	.LBE5157:
 7638              	.LBE5160:
 7639              	.LBE5163:
 7640              	.LBE5166:
 7641              	.LBE5212:
 7642              	.LBB5213:
 7643              	.LBI5167:
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 7644              		.loc 1 687 7 is_stmt 1 view .LVU1557
 7645              	.LBB5204:
 7646              	.LBI5168:
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 7647              		.loc 1 546 7 view .LVU1558
 7648              	.LBB5198:
 7649              	.LBI5169:
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 7650              		.loc 1 509 2 view .LVU1559
 7651              	.LBB5190:
 7652              	.LBI5190:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 311


 7653              		.loc 15 147 7 view .LVU1560
 7654              	.LBB5191:
 7655              	.LBI5191:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7656              		.loc 5 82 7 view .LVU1561
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7657              		.loc 5 82 7 is_stmt 0 view .LVU1562
 7658              	.LBE5191:
 7659              	.LBE5190:
 7660              	.LBB5192:
 7661              	.LBI5170:
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish)
 7662              		.loc 1 472 2 is_stmt 1 view .LVU1563
 7663              	.LBB5184:
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 7664              		.loc 1 474 43 is_stmt 0 view .LVU1564
 7665 0282 04F11C06 		add	r6, r4, #28
 7666 0286 9CE80300 		ldm	ip, {r0, r1}
 7667 028a 82E80300 		stm	r2, {r0, r1}
 7668 028e 9EE80300 		ldm	lr, {r0, r1}
 7669 0292 55F8282C 		ldr	r2, [r5, #-40]
 7670 0296 86E80300 		stm	r6, {r0, r1}
 7671              	.LBB5172:
 7672              	.LBB5173:
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_end_of_storage = _Bit_pointer();
 7673              		.loc 1 490 4 view .LVU1565
 7674 029a 45E90C33 		strd	r3, r3, [r5, #-48]
 7675              	.LBE5173:
 7676              	.LBE5172:
 7677              	.LBE5184:
 7678              	.LBE5192:
 7679              	.LBE5198:
 7680              	.LBE5204:
 7681              	.LBE5213:
 7682              	.LBB5214:
 7683              	.LBB5215:
 7684              	.LBB5216:
 7685              	.LBB5217:
 7686              	.LBB5218:
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 7687              		.loc 1 474 43 view .LVU1566
 7688 029e A5F12406 		sub	r6, r5, #36
 7689              	.LBE5218:
 7690              	.LBE5217:
 7691              	.LBE5216:
 7692              	.LBE5215:
 7693              	.LBE5214:
 7694              	.LBB5245:
 7695              	.LBB5205:
 7696              	.LBB5199:
 7697              	.LBB5193:
 7698              	.LBB5185:
 7699 02a2 6262     		str	r2, [r4, #36]
 7700              	.LVL274:
 7701              	.LBB5179:
 7702              	.LBI5172:
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 312


 7703              		.loc 1 488 2 is_stmt 1 view .LVU1567
 7704              	.LBB5176:
 7705              	.LBB5174:
 7706              	.LBI5174:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 7707              		.loc 1 241 5 view .LVU1568
 7708              	.LBB5175:
 7709              	.LBI5175:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 7710              		.loc 1 148 5 view .LVU1569
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 7711              		.loc 1 148 5 is_stmt 0 view .LVU1570
 7712              	.LBE5175:
 7713              	.LBE5174:
 7714              	.LBE5176:
 7715              	.LBE5179:
 7716              	.LBE5185:
 7717              	.LBE5193:
 7718              	.LBE5199:
 7719              	.LBE5205:
 7720              	.LBE5245:
 7721              	.LBB5246:
 7722              	.LBB5241:
 7723              	.LBB5237:
 7724              	.LBB5231:
 7725              	.LBB5227:
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 7726              		.loc 1 474 43 view .LVU1571
 7727 02a4 04F12802 		add	r2, r4, #40
 7728              	.LBE5227:
 7729              	.LBE5231:
 7730              	.LBE5237:
 7731              	.LBE5241:
 7732              	.LBE5246:
 7733              	.LBB5247:
 7734              	.LBB5206:
 7735              	.LBB5200:
 7736              	.LBB5194:
 7737              	.LBB5186:
 7738              	.LBB5180:
 7739              	.LBB5177:
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_end_of_storage = _Bit_pointer();
 7740              		.loc 1 490 4 view .LVU1572
 7741 02a8 9EE80300 		ldm	lr, {r0, r1}
 7742              	.LBE5177:
 7743              	.LBE5180:
 7744              	.LBE5186:
 7745              	.LBE5194:
 7746              	.LBE5200:
 7747              	.LBE5206:
 7748              	.LBE5247:
 7749              	.LBB5248:
 7750              	.LBB5242:
 7751              	.LBB5238:
 7752              	.LBB5232:
 7753              	.LBB5228:
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 313


 7754              		.loc 1 474 43 view .LVU1573
 7755 02ac 04F1300E 		add	lr, r4, #48
 7756              	.LBE5228:
 7757              	.LBE5232:
 7758              	.LBE5238:
 7759              	.LBE5242:
 7760              	.LBE5248:
 7761              	.LBB5249:
 7762              	.LBB5207:
 7763              	.LBB5201:
 7764              	.LBB5195:
 7765              	.LBB5187:
 7766              	.LBB5181:
 7767              	.LBB5178:
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_end_of_storage = _Bit_pointer();
 7768              		.loc 1 490 4 view .LVU1574
 7769 02b0 8CE80300 		stm	ip, {r0, r1}
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 7770              		.loc 1 491 22 view .LVU1575
 7771 02b4 45F8283C 		str	r3, [r5, #-40]
 7772              	.LVL275:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 7773              		.loc 1 491 22 view .LVU1576
 7774              	.LBE5178:
 7775              	.LBE5181:
 7776              	.LBE5187:
 7777              	.LBE5195:
 7778              	.LBE5201:
 7779              	.LBE5207:
 7780              	.LBE5249:
 7781              	.LBB5250:
 7782              	.LBI5214:
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 7783              		.loc 1 687 7 is_stmt 1 view .LVU1577
 7784              	.LBB5243:
 7785              	.LBI5215:
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 7786              		.loc 1 546 7 view .LVU1578
 7787              	.LBB5239:
 7788              	.LBI5216:
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #endif
 7789              		.loc 1 509 2 view .LVU1579
 7790              	.LBB5233:
 7791              	.LBI5233:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 7792              		.loc 15 147 7 view .LVU1580
 7793              	.LBB5234:
 7794              	.LBI5234:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7795              		.loc 5 82 7 view .LVU1581
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7796              		.loc 5 82 7 is_stmt 0 view .LVU1582
 7797              	.LBE5234:
 7798              	.LBE5233:
 7799              	.LBB5235:
 7800              	.LBI5217:
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish)
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 314


 7801              		.loc 1 472 2 is_stmt 1 view .LVU1583
 7802              	.LBB5229:
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 7803              		.loc 1 474 43 is_stmt 0 view .LVU1584
 7804 02b8 A5F11C0C 		sub	ip, r5, #28
 7805 02bc 96E80300 		ldm	r6, {r0, r1}
 7806 02c0 82E80300 		stm	r2, {r0, r1}
 7807 02c4 9CE80300 		ldm	ip, {r0, r1}
 7808 02c8 55F8142C 		ldr	r2, [r5, #-20]
 7809 02cc 8EE80300 		stm	lr, {r0, r1}
 7810              	.LBB5219:
 7811              	.LBB5220:
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_end_of_storage = _Bit_pointer();
 7812              		.loc 1 490 4 view .LVU1585
 7813 02d0 45E90733 		strd	r3, r3, [r5, #-28]
 7814 02d4 9CE80300 		ldm	ip, {r0, r1}
 7815              	.LBE5220:
 7816              	.LBE5219:
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ __x._M_reset(); }
 7817              		.loc 1 474 43 view .LVU1586
 7818 02d8 A263     		str	r2, [r4, #56]
 7819              	.LVL276:
 7820              	.LBB5225:
 7821              	.LBI5219:
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 7822              		.loc 1 488 2 is_stmt 1 view .LVU1587
 7823              	.LBB5223:
 7824              	.LBB5221:
 7825              	.LBI5221:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 7826              		.loc 1 241 5 view .LVU1588
 7827              	.LBB5222:
 7828              	.LBI5222:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 7829              		.loc 1 148 5 view .LVU1589
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 7830              		.loc 1 148 5 is_stmt 0 view .LVU1590
 7831              	.LBE5222:
 7832              	.LBE5221:
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  _M_end_of_storage = _Bit_pointer();
 7833              		.loc 1 490 4 view .LVU1591
 7834 02da 86E80300 		stm	r6, {r0, r1}
 7835              	.LBE5223:
 7836              	.LBE5225:
 7837              	.LBE5229:
 7838              	.LBE5235:
 7839              	.LBE5239:
 7840              	.LBE5243:
 7841              	.LBE5250:
 7842              	.LBE5133:
 7843              		.loc 13 32 12 view .LVU1592
 7844 02de 04F13C06 		add	r6, r4, #60
 7845              	.LBB5252:
 7846              	.LBB5251:
 7847              	.LBB5244:
 7848              	.LBB5240:
 7849              	.LBB5236:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 315


 7850              	.LBB5230:
 7851              	.LBB5226:
 7852              	.LBB5224:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 7853              		.loc 1 491 22 view .LVU1593
 7854 02e2 45F8143C 		str	r3, [r5, #-20]
 7855              	.LVL277:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 7856              		.loc 1 491 22 view .LVU1594
 7857              	.LBE5224:
 7858              	.LBE5226:
 7859              	.LBE5230:
 7860              	.LBE5236:
 7861              	.LBE5240:
 7862              	.LBE5244:
 7863              	.LBE5251:
 7864              	.LBE5252:
 7865              		.loc 13 32 12 view .LVU1595
 7866 02e6 15E90F00 		ldmdb	r5, {r0, r1, r2, r3}
 7867 02ea 86E80F00 		stm	r6, {r0, r1, r2, r3}
 7868              	.LVL278:
 7869              		.loc 13 32 12 view .LVU1596
 7870              	.LBE5132:
 7871              	.LBE5131:
 7872              	.LBE5253:
 7873              	.LBE5254:
 7874              	.LBB5255:
 7875              	.LBI5255:
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(is_nothrow_destructible<_Up>::value)
 7876              		.loc 6 527 2 is_stmt 1 view .LVU1597
 7877              	.LBB5256:
 7878              	.LBI5256:
 7879              		.loc 5 154 2 view .LVU1598
 7880              	.LBB5257:
 7881              	.LBI5257:
 7882              		.loc 13 32 12 view .LVU1599
 7883              	.LBB5258:
 7884              	.LBI5258:
  26:Sequencer.h   ****         std::vector<bool> kick_steps;
 7885              		.loc 13 26 12 view .LVU1600
 7886              	.LBB5259:
 7887              	.LBI5259:
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 7888              		.loc 1 737 7 view .LVU1601
 7889              	.LBB5260:
 7890              	.LBI5260:
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { this->_M_deallocate(); }
 7891              		.loc 1 549 7 view .LVU1602
 7892              	.LBB5261:
 7893              	.LBI5261:
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 7894              		.loc 1 560 7 view .LVU1603
 7895              	.LBB5262:
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 7896              		.loc 1 562 23 is_stmt 0 view .LVU1604
 7897 02ee 0020     		movs	r0, #0
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 316


 7898              		.loc 1 562 2 view .LVU1605
 7899 02f0 10B1     		cbz	r0, .L182
 7900              	.LVL279:
 7901              	.LBB5263:
 7902              	.LBB5264:
 7903              	.LBI5264:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 7904              		.loc 6 491 7 is_stmt 1 view .LVU1606
 7905              	.LBB5265:
 7906              	.LBI5265:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 7907              		.loc 5 120 7 view .LVU1607
 7908              	.LBB5266:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7909              		.loc 5 133 19 is_stmt 0 view .LVU1608
 7910 02f2 4142     		rsbs	r1, r0, #0
 7911 02f4 FFF7FEFF 		bl	_ZdlPvj
 7912              	.LVL280:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7913              		.loc 5 133 19 view .LVU1609
 7914              	.LBE5266:
 7915              	.LBE5265:
 7916              	.LBE5264:
 7917              	.LBB5267:
 7918              	.LBI5267:
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 7919              		.loc 1 488 2 is_stmt 1 view .LVU1610
 7920              	.LBB5268:
 7921              	.LBB5269:
 7922              	.LBI5269:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 7923              		.loc 1 241 5 view .LVU1611
 7924              	.LBB5270:
 7925              	.LBI5270:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 7926              		.loc 1 148 5 view .LVU1612
 7927              	.L182:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 7928              		.loc 1 148 5 is_stmt 0 view .LVU1613
 7929              	.LBE5270:
 7930              	.LBE5269:
 7931              	.LBE5268:
 7932              	.LBE5267:
 7933              	.LBE5263:
 7934              	.LBE5262:
 7935              	.LBE5261:
 7936              	.LBB5271:
 7937              	.LBI5271:
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: public _Bit_alloc_type, public _Bvector_impl_data
 7938              		.loc 1 495 14 is_stmt 1 view .LVU1614
 7939              	.LBB5272:
 7940              	.LBI5272:
 7941              		.loc 15 162 7 view .LVU1615
 7942              	.LBB5273:
 7943              	.LBI5273:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7944              		.loc 5 89 7 view .LVU1616
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 317


  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7945              		.loc 5 89 7 is_stmt 0 view .LVU1617
 7946              	.LBE5273:
 7947              	.LBE5272:
 7948              	.LBE5271:
 7949              	.LBE5260:
 7950              	.LBE5259:
 7951              	.LBB5274:
 7952              	.LBI5274:
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 7953              		.loc 1 737 7 is_stmt 1 view .LVU1618
 7954              	.LBB5275:
 7955              	.LBI5275:
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { this->_M_deallocate(); }
 7956              		.loc 1 549 7 view .LVU1619
 7957              	.LBB5276:
 7958              	.LBI5276:
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 7959              		.loc 1 560 7 view .LVU1620
 7960              	.LBB5277:
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 7961              		.loc 1 562 23 is_stmt 0 view .LVU1621
 7962 02f8 55F8380C 		ldr	r0, [r5, #-56]
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 7963              		.loc 1 562 2 view .LVU1622
 7964 02fc 20B1     		cbz	r0, .L183
 7965              	.LVL281:
 7966              	.LBB5278:
 7967              	.LBB5279:
 7968              	.LBI5279:
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 7969              		.loc 1 513 2 is_stmt 1 view .LVU1623
 7970              	.LBB5280:
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    return std::__addressof(this->_M_end_of_storage[-1]) + 1;
 7971              		.loc 1 515 14 is_stmt 0 view .LVU1624
 7972 02fe 55F8281C 		ldr	r1, [r5, #-40]
 7973              	.LVL282:
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    return std::__addressof(this->_M_end_of_storage[-1]) + 1;
 7974              		.loc 1 515 14 view .LVU1625
 7975              	.LBE5280:
 7976              	.LBE5279:
 7977              	.LBB5281:
 7978              	.LBI5281:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 7979              		.loc 6 491 7 is_stmt 1 view .LVU1626
 7980              	.LBB5282:
 7981              	.LBI5282:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 7982              		.loc 5 120 7 view .LVU1627
 7983              	.LBB5283:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7984              		.loc 5 133 19 is_stmt 0 view .LVU1628
 7985 0302 091A     		subs	r1, r1, r0
 7986              	.LVL283:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7987              		.loc 5 133 19 view .LVU1629
 7988 0304 FFF7FEFF 		bl	_ZdlPvj
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 318


 7989              	.LVL284:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7990              		.loc 5 133 19 view .LVU1630
 7991              	.LBE5283:
 7992              	.LBE5282:
 7993              	.LBE5281:
 7994              	.LBB5284:
 7995              	.LBI5284:
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 7996              		.loc 1 488 2 is_stmt 1 view .LVU1631
 7997              	.LBB5285:
 7998              	.LBB5286:
 7999              	.LBI5286:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 8000              		.loc 1 241 5 view .LVU1632
 8001              	.LBB5287:
 8002              	.LBI5287:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 8003              		.loc 1 148 5 view .LVU1633
 8004              	.L183:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 8005              		.loc 1 148 5 is_stmt 0 view .LVU1634
 8006              	.LBE5287:
 8007              	.LBE5286:
 8008              	.LBE5285:
 8009              	.LBE5284:
 8010              	.LBE5278:
 8011              	.LBE5277:
 8012              	.LBE5276:
 8013              	.LBB5288:
 8014              	.LBI5288:
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: public _Bit_alloc_type, public _Bvector_impl_data
 8015              		.loc 1 495 14 is_stmt 1 view .LVU1635
 8016              	.LBB5289:
 8017              	.LBI5289:
 8018              		.loc 15 162 7 view .LVU1636
 8019              	.LBB5290:
 8020              	.LBI5290:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8021              		.loc 5 89 7 view .LVU1637
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8022              		.loc 5 89 7 is_stmt 0 view .LVU1638
 8023              	.LBE5290:
 8024              	.LBE5289:
 8025              	.LBE5288:
 8026              	.LBE5275:
 8027              	.LBE5274:
 8028              	.LBB5291:
 8029              	.LBI5291:
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 8030              		.loc 1 737 7 is_stmt 1 view .LVU1639
 8031              	.LBB5292:
 8032              	.LBI5292:
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { this->_M_deallocate(); }
 8033              		.loc 1 549 7 view .LVU1640
 8034              	.LBB5293:
 8035              	.LBI5293:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 319


 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 8036              		.loc 1 560 7 view .LVU1641
 8037              	.LBB5294:
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 8038              		.loc 1 562 23 is_stmt 0 view .LVU1642
 8039 0308 55F84C0C 		ldr	r0, [r5, #-76]
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 8040              		.loc 1 562 2 view .LVU1643
 8041 030c 20B1     		cbz	r0, .L184
 8042              	.LVL285:
 8043              	.LBB5295:
 8044              	.LBB5296:
 8045              	.LBI5296:
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 8046              		.loc 1 513 2 is_stmt 1 view .LVU1644
 8047              	.LBB5297:
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    return std::__addressof(this->_M_end_of_storage[-1]) + 1;
 8048              		.loc 1 515 14 is_stmt 0 view .LVU1645
 8049 030e 55F83C1C 		ldr	r1, [r5, #-60]
 8050              	.LVL286:
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    return std::__addressof(this->_M_end_of_storage[-1]) + 1;
 8051              		.loc 1 515 14 view .LVU1646
 8052              	.LBE5297:
 8053              	.LBE5296:
 8054              	.LBB5298:
 8055              	.LBI5298:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 8056              		.loc 6 491 7 is_stmt 1 view .LVU1647
 8057              	.LBB5299:
 8058              	.LBI5299:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 8059              		.loc 5 120 7 view .LVU1648
 8060              	.LBB5300:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8061              		.loc 5 133 19 is_stmt 0 view .LVU1649
 8062 0312 091A     		subs	r1, r1, r0
 8063              	.LVL287:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8064              		.loc 5 133 19 view .LVU1650
 8065 0314 FFF7FEFF 		bl	_ZdlPvj
 8066              	.LVL288:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8067              		.loc 5 133 19 view .LVU1651
 8068              	.LBE5300:
 8069              	.LBE5299:
 8070              	.LBE5298:
 8071              	.LBB5301:
 8072              	.LBI5301:
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 8073              		.loc 1 488 2 is_stmt 1 view .LVU1652
 8074              	.LBB5302:
 8075              	.LBB5303:
 8076              	.LBI5303:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 8077              		.loc 1 241 5 view .LVU1653
 8078              	.LBB5304:
 8079              	.LBI5304:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 320


 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 8080              		.loc 1 148 5 view .LVU1654
 8081              	.L184:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 8082              		.loc 1 148 5 is_stmt 0 view .LVU1655
 8083              	.LBE5304:
 8084              	.LBE5303:
 8085              	.LBE5302:
 8086              	.LBE5301:
 8087              	.LBE5295:
 8088              	.LBE5294:
 8089              	.LBE5293:
 8090              	.LBB5305:
 8091              	.LBI5305:
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: public _Bit_alloc_type, public _Bvector_impl_data
 8092              		.loc 1 495 14 is_stmt 1 view .LVU1656
 8093              	.LBB5306:
 8094              	.LBI5306:
 8095              		.loc 15 162 7 view .LVU1657
 8096              	.LBB5307:
 8097              	.LBI5307:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8098              		.loc 5 89 7 view .LVU1658
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8099              		.loc 5 89 7 is_stmt 0 view .LVU1659
 8100              	.LBE5307:
 8101              	.LBE5306:
 8102              	.LBE5305:
 8103              	.LBE5292:
 8104              	.LBE5291:
 8105              	.LBE5258:
 8106              	.LBE5257:
 8107              	.LBE5256:
 8108              	.LBE5255:
 8109              	.LBE5308:
 8110              	.LBE5309:
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 8111              		.loc 16 1013 7 is_stmt 1 view .LVU1660
 8112 0318 4C37     		adds	r7, r7, #76
 8113              	.LVL289:
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 8114              		.loc 16 1013 44 is_stmt 0 view .LVU1661
 8115 031a 4C34     		adds	r4, r4, #76
 8116              	.LVL290:
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 8117              		.loc 16 1013 22 is_stmt 1 view .LVU1662
 8118 031c 4C35     		adds	r5, r5, #76
 8119 031e B845     		cmp	r8, r7
 8120 0320 8FD1     		bne	.L185
 8121              	.LVL291:
 8122              	.L181:
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 8123              		.loc 16 1013 22 is_stmt 0 view .LVU1663
 8124              	.LBE5310:
 8125              	.LBE5311:
 8126              	.LBE5312:
 8127              	.LBE5313:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 321


 8128              	.LBE5314:
 8129              	.LBE5315:
 8130              	.LBB5316:
 8131              	.LBI5316:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8132              		.loc 8 350 7 is_stmt 1 view .LVU1664
 8133              	.LBB5317:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 8134              		.loc 8 353 2 is_stmt 0 view .LVU1665
 8135 0322 059B     		ldr	r3, [sp, #20]
 8136              	.LVL292:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 8137              		.loc 8 353 2 view .LVU1666
 8138 0324 2BB1     		cbz	r3, .L186
 8139              	.LVL293:
 8140              	.LBB5318:
 8141              	.LBI5318:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 8142              		.loc 6 491 7 is_stmt 1 view .LVU1667
 8143              	.LBB5319:
 8144              	.LBB5320:
 8145              	.LBI5320:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 8146              		.loc 5 120 7 view .LVU1668
 8147              	.LBE5320:
 8148              	.LBE5319:
 8149              	.LBE5318:
 8150              	.LBE5317:
 8151              	.LBE5316:
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_start = __new_start;
 8152              		.loc 4 501 39 is_stmt 0 view .LVU1669
 8153 0326 069A     		ldr	r2, [sp, #24]
 8154              	.LBB5331:
 8155              	.LBB5329:
 8156              	.LBB5327:
 8157              	.LBB5325:
 8158              	.LBB5323:
 8159              	.LBB5321:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8160              		.loc 5 133 19 view .LVU1670
 8161 0328 1846     		mov	r0, r3
 8162              	.LBE5321:
 8163              	.LBE5323:
 8164              	.LBE5325:
 8165              	.LBE5327:
 8166              	.LBE5329:
 8167              	.LBE5331:
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_start = __new_start;
 8168              		.loc 4 501 39 view .LVU1671
 8169 032a 9168     		ldr	r1, [r2, #8]
 8170              	.LBB5332:
 8171              	.LBB5330:
 8172              	.LBB5328:
 8173              	.LBB5326:
 8174              	.LBB5324:
 8175              	.LBB5322:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 322


 8176              		.loc 5 133 19 view .LVU1672
 8177 032c C91A     		subs	r1, r1, r3
 8178 032e FFF7FEFF 		bl	_ZdlPvj
 8179              	.LVL294:
 8180              	.L186:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8181              		.loc 5 133 19 view .LVU1673
 8182              	.LBE5322:
 8183              	.LBE5324:
 8184              	.LBE5326:
 8185              	.LBE5328:
 8186              	.LBE5330:
 8187              	.LBE5332:
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_finish = __new_finish;
 8188              		.loc 4 502 30 view .LVU1674
 8189 0332 069B     		ldr	r3, [sp, #24]
 8190 0334 0499     		ldr	r1, [sp, #16]
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 8191              		.loc 4 504 39 view .LVU1675
 8192 0336 079A     		ldr	r2, [sp, #28]
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_end_of_storage = __new_start + __len;
 8193              		.loc 4 503 31 view .LVU1676
 8194 0338 C3E90014 		strd	r1, r4, [r3]
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 8195              		.loc 4 504 39 view .LVU1677
 8196 033c 9A60     		str	r2, [r3, #8]
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 8197              		.loc 4 505 5 view .LVU1678
 8198 033e 13B0     		add	sp, sp, #76
 8199              		.cfi_remember_state
 8200              		.cfi_def_cfa_offset 36
 8201              		@ sp needed
 8202 0340 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 8203              	.LVL295:
 8204              	.L220:
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 8205              		.loc 4 505 5 view .LVU1679
 8206              		.align	2
 8207              	.L219:
 8208 0344 1BCA6B28 		.word	678152731
 8209 0348 6B28AF01 		.word	28256363
 8210              	.LVL296:
 8211              	.L216:
 8212              		.cfi_restore_state
 8213              	.LBB5333:
 8214              	.LBB4946:
 8215              	.LBB4934:
 8216              	.LBB4923:
 8217              	.LBB4912:
 8218              	.LBB4897:
 8219              	.LBB4485:
 8220              	.LBB4475:
 8221              	.LBB4442:
 8222              	.LBB4425:
 8223              	.LBB4356:
 8224              	.LBB4357:
 8225              	.LBI4357:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 323


 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return _Bit_alloc_traits::allocate(_M_impl, _S_nword(__n)); }
 8226              		.loc 1 556 7 is_stmt 1 view .LVU1680
 8227              	.LBB4358:
 8228              	.LBI4358:
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return (__n + int(_S_word_bit) - 1) / int(_S_word_bit); }
 8229              		.loc 1 579 7 view .LVU1681
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return (__n + int(_S_word_bit) - 1) / int(_S_word_bit); }
 8230              		.loc 1 579 7 is_stmt 0 view .LVU1682
 8231              	.LBE4358:
 8232              	.LBB4360:
 8233              	.LBI4360:
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 8234              		.loc 6 459 7 is_stmt 1 view .LVU1683
 8235              	.LBB4361:
 8236              	.LBI4361:
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 8237              		.loc 5 103 7 view .LVU1684
 8238              	.LBE4361:
 8239              	.LBE4360:
 8240              	.LBB4366:
 8241              	.LBB4359:
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     };
 8242              		.loc 1 580 40 is_stmt 0 view .LVU1685
 8243 034c 07F11F08 		add	r8, r7, #31
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     };
 8244              		.loc 1 580 62 view .LVU1686
 8245 0350 4FEA581A 		lsr	r10, r8, #5
 8246              	.LVL297:
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     };
 8247              		.loc 1 580 62 view .LVU1687
 8248              	.LBE4359:
 8249              	.LBE4366:
 8250              	.LBE4357:
 8251              	.LBE4356:
 8252              	.LBE4425:
 8253              	.LBB4426:
 8254              	.LBB4413:
 8255              	.LBB4402:
 8256              	.LBB4393:
 8257              	.LBB4385:
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 8258              		.loc 1 175 19 view .LVU1688
 8259 0354 18EA2708 		ands	r8, r8, r7, asr #32
 8260 0358 38BF     		it	cc
 8261 035a B846     		movcc	r8, r7
 8262              	.LBE4385:
 8263              	.LBE4393:
 8264              	.LBE4402:
 8265              	.LBE4413:
 8266              	.LBE4426:
 8267              	.LBB4427:
 8268              	.LBB4373:
 8269              	.LBB4369:
 8270              	.LBB4367:
 8271              	.LBB4364:
 8272              	.LBB4362:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 324


 8273              		.loc 5 115 41 view .LVU1689
 8274 035c 4FEA8A0A 		lsl	r10, r10, #2
 8275              	.LVL298:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 8276              		.loc 5 115 41 view .LVU1690
 8277              	.LBE4362:
 8278              	.LBE4364:
 8279              	.LBE4367:
 8280              	.LBE4369:
 8281              	.LBE4373:
 8282              	.LBE4427:
 8283              	.LBB4428:
 8284              	.LBB4414:
 8285              	.LBB4403:
 8286              	.LBB4394:
 8287              	.LBB4386:
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 8288              		.loc 1 175 19 view .LVU1691
 8289 0360 4FEA6818 		asr	r8, r8, #5
 8290              	.LBE4386:
 8291              	.LBE4394:
 8292              	.LBE4403:
 8293              	.LBE4414:
 8294              	.LBE4428:
 8295              	.LBB4429:
 8296              	.LBB4374:
 8297              	.LBB4370:
 8298              	.LBB4368:
 8299              	.LBB4365:
 8300              	.LBB4363:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 8301              		.loc 5 115 41 view .LVU1692
 8302 0364 5046     		mov	r0, r10
 8303 0366 FFF7FEFF 		bl	_Znwj
 8304              	.LVL299:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 8305              		.loc 5 115 41 view .LVU1693
 8306              	.LBE4363:
 8307              	.LBE4365:
 8308              	.LBE4368:
 8309              	.LBE4370:
1148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    this->_M_impl._M_start = iterator(std::__addressof(*__q), 0);
 8310              		.loc 1 1148 44 view .LVU1694
 8311 036a 00EB0A02 		add	r2, r0, r10
1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 8312              		.loc 1 1149 6 view .LVU1695
 8313 036e 049B     		ldr	r3, [sp, #16]
1148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    this->_M_impl._M_start = iterator(std::__addressof(*__q), 0);
 8314              		.loc 1 1148 38 view .LVU1696
 8315 0370 2A61     		str	r2, [r5, #16]
 8316              	.LVL300:
 8317              	.LBB4371:
 8318              	.LBI4371:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 8319              		.loc 1 243 5 is_stmt 1 view .LVU1697
 8320              	.LBB4372:
 8321              	.LBI4372:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 325


 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 8322              		.loc 1 148 5 view .LVU1698
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 8323              		.loc 1 148 5 is_stmt 0 view .LVU1699
 8324              	.LBE4372:
 8325              	.LBE4371:
 8326              	.LBE4374:
 8327              	.LBE4429:
 8328              	.LBB4430:
 8329              	.LBB4415:
 8330              	.LBB4404:
 8331              	.LBB4395:
 8332              	.LBB4387:
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 8333              		.loc 1 176 11 view .LVU1700
 8334 0372 7A42     		rsbs	r2, r7, #0
 8335 0374 07F01F07 		and	r7, r7, #31
 8336              	.LBE4387:
 8337              	.LBE4395:
 8338              	.LBE4404:
 8339              	.LBE4415:
 8340              	.LBE4430:
 8341              	.LBB4431:
 8342              	.LBB4375:
1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 8343              		.loc 1 1149 6 view .LVU1701
 8344 0378 43F80900 		str	r0, [r3, r9]
 8345              	.LBE4375:
 8346              	.LBE4431:
 8347              	.LBB4432:
 8348              	.LBB4416:
 8349              	.LBB4405:
 8350              	.LBB4396:
 8351              	.LBB4388:
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 8352              		.loc 1 176 11 view .LVU1702
 8353 037c 02F01F02 		and	r2, r2, #31
 8354              	.LBE4388:
 8355              	.LBE4396:
 8356              	.LBE4405:
 8357              	.LBE4416:
 8358              	.LBE4432:
 8359              	.LBB4433:
 8360              	.LBB4376:
1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 8361              		.loc 1 1149 6 view .LVU1703
 8362 0380 4FF00003 		mov	r3, #0
 8363              	.LBE4376:
 8364              	.LBE4433:
 8365              	.LBE4442:
 8366              	.LBE4475:
 8367              	.LBB4476:
 8368              	.LBB4459:
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 8369              		.loc 1 839 54 view .LVU1704
 8370 0384 3168     		ldr	r1, [r6]
 8371              	.LBE4459:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 326


 8372              	.LBE4476:
 8373              	.LBB4477:
 8374              	.LBB4443:
 8375              	.LBB4434:
 8376              	.LBB4417:
 8377              	.LBB4406:
 8378              	.LBB4397:
 8379              	.LBB4389:
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 8380              		.loc 1 176 11 view .LVU1705
 8381 0386 58BF     		it	pl
 8382 0388 5742     		rsbpl	r7, r2, #0
 8383              	.LBE4389:
 8384              	.LBE4397:
 8385              	.LBE4406:
 8386              	.LBE4417:
 8387              	.LBE4434:
 8388              	.LBB4435:
 8389              	.LBB4377:
1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 8390              		.loc 1 1149 6 view .LVU1706
 8391 038a 6B60     		str	r3, [r5, #4]
 8392              	.LBE4377:
 8393              	.LBE4435:
 8394              	.LBB4436:
 8395              	.LBB4418:
 8396              	.LBB4407:
 8397              	.LBB4398:
 8398              	.LBB4390:
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 8399              		.loc 1 175 12 view .LVU1707
 8400 038c 00EB8803 		add	r3, r0, r8, lsl #2
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 8401              		.loc 1 177 7 view .LVU1708
 8402 0390 002F     		cmp	r7, #0
 8403              	.LBE4390:
 8404              	.LBE4398:
 8405              	.LBE4407:
 8406              	.LBE4418:
 8407              	.LBE4436:
 8408              	.LBE4443:
 8409              	.LBE4477:
 8410              	.LBB4478:
 8411              	.LBB4473:
 8412              	.LBB4471:
 8413              	.LBB4469:
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 8414              		.loc 1 340 40 view .LVU1709
 8415 0392 D6E902C2 		ldrd	ip, r2, [r6, #8]
 8416              	.LVL301:
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 8417              		.loc 1 340 40 view .LVU1710
 8418              	.LBE4469:
 8419              	.LBE4471:
 8420              	.LBE4473:
 8421              	.LBE4478:
 8422              	.LBB4479:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 327


 8423              	.LBB4444:
 8424              	.LBB4437:
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 8425              		.loc 1 303 5 is_stmt 1 view .LVU1711
 8426              	.LBB4419:
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __tmp += __n;
 8427              		.loc 1 305 7 view .LVU1712
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __tmp;
 8428              		.loc 1 306 7 view .LVU1713
 8429              	.LBB4408:
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 8430              		.loc 1 285 5 view .LVU1714
 8431              	.LBE4408:
 8432              	.LBE4419:
 8433              	.LBE4437:
 8434              	.LBE4444:
 8435              	.LBE4479:
 8436              	.LBE4485:
 8437              	.LBE4897:
 8438              	.LBE4912:
 8439              	.LBE4923:
 8440              	.LBE4934:
 8441              	.LBE4946:
 8442              	.LBE5333:
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 8443              		.loc 1 287 7 view .LVU1715
 8444              	.LBB5334:
 8445              	.LBB4947:
 8446              	.LBB4935:
 8447              	.LBB4924:
 8448              	.LBB4913:
 8449              	.LBB4898:
 8450              	.LBB4486:
 8451              	.LBB4480:
 8452              	.LBB4445:
 8453              	.LBB4438:
 8454              	.LBB4420:
 8455              	.LBB4409:
 8456              	.LBB4399:
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 8457              		.loc 1 172 5 view .LVU1716
 8458              	.LBB4391:
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_p += __n / int(_S_word_bit);
 8459              		.loc 1 174 7 view .LVU1717
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 8460              		.loc 1 175 7 view .LVU1718
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 8461              		.loc 1 176 7 view .LVU1719
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 8462              		.loc 1 177 7 view .LVU1720
 8463 0396 BFF673AE 		bge	.L167
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  --_M_p;
 8464              		.loc 1 179 4 view .LVU1721
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  --_M_p;
 8465              		.loc 1 179 8 is_stmt 0 view .LVU1722
 8466 039a 2037     		adds	r7, r7, #32
 8467              	.LVL302:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 328


 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 8468              		.loc 1 180 4 is_stmt 1 view .LVU1723
 8469 039c 043B     		subs	r3, r3, #4
 8470 039e 6FE6     		b	.L167
 8471              	.LVL303:
 8472              	.L218:
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 8473              		.loc 1 180 4 is_stmt 0 view .LVU1724
 8474              	.LBE4391:
 8475              	.LBE4399:
 8476              	.LBE4409:
 8477              	.LBE4420:
 8478              	.LBE4438:
 8479              	.LBE4445:
 8480              	.LBE4480:
 8481              	.LBE4486:
 8482              	.LBE4898:
 8483              	.LBB4899:
 8484              	.LBB4889:
 8485              	.LBB4878:
 8486              	.LBB4845:
 8487              	.LBB4828:
 8488              	.LBB4759:
 8489              	.LBB4760:
 8490              	.LBI4760:
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return _Bit_alloc_traits::allocate(_M_impl, _S_nword(__n)); }
 8491              		.loc 1 556 7 is_stmt 1 view .LVU1725
 8492              	.LBB4761:
 8493              	.LBI4761:
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return (__n + int(_S_word_bit) - 1) / int(_S_word_bit); }
 8494              		.loc 1 579 7 view .LVU1726
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return (__n + int(_S_word_bit) - 1) / int(_S_word_bit); }
 8495              		.loc 1 579 7 is_stmt 0 view .LVU1727
 8496              	.LBE4761:
 8497              	.LBB4763:
 8498              	.LBI4763:
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 8499              		.loc 6 459 7 is_stmt 1 view .LVU1728
 8500              	.LBB4764:
 8501              	.LBI4764:
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 8502              		.loc 5 103 7 view .LVU1729
 8503              	.LBE4764:
 8504              	.LBE4763:
 8505              	.LBB4769:
 8506              	.LBB4762:
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     };
 8507              		.loc 1 580 40 is_stmt 0 view .LVU1730
 8508 03a0 08F11F0A 		add	r10, r8, #31
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     };
 8509              		.loc 1 580 62 view .LVU1731
 8510 03a4 4FEA5A19 		lsr	r9, r10, #5
 8511              	.LVL304:
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     };
 8512              		.loc 1 580 62 view .LVU1732
 8513              	.LBE4762:
 8514              	.LBE4769:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 329


 8515              	.LBE4760:
 8516              	.LBE4759:
 8517              	.LBE4828:
 8518              	.LBB4829:
 8519              	.LBB4816:
 8520              	.LBB4805:
 8521              	.LBB4796:
 8522              	.LBB4788:
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 8523              		.loc 1 175 19 view .LVU1733
 8524 03a8 B845     		cmp	r8, r7
 8525 03aa A8BF     		it	ge
 8526 03ac C246     		movge	r10, r8
 8527              	.LBE4788:
 8528              	.LBE4796:
 8529              	.LBE4805:
 8530              	.LBE4816:
 8531              	.LBE4829:
 8532              	.LBB4830:
 8533              	.LBB4776:
 8534              	.LBB4772:
 8535              	.LBB4770:
 8536              	.LBB4767:
 8537              	.LBB4765:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 8538              		.loc 5 115 41 view .LVU1734
 8539 03ae 4FEA8909 		lsl	r9, r9, #2
 8540              	.LVL305:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 8541              		.loc 5 115 41 view .LVU1735
 8542              	.LBE4765:
 8543              	.LBE4767:
 8544              	.LBE4770:
 8545              	.LBE4772:
 8546              	.LBE4776:
 8547              	.LBE4830:
 8548              	.LBB4831:
 8549              	.LBB4817:
 8550              	.LBB4806:
 8551              	.LBB4797:
 8552              	.LBB4789:
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 8553              		.loc 1 175 19 view .LVU1736
 8554 03b2 4FEA6A1A 		asr	r10, r10, #5
 8555              	.LBE4789:
 8556              	.LBE4797:
 8557              	.LBE4806:
 8558              	.LBE4817:
 8559              	.LBE4831:
 8560              	.LBB4832:
 8561              	.LBB4777:
 8562              	.LBB4773:
 8563              	.LBB4771:
 8564              	.LBB4768:
 8565              	.LBB4766:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 8566              		.loc 5 115 41 view .LVU1737
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 330


 8567 03b6 4846     		mov	r0, r9
 8568 03b8 FFF7FEFF 		bl	_Znwj
 8569              	.LVL306:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 8570              		.loc 5 115 41 view .LVU1738
 8571              	.LBE4766:
 8572              	.LBE4768:
 8573              	.LBE4771:
 8574              	.LBE4773:
 8575              	.LBE4777:
 8576              	.LBE4832:
 8577              	.LBB4833:
 8578              	.LBB4818:
 8579              	.LBB4807:
 8580              	.LBB4798:
 8581              	.LBB4790:
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 8582              		.loc 1 176 11 view .LVU1739
 8583 03bc B7EB0802 		subs	r2, r7, r8
 8584              	.LBE4790:
 8585              	.LBE4798:
 8586              	.LBE4807:
 8587              	.LBE4818:
 8588              	.LBE4833:
 8589              	.LBB4834:
 8590              	.LBB4778:
1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 8591              		.loc 1 1149 6 view .LVU1740
 8592 03c0 EF62     		str	r7, [r5, #44]
 8593              	.LBE4778:
 8594              	.LBE4834:
 8595              	.LBB4835:
 8596              	.LBB4819:
 8597              	.LBB4808:
 8598              	.LBB4799:
 8599              	.LBB4791:
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 8600              		.loc 1 176 11 view .LVU1741
 8601 03c2 08F01F07 		and	r7, r8, #31
 8602 03c6 02F01F02 		and	r2, r2, #31
 8603              	.LBE4791:
 8604              	.LBE4799:
 8605              	.LBE4808:
 8606              	.LBE4819:
 8607              	.LBE4835:
 8608              	.LBB4836:
 8609              	.LBB4779:
1148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    this->_M_impl._M_start = iterator(std::__addressof(*__q), 0);
 8610              		.loc 1 1148 44 view .LVU1742
 8611 03ca 00EB0903 		add	r3, r0, r9
 8612              	.LBE4779:
 8613              	.LBE4836:
 8614              	.LBE4845:
 8615              	.LBE4878:
 8616              	.LBB4879:
 8617              	.LBB4862:
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 331


 8618              		.loc 1 839 54 view .LVU1743
 8619 03ce B16A     		ldr	r1, [r6, #40]
 8620              	.LBE4862:
 8621              	.LBE4879:
 8622              	.LBB4880:
 8623              	.LBB4846:
 8624              	.LBB4837:
 8625              	.LBB4820:
 8626              	.LBB4809:
 8627              	.LBB4800:
 8628              	.LBB4792:
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 8629              		.loc 1 176 11 view .LVU1744
 8630 03d0 58BF     		it	pl
 8631 03d2 5742     		rsbpl	r7, r2, #0
 8632              	.LBE4792:
 8633              	.LBE4800:
 8634              	.LBE4809:
 8635              	.LBE4820:
 8636              	.LBE4837:
 8637              	.LBB4838:
 8638              	.LBB4780:
1148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    this->_M_impl._M_start = iterator(std::__addressof(*__q), 0);
 8639              		.loc 1 1148 38 view .LVU1745
 8640 03d4 AB63     		str	r3, [r5, #56]
 8641              	.LVL307:
 8642              	.LBB4774:
 8643              	.LBI4774:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 8644              		.loc 1 243 5 is_stmt 1 view .LVU1746
 8645              	.LBB4775:
 8646              	.LBI4775:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 8647              		.loc 1 148 5 view .LVU1747
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 8648              		.loc 1 148 5 is_stmt 0 view .LVU1748
 8649              	.LBE4775:
 8650              	.LBE4774:
1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 8651              		.loc 1 1149 6 view .LVU1749
 8652 03d6 A862     		str	r0, [r5, #40]
 8653              	.LBE4780:
 8654              	.LBE4838:
 8655              	.LBB4839:
 8656              	.LBB4821:
 8657              	.LBB4810:
 8658              	.LBB4801:
 8659              	.LBB4793:
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 8660              		.loc 1 175 12 view .LVU1750
 8661 03d8 00EB8A03 		add	r3, r0, r10, lsl #2
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 8662              		.loc 1 177 7 view .LVU1751
 8663 03dc 002F     		cmp	r7, #0
 8664              	.LBE4793:
 8665              	.LBE4801:
 8666              	.LBE4810:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 332


 8667              	.LBE4821:
 8668              	.LBE4839:
 8669              	.LBE4846:
 8670              	.LBE4880:
 8671              	.LBB4881:
 8672              	.LBB4876:
 8673              	.LBB4874:
 8674              	.LBB4872:
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 8675              		.loc 1 340 40 view .LVU1752
 8676 03de D6E90CC2 		ldrd	ip, r2, [r6, #48]
 8677              	.LVL308:
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 8678              		.loc 1 340 40 view .LVU1753
 8679              	.LBE4872:
 8680              	.LBE4874:
 8681              	.LBE4876:
 8682              	.LBE4881:
 8683              	.LBB4882:
 8684              	.LBB4847:
 8685              	.LBB4840:
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 8686              		.loc 1 303 5 is_stmt 1 view .LVU1754
 8687              	.LBB4822:
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __tmp += __n;
 8688              		.loc 1 305 7 view .LVU1755
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __tmp;
 8689              		.loc 1 306 7 view .LVU1756
 8690              	.LBB4811:
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 8691              		.loc 1 285 5 view .LVU1757
 8692              	.LBE4811:
 8693              	.LBE4822:
 8694              	.LBE4840:
 8695              	.LBE4847:
 8696              	.LBE4882:
 8697              	.LBE4889:
 8698              	.LBE4899:
 8699              	.LBE4913:
 8700              	.LBE4924:
 8701              	.LBE4935:
 8702              	.LBE4947:
 8703              	.LBE5334:
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 8704              		.loc 1 287 7 view .LVU1758
 8705              	.LBB5335:
 8706              	.LBB4948:
 8707              	.LBB4936:
 8708              	.LBB4925:
 8709              	.LBB4914:
 8710              	.LBB4900:
 8711              	.LBB4890:
 8712              	.LBB4883:
 8713              	.LBB4848:
 8714              	.LBB4841:
 8715              	.LBB4823:
 8716              	.LBB4812:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 333


 8717              	.LBB4802:
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 8718              		.loc 1 172 5 view .LVU1759
 8719              	.LBB4794:
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_p += __n / int(_S_word_bit);
 8720              		.loc 1 174 7 view .LVU1760
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 8721              		.loc 1 175 7 view .LVU1761
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 8722              		.loc 1 176 7 view .LVU1762
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 8723              		.loc 1 177 7 view .LVU1763
 8724 03e2 BFF68FAE 		bge	.L175
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  --_M_p;
 8725              		.loc 1 179 4 view .LVU1764
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  --_M_p;
 8726              		.loc 1 179 8 is_stmt 0 view .LVU1765
 8727 03e6 2037     		adds	r7, r7, #32
 8728              	.LVL309:
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 8729              		.loc 1 180 4 is_stmt 1 view .LVU1766
 8730 03e8 043B     		subs	r3, r3, #4
 8731 03ea 8BE6     		b	.L175
 8732              	.LVL310:
 8733              	.L217:
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 8734              		.loc 1 180 4 is_stmt 0 view .LVU1767
 8735              	.LBE4794:
 8736              	.LBE4802:
 8737              	.LBE4812:
 8738              	.LBE4823:
 8739              	.LBE4841:
 8740              	.LBE4848:
 8741              	.LBE4883:
 8742              	.LBE4890:
 8743              	.LBE4900:
 8744              	.LBB4901:
 8745              	.LBB4686:
 8746              	.LBB4676:
 8747              	.LBB4643:
 8748              	.LBB4626:
 8749              	.LBB4557:
 8750              	.LBB4558:
 8751              	.LBI4558:
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return _Bit_alloc_traits::allocate(_M_impl, _S_nword(__n)); }
 8752              		.loc 1 556 7 is_stmt 1 view .LVU1768
 8753              	.LBB4559:
 8754              	.LBI4559:
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return (__n + int(_S_word_bit) - 1) / int(_S_word_bit); }
 8755              		.loc 1 579 7 view .LVU1769
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return (__n + int(_S_word_bit) - 1) / int(_S_word_bit); }
 8756              		.loc 1 579 7 is_stmt 0 view .LVU1770
 8757              	.LBE4559:
 8758              	.LBB4561:
 8759              	.LBI4561:
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 8760              		.loc 6 459 7 is_stmt 1 view .LVU1771
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 334


 8761              	.LBB4562:
 8762              	.LBI4562:
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 8763              		.loc 5 103 7 view .LVU1772
 8764              	.LBE4562:
 8765              	.LBE4561:
 8766              	.LBB4567:
 8767              	.LBB4560:
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     };
 8768              		.loc 1 580 40 is_stmt 0 view .LVU1773
 8769 03ec 08F11F0A 		add	r10, r8, #31
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     };
 8770              		.loc 1 580 62 view .LVU1774
 8771 03f0 4FEA5A19 		lsr	r9, r10, #5
 8772              	.LVL311:
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     };
 8773              		.loc 1 580 62 view .LVU1775
 8774              	.LBE4560:
 8775              	.LBE4567:
 8776              	.LBE4558:
 8777              	.LBE4557:
 8778              	.LBE4626:
 8779              	.LBB4627:
 8780              	.LBB4614:
 8781              	.LBB4603:
 8782              	.LBB4594:
 8783              	.LBB4586:
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 8784              		.loc 1 175 19 view .LVU1776
 8785 03f4 B845     		cmp	r8, r7
 8786 03f6 A8BF     		it	ge
 8787 03f8 C246     		movge	r10, r8
 8788              	.LBE4586:
 8789              	.LBE4594:
 8790              	.LBE4603:
 8791              	.LBE4614:
 8792              	.LBE4627:
 8793              	.LBB4628:
 8794              	.LBB4574:
 8795              	.LBB4570:
 8796              	.LBB4568:
 8797              	.LBB4565:
 8798              	.LBB4563:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 8799              		.loc 5 115 41 view .LVU1777
 8800 03fa 4FEA8909 		lsl	r9, r9, #2
 8801              	.LVL312:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 8802              		.loc 5 115 41 view .LVU1778
 8803              	.LBE4563:
 8804              	.LBE4565:
 8805              	.LBE4568:
 8806              	.LBE4570:
 8807              	.LBE4574:
 8808              	.LBE4628:
 8809              	.LBB4629:
 8810              	.LBB4615:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 335


 8811              	.LBB4604:
 8812              	.LBB4595:
 8813              	.LBB4587:
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 8814              		.loc 1 175 19 view .LVU1779
 8815 03fe 4FEA6A1A 		asr	r10, r10, #5
 8816              	.LBE4587:
 8817              	.LBE4595:
 8818              	.LBE4604:
 8819              	.LBE4615:
 8820              	.LBE4629:
 8821              	.LBB4630:
 8822              	.LBB4575:
 8823              	.LBB4571:
 8824              	.LBB4569:
 8825              	.LBB4566:
 8826              	.LBB4564:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 8827              		.loc 5 115 41 view .LVU1780
 8828 0402 4846     		mov	r0, r9
 8829 0404 FFF7FEFF 		bl	_Znwj
 8830              	.LVL313:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 8831              		.loc 5 115 41 view .LVU1781
 8832              	.LBE4564:
 8833              	.LBE4566:
 8834              	.LBE4569:
 8835              	.LBE4571:
 8836              	.LBE4575:
 8837              	.LBE4630:
 8838              	.LBB4631:
 8839              	.LBB4616:
 8840              	.LBB4605:
 8841              	.LBB4596:
 8842              	.LBB4588:
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 8843              		.loc 1 176 11 view .LVU1782
 8844 0408 B7EB0802 		subs	r2, r7, r8
 8845              	.LBE4588:
 8846              	.LBE4596:
 8847              	.LBE4605:
 8848              	.LBE4616:
 8849              	.LBE4631:
 8850              	.LBB4632:
 8851              	.LBB4576:
1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 8852              		.loc 1 1149 6 view .LVU1783
 8853 040c AF61     		str	r7, [r5, #24]
 8854              	.LBE4576:
 8855              	.LBE4632:
 8856              	.LBB4633:
 8857              	.LBB4617:
 8858              	.LBB4606:
 8859              	.LBB4597:
 8860              	.LBB4589:
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 8861              		.loc 1 176 11 view .LVU1784
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 336


 8862 040e 08F01F07 		and	r7, r8, #31
 8863 0412 02F01F02 		and	r2, r2, #31
 8864              	.LBE4589:
 8865              	.LBE4597:
 8866              	.LBE4606:
 8867              	.LBE4617:
 8868              	.LBE4633:
 8869              	.LBB4634:
 8870              	.LBB4577:
1148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    this->_M_impl._M_start = iterator(std::__addressof(*__q), 0);
 8871              		.loc 1 1148 44 view .LVU1785
 8872 0416 00EB0903 		add	r3, r0, r9
 8873              	.LBE4577:
 8874              	.LBE4634:
 8875              	.LBE4643:
 8876              	.LBE4676:
 8877              	.LBB4677:
 8878              	.LBB4660:
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 8879              		.loc 1 839 54 view .LVU1786
 8880 041a 7169     		ldr	r1, [r6, #20]
 8881              	.LBE4660:
 8882              	.LBE4677:
 8883              	.LBB4678:
 8884              	.LBB4644:
 8885              	.LBB4635:
 8886              	.LBB4618:
 8887              	.LBB4607:
 8888              	.LBB4598:
 8889              	.LBB4590:
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 8890              		.loc 1 176 11 view .LVU1787
 8891 041c 58BF     		it	pl
 8892 041e 5742     		rsbpl	r7, r2, #0
 8893              	.LBE4590:
 8894              	.LBE4598:
 8895              	.LBE4607:
 8896              	.LBE4618:
 8897              	.LBE4635:
 8898              	.LBB4636:
 8899              	.LBB4578:
1148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    this->_M_impl._M_start = iterator(std::__addressof(*__q), 0);
 8900              		.loc 1 1148 38 view .LVU1788
 8901 0420 6B62     		str	r3, [r5, #36]
 8902              	.LVL314:
 8903              	.LBB4572:
 8904              	.LBI4572:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 8905              		.loc 1 243 5 is_stmt 1 view .LVU1789
 8906              	.LBB4573:
 8907              	.LBI4573:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 8908              		.loc 1 148 5 view .LVU1790
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 8909              		.loc 1 148 5 is_stmt 0 view .LVU1791
 8910              	.LBE4573:
 8911              	.LBE4572:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 337


1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 8912              		.loc 1 1149 6 view .LVU1792
 8913 0422 6861     		str	r0, [r5, #20]
 8914              	.LBE4578:
 8915              	.LBE4636:
 8916              	.LBB4637:
 8917              	.LBB4619:
 8918              	.LBB4608:
 8919              	.LBB4599:
 8920              	.LBB4591:
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 8921              		.loc 1 175 12 view .LVU1793
 8922 0424 00EB8A03 		add	r3, r0, r10, lsl #2
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 8923              		.loc 1 177 7 view .LVU1794
 8924 0428 002F     		cmp	r7, #0
 8925              	.LBE4591:
 8926              	.LBE4599:
 8927              	.LBE4608:
 8928              	.LBE4619:
 8929              	.LBE4637:
 8930              	.LBE4644:
 8931              	.LBE4678:
 8932              	.LBB4679:
 8933              	.LBB4674:
 8934              	.LBB4672:
 8935              	.LBB4670:
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 8936              		.loc 1 340 40 view .LVU1795
 8937 042a D6E907C2 		ldrd	ip, r2, [r6, #28]
 8938              	.LVL315:
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 8939              		.loc 1 340 40 view .LVU1796
 8940              	.LBE4670:
 8941              	.LBE4672:
 8942              	.LBE4674:
 8943              	.LBE4679:
 8944              	.LBB4680:
 8945              	.LBB4645:
 8946              	.LBB4638:
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 8947              		.loc 1 303 5 is_stmt 1 view .LVU1797
 8948              	.LBB4620:
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __tmp += __n;
 8949              		.loc 1 305 7 view .LVU1798
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __tmp;
 8950              		.loc 1 306 7 view .LVU1799
 8951              	.LBB4609:
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 8952              		.loc 1 285 5 view .LVU1800
 8953              	.LBE4609:
 8954              	.LBE4620:
 8955              	.LBE4638:
 8956              	.LBE4645:
 8957              	.LBE4680:
 8958              	.LBE4686:
 8959              	.LBE4901:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 338


 8960              	.LBE4914:
 8961              	.LBE4925:
 8962              	.LBE4936:
 8963              	.LBE4948:
 8964              	.LBE5335:
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 8965              		.loc 1 287 7 view .LVU1801
 8966              	.LBB5336:
 8967              	.LBB4949:
 8968              	.LBB4937:
 8969              	.LBB4926:
 8970              	.LBB4915:
 8971              	.LBB4902:
 8972              	.LBB4687:
 8973              	.LBB4681:
 8974              	.LBB4646:
 8975              	.LBB4639:
 8976              	.LBB4621:
 8977              	.LBB4610:
 8978              	.LBB4600:
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 8979              		.loc 1 172 5 view .LVU1802
 8980              	.LBB4592:
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_p += __n / int(_S_word_bit);
 8981              		.loc 1 174 7 view .LVU1803
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 8982              		.loc 1 175 7 view .LVU1804
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 8983              		.loc 1 176 7 view .LVU1805
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 8984              		.loc 1 177 7 view .LVU1806
 8985 042e BFF648AE 		bge	.L171
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  --_M_p;
 8986              		.loc 1 179 4 view .LVU1807
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  --_M_p;
 8987              		.loc 1 179 8 is_stmt 0 view .LVU1808
 8988 0432 2037     		adds	r7, r7, #32
 8989              	.LVL316:
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 8990              		.loc 1 180 4 is_stmt 1 view .LVU1809
 8991 0434 043B     		subs	r3, r3, #4
 8992 0436 44E6     		b	.L171
 8993              	.LVL317:
 8994              	.L215:
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 8995              		.loc 1 180 4 is_stmt 0 view .LVU1810
 8996              	.LBE4592:
 8997              	.LBE4600:
 8998              	.LBE4610:
 8999              	.LBE4621:
 9000              	.LBE4639:
 9001              	.LBE4646:
 9002              	.LBE4681:
 9003              	.LBE4687:
 9004              	.LBE4902:
 9005              	.LBE4915:
 9006              	.LBE4926:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 339


 9007              	.LBE4937:
 9008              	.LBE4949:
 9009              	.LBE5336:
 9010              	.LBB5337:
 9011              	.LBB4286:
 9012              	.LBB4278:
 9013              	.LBB4279:
 9014              	.LBB4280:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 9015              		.loc 5 115 41 view .LVU1811
 9016 0438 A342     		cmp	r3, r4
 9017 043a 28BF     		it	cs
 9018 043c 2346     		movcs	r3, r4
 9019              	.LVL318:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 9020              		.loc 5 115 41 view .LVU1812
 9021 043e 4C24     		movs	r4, #76
 9022 0440 03FB04F4 		mul	r4, r3, r4
 9023              	.LVL319:
 9024              	.L162:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 9025              		.loc 5 115 41 view .LVU1813
 9026              	.LBE4280:
 9027              	.LBE4279:
 9028              	.LBI4278:
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 9029              		.loc 6 459 7 is_stmt 1 view .LVU1814
 9030              	.LBB4283:
 9031              	.LBI4279:
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 9032              		.loc 5 103 7 view .LVU1815
 9033              	.LBB4281:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 9034              		.loc 5 115 41 is_stmt 0 view .LVU1816
 9035 0444 2046     		mov	r0, r4
 9036 0446 FFF7FEFF 		bl	_Znwj
 9037              	.LVL320:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 9038              		.loc 5 115 41 view .LVU1817
 9039              	.LBE4281:
 9040              	.LBE4283:
 9041              	.LBE4278:
 9042              	.LBE4286:
 9043              	.LBE5337:
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 9044              		.loc 4 504 53 view .LVU1818
 9045 044a 0219     		adds	r2, r0, r4
 9046              	.LBB5338:
 9047              	.LBB4287:
 9048              	.LBB4285:
 9049              	.LBB4284:
 9050              	.LBB4282:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 9051              		.loc 5 115 41 view .LVU1819
 9052 044c 0490     		str	r0, [sp, #16]
 9053              	.LVL321:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 340


 9054              		.loc 5 115 41 view .LVU1820
 9055              	.LBE4282:
 9056              	.LBE4284:
 9057              	.LBE4285:
 9058              	.LBE4287:
 9059              	.LBE5338:
 9060              	.LBB5339:
 9061              	.LBB5119:
 9062              	.LBB5117:
 9063              	.LBB5115:
 9064              	.LBB5113:
 9065              	.LBB5111:
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 9066              		.loc 16 1013 44 view .LVU1821
 9067 044e 00F14C04 		add	r4, r0, #76
 9068              	.LBE5111:
 9069              	.LBE5113:
 9070              	.LBE5115:
 9071              	.LBE5117:
 9072              	.LBE5119:
 9073              	.LBE5339:
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 9074              		.loc 4 504 53 view .LVU1822
 9075 0452 0792     		str	r2, [sp, #28]
 9076              	.LBB5340:
 9077              	.LBB4288:
 9078 0454 F9E5     		b	.L187
 9079              	.LVL322:
 9080              	.L160:
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 9081              		.loc 4 504 53 view .LVU1823
 9082              	.LBE4288:
 9083              	.LBE5340:
 9084              	.LBB5341:
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 9085              		.loc 8 811 7 is_stmt 1 view .LVU1824
 9086              	.LBB4272:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 9087              		.loc 11 978 7 view .LVU1825
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 9088              		.loc 11 978 7 is_stmt 0 view .LVU1826
 9089              	.LBE4272:
 9090              	.LBE5341:
 9091              	.LBB5342:
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 9092              		.loc 11 1202 5 is_stmt 1 view .LVU1827
 9093              	.LBB4275:
 9094              		.loc 11 1205 27 is_stmt 0 view .LVU1828
 9095 0456 039B     		ldr	r3, [sp, #12]
 9096              	.LVL323:
 9097              		.loc 11 1205 27 view .LVU1829
 9098 0458 059A     		ldr	r2, [sp, #20]
 9099 045a 034C     		ldr	r4, .L221
 9100 045c A3EB0209 		sub	r9, r3, r2
 9101              	.LVL324:
 9102              		.loc 11 1205 27 view .LVU1830
 9103              	.LBE4275:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 341


 9104              	.LBE5342:
 9105              	.LBB5343:
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 9106              		.loc 8 343 7 is_stmt 1 view .LVU1831
 9107 0460 F0E7     		b	.L162
 9108              	.LVL325:
 9109              	.L214:
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 9110              		.loc 8 343 7 is_stmt 0 view .LVU1832
 9111              	.LBE5343:
 9112              	.LBB5344:
 9113              	.LBB4267:
1759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(__N(__s));
 9114              		.loc 8 1759 24 view .LVU1833
 9115 0462 0248     		ldr	r0, .L221+4
 9116 0464 FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 9117              	.LVL326:
 9118              	.L222:
 9119              		.loc 8 1759 24 view .LVU1834
 9120              		.align	2
 9121              	.L221:
 9122 0468 C4FFFF7F 		.word	2147483588
 9123 046c 00000000 		.word	.LC12
 9124              	.LBE4267:
 9125              	.LBE5344:
 9126              		.cfi_endproc
 9127              	.LFE4120:
 9129              		.section	.text._ZNSt6vectorIN9Sequencer8SequenceESaIS1_EE9push_backERKS1_,"axG",%progbits,_ZNSt6ve
 9130              		.align	1
 9131              		.p2align 2,,3
 9132              		.weak	_ZNSt6vectorIN9Sequencer8SequenceESaIS1_EE9push_backERKS1_
 9133              		.syntax unified
 9134              		.thumb
 9135              		.thumb_func
 9136              		.fpu fpv5-d16
 9138              	_ZNSt6vectorIN9Sequencer8SequenceESaIS1_EE9push_backERKS1_:
 9139              	.LVL327:
 9140              	.LFB3961:
1187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 9141              		.loc 8 1187 7 is_stmt 1 view -0
 9142              		.cfi_startproc
 9143              		@ args = 0, pretend = 0, frame = 32
 9144              		@ frame_needed = 0, uses_anonymous_args = 0
1187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 9145              		.loc 8 1187 7 is_stmt 0 view .LVU1836
 9146 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 9147              		.cfi_def_cfa_offset 32
 9148              		.cfi_offset 4, -32
 9149              		.cfi_offset 5, -28
 9150              		.cfi_offset 6, -24
 9151              		.cfi_offset 7, -20
 9152              		.cfi_offset 8, -16
 9153              		.cfi_offset 9, -12
 9154              		.cfi_offset 10, -8
 9155              		.cfi_offset 14, -4
1189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 9156              		.loc 8 1189 2 view .LVU1837
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 342


 9157 0004 D0E90143 		ldrd	r4, r3, [r0, #4]
1187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 9158              		.loc 8 1187 7 view .LVU1838
 9159 0008 8AB0     		sub	sp, sp, #40
 9160              		.cfi_def_cfa_offset 72
1187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 9161              		.loc 8 1187 7 view .LVU1839
 9162 000a 0D46     		mov	r5, r1
1189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 9163              		.loc 8 1189 2 view .LVU1840
 9164 000c 9C42     		cmp	r4, r3
 9165 000e 00F09380 		beq	.L224
 9166              	.LBB5593:
 9167              	.LBB5594:
 9168              	.LBB5595:
 9169              	.LBB5596:
 9170              	.LBB5597:
 9171              	.LBB5598:
 9172              	.LBB5599:
 9173              	.LBB5600:
 9174              	.LBB5601:
 9175              	.LBB5602:
 9176              	.LBB5603:
 9177              	.LBB5604:
 9178              	.LBB5605:
 9179              	.LBB5606:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 9180              		.loc 1 149 31 view .LVU1841
 9181 0012 0022     		movs	r2, #0
 9182 0014 0746     		mov	r7, r0
 9183              	.LVL328:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 9184              		.loc 1 149 31 view .LVU1842
 9185              	.LBE5606:
 9186              	.LBE5605:
 9187              	.LBE5604:
 9188              	.LBE5603:
 9189              	.LBE5602:
 9190              	.LBE5601:
 9191              	.LBE5600:
 9192              	.LBE5599:
 9193              	.LBE5598:
 9194              	.LBE5597:
 9195              	.LBE5596:
 9196              	.LBE5595:
 9197              	.LBE5594:
 9198              	.LBI5593:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 9199              		.loc 6 507 2 is_stmt 1 view .LVU1843
 9200              	.LBB6152:
 9201              	.LBI5594:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 9202              		.loc 5 148 2 view .LVU1844
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 9203              		.loc 5 148 2 is_stmt 0 view .LVU1845
 9204              	.LBE6152:
 9205              	.LBE5593:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 343


 9206              		.loc 12 175 3 is_stmt 1 view .LVU1846
 9207              	.LBB6166:
 9208              	.LBB6153:
 9209              	.LBB6139:
 9210              	.LBI5595:
 9211              		.loc 13 32 12 view .LVU1847
 9212              	.LBB6126:
 9213              	.LBB6112:
 9214              	.LBI5597:
  26:Sequencer.h   ****         std::vector<bool> kick_steps;
 9215              		.loc 13 26 12 view .LVU1848
 9216              	.LBB5748:
 9217              	.LBI5598:
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       : _Base(_Bit_alloc_traits::_S_select_on_copy(__x._M_get_Bit_allocator()))
 9218              		.loc 1 679 7 view .LVU1849
 9219              	.LBB5742:
 9220              	.LBB5633:
 9221              	.LBI5633:
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl; }
 9222              		.loc 1 529 7 view .LVU1850
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl; }
 9223              		.loc 1 529 7 is_stmt 0 view .LVU1851
 9224              	.LBE5633:
 9225              	.LBB5634:
 9226              	.LBI5634:
 9227              		.loc 14 97 29 is_stmt 1 view .LVU1852
 9228              	.LBB5635:
 9229              	.LBI5635:
 9230              		.loc 6 558 7 view .LVU1853
 9231              	.LBB5636:
 9232              	.LBI5636:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 9233              		.loc 15 147 7 view .LVU1854
 9234              	.LBB5637:
 9235              	.LBI5637:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9236              		.loc 5 82 7 view .LVU1855
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9237              		.loc 5 82 7 is_stmt 0 view .LVU1856
 9238              	.LBE5637:
 9239              	.LBE5636:
 9240              	.LBE5635:
 9241              	.LBE5634:
 9242              	.LBB5638:
 9243              	.LBI5638:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 9244              		.loc 15 157 2 is_stmt 1 view .LVU1857
 9245              	.LBB5639:
 9246              	.LBI5639:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9247              		.loc 5 79 7 view .LVU1858
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9248              		.loc 5 79 7 is_stmt 0 view .LVU1859
 9249              	.LBE5639:
 9250              	.LBE5638:
 9251              	.LBB5640:
 9252              	.LBI5600:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 344


 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       : _M_impl(__a) { }
 9253              		.loc 1 542 7 is_stmt 1 view .LVU1860
 9254              	.LBB5626:
 9255              	.LBI5626:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 9256              		.loc 15 157 2 view .LVU1861
 9257              	.LBB5627:
 9258              	.LBI5627:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9259              		.loc 5 79 7 view .LVU1862
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9260              		.loc 5 79 7 is_stmt 0 view .LVU1863
 9261              	.LBE5627:
 9262              	.LBE5626:
 9263              	.LBB5628:
 9264              	.LBI5601:
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  : _Bit_alloc_type(__a)
 9265              		.loc 1 504 4 is_stmt 1 view .LVU1864
 9266              	.LBB5621:
 9267              	.LBI5621:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 9268              		.loc 15 147 7 view .LVU1865
 9269              	.LBB5622:
 9270              	.LBI5622:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9271              		.loc 5 82 7 view .LVU1866
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9272              		.loc 5 82 7 is_stmt 0 view .LVU1867
 9273              	.LBE5622:
 9274              	.LBE5621:
 9275              	.LBB5623:
 9276              	.LBI5602:
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 9277              		.loc 1 467 2 is_stmt 1 view .LVU1868
 9278              	.LBB5618:
 9279              	.LBB5611:
 9280              	.LBI5604:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 9281              		.loc 1 241 5 view .LVU1869
 9282              	.LBB5609:
 9283              	.LBI5605:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 9284              		.loc 1 148 5 view .LVU1870
 9285              	.LBB5607:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 9286              		.loc 1 149 31 is_stmt 0 view .LVU1871
 9287 0016 2260     		str	r2, [r4]
 9288              	.LBE5607:
 9289              	.LBE5609:
 9290              	.LBE5611:
 9291              	.LBB5612:
 9292              	.LBB5613:
 9293              	.LBB5614:
 9294 0018 A260     		str	r2, [r4, #8]
 9295              	.LBE5614:
 9296              	.LBE5613:
 9297              	.LBE5612:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 345


 9298              	.LBE5618:
 9299              	.LBE5623:
 9300              	.LBE5628:
 9301              	.LBE5640:
 9302              	.LBB5641:
 9303              	.LBB5642:
 9304              	.LBB5643:
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 9305              		.loc 1 226 44 view .LVU1872
 9306 001a 8E68     		ldr	r6, [r1, #8]
 9307 001c 0B68     		ldr	r3, [r1]
 9308              	.LBE5643:
 9309              	.LBE5642:
 9310              	.LBE5641:
 9311              	.LBB5656:
 9312              	.LBB5629:
 9313              	.LBB5624:
 9314              	.LBB5619:
 9315              	.LBB5616:
 9316              	.LBB5610:
 9317              	.LBB5608:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 9318              		.loc 1 149 31 view .LVU1873
 9319 001e 6260     		str	r2, [r4, #4]
 9320              	.LVL329:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 9321              		.loc 1 149 31 view .LVU1874
 9322              	.LBE5608:
 9323              	.LBE5610:
 9324              	.LBE5616:
 9325              	.LBB5617:
 9326              	.LBI5612:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 9327              		.loc 1 241 5 is_stmt 1 view .LVU1875
 9328              	.LBB5615:
 9329              	.LBI5613:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 9330              		.loc 1 148 5 view .LVU1876
 9331              	.LBE5615:
 9332              	.LBE5617:
 9333              	.LBE5619:
 9334              	.LBE5624:
 9335              	.LBE5629:
 9336              	.LBE5656:
 9337              	.LBB5657:
 9338              	.LBB5646:
 9339              	.LBB5644:
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 9340              		.loc 1 226 44 is_stmt 0 view .LVU1877
 9341 0020 F31A     		subs	r3, r6, r3
 9342              	.LBE5644:
 9343              	.LBE5646:
 9344              	.LBE5657:
 9345              	.LBB5658:
 9346              	.LBB5630:
 9347              	.LBB5625:
 9348              	.LBB5620:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 346


 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ }
 9349              		.loc 1 468 47 view .LVU1878
 9350 0022 C4E90322 		strd	r2, r2, [r4, #12]
 9351              	.LVL330:
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ }
 9352              		.loc 1 468 47 view .LVU1879
 9353              	.LBE5620:
 9354              	.LBE5625:
 9355              	.LBE5630:
 9356              	.LBB5631:
 9357              	.LBI5631:
 9358              		.loc 15 162 7 is_stmt 1 view .LVU1880
 9359              	.LBB5632:
 9360              	.LBI5632:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9361              		.loc 5 89 7 view .LVU1881
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9362              		.loc 5 89 7 is_stmt 0 view .LVU1882
 9363              	.LBE5632:
 9364              	.LBE5631:
 9365              	.LBE5658:
 9366              	.LBB5659:
 9367              	.LBI5659:
 9368              		.loc 15 162 7 is_stmt 1 view .LVU1883
 9369              	.LBB5660:
 9370              	.LBI5660:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9371              		.loc 5 89 7 view .LVU1884
 9372              	.LBE5660:
 9373              	.LBE5659:
 9374              	.LBB5661:
 9375              	.LBI5661:
 9376              		.loc 15 162 7 view .LVU1885
 9377              	.LBB5662:
 9378              	.LBI5662:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9379              		.loc 5 89 7 view .LVU1886
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9380              		.loc 5 89 7 is_stmt 0 view .LVU1887
 9381              	.LBE5662:
 9382              	.LBE5661:
 9383              	.LBB5663:
 9384              	.LBI5641:
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return size_type(end() - begin()); }
 9385              		.loc 1 884 7 is_stmt 1 view .LVU1888
 9386              	.LBB5647:
 9387              	.LBI5647:
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl._M_finish; }
 9388              		.loc 1 846 7 view .LVU1889
 9389              	.LBB5648:
 9390              	.LBI5648:
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x._M_p, __x._M_offset) { }
 9391              		.loc 1 339 5 view .LVU1890
 9392              	.LBB5649:
 9393              	.LBB5650:
 9394              	.LBI5650:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 347


 9395              		.loc 1 148 5 view .LVU1891
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 9396              		.loc 1 148 5 is_stmt 0 view .LVU1892
 9397              	.LBE5650:
 9398              	.LBE5649:
 9399              	.LBE5648:
 9400              	.LBE5647:
 9401              	.LBB5651:
 9402              	.LBI5651:
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_iterator(this->_M_impl._M_start._M_p, 0); }
 9403              		.loc 1 838 7 is_stmt 1 view .LVU1893
 9404              	.LBB5652:
 9405              	.LBB5653:
 9406              	.LBI5653:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 9407              		.loc 1 336 5 view .LVU1894
 9408              	.LBB5654:
 9409              	.LBI5654:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 9410              		.loc 1 148 5 view .LVU1895
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 9411              		.loc 1 148 5 is_stmt 0 view .LVU1896
 9412              	.LBE5654:
 9413              	.LBE5653:
 9414              	.LBE5652:
 9415              	.LBE5651:
 9416              	.LBB5655:
 9417              	.LBI5642:
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 9418              		.loc 1 224 5 is_stmt 1 view .LVU1897
 9419              	.LBB5645:
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 9420              		.loc 1 226 7 view .LVU1898
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 9421              		.loc 1 227 8 is_stmt 0 view .LVU1899
 9422 0026 CE68     		ldr	r6, [r1, #12]
 9423              	.LVL331:
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 9424              		.loc 1 227 8 view .LVU1900
 9425              	.LBE5645:
 9426              	.LBE5655:
 9427              	.LBE5663:
 9428              	.LBB5664:
 9429              	.LBI5664:
1143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 9430              		.loc 1 1143 7 is_stmt 1 view .LVU1901
 9431              	.LBB5665:
 9432              	.LBB5666:
1145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 9433              		.loc 1 1145 2 is_stmt 0 view .LVU1902
 9434 0028 16EBC306 		adds	r6, r6, r3, lsl #3
 9435              	.LVL332:
1145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 9436              		.loc 1 1145 2 view .LVU1903
 9437 002c 62D1     		bne	.L239
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 9438              		.loc 1 1154 6 view .LVU1904
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 348


 9439 002e 3046     		mov	r0, r6
 9440              	.LVL333:
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 9441              		.loc 1 1154 6 view .LVU1905
 9442              	.LBE5666:
 9443              	.LBB5683:
 9444              	.LBB5684:
 9445              	.LBB5685:
 9446              	.LBB5686:
 9447              	.LBB5687:
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 9448              		.loc 1 175 12 view .LVU1906
 9449 0030 3346     		mov	r3, r6
 9450              	.LBE5687:
 9451              	.LBE5686:
 9452              	.LBE5685:
 9453              	.LBE5684:
 9454              	.LBE5683:
 9455              	.LBB5709:
1153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    this->_M_impl._M_start = iterator(0, 0);
 9456              		.loc 1 1153 38 view .LVU1907
 9457 0032 2661     		str	r6, [r4, #16]
 9458              	.LVL334:
 9459              	.LBB5667:
 9460              	.LBI5667:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 9461              		.loc 1 243 5 is_stmt 1 view .LVU1908
 9462              	.LBB5668:
 9463              	.LBI5668:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 9464              		.loc 1 148 5 view .LVU1909
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 9465              		.loc 1 148 5 is_stmt 0 view .LVU1910
 9466              	.LBE5668:
 9467              	.LBE5667:
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 9468              		.loc 1 1154 6 view .LVU1911
 9469 0034 C4E90066 		strd	r6, r6, [r4]
 9470              	.LVL335:
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 9471              		.loc 1 1154 6 view .LVU1912
 9472              	.LBE5709:
 9473              	.LBB5710:
 9474              	.LBI5683:
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 9475              		.loc 1 303 5 is_stmt 1 view .LVU1913
 9476              	.LBB5702:
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __tmp += __n;
 9477              		.loc 1 305 7 view .LVU1914
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __tmp;
 9478              		.loc 1 306 7 view .LVU1915
 9479              	.LBB5696:
 9480              	.LBI5685:
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 9481              		.loc 1 285 5 view .LVU1916
 9482              	.LBE5696:
 9483              	.LBE5702:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 349


 9484              	.LBE5710:
 9485              	.LBE5665:
 9486              	.LBE5664:
 9487              	.LBE5742:
 9488              	.LBE5748:
 9489              	.LBE6112:
 9490              	.LBE6126:
 9491              	.LBE6139:
 9492              	.LBE6153:
 9493              	.LBE6166:
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 9494              		.loc 1 287 7 view .LVU1917
 9495              	.LBB6167:
 9496              	.LBB6154:
 9497              	.LBB6140:
 9498              	.LBB6127:
 9499              	.LBB6113:
 9500              	.LBB5749:
 9501              	.LBB5743:
 9502              	.LBB5724:
 9503              	.LBB5720:
 9504              	.LBB5711:
 9505              	.LBB5703:
 9506              	.LBB5697:
 9507              	.LBB5692:
 9508              	.LBI5686:
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 9509              		.loc 1 172 5 view .LVU1918
 9510              	.LBB5688:
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_p += __n / int(_S_word_bit);
 9511              		.loc 1 174 7 view .LVU1919
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 9512              		.loc 1 175 7 view .LVU1920
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 9513              		.loc 1 176 7 view .LVU1921
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 9514              		.loc 1 177 7 view .LVU1922
 9515              	.L228:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 9516              		.loc 1 182 7 view .LVU1923
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 9517              		.loc 1 182 7 is_stmt 0 view .LVU1924
 9518              	.LBE5688:
 9519              	.LBE5692:
 9520              	.LBE5697:
 9521              	.LBE5703:
 9522              	.LBE5711:
 9523              	.LBE5720:
 9524              	.LBE5724:
 9525              	.LBE5743:
 9526              	.LBE5749:
 9527              	.LBE6113:
 9528              	.LBE6127:
 9529              	.LBE6140:
 9530              	.LBE6154:
 9531              	.LBE6167:
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 350


 9532              		.loc 1 288 7 is_stmt 1 view .LVU1925
 9533              	.LBB6168:
 9534              	.LBB6155:
 9535              	.LBB6141:
 9536              	.LBB6128:
 9537              	.LBB6114:
 9538              	.LBB5750:
 9539              	.LBB5744:
 9540              	.LBB5725:
 9541              	.LBB5721:
 9542              	.LBB5712:
 9543              	.LBB5704:
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 9544              		.loc 1 307 7 view .LVU1926
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 9545              		.loc 1 307 7 is_stmt 0 view .LVU1927
 9546              	.LBE5704:
 9547              	.LBE5712:
1156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 9548              		.loc 1 1156 51 view .LVU1928
 9549 0038 C4E90236 		strd	r3, r6, [r4, #8]
 9550              	.LVL336:
1156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 9551              		.loc 1 1156 51 view .LVU1929
 9552              	.LBE5721:
 9553              	.LBE5725:
 9554              	.LBB5726:
 9555              	.LBI5726:
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_iterator(this->_M_impl._M_start._M_p, 0); }
 9556              		.loc 1 838 7 is_stmt 1 view .LVU1930
 9557              	.LBB5727:
 9558              	.LBB5728:
 9559              	.LBI5728:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 9560              		.loc 1 336 5 view .LVU1931
 9561              	.LBB5729:
 9562              	.LBI5729:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 9563              		.loc 1 148 5 view .LVU1932
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 9564              		.loc 1 148 5 is_stmt 0 view .LVU1933
 9565              	.LBE5729:
 9566              	.LBE5728:
 9567              	.LBE5727:
 9568              	.LBE5726:
 9569              	.LBB5730:
 9570              	.LBI5730:
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl._M_finish; }
 9571              		.loc 1 846 7 is_stmt 1 view .LVU1934
 9572              	.LBB5731:
 9573              	.LBB5732:
 9574              	.LBI5732:
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x._M_p, __x._M_offset) { }
 9575              		.loc 1 339 5 view .LVU1935
 9576              	.LBE5732:
 9577              	.LBE5731:
 9578              	.LBE5730:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 351


 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 9579              		.loc 1 683 17 is_stmt 0 view .LVU1936
 9580 003c 0090     		str	r0, [sp]
 9581              	.LBE5744:
 9582              	.LBE5750:
 9583              	.LBB5751:
 9584              	.LBB5752:
 9585              	.LBB5753:
 9586              	.LBB5754:
 9587              	.LBB5755:
 9588              	.LBB5756:
 9589              	.LBB5757:
 9590              	.LBB5758:
 9591              	.LBB5759:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 9592              		.loc 1 149 31 view .LVU1937
 9593 003e 4FF00008 		mov	r8, #0
 9594              	.LBE5759:
 9595              	.LBE5758:
 9596              	.LBE5757:
 9597              	.LBE5756:
 9598              	.LBE5755:
 9599              	.LBE5754:
 9600              	.LBE5753:
 9601              	.LBE5752:
 9602              	.LBE5751:
 9603              	.LBB5921:
 9604              	.LBB5745:
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 9605              		.loc 1 683 17 view .LVU1938
 9606 0042 2968     		ldr	r1, [r5]
 9607 0044 08A8     		add	r0, sp, #32
 9608              	.LBB5739:
 9609              	.LBB5738:
 9610              	.LBB5737:
 9611              	.LBB5733:
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 9612              		.loc 1 340 40 view .LVU1939
 9613 0046 D5E90223 		ldrd	r2, r3, [r5, #8]
 9614              	.LVL337:
 9615              	.LBB5734:
 9616              	.LBI5734:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 9617              		.loc 1 148 5 is_stmt 1 view .LVU1940
 9618              	.LBB5735:
 9619              	.LBB5736:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 9620              		.loc 1 149 31 is_stmt 0 view .LVU1941
 9621 004a CDE90623 		strd	r2, r3, [sp, #24]
 9622              	.LVL338:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 9623              		.loc 1 149 31 view .LVU1942
 9624              	.LBE5736:
 9625              	.LBE5735:
 9626              	.LBE5734:
 9627              	.LBE5733:
 9628              	.LBE5737:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 352


 9629              	.LBE5738:
 9630              	.LBE5739:
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 9631              		.loc 1 683 17 view .LVU1943
 9632 004e 06AB     		add	r3, sp, #24
 9633 0050 0CCB     		ldm	r3, {r2, r3}
 9634 0052 FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator.isra.0
 9635              	.LVL339:
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 9636              		.loc 1 683 17 view .LVU1944
 9637              	.LBE5745:
 9638              	.LBE5921:
 9639              	.LBB5922:
 9640              	.LBI5751:
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       : _Base(_Bit_alloc_traits::_S_select_on_copy(__x._M_get_Bit_allocator()))
 9641              		.loc 1 679 7 is_stmt 1 view .LVU1945
 9642              	.LBB5915:
 9643              	.LBB5777:
 9644              	.LBI5777:
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl; }
 9645              		.loc 1 529 7 view .LVU1946
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl; }
 9646              		.loc 1 529 7 is_stmt 0 view .LVU1947
 9647              	.LBE5777:
 9648              	.LBB5778:
 9649              	.LBI5778:
 9650              		.loc 14 97 29 is_stmt 1 view .LVU1948
 9651              	.LBB5779:
 9652              	.LBI5779:
 9653              		.loc 6 558 7 view .LVU1949
 9654              	.LBB5780:
 9655              	.LBI5780:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 9656              		.loc 15 147 7 view .LVU1950
 9657              	.LBB5781:
 9658              	.LBI5781:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9659              		.loc 5 82 7 view .LVU1951
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9660              		.loc 5 82 7 is_stmt 0 view .LVU1952
 9661              	.LBE5781:
 9662              	.LBE5780:
 9663              	.LBE5779:
 9664              	.LBE5778:
 9665              	.LBB5782:
 9666              	.LBI5782:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 9667              		.loc 15 157 2 is_stmt 1 view .LVU1953
 9668              	.LBB5783:
 9669              	.LBI5783:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9670              		.loc 5 79 7 view .LVU1954
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9671              		.loc 5 79 7 is_stmt 0 view .LVU1955
 9672              	.LBE5783:
 9673              	.LBE5782:
 9674              	.LBB5784:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 353


 9675              	.LBI5753:
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       : _M_impl(__a) { }
 9676              		.loc 1 542 7 is_stmt 1 view .LVU1956
 9677              	.LBB5771:
 9678              	.LBI5771:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 9679              		.loc 15 157 2 view .LVU1957
 9680              	.LBB5772:
 9681              	.LBI5772:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9682              		.loc 5 79 7 view .LVU1958
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9683              		.loc 5 79 7 is_stmt 0 view .LVU1959
 9684              	.LBE5772:
 9685              	.LBE5771:
 9686              	.LBB5773:
 9687              	.LBI5754:
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  : _Bit_alloc_type(__a)
 9688              		.loc 1 504 4 is_stmt 1 view .LVU1960
 9689              	.LBB5767:
 9690              	.LBI5767:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 9691              		.loc 15 147 7 view .LVU1961
 9692              	.LBB5768:
 9693              	.LBI5768:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9694              		.loc 5 82 7 view .LVU1962
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9695              		.loc 5 82 7 is_stmt 0 view .LVU1963
 9696              	.LBE5768:
 9697              	.LBE5767:
 9698              	.LBB5769:
 9699              	.LBI5755:
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 9700              		.loc 1 467 2 is_stmt 1 view .LVU1964
 9701              	.LBB5765:
 9702              	.LBB5762:
 9703              	.LBI5757:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 9704              		.loc 1 241 5 view .LVU1965
 9705              	.LBB5761:
 9706              	.LBI5758:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 9707              		.loc 1 148 5 view .LVU1966
 9708              	.LBB5760:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 9709              		.loc 1 149 31 is_stmt 0 view .LVU1967
 9710 0056 C4F81480 		str	r8, [r4, #20]
 9711 005a C4E90688 		strd	r8, r8, [r4, #24]
 9712              	.LVL340:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 9713              		.loc 1 149 31 view .LVU1968
 9714              	.LBE5760:
 9715              	.LBE5761:
 9716              	.LBE5762:
 9717              	.LBB5763:
 9718              	.LBI5763:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 354


 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 9719              		.loc 1 241 5 is_stmt 1 view .LVU1969
 9720              	.LBB5764:
 9721              	.LBI5764:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 9722              		.loc 1 148 5 view .LVU1970
 9723              	.LBE5764:
 9724              	.LBE5763:
 9725              	.LBE5765:
 9726              	.LBE5769:
 9727              	.LBE5773:
 9728              	.LBE5784:
 9729              	.LBB5785:
 9730              	.LBB5786:
 9731              	.LBB5787:
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 9732              		.loc 1 226 44 is_stmt 0 view .LVU1971
 9733 005e EE69     		ldr	r6, [r5, #28]
 9734 0060 6B69     		ldr	r3, [r5, #20]
 9735              	.LBE5787:
 9736              	.LBE5786:
 9737              	.LBE5785:
 9738              	.LBB5798:
 9739              	.LBB5774:
 9740              	.LBB5770:
 9741              	.LBB5766:
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ }
 9742              		.loc 1 468 47 view .LVU1972
 9743 0062 C4E90888 		strd	r8, r8, [r4, #32]
 9744              	.LVL341:
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ }
 9745              		.loc 1 468 47 view .LVU1973
 9746              	.LBE5766:
 9747              	.LBE5770:
 9748              	.LBE5774:
 9749              	.LBB5775:
 9750              	.LBI5775:
 9751              		.loc 15 162 7 is_stmt 1 view .LVU1974
 9752              	.LBB5776:
 9753              	.LBI5776:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9754              		.loc 5 89 7 view .LVU1975
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9755              		.loc 5 89 7 is_stmt 0 view .LVU1976
 9756              	.LBE5776:
 9757              	.LBE5775:
 9758              	.LBE5798:
 9759              	.LBB5799:
 9760              	.LBI5799:
 9761              		.loc 15 162 7 is_stmt 1 view .LVU1977
 9762              	.LBB5800:
 9763              	.LBI5800:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9764              		.loc 5 89 7 view .LVU1978
 9765              	.LBE5800:
 9766              	.LBE5799:
 9767              	.LBB5801:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 355


 9768              	.LBI5801:
 9769              		.loc 15 162 7 view .LVU1979
 9770              	.LBB5802:
 9771              	.LBI5802:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9772              		.loc 5 89 7 view .LVU1980
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9773              		.loc 5 89 7 is_stmt 0 view .LVU1981
 9774              	.LBE5802:
 9775              	.LBE5801:
 9776              	.LBB5803:
 9777              	.LBI5785:
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return size_type(end() - begin()); }
 9778              		.loc 1 884 7 is_stmt 1 view .LVU1982
 9779              	.LBB5789:
 9780              	.LBI5789:
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl._M_finish; }
 9781              		.loc 1 846 7 view .LVU1983
 9782              	.LBB5790:
 9783              	.LBI5790:
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x._M_p, __x._M_offset) { }
 9784              		.loc 1 339 5 view .LVU1984
 9785              	.LBB5791:
 9786              	.LBB5792:
 9787              	.LBI5792:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 9788              		.loc 1 148 5 view .LVU1985
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 9789              		.loc 1 148 5 is_stmt 0 view .LVU1986
 9790              	.LBE5792:
 9791              	.LBE5791:
 9792              	.LBE5790:
 9793              	.LBE5789:
 9794              	.LBB5793:
 9795              	.LBI5793:
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_iterator(this->_M_impl._M_start._M_p, 0); }
 9796              		.loc 1 838 7 is_stmt 1 view .LVU1987
 9797              	.LBB5794:
 9798              	.LBB5795:
 9799              	.LBI5795:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 9800              		.loc 1 336 5 view .LVU1988
 9801              	.LBB5796:
 9802              	.LBI5796:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 9803              		.loc 1 148 5 view .LVU1989
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 9804              		.loc 1 148 5 is_stmt 0 view .LVU1990
 9805              	.LBE5796:
 9806              	.LBE5795:
 9807              	.LBE5794:
 9808              	.LBE5793:
 9809              	.LBB5797:
 9810              	.LBI5786:
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 9811              		.loc 1 224 5 is_stmt 1 view .LVU1991
 9812              	.LBB5788:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 356


 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 9813              		.loc 1 226 7 view .LVU1992
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 9814              		.loc 1 226 44 is_stmt 0 view .LVU1993
 9815 0066 F31A     		subs	r3, r6, r3
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 9816              		.loc 1 227 8 view .LVU1994
 9817 0068 2E6A     		ldr	r6, [r5, #32]
 9818              	.LVL342:
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 9819              		.loc 1 227 8 view .LVU1995
 9820              	.LBE5788:
 9821              	.LBE5797:
 9822              	.LBE5803:
 9823              	.LBB5804:
 9824              	.LBI5804:
1143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 9825              		.loc 1 1143 7 is_stmt 1 view .LVU1996
 9826              	.LBB5805:
 9827              	.LBB5806:
1145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 9828              		.loc 1 1145 2 is_stmt 0 view .LVU1997
 9829 006a 16EBC306 		adds	r6, r6, r3, lsl #3
 9830              	.LVL343:
1145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 9831              		.loc 1 1145 2 view .LVU1998
 9832 006e 40F08D80 		bne	.L240
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 9833              		.loc 1 1154 6 view .LVU1999
 9834 0072 3046     		mov	r0, r6
 9835              	.LBE5806:
 9836              	.LBB5831:
 9837              	.LBB5832:
 9838              	.LBB5833:
 9839              	.LBB5834:
 9840              	.LBB5835:
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 9841              		.loc 1 175 12 view .LVU2000
 9842 0074 3346     		mov	r3, r6
 9843              	.LBE5835:
 9844              	.LBE5834:
 9845              	.LBE5833:
 9846              	.LBE5832:
 9847              	.LBE5831:
 9848              	.LBB5869:
1153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    this->_M_impl._M_start = iterator(0, 0);
 9849              		.loc 1 1153 38 view .LVU2001
 9850 0076 6662     		str	r6, [r4, #36]
 9851              	.LVL344:
 9852              	.LBB5807:
 9853              	.LBI5807:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 9854              		.loc 1 243 5 is_stmt 1 view .LVU2002
 9855              	.LBB5808:
 9856              	.LBI5808:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 9857              		.loc 1 148 5 view .LVU2003
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 357


 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 9858              		.loc 1 148 5 is_stmt 0 view .LVU2004
 9859              	.LBE5808:
 9860              	.LBE5807:
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 9861              		.loc 1 1154 6 view .LVU2005
 9862 0078 C4E90566 		strd	r6, r6, [r4, #20]
 9863              	.LVL345:
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 9864              		.loc 1 1154 6 view .LVU2006
 9865              	.LBE5869:
 9866              	.LBB5870:
 9867              	.LBI5831:
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 9868              		.loc 1 303 5 is_stmt 1 view .LVU2007
 9869              	.LBB5859:
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __tmp += __n;
 9870              		.loc 1 305 7 view .LVU2008
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __tmp;
 9871              		.loc 1 306 7 view .LVU2009
 9872              	.LBB5850:
 9873              	.LBI5833:
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 9874              		.loc 1 285 5 view .LVU2010
 9875              	.LBE5850:
 9876              	.LBE5859:
 9877              	.LBE5870:
 9878              	.LBE5805:
 9879              	.LBE5804:
 9880              	.LBE5915:
 9881              	.LBE5922:
 9882              	.LBE6114:
 9883              	.LBE6128:
 9884              	.LBE6141:
 9885              	.LBE6155:
 9886              	.LBE6168:
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 9887              		.loc 1 287 7 view .LVU2011
 9888              	.LBB6169:
 9889              	.LBB6156:
 9890              	.LBB6142:
 9891              	.LBB6129:
 9892              	.LBB6115:
 9893              	.LBB5923:
 9894              	.LBB5916:
 9895              	.LBB5890:
 9896              	.LBB5886:
 9897              	.LBB5871:
 9898              	.LBB5860:
 9899              	.LBB5851:
 9900              	.LBB5843:
 9901              	.LBI5834:
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 9902              		.loc 1 172 5 view .LVU2012
 9903              	.LBB5836:
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_p += __n / int(_S_word_bit);
 9904              		.loc 1 174 7 view .LVU2013
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 358


 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 9905              		.loc 1 175 7 view .LVU2014
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 9906              		.loc 1 176 7 view .LVU2015
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 9907              		.loc 1 177 7 view .LVU2016
 9908              	.L232:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 9909              		.loc 1 182 7 view .LVU2017
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 9910              		.loc 1 182 7 is_stmt 0 view .LVU2018
 9911              	.LBE5836:
 9912              	.LBE5843:
 9913              	.LBE5851:
 9914              	.LBE5860:
 9915              	.LBE5871:
 9916              	.LBE5886:
 9917              	.LBE5890:
 9918              	.LBE5916:
 9919              	.LBE5923:
 9920              	.LBE6115:
 9921              	.LBE6129:
 9922              	.LBE6142:
 9923              	.LBE6156:
 9924              	.LBE6169:
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 9925              		.loc 1 288 7 is_stmt 1 view .LVU2019
 9926              	.LBB6170:
 9927              	.LBB6157:
 9928              	.LBB6143:
 9929              	.LBB6130:
 9930              	.LBB6116:
 9931              	.LBB5924:
 9932              	.LBB5917:
 9933              	.LBB5891:
 9934              	.LBB5887:
 9935              	.LBB5872:
 9936              	.LBB5861:
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 9937              		.loc 1 307 7 view .LVU2020
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 9938              		.loc 1 307 7 is_stmt 0 view .LVU2021
 9939              	.LBE5861:
 9940              	.LBE5872:
1156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 9941              		.loc 1 1156 51 view .LVU2022
 9942 007c C4E90736 		strd	r3, r6, [r4, #28]
 9943              	.LVL346:
1156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 9944              		.loc 1 1156 51 view .LVU2023
 9945              	.LBE5887:
 9946              	.LBE5891:
 9947              	.LBB5892:
 9948              	.LBI5892:
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_iterator(this->_M_impl._M_start._M_p, 0); }
 9949              		.loc 1 838 7 is_stmt 1 view .LVU2024
 9950              	.LBB5893:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 359


 9951              	.LBB5894:
 9952              	.LBI5894:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 9953              		.loc 1 336 5 view .LVU2025
 9954              	.LBB5895:
 9955              	.LBI5895:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 9956              		.loc 1 148 5 view .LVU2026
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 9957              		.loc 1 148 5 is_stmt 0 view .LVU2027
 9958              	.LBE5895:
 9959              	.LBE5894:
 9960              	.LBE5893:
 9961              	.LBE5892:
 9962              	.LBB5896:
 9963              	.LBI5896:
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl._M_finish; }
 9964              		.loc 1 846 7 is_stmt 1 view .LVU2028
 9965              	.LBB5897:
 9966              	.LBB5898:
 9967              	.LBI5898:
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x._M_p, __x._M_offset) { }
 9968              		.loc 1 339 5 view .LVU2029
 9969              	.LBE5898:
 9970              	.LBE5897:
 9971              	.LBE5896:
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 9972              		.loc 1 683 17 is_stmt 0 view .LVU2030
 9973 0080 0090     		str	r0, [sp]
 9974 0082 04AB     		add	r3, sp, #16
 9975              	.LVL347:
 9976              	.LBB5911:
 9977              	.LBB5909:
 9978              	.LBB5907:
 9979              	.LBB5899:
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 9980              		.loc 1 340 30 view .LVU2031
 9981 0084 EA69     		ldr	r2, [r5, #28]
 9982              	.LBE5899:
 9983              	.LBE5907:
 9984              	.LBE5909:
 9985              	.LBE5911:
 9986              	.LBE5917:
 9987              	.LBE5924:
 9988              	.LBB5925:
 9989              	.LBB5926:
 9990              	.LBB5927:
 9991              	.LBB5928:
 9992              	.LBB5929:
 9993              	.LBB5930:
 9994              	.LBB5931:
 9995              	.LBB5932:
 9996              	.LBB5933:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 9997              		.loc 1 149 31 view .LVU2032
 9998 0086 4FF00008 		mov	r8, #0
 9999              	.LBE5933:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 360


 10000              	.LBE5932:
 10001              	.LBE5931:
 10002              	.LBE5930:
 10003              	.LBE5929:
 10004              	.LBE5928:
 10005              	.LBE5927:
 10006              	.LBE5926:
 10007              	.LBE5925:
 10008              	.LBB6100:
 10009              	.LBB5918:
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 10010              		.loc 1 683 17 view .LVU2033
 10011 008a 6969     		ldr	r1, [r5, #20]
 10012 008c 08A8     		add	r0, sp, #32
 10013              	.LBB5912:
 10014              	.LBB5910:
 10015              	.LBB5908:
 10016              	.LBB5906:
 10017              	.LBB5900:
 10018              	.LBB5901:
 10019              	.LBB5902:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 10020              		.loc 1 149 31 view .LVU2034
 10021 008e 0492     		str	r2, [sp, #16]
 10022              	.LBE5902:
 10023              	.LBE5901:
 10024              	.LBE5900:
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 10025              		.loc 1 340 40 view .LVU2035
 10026 0090 2A6A     		ldr	r2, [r5, #32]
 10027              	.LVL348:
 10028              	.LBB5905:
 10029              	.LBI5900:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 10030              		.loc 1 148 5 is_stmt 1 view .LVU2036
 10031              	.LBB5904:
 10032              	.LBB5903:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 10033              		.loc 1 149 31 is_stmt 0 view .LVU2037
 10034 0092 0592     		str	r2, [sp, #20]
 10035              	.LVL349:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 10036              		.loc 1 149 31 view .LVU2038
 10037              	.LBE5903:
 10038              	.LBE5904:
 10039              	.LBE5905:
 10040              	.LBE5906:
 10041              	.LBE5908:
 10042              	.LBE5910:
 10043              	.LBE5912:
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 10044              		.loc 1 683 17 view .LVU2039
 10045 0094 0CCB     		ldm	r3, {r2, r3}
 10046 0096 FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator.isra.0
 10047              	.LVL350:
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 10048              		.loc 1 683 17 view .LVU2040
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 361


 10049              	.LBE5918:
 10050              	.LBE6100:
 10051              	.LBB6101:
 10052              	.LBI5925:
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       : _Base(_Bit_alloc_traits::_S_select_on_copy(__x._M_get_Bit_allocator()))
 10053              		.loc 1 679 7 is_stmt 1 view .LVU2041
 10054              	.LBB6093:
 10055              	.LBB5951:
 10056              	.LBI5951:
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl; }
 10057              		.loc 1 529 7 view .LVU2042
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl; }
 10058              		.loc 1 529 7 is_stmt 0 view .LVU2043
 10059              	.LBE5951:
 10060              	.LBB5952:
 10061              	.LBI5952:
 10062              		.loc 14 97 29 is_stmt 1 view .LVU2044
 10063              	.LBB5953:
 10064              	.LBI5953:
 10065              		.loc 6 558 7 view .LVU2045
 10066              	.LBB5954:
 10067              	.LBI5954:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 10068              		.loc 15 147 7 view .LVU2046
 10069              	.LBB5955:
 10070              	.LBI5955:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10071              		.loc 5 82 7 view .LVU2047
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10072              		.loc 5 82 7 is_stmt 0 view .LVU2048
 10073              	.LBE5955:
 10074              	.LBE5954:
 10075              	.LBE5953:
 10076              	.LBE5952:
 10077              	.LBB5956:
 10078              	.LBI5956:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 10079              		.loc 15 157 2 is_stmt 1 view .LVU2049
 10080              	.LBB5957:
 10081              	.LBI5957:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10082              		.loc 5 79 7 view .LVU2050
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10083              		.loc 5 79 7 is_stmt 0 view .LVU2051
 10084              	.LBE5957:
 10085              	.LBE5956:
 10086              	.LBB5958:
 10087              	.LBI5927:
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       : _M_impl(__a) { }
 10088              		.loc 1 542 7 is_stmt 1 view .LVU2052
 10089              	.LBB5945:
 10090              	.LBI5945:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 10091              		.loc 15 157 2 view .LVU2053
 10092              	.LBB5946:
 10093              	.LBI5946:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 362


 10094              		.loc 5 79 7 view .LVU2054
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10095              		.loc 5 79 7 is_stmt 0 view .LVU2055
 10096              	.LBE5946:
 10097              	.LBE5945:
 10098              	.LBB5947:
 10099              	.LBI5928:
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  : _Bit_alloc_type(__a)
 10100              		.loc 1 504 4 is_stmt 1 view .LVU2056
 10101              	.LBB5941:
 10102              	.LBI5941:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 10103              		.loc 15 147 7 view .LVU2057
 10104              	.LBB5942:
 10105              	.LBI5942:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10106              		.loc 5 82 7 view .LVU2058
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10107              		.loc 5 82 7 is_stmt 0 view .LVU2059
 10108              	.LBE5942:
 10109              	.LBE5941:
 10110              	.LBB5943:
 10111              	.LBI5929:
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 10112              		.loc 1 467 2 is_stmt 1 view .LVU2060
 10113              	.LBB5939:
 10114              	.LBB5936:
 10115              	.LBI5931:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 10116              		.loc 1 241 5 view .LVU2061
 10117              	.LBB5935:
 10118              	.LBI5932:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 10119              		.loc 1 148 5 view .LVU2062
 10120              	.LBB5934:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 10121              		.loc 1 149 31 is_stmt 0 view .LVU2063
 10122 009a C4F82880 		str	r8, [r4, #40]
 10123 009e C4E90B88 		strd	r8, r8, [r4, #44]
 10124              	.LVL351:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 10125              		.loc 1 149 31 view .LVU2064
 10126              	.LBE5934:
 10127              	.LBE5935:
 10128              	.LBE5936:
 10129              	.LBB5937:
 10130              	.LBI5937:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 10131              		.loc 1 241 5 is_stmt 1 view .LVU2065
 10132              	.LBB5938:
 10133              	.LBI5938:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 10134              		.loc 1 148 5 view .LVU2066
 10135              	.LBE5938:
 10136              	.LBE5937:
 10137              	.LBE5939:
 10138              	.LBE5943:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 363


 10139              	.LBE5947:
 10140              	.LBE5958:
 10141              	.LBB5959:
 10142              	.LBB5960:
 10143              	.LBB5961:
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 10144              		.loc 1 226 44 is_stmt 0 view .LVU2067
 10145 00a2 2E6B     		ldr	r6, [r5, #48]
 10146 00a4 AB6A     		ldr	r3, [r5, #40]
 10147              	.LBE5961:
 10148              	.LBE5960:
 10149              	.LBE5959:
 10150              	.LBB5972:
 10151              	.LBB5948:
 10152              	.LBB5944:
 10153              	.LBB5940:
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ }
 10154              		.loc 1 468 47 view .LVU2068
 10155 00a6 C4E90D88 		strd	r8, r8, [r4, #52]
 10156              	.LVL352:
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ }
 10157              		.loc 1 468 47 view .LVU2069
 10158              	.LBE5940:
 10159              	.LBE5944:
 10160              	.LBE5948:
 10161              	.LBB5949:
 10162              	.LBI5949:
 10163              		.loc 15 162 7 is_stmt 1 view .LVU2070
 10164              	.LBB5950:
 10165              	.LBI5950:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10166              		.loc 5 89 7 view .LVU2071
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10167              		.loc 5 89 7 is_stmt 0 view .LVU2072
 10168              	.LBE5950:
 10169              	.LBE5949:
 10170              	.LBE5972:
 10171              	.LBB5973:
 10172              	.LBI5973:
 10173              		.loc 15 162 7 is_stmt 1 view .LVU2073
 10174              	.LBB5974:
 10175              	.LBI5974:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10176              		.loc 5 89 7 view .LVU2074
 10177              	.LBE5974:
 10178              	.LBE5973:
 10179              	.LBB5975:
 10180              	.LBI5975:
 10181              		.loc 15 162 7 view .LVU2075
 10182              	.LBB5976:
 10183              	.LBI5976:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10184              		.loc 5 89 7 view .LVU2076
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10185              		.loc 5 89 7 is_stmt 0 view .LVU2077
 10186              	.LBE5976:
 10187              	.LBE5975:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 364


 10188              	.LBB5977:
 10189              	.LBI5959:
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return size_type(end() - begin()); }
 10190              		.loc 1 884 7 is_stmt 1 view .LVU2078
 10191              	.LBB5963:
 10192              	.LBI5963:
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl._M_finish; }
 10193              		.loc 1 846 7 view .LVU2079
 10194              	.LBB5964:
 10195              	.LBI5964:
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x._M_p, __x._M_offset) { }
 10196              		.loc 1 339 5 view .LVU2080
 10197              	.LBB5965:
 10198              	.LBB5966:
 10199              	.LBI5966:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 10200              		.loc 1 148 5 view .LVU2081
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 10201              		.loc 1 148 5 is_stmt 0 view .LVU2082
 10202              	.LBE5966:
 10203              	.LBE5965:
 10204              	.LBE5964:
 10205              	.LBE5963:
 10206              	.LBB5967:
 10207              	.LBI5967:
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_iterator(this->_M_impl._M_start._M_p, 0); }
 10208              		.loc 1 838 7 is_stmt 1 view .LVU2083
 10209              	.LBB5968:
 10210              	.LBB5969:
 10211              	.LBI5969:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 10212              		.loc 1 336 5 view .LVU2084
 10213              	.LBB5970:
 10214              	.LBI5970:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 10215              		.loc 1 148 5 view .LVU2085
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 10216              		.loc 1 148 5 is_stmt 0 view .LVU2086
 10217              	.LBE5970:
 10218              	.LBE5969:
 10219              	.LBE5968:
 10220              	.LBE5967:
 10221              	.LBB5971:
 10222              	.LBI5960:
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 10223              		.loc 1 224 5 is_stmt 1 view .LVU2087
 10224              	.LBB5962:
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 10225              		.loc 1 226 7 view .LVU2088
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	      + __x._M_offset - __y._M_offset);
 10226              		.loc 1 226 44 is_stmt 0 view .LVU2089
 10227 00aa F31A     		subs	r3, r6, r3
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 10228              		.loc 1 227 8 view .LVU2090
 10229 00ac 6E6B     		ldr	r6, [r5, #52]
 10230              	.LVL353:
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 365


 10231              		.loc 1 227 8 view .LVU2091
 10232              	.LBE5962:
 10233              	.LBE5971:
 10234              	.LBE5977:
 10235              	.LBB5978:
 10236              	.LBI5978:
1143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 10237              		.loc 1 1143 7 is_stmt 1 view .LVU2092
 10238              	.LBB5979:
 10239              	.LBB5980:
1145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 10240              		.loc 1 1145 2 is_stmt 0 view .LVU2093
 10241 00ae 16EBC306 		adds	r6, r6, r3, lsl #3
 10242              	.LVL354:
1145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 10243              		.loc 1 1145 2 view .LVU2094
 10244 00b2 48D1     		bne	.L241
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 10245              		.loc 1 1154 6 view .LVU2095
 10246 00b4 3046     		mov	r0, r6
 10247              	.LBE5980:
 10248              	.LBB6005:
 10249              	.LBB6006:
 10250              	.LBB6007:
 10251              	.LBB6008:
 10252              	.LBB6009:
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 10253              		.loc 1 175 12 view .LVU2096
 10254 00b6 3346     		mov	r3, r6
 10255              	.LBE6009:
 10256              	.LBE6008:
 10257              	.LBE6007:
 10258              	.LBE6006:
 10259              	.LBE6005:
 10260              	.LBB6043:
1153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    this->_M_impl._M_start = iterator(0, 0);
 10261              		.loc 1 1153 38 view .LVU2097
 10262 00b8 A663     		str	r6, [r4, #56]
 10263              	.LVL355:
 10264              	.LBB5981:
 10265              	.LBI5981:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 10266              		.loc 1 243 5 is_stmt 1 view .LVU2098
 10267              	.LBB5982:
 10268              	.LBI5982:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 10269              		.loc 1 148 5 view .LVU2099
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 10270              		.loc 1 148 5 is_stmt 0 view .LVU2100
 10271              	.LBE5982:
 10272              	.LBE5981:
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 10273              		.loc 1 1154 6 view .LVU2101
 10274 00ba C4E90A66 		strd	r6, r6, [r4, #40]
 10275              	.LVL356:
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 10276              		.loc 1 1154 6 view .LVU2102
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 366


 10277              	.LBE6043:
 10278              	.LBB6044:
 10279              	.LBI6005:
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 10280              		.loc 1 303 5 is_stmt 1 view .LVU2103
 10281              	.LBB6033:
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __tmp += __n;
 10282              		.loc 1 305 7 view .LVU2104
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __tmp;
 10283              		.loc 1 306 7 view .LVU2105
 10284              	.LBB6024:
 10285              	.LBI6007:
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 10286              		.loc 1 285 5 view .LVU2106
 10287              	.LBE6024:
 10288              	.LBE6033:
 10289              	.LBE6044:
 10290              	.LBE5979:
 10291              	.LBE5978:
 10292              	.LBE6093:
 10293              	.LBE6101:
 10294              	.LBE6116:
 10295              	.LBE6130:
 10296              	.LBE6143:
 10297              	.LBE6157:
 10298              	.LBE6170:
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 10299              		.loc 1 287 7 view .LVU2107
 10300              	.LBB6171:
 10301              	.LBB6158:
 10302              	.LBB6144:
 10303              	.LBB6131:
 10304              	.LBB6117:
 10305              	.LBB6102:
 10306              	.LBB6094:
 10307              	.LBB6064:
 10308              	.LBB6060:
 10309              	.LBB6045:
 10310              	.LBB6034:
 10311              	.LBB6025:
 10312              	.LBB6017:
 10313              	.LBI6008:
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 10314              		.loc 1 172 5 view .LVU2108
 10315              	.LBB6010:
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_p += __n / int(_S_word_bit);
 10316              		.loc 1 174 7 view .LVU2109
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 10317              		.loc 1 175 7 view .LVU2110
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 10318              		.loc 1 176 7 view .LVU2111
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 10319              		.loc 1 177 7 view .LVU2112
 10320              	.L236:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 10321              		.loc 1 182 7 view .LVU2113
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 367


 10322              		.loc 1 182 7 is_stmt 0 view .LVU2114
 10323              	.LBE6010:
 10324              	.LBE6017:
 10325              	.LBE6025:
 10326              	.LBE6034:
 10327              	.LBE6045:
 10328              	.LBE6060:
 10329              	.LBE6064:
 10330              	.LBE6094:
 10331              	.LBE6102:
 10332              	.LBE6117:
 10333              	.LBE6131:
 10334              	.LBE6144:
 10335              	.LBE6158:
 10336              	.LBE6171:
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 10337              		.loc 1 288 7 is_stmt 1 view .LVU2115
 10338              	.LBB6172:
 10339              	.LBB6159:
 10340              	.LBB6145:
 10341              	.LBB6132:
 10342              	.LBB6118:
 10343              	.LBB6103:
 10344              	.LBB6095:
 10345              	.LBB6065:
 10346              	.LBB6061:
 10347              	.LBB6046:
 10348              	.LBB6035:
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 10349              		.loc 1 307 7 view .LVU2116
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     }
 10350              		.loc 1 307 7 is_stmt 0 view .LVU2117
 10351              	.LBE6035:
 10352              	.LBE6046:
1156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 10353              		.loc 1 1156 51 view .LVU2118
 10354 00be C4E90C36 		strd	r3, r6, [r4, #48]
 10355              	.LVL357:
1156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 10356              		.loc 1 1156 51 view .LVU2119
 10357              	.LBE6061:
 10358              	.LBE6065:
 10359              	.LBB6066:
 10360              	.LBI6066:
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return const_iterator(this->_M_impl._M_start._M_p, 0); }
 10361              		.loc 1 838 7 is_stmt 1 view .LVU2120
 10362              	.LBB6067:
 10363              	.LBB6068:
 10364              	.LBI6068:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 10365              		.loc 1 336 5 view .LVU2121
 10366              	.LBB6069:
 10367              	.LBI6069:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 10368              		.loc 1 148 5 view .LVU2122
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 10369              		.loc 1 148 5 is_stmt 0 view .LVU2123
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 368


 10370              	.LBE6069:
 10371              	.LBE6068:
 10372              	.LBE6067:
 10373              	.LBE6066:
 10374              	.LBB6070:
 10375              	.LBI6070:
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return this->_M_impl._M_finish; }
 10376              		.loc 1 846 7 is_stmt 1 view .LVU2124
 10377              	.LBB6071:
 10378              	.LBB6072:
 10379              	.LBI6072:
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x._M_p, __x._M_offset) { }
 10380              		.loc 1 339 5 view .LVU2125
 10381              	.LBE6072:
 10382              	.LBE6071:
 10383              	.LBE6070:
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 10384              		.loc 1 683 17 is_stmt 0 view .LVU2126
 10385 00c2 0090     		str	r0, [sp]
 10386 00c4 02AB     		add	r3, sp, #8
 10387              	.LVL358:
 10388              	.LBB6088:
 10389              	.LBB6085:
 10390              	.LBB6082:
 10391              	.LBB6073:
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 10392              		.loc 1 340 30 view .LVU2127
 10393 00c6 2A6B     		ldr	r2, [r5, #48]
 10394              	.LBE6073:
 10395              	.LBE6082:
 10396              	.LBE6085:
 10397              	.LBE6088:
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 10398              		.loc 1 683 17 view .LVU2128
 10399 00c8 08A8     		add	r0, sp, #32
 10400 00ca A96A     		ldr	r1, [r5, #40]
 10401              	.LBE6095:
 10402              	.LBE6103:
 10403              	.LBE6118:
 10404              		.loc 13 32 12 view .LVU2129
 10405 00cc 3C35     		adds	r5, r5, #60
 10406              	.LVL359:
 10407              	.LBB6119:
 10408              	.LBB6104:
 10409              	.LBB6096:
 10410              	.LBB6089:
 10411              	.LBB6086:
 10412              	.LBB6083:
 10413              	.LBB6080:
 10414              	.LBB6074:
 10415              	.LBB6075:
 10416              	.LBB6076:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 10417              		.loc 1 149 31 view .LVU2130
 10418 00ce 0292     		str	r2, [sp, #8]
 10419              	.LBE6076:
 10420              	.LBE6075:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 369


 10421              	.LBE6074:
 10422              	.LBE6080:
 10423              	.LBE6083:
 10424              	.LBE6086:
 10425              	.LBE6089:
 10426              	.LBE6096:
 10427              	.LBE6104:
 10428              	.LBE6119:
 10429              		.loc 13 32 12 view .LVU2131
 10430 00d0 3C34     		adds	r4, r4, #60
 10431              	.LVL360:
 10432              	.LBB6120:
 10433              	.LBB6105:
 10434              	.LBB6097:
 10435              	.LBB6090:
 10436              	.LBB6087:
 10437              	.LBB6084:
 10438              	.LBB6081:
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 10439              		.loc 1 340 40 view .LVU2132
 10440 00d2 55F8082C 		ldr	r2, [r5, #-8]
 10441              	.LVL361:
 10442              	.LBB6079:
 10443              	.LBI6074:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 10444              		.loc 1 148 5 is_stmt 1 view .LVU2133
 10445              	.LBB6078:
 10446              	.LBB6077:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 10447              		.loc 1 149 31 is_stmt 0 view .LVU2134
 10448 00d6 0392     		str	r2, [sp, #12]
 10449              	.LVL362:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 10450              		.loc 1 149 31 view .LVU2135
 10451              	.LBE6077:
 10452              	.LBE6078:
 10453              	.LBE6079:
 10454              	.LBE6081:
 10455              	.LBE6084:
 10456              	.LBE6087:
 10457              	.LBE6090:
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 10458              		.loc 1 683 17 view .LVU2136
 10459 00d8 0CCB     		ldm	r3, {r2, r3}
 10460 00da FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator.isra.0
 10461              	.LVL363:
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       }
 10462              		.loc 1 683 17 view .LVU2137
 10463              	.LBE6097:
 10464              	.LBE6105:
 10465              	.LBE6120:
 10466              	.LBE6132:
 10467              	.LBE6145:
 10468              	.LBE6159:
 10469              	.LBE6172:
1194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 10470              		.loc 8 1194 6 view .LVU2138
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 370


 10471 00de 7B68     		ldr	r3, [r7, #4]
 10472 00e0 03F14C06 		add	r6, r3, #76
 10473              	.LBB6173:
 10474              	.LBB6160:
 10475              	.LBB6146:
 10476              	.LBB6133:
 10477              		.loc 13 32 12 view .LVU2139
 10478 00e4 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 10479 00e8 84E80F00 		stm	r4, {r0, r1, r2, r3}
 10480              	.LVL364:
 10481              		.loc 13 32 12 view .LVU2140
 10482              	.LBE6133:
 10483              	.LBE6146:
 10484              	.LBE6160:
 10485              	.LBE6173:
1194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 10486              		.loc 8 1194 6 view .LVU2141
 10487 00ec 7E60     		str	r6, [r7, #4]
1199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 10488              		.loc 8 1199 7 view .LVU2142
 10489 00ee 0AB0     		add	sp, sp, #40
 10490              		.cfi_remember_state
 10491              		.cfi_def_cfa_offset 32
 10492              		@ sp needed
 10493 00f0 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 10494              	.LVL365:
 10495              	.L239:
 10496              		.cfi_restore_state
 10497              	.LBB6174:
 10498              	.LBB6161:
 10499              	.LBB6147:
 10500              	.LBB6134:
 10501              	.LBB6121:
 10502              	.LBB6106:
 10503              	.LBB5746:
 10504              	.LBB5740:
 10505              	.LBB5722:
 10506              	.LBB5713:
 10507              	.LBB5669:
 10508              	.LBB5670:
 10509              	.LBI5670:
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return _Bit_alloc_traits::allocate(_M_impl, _S_nword(__n)); }
 10510              		.loc 1 556 7 is_stmt 1 view .LVU2143
 10511              	.LBB5671:
 10512              	.LBI5671:
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return (__n + int(_S_word_bit) - 1) / int(_S_word_bit); }
 10513              		.loc 1 579 7 view .LVU2144
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return (__n + int(_S_word_bit) - 1) / int(_S_word_bit); }
 10514              		.loc 1 579 7 is_stmt 0 view .LVU2145
 10515              	.LBE5671:
 10516              	.LBB5673:
 10517              	.LBI5673:
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 10518              		.loc 6 459 7 is_stmt 1 view .LVU2146
 10519              	.LBB5674:
 10520              	.LBI5674:
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 371


 10521              		.loc 5 103 7 view .LVU2147
 10522              	.LBE5674:
 10523              	.LBE5673:
 10524              	.LBB5677:
 10525              	.LBB5672:
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     };
 10526              		.loc 1 580 40 is_stmt 0 view .LVU2148
 10527 00f4 06F11F08 		add	r8, r6, #31
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     };
 10528              		.loc 1 580 62 view .LVU2149
 10529 00f8 4FEA5819 		lsr	r9, r8, #5
 10530              	.LVL366:
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     };
 10531              		.loc 1 580 62 view .LVU2150
 10532              	.LBE5672:
 10533              	.LBE5677:
 10534              	.LBB5678:
 10535              	.LBB5676:
 10536              	.LBB5675:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 10537              		.loc 5 115 41 view .LVU2151
 10538 00fc 4FEA8909 		lsl	r9, r9, #2
 10539              	.LVL367:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 10540              		.loc 5 115 41 view .LVU2152
 10541 0100 4846     		mov	r0, r9
 10542              	.LVL368:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 10543              		.loc 5 115 41 view .LVU2153
 10544 0102 FFF7FEFF 		bl	_Znwj
 10545              	.LVL369:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 10546              		.loc 5 115 41 view .LVU2154
 10547              	.LBE5675:
 10548              	.LBE5676:
 10549              	.LBE5678:
 10550              	.LBE5670:
1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 10551              		.loc 1 1149 6 view .LVU2155
 10552 0106 0022     		movs	r2, #0
1148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    this->_M_impl._M_start = iterator(std::__addressof(*__q), 0);
 10553              		.loc 1 1148 44 view .LVU2156
 10554 0108 00EB0903 		add	r3, r0, r9
1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 10555              		.loc 1 1149 6 view .LVU2157
 10556 010c 2060     		str	r0, [r4]
 10557              	.LBE5669:
 10558              	.LBE5713:
 10559              	.LBB5714:
 10560              	.LBB5705:
 10561              	.LBB5698:
 10562              	.LBB5693:
 10563              	.LBB5689:
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 10564              		.loc 1 175 19 view .LVU2158
 10565 010e 9642     		cmp	r6, r2
 10566 0110 A8BF     		it	ge
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 372


 10567 0112 B046     		movge	r8, r6
 10568              	.LVL370:
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 10569              		.loc 1 175 19 view .LVU2159
 10570              	.LBE5689:
 10571              	.LBE5693:
 10572              	.LBE5698:
 10573              	.LBE5705:
 10574              	.LBE5714:
 10575              	.LBB5715:
 10576              	.LBB5681:
1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 10577              		.loc 1 1149 6 view .LVU2160
 10578 0114 6260     		str	r2, [r4, #4]
 10579              	.LBE5681:
 10580              	.LBE5715:
 10581              	.LBB5716:
 10582              	.LBB5706:
 10583              	.LBB5699:
 10584              	.LBB5694:
 10585              	.LBB5690:
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 10586              		.loc 1 176 11 view .LVU2161
 10587 0116 921B     		subs	r2, r2, r6
 10588 0118 06F01F06 		and	r6, r6, #31
 10589              	.LVL371:
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 10590              		.loc 1 175 19 view .LVU2162
 10591 011c 4FEA6818 		asr	r8, r8, #5
 10592              	.LBE5690:
 10593              	.LBE5694:
 10594              	.LBE5699:
 10595              	.LBE5706:
 10596              	.LBE5716:
 10597              	.LBB5717:
 10598              	.LBB5682:
1148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    this->_M_impl._M_start = iterator(std::__addressof(*__q), 0);
 10599              		.loc 1 1148 38 view .LVU2163
 10600 0120 2361     		str	r3, [r4, #16]
 10601              	.LVL372:
 10602              	.LBB5679:
 10603              	.LBI5679:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 10604              		.loc 1 243 5 is_stmt 1 view .LVU2164
 10605              	.LBB5680:
 10606              	.LBI5680:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 10607              		.loc 1 148 5 view .LVU2165
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 10608              		.loc 1 148 5 is_stmt 0 view .LVU2166
 10609              	.LBE5680:
 10610              	.LBE5679:
 10611              	.LBE5682:
 10612              	.LBE5717:
 10613              	.LBB5718:
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 10614              		.loc 1 303 5 is_stmt 1 view .LVU2167
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 373


 10615              	.LBB5707:
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __tmp += __n;
 10616              		.loc 1 305 7 view .LVU2168
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __tmp;
 10617              		.loc 1 306 7 view .LVU2169
 10618              	.LBB5700:
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 10619              		.loc 1 285 5 view .LVU2170
 10620              	.LBE5700:
 10621              	.LBE5707:
 10622              	.LBE5718:
 10623              	.LBE5722:
 10624              	.LBE5740:
 10625              	.LBE5746:
 10626              	.LBE6106:
 10627              	.LBE6121:
 10628              	.LBE6134:
 10629              	.LBE6147:
 10630              	.LBE6161:
 10631              	.LBE6174:
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 10632              		.loc 1 287 7 view .LVU2171
 10633              	.LBB6175:
 10634              	.LBB6162:
 10635              	.LBB6148:
 10636              	.LBB6135:
 10637              	.LBB6122:
 10638              	.LBB6107:
 10639              	.LBB5747:
 10640              	.LBB5741:
 10641              	.LBB5723:
 10642              	.LBB5719:
 10643              	.LBB5708:
 10644              	.LBB5701:
 10645              	.LBB5695:
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 10646              		.loc 1 172 5 view .LVU2172
 10647              	.LBB5691:
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_p += __n / int(_S_word_bit);
 10648              		.loc 1 174 7 view .LVU2173
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 10649              		.loc 1 175 7 view .LVU2174
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 10650              		.loc 1 176 11 is_stmt 0 view .LVU2175
 10651 0122 02F01F02 		and	r2, r2, #31
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 10652              		.loc 1 175 12 view .LVU2176
 10653 0126 00EB8803 		add	r3, r0, r8, lsl #2
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 10654              		.loc 1 176 7 is_stmt 1 view .LVU2177
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 10655              		.loc 1 176 11 is_stmt 0 view .LVU2178
 10656 012a 58BF     		it	pl
 10657 012c 5642     		rsbpl	r6, r2, #0
 10658              	.LVL373:
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 10659              		.loc 1 177 7 is_stmt 1 view .LVU2179
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 374


 10660 012e 002E     		cmp	r6, #0
 10661 0130 82DA     		bge	.L228
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  --_M_p;
 10662              		.loc 1 179 4 view .LVU2180
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  --_M_p;
 10663              		.loc 1 179 8 is_stmt 0 view .LVU2181
 10664 0132 2036     		adds	r6, r6, #32
 10665              	.LVL374:
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 10666              		.loc 1 180 4 is_stmt 1 view .LVU2182
 10667 0134 043B     		subs	r3, r3, #4
 10668 0136 7FE7     		b	.L228
 10669              	.LVL375:
 10670              	.L224:
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 10671              		.loc 1 180 4 is_stmt 0 view .LVU2183
 10672              	.LBE5691:
 10673              	.LBE5695:
 10674              	.LBE5701:
 10675              	.LBE5708:
 10676              	.LBE5719:
 10677              	.LBE5723:
 10678              	.LBE5741:
 10679              	.LBE5747:
 10680              	.LBE6107:
 10681              	.LBE6122:
 10682              	.LBE6135:
 10683              	.LBE6148:
 10684              	.LBE6162:
 10685              	.LBE6175:
 10686              	.LBB6176:
 10687              	.LBI6176:
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 10688              		.loc 8 829 7 is_stmt 1 view .LVU2184
 10689              	.LBB6177:
 10690              	.LBI6177:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 10691              		.loc 11 978 7 view .LVU2185
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 10692              		.loc 11 978 7 is_stmt 0 view .LVU2186
 10693              	.LBE6177:
 10694              	.LBE6176:
1198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 10695              		.loc 8 1198 21 view .LVU2187
 10696 0138 0A46     		mov	r2, r1
 10697 013a 2146     		mov	r1, r4
 10698              	.LVL376:
1198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 10699              		.loc 8 1198 21 view .LVU2188
 10700 013c FFF7FEFF 		bl	_ZNSt6vectorIN9Sequencer8SequenceESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_i
 10701              	.LVL377:
1199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 10702              		.loc 8 1199 7 view .LVU2189
 10703 0140 0AB0     		add	sp, sp, #40
 10704              		.cfi_remember_state
 10705              		.cfi_def_cfa_offset 32
 10706              		@ sp needed
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 375


 10707 0142 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 10708              	.LVL378:
 10709              	.L241:
 10710              		.cfi_restore_state
 10711              	.LBB6178:
 10712              	.LBB6163:
 10713              	.LBB6149:
 10714              	.LBB6136:
 10715              	.LBB6123:
 10716              	.LBB6108:
 10717              	.LBB6098:
 10718              	.LBB6091:
 10719              	.LBB6062:
 10720              	.LBB6047:
 10721              	.LBB5983:
 10722              	.LBB5984:
 10723              	.LBI5984:
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return _Bit_alloc_traits::allocate(_M_impl, _S_nword(__n)); }
 10724              		.loc 1 556 7 is_stmt 1 view .LVU2190
 10725              	.LBB5985:
 10726              	.LBI5985:
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return (__n + int(_S_word_bit) - 1) / int(_S_word_bit); }
 10727              		.loc 1 579 7 view .LVU2191
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return (__n + int(_S_word_bit) - 1) / int(_S_word_bit); }
 10728              		.loc 1 579 7 is_stmt 0 view .LVU2192
 10729              	.LBE5985:
 10730              	.LBB5987:
 10731              	.LBI5987:
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 10732              		.loc 6 459 7 is_stmt 1 view .LVU2193
 10733              	.LBB5988:
 10734              	.LBI5988:
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 10735              		.loc 5 103 7 view .LVU2194
 10736              	.LBE5988:
 10737              	.LBE5987:
 10738              	.LBB5993:
 10739              	.LBB5986:
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     };
 10740              		.loc 1 580 40 is_stmt 0 view .LVU2195
 10741 0146 06F11F09 		add	r9, r6, #31
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     };
 10742              		.loc 1 580 62 view .LVU2196
 10743 014a 4FEA591A 		lsr	r10, r9, #5
 10744              	.LVL379:
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     };
 10745              		.loc 1 580 62 view .LVU2197
 10746              	.LBE5986:
 10747              	.LBE5993:
 10748              	.LBE5984:
 10749              	.LBE5983:
 10750              	.LBE6047:
 10751              	.LBB6048:
 10752              	.LBB6036:
 10753              	.LBB6026:
 10754              	.LBB6018:
 10755              	.LBB6011:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 376


 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 10756              		.loc 1 175 19 view .LVU2198
 10757 014e 4645     		cmp	r6, r8
 10758 0150 A8BF     		it	ge
 10759 0152 B146     		movge	r9, r6
 10760              	.LBE6011:
 10761              	.LBE6018:
 10762              	.LBE6026:
 10763              	.LBE6036:
 10764              	.LBE6048:
 10765              	.LBB6049:
 10766              	.LBB6000:
 10767              	.LBB5996:
 10768              	.LBB5994:
 10769              	.LBB5991:
 10770              	.LBB5989:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 10771              		.loc 5 115 41 view .LVU2199
 10772 0154 4FEA8A0A 		lsl	r10, r10, #2
 10773              	.LVL380:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 10774              		.loc 5 115 41 view .LVU2200
 10775              	.LBE5989:
 10776              	.LBE5991:
 10777              	.LBE5994:
 10778              	.LBE5996:
 10779              	.LBE6000:
 10780              	.LBE6049:
 10781              	.LBB6050:
 10782              	.LBB6037:
 10783              	.LBB6027:
 10784              	.LBB6019:
 10785              	.LBB6012:
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 10786              		.loc 1 175 19 view .LVU2201
 10787 0158 4FEA6919 		asr	r9, r9, #5
 10788              	.LBE6012:
 10789              	.LBE6019:
 10790              	.LBE6027:
 10791              	.LBE6037:
 10792              	.LBE6050:
 10793              	.LBB6051:
 10794              	.LBB6001:
 10795              	.LBB5997:
 10796              	.LBB5995:
 10797              	.LBB5992:
 10798              	.LBB5990:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 10799              		.loc 5 115 41 view .LVU2202
 10800 015c 5046     		mov	r0, r10
 10801 015e FFF7FEFF 		bl	_Znwj
 10802              	.LVL381:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 10803              		.loc 5 115 41 view .LVU2203
 10804              	.LBE5990:
 10805              	.LBE5992:
 10806              	.LBE5995:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 377


 10807              	.LBE5997:
 10808              	.LBE6001:
 10809              	.LBE6051:
 10810              	.LBB6052:
 10811              	.LBB6038:
 10812              	.LBB6028:
 10813              	.LBB6020:
 10814              	.LBB6013:
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 10815              		.loc 1 176 11 view .LVU2204
 10816 0162 B8EB0602 		subs	r2, r8, r6
 10817 0166 06F01F06 		and	r6, r6, #31
 10818              	.LVL382:
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 10819              		.loc 1 176 11 view .LVU2205
 10820              	.LBE6013:
 10821              	.LBE6020:
 10822              	.LBE6028:
 10823              	.LBE6038:
 10824              	.LBE6052:
 10825              	.LBB6053:
 10826              	.LBB6002:
1148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    this->_M_impl._M_start = iterator(std::__addressof(*__q), 0);
 10827              		.loc 1 1148 44 view .LVU2206
 10828 016a 00EB0A03 		add	r3, r0, r10
 10829              	.LBE6002:
 10830              	.LBE6053:
 10831              	.LBB6054:
 10832              	.LBB6039:
 10833              	.LBB6029:
 10834              	.LBB6021:
 10835              	.LBB6014:
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 10836              		.loc 1 176 11 view .LVU2207
 10837 016e 02F01F02 		and	r2, r2, #31
 10838              	.LBE6014:
 10839              	.LBE6021:
 10840              	.LBE6029:
 10841              	.LBE6039:
 10842              	.LBE6054:
 10843              	.LBB6055:
 10844              	.LBB6003:
1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 10845              		.loc 1 1149 6 view .LVU2208
 10846 0172 C4F82C80 		str	r8, [r4, #44]
1148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    this->_M_impl._M_start = iterator(std::__addressof(*__q), 0);
 10847              		.loc 1 1148 38 view .LVU2209
 10848 0176 A363     		str	r3, [r4, #56]
 10849              	.LVL383:
 10850              	.LBB5998:
 10851              	.LBI5998:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 10852              		.loc 1 243 5 is_stmt 1 view .LVU2210
 10853              	.LBB5999:
 10854              	.LBI5999:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 10855              		.loc 1 148 5 view .LVU2211
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 378


 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 10856              		.loc 1 148 5 is_stmt 0 view .LVU2212
 10857              	.LBE5999:
 10858              	.LBE5998:
 10859              	.LBE6003:
 10860              	.LBE6055:
 10861              	.LBB6056:
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 10862              		.loc 1 303 5 is_stmt 1 view .LVU2213
 10863              	.LBB6040:
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __tmp += __n;
 10864              		.loc 1 305 7 view .LVU2214
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __tmp;
 10865              		.loc 1 306 7 view .LVU2215
 10866              	.LBB6030:
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 10867              		.loc 1 285 5 view .LVU2216
 10868              	.LBE6030:
 10869              	.LBE6040:
 10870              	.LBE6056:
 10871              	.LBE6062:
 10872              	.LBE6091:
 10873              	.LBE6098:
 10874              	.LBE6108:
 10875              	.LBE6123:
 10876              	.LBE6136:
 10877              	.LBE6149:
 10878              	.LBE6163:
 10879              	.LBE6178:
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 10880              		.loc 1 287 7 view .LVU2217
 10881              	.LBB6179:
 10882              	.LBB6164:
 10883              	.LBB6150:
 10884              	.LBB6137:
 10885              	.LBB6124:
 10886              	.LBB6109:
 10887              	.LBB6099:
 10888              	.LBB6092:
 10889              	.LBB6063:
 10890              	.LBB6057:
 10891              	.LBB6041:
 10892              	.LBB6031:
 10893              	.LBB6022:
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 10894              		.loc 1 172 5 view .LVU2218
 10895              	.LBB6015:
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_p += __n / int(_S_word_bit);
 10896              		.loc 1 174 7 view .LVU2219
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 10897              		.loc 1 175 7 view .LVU2220
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 10898              		.loc 1 175 12 is_stmt 0 view .LVU2221
 10899 0178 00EB8903 		add	r3, r0, r9, lsl #2
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 10900              		.loc 1 176 7 is_stmt 1 view .LVU2222
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 379


 10901              		.loc 1 176 11 is_stmt 0 view .LVU2223
 10902 017c 58BF     		it	pl
 10903 017e 5642     		rsbpl	r6, r2, #0
 10904              	.LVL384:
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 10905              		.loc 1 177 7 is_stmt 1 view .LVU2224
 10906              	.LBE6015:
 10907              	.LBE6022:
 10908              	.LBE6031:
 10909              	.LBE6041:
 10910              	.LBE6057:
 10911              	.LBB6058:
 10912              	.LBB6004:
1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 10913              		.loc 1 1149 6 is_stmt 0 view .LVU2225
 10914 0180 A062     		str	r0, [r4, #40]
 10915              	.LBE6004:
 10916              	.LBE6058:
 10917              	.LBB6059:
 10918              	.LBB6042:
 10919              	.LBB6032:
 10920              	.LBB6023:
 10921              	.LBB6016:
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 10922              		.loc 1 177 7 view .LVU2226
 10923 0182 4645     		cmp	r6, r8
 10924 0184 9BDA     		bge	.L236
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  --_M_p;
 10925              		.loc 1 179 4 is_stmt 1 view .LVU2227
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  --_M_p;
 10926              		.loc 1 179 8 is_stmt 0 view .LVU2228
 10927 0186 2036     		adds	r6, r6, #32
 10928              	.LVL385:
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 10929              		.loc 1 180 4 is_stmt 1 view .LVU2229
 10930 0188 043B     		subs	r3, r3, #4
 10931 018a 98E7     		b	.L236
 10932              	.LVL386:
 10933              	.L240:
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 10934              		.loc 1 180 4 is_stmt 0 view .LVU2230
 10935              	.LBE6016:
 10936              	.LBE6023:
 10937              	.LBE6032:
 10938              	.LBE6042:
 10939              	.LBE6059:
 10940              	.LBE6063:
 10941              	.LBE6092:
 10942              	.LBE6099:
 10943              	.LBE6109:
 10944              	.LBB6110:
 10945              	.LBB5919:
 10946              	.LBB5913:
 10947              	.LBB5888:
 10948              	.LBB5873:
 10949              	.LBB5809:
 10950              	.LBB5810:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 380


 10951              	.LBI5810:
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return _Bit_alloc_traits::allocate(_M_impl, _S_nword(__n)); }
 10952              		.loc 1 556 7 is_stmt 1 view .LVU2231
 10953              	.LBB5811:
 10954              	.LBI5811:
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return (__n + int(_S_word_bit) - 1) / int(_S_word_bit); }
 10955              		.loc 1 579 7 view .LVU2232
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { return (__n + int(_S_word_bit) - 1) / int(_S_word_bit); }
 10956              		.loc 1 579 7 is_stmt 0 view .LVU2233
 10957              	.LBE5811:
 10958              	.LBB5813:
 10959              	.LBI5813:
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 10960              		.loc 6 459 7 is_stmt 1 view .LVU2234
 10961              	.LBB5814:
 10962              	.LBI5814:
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 10963              		.loc 5 103 7 view .LVU2235
 10964              	.LBE5814:
 10965              	.LBE5813:
 10966              	.LBB5819:
 10967              	.LBB5812:
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     };
 10968              		.loc 1 580 40 is_stmt 0 view .LVU2236
 10969 018c 06F11F09 		add	r9, r6, #31
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     };
 10970              		.loc 1 580 62 view .LVU2237
 10971 0190 4FEA591A 		lsr	r10, r9, #5
 10972              	.LVL387:
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     };
 10973              		.loc 1 580 62 view .LVU2238
 10974              	.LBE5812:
 10975              	.LBE5819:
 10976              	.LBE5810:
 10977              	.LBE5809:
 10978              	.LBE5873:
 10979              	.LBB5874:
 10980              	.LBB5862:
 10981              	.LBB5852:
 10982              	.LBB5844:
 10983              	.LBB5837:
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 10984              		.loc 1 175 19 view .LVU2239
 10985 0194 4645     		cmp	r6, r8
 10986 0196 A8BF     		it	ge
 10987 0198 B146     		movge	r9, r6
 10988              	.LBE5837:
 10989              	.LBE5844:
 10990              	.LBE5852:
 10991              	.LBE5862:
 10992              	.LBE5874:
 10993              	.LBB5875:
 10994              	.LBB5826:
 10995              	.LBB5822:
 10996              	.LBB5820:
 10997              	.LBB5817:
 10998              	.LBB5815:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 381


 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 10999              		.loc 5 115 41 view .LVU2240
 11000 019a 4FEA8A0A 		lsl	r10, r10, #2
 11001              	.LVL388:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 11002              		.loc 5 115 41 view .LVU2241
 11003              	.LBE5815:
 11004              	.LBE5817:
 11005              	.LBE5820:
 11006              	.LBE5822:
 11007              	.LBE5826:
 11008              	.LBE5875:
 11009              	.LBB5876:
 11010              	.LBB5863:
 11011              	.LBB5853:
 11012              	.LBB5845:
 11013              	.LBB5838:
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 11014              		.loc 1 175 19 view .LVU2242
 11015 019e 4FEA6919 		asr	r9, r9, #5
 11016              	.LBE5838:
 11017              	.LBE5845:
 11018              	.LBE5853:
 11019              	.LBE5863:
 11020              	.LBE5876:
 11021              	.LBB5877:
 11022              	.LBB5827:
 11023              	.LBB5823:
 11024              	.LBB5821:
 11025              	.LBB5818:
 11026              	.LBB5816:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 11027              		.loc 5 115 41 view .LVU2243
 11028 01a2 5046     		mov	r0, r10
 11029 01a4 FFF7FEFF 		bl	_Znwj
 11030              	.LVL389:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 11031              		.loc 5 115 41 view .LVU2244
 11032              	.LBE5816:
 11033              	.LBE5818:
 11034              	.LBE5821:
 11035              	.LBE5823:
 11036              	.LBE5827:
 11037              	.LBE5877:
 11038              	.LBB5878:
 11039              	.LBB5864:
 11040              	.LBB5854:
 11041              	.LBB5846:
 11042              	.LBB5839:
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 11043              		.loc 1 176 11 view .LVU2245
 11044 01a8 B8EB0602 		subs	r2, r8, r6
 11045 01ac 06F01F06 		and	r6, r6, #31
 11046              	.LVL390:
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 11047              		.loc 1 176 11 view .LVU2246
 11048              	.LBE5839:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 382


 11049              	.LBE5846:
 11050              	.LBE5854:
 11051              	.LBE5864:
 11052              	.LBE5878:
 11053              	.LBB5879:
 11054              	.LBB5828:
1148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    this->_M_impl._M_start = iterator(std::__addressof(*__q), 0);
 11055              		.loc 1 1148 44 view .LVU2247
 11056 01b0 00EB0A03 		add	r3, r0, r10
 11057              	.LBE5828:
 11058              	.LBE5879:
 11059              	.LBB5880:
 11060              	.LBB5865:
 11061              	.LBB5855:
 11062              	.LBB5847:
 11063              	.LBB5840:
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 11064              		.loc 1 176 11 view .LVU2248
 11065 01b4 02F01F02 		and	r2, r2, #31
 11066              	.LBE5840:
 11067              	.LBE5847:
 11068              	.LBE5855:
 11069              	.LBE5865:
 11070              	.LBE5880:
 11071              	.LBB5881:
 11072              	.LBB5829:
1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 11073              		.loc 1 1149 6 view .LVU2249
 11074 01b8 C4F81880 		str	r8, [r4, #24]
1148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    this->_M_impl._M_start = iterator(std::__addressof(*__q), 0);
 11075              		.loc 1 1148 38 view .LVU2250
 11076 01bc 6362     		str	r3, [r4, #36]
 11077              	.LVL391:
 11078              	.LBB5824:
 11079              	.LBI5824:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _Bit_iterator_base(__x, __y) { }
 11080              		.loc 1 243 5 is_stmt 1 view .LVU2251
 11081              	.LBB5825:
 11082              	.LBI5825:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 11083              		.loc 1 148 5 view .LVU2252
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 11084              		.loc 1 148 5 is_stmt 0 view .LVU2253
 11085              	.LBE5825:
 11086              	.LBE5824:
 11087              	.LBE5829:
 11088              	.LBE5881:
 11089              	.LBB5882:
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 11090              		.loc 1 303 5 is_stmt 1 view .LVU2254
 11091              	.LBB5866:
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __tmp += __n;
 11092              		.loc 1 305 7 view .LVU2255
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return __tmp;
 11093              		.loc 1 306 7 view .LVU2256
 11094              	.LBB5856:
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 383


 11095              		.loc 1 285 5 view .LVU2257
 11096              	.LBE5856:
 11097              	.LBE5866:
 11098              	.LBE5882:
 11099              	.LBE5888:
 11100              	.LBE5913:
 11101              	.LBE5919:
 11102              	.LBE6110:
 11103              	.LBE6124:
 11104              	.LBE6137:
 11105              	.LBE6150:
 11106              	.LBE6164:
 11107              	.LBE6179:
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       return *this;
 11108              		.loc 1 287 7 view .LVU2258
 11109              	.LBB6180:
 11110              	.LBB6165:
 11111              	.LBB6151:
 11112              	.LBB6138:
 11113              	.LBB6125:
 11114              	.LBB6111:
 11115              	.LBB5920:
 11116              	.LBB5914:
 11117              	.LBB5889:
 11118              	.LBB5883:
 11119              	.LBB5867:
 11120              	.LBB5857:
 11121              	.LBB5848:
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     {
 11122              		.loc 1 172 5 view .LVU2259
 11123              	.LBB5841:
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       _M_p += __n / int(_S_word_bit);
 11124              		.loc 1 174 7 view .LVU2260
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 11125              		.loc 1 175 7 view .LVU2261
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       __n = __n % int(_S_word_bit);
 11126              		.loc 1 175 12 is_stmt 0 view .LVU2262
 11127 01be 00EB8903 		add	r3, r0, r9, lsl #2
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 11128              		.loc 1 176 7 is_stmt 1 view .LVU2263
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       if (__n < 0)
 11129              		.loc 1 176 11 is_stmt 0 view .LVU2264
 11130 01c2 58BF     		it	pl
 11131 01c4 5642     		rsbpl	r6, r2, #0
 11132              	.LVL392:
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 11133              		.loc 1 177 7 is_stmt 1 view .LVU2265
 11134              	.LBE5841:
 11135              	.LBE5848:
 11136              	.LBE5857:
 11137              	.LBE5867:
 11138              	.LBE5883:
 11139              	.LBB5884:
 11140              	.LBB5830:
1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  }
 11141              		.loc 1 1149 6 is_stmt 0 view .LVU2266
 11142 01c6 6061     		str	r0, [r4, #20]
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 384


 11143              	.LBE5830:
 11144              	.LBE5884:
 11145              	.LBB5885:
 11146              	.LBB5868:
 11147              	.LBB5858:
 11148              	.LBB5849:
 11149              	.LBB5842:
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 11150              		.loc 1 177 7 view .LVU2267
 11151 01c8 4645     		cmp	r6, r8
 11152 01ca BFF657AF 		bge	.L232
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  --_M_p;
 11153              		.loc 1 179 4 is_stmt 1 view .LVU2268
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  --_M_p;
 11154              		.loc 1 179 8 is_stmt 0 view .LVU2269
 11155 01ce 2036     		adds	r6, r6, #32
 11156              	.LVL393:
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	}
 11157              		.loc 1 180 4 is_stmt 1 view .LVU2270
 11158 01d0 043B     		subs	r3, r3, #4
 11159 01d2 53E7     		b	.L232
 11160              	.LBE5842:
 11161              	.LBE5849:
 11162              	.LBE5858:
 11163              	.LBE5868:
 11164              	.LBE5885:
 11165              	.LBE5889:
 11166              	.LBE5914:
 11167              	.LBE5920:
 11168              	.LBE6111:
 11169              	.LBE6125:
 11170              	.LBE6138:
 11171              	.LBE6151:
 11172              	.LBE6165:
 11173              	.LBE6180:
 11174              		.cfi_endproc
 11175              	.LFE3961:
 11177              		.section	.text._ZN9Sequencer14init_sequencesEv,"ax",%progbits
 11178              		.align	1
 11179              		.p2align 2,,3
 11180              		.global	_ZN9Sequencer14init_sequencesEv
 11181              		.syntax unified
 11182              		.thumb
 11183              		.thumb_func
 11184              		.fpu fpv5-d16
 11186              	_ZN9Sequencer14init_sequencesEv:
 11187              	.LVL394:
 11188              	.LFB3600:
  59:Sequencer.cpp **** 
  60:Sequencer.cpp **** void Sequencer::init_sequences() {
 11189              		.loc 7 60 34 view -0
 11190              		.cfi_startproc
 11191              		@ args = 0, pretend = 0, frame = 152
 11192              		@ frame_needed = 0, uses_anonymous_args = 0
  61:Sequencer.cpp ****     Sequence seq;
 11193              		.loc 7 61 5 view .LVU2272
  60:Sequencer.cpp ****     Sequence seq;
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 385


 11194              		.loc 7 60 34 is_stmt 0 view .LVU2273
 11195 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 11196              		.cfi_def_cfa_offset 36
 11197              		.cfi_offset 4, -36
 11198              		.cfi_offset 5, -32
 11199              		.cfi_offset 6, -28
 11200              		.cfi_offset 7, -24
 11201              		.cfi_offset 8, -20
 11202              		.cfi_offset 9, -16
 11203              		.cfi_offset 10, -12
 11204              		.cfi_offset 11, -8
 11205              		.cfi_offset 14, -4
 11206              	.LBB6493:
 11207              	.LBB6494:
 11208              	.LBB6495:
 11209              	.LBB6496:
 11210              	.LBB6497:
 11211              	.LBB6498:
 11212              	.LBB6499:
 11213              	.LBB6500:
 11214              	.LBB6501:
 11215              	.LBB6502:
 11216              	.LBB6503:
 11217              	.LBB6504:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 11218              		.loc 1 149 31 view .LVU2274
 11219 0004 0025     		movs	r5, #0
 11220              	.LBE6504:
 11221              	.LBE6503:
 11222              	.LBE6502:
 11223              	.LBE6501:
 11224              	.LBE6500:
 11225              	.LBE6499:
 11226              	.LBE6498:
 11227              	.LBE6497:
 11228              	.LBE6496:
 11229              	.LBE6495:
 11230              	.LBE6494:
 11231              	.LBE6493:
  60:Sequencer.cpp ****     Sequence seq;
 11232              		.loc 7 60 34 view .LVU2275
 11233 0006 A7B0     		sub	sp, sp, #156
 11234              		.cfi_def_cfa_offset 192
 11235              	.LVL395:
 11236              	.LBB6568:
 11237              	.LBI6493:
 11238              		.loc 13 32 12 is_stmt 1 view .LVU2276
 11239              	.LBB6565:
 11240              	.LBI6494:
  26:Sequencer.h   ****         std::vector<bool> kick_steps;
 11241              		.loc 13 26 12 view .LVU2277
 11242              	.LBB6527:
 11243              	.LBI6495:
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 11244              		.loc 1 651 7 view .LVU2278
 11245              	.LBB6525:
 11246              	.LBI6496:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 386


 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 11247              		.loc 1 537 7 view .LVU2279
 11248              	.LBB6523:
 11249              	.LBI6497:
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 		is_nothrow_default_constructible<_Bit_alloc_type>::value)
 11250              		.loc 1 499 4 view .LVU2280
 11251              	.LBB6519:
 11252              	.LBI6519:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 11253              		.loc 15 144 7 view .LVU2281
 11254              	.LBB6520:
 11255              	.LBI6520:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11256              		.loc 5 79 7 view .LVU2282
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11257              		.loc 5 79 7 is_stmt 0 view .LVU2283
 11258              	.LBE6520:
 11259              	.LBE6519:
 11260              	.LBB6521:
 11261              	.LBI6498:
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 11262              		.loc 1 467 2 is_stmt 1 view .LVU2284
 11263              	.LBB6517:
 11264              	.LBB6515:
 11265              	.LBB6509:
 11266              	.LBI6501:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 11267              		.loc 1 241 5 view .LVU2285
 11268              	.LBB6507:
 11269              	.LBI6502:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 11270              		.loc 1 148 5 view .LVU2286
 11271              	.LBE6507:
 11272              	.LBE6509:
 11273              	.LBE6515:
 11274              	.LBE6517:
 11275              	.LBE6521:
 11276              	.LBE6523:
 11277              	.LBE6525:
 11278              	.LBE6527:
 11279              	.LBE6565:
 11280              	.LBE6568:
  62:Sequencer.cpp ****     DrumSequence drum_seq;
  63:Sequencer.cpp **** 
  64:Sequencer.cpp ****     // ROCK 1 
  65:Sequencer.cpp ****     drum_seq.kick_steps  = {true, false, false, false, true, false, false, false, true, false, fals
 11281              		.loc 7 65 26 is_stmt 0 view .LVU2287
 11282 0008 AE4E     		ldr	r6, .L268
  66:Sequencer.cpp ****     drum_seq.snare_steps = {false, false, false, false, true, false, true, false, false, false, fal
  67:Sequencer.cpp ****     drum_seq.hat_steps   = {true, false, true, false, true, false, true, false, true, false, true, 
  68:Sequencer.cpp **** 
  69:Sequencer.cpp ****     seq.drum_sequence = drum_seq;
  70:Sequencer.cpp ****     seq.chord_sequence = {true, true, true, false, true, false, true, false, true, true, true, fals
  71:Sequencer.cpp ****     sequences.push_back(seq);
 11283              		.loc 7 71 24 view .LVU2288
 11284 000a 00F10C0A 		add	r10, r0, #12
  65:Sequencer.cpp ****     drum_seq.snare_steps = {false, false, false, false, true, false, true, false, false, false, fal
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 387


 11285              		.loc 7 65 26 view .LVU2289
 11286 000e 6C46     		mov	r4, sp
 11287              	.LBB6569:
 11288              	.LBB6566:
 11289              	.LBB6528:
 11290              	.LBB6529:
 11291              	.LBB6530:
 11292              	.LBB6531:
 11293              	.LBB6532:
 11294              	.LBB6533:
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ }
 11295              		.loc 1 468 47 view .LVU2290
 11296 0010 2195     		str	r5, [sp, #132]
 11297              	.LBE6533:
 11298              	.LBE6532:
 11299              	.LBE6531:
 11300              	.LBE6530:
 11301              	.LBE6529:
 11302              	.LBE6528:
 11303              	.LBE6566:
 11304              	.LBE6569:
 11305              	.LBB6570:
 11306              	.LBB6571:
 11307              	.LBB6572:
 11308              	.LBB6573:
 11309              	.LBB6574:
 11310              	.LBB6575:
 11311              	.LBB6576:
 11312 0012 1295     		str	r5, [sp, #72]
 11313              	.LBE6576:
 11314              	.LBE6575:
 11315              	.LBE6574:
 11316              	.LBE6573:
 11317              	.LBE6572:
 11318              	.LBE6571:
 11319              	.LBE6570:
  66:Sequencer.cpp ****     drum_seq.snare_steps = {false, false, false, false, true, false, true, false, false, false, fal
 11320              		.loc 7 66 26 view .LVU2291
 11321 0014 4FF00108 		mov	r8, #1
  70:Sequencer.cpp ****     sequences.push_back(seq);
 11322              		.loc 7 70 24 view .LVU2292
 11323 0018 22AF     		add	r7, sp, #136
  72:Sequencer.cpp **** 
  73:Sequencer.cpp ****     
  74:Sequencer.cpp ****     // LATIN
  75:Sequencer.cpp ****     drum_seq.kick_steps  = {true, false, false, false, true, false, false, false, true, true, false
 11324              		.loc 7 75 26 view .LVU2293
 11325 001a 06F1300B 		add	fp, r6, #48
  76:Sequencer.cpp ****     drum_seq.snare_steps = {false, false, false, true, false, false, true, false, false, false, fal
  77:Sequencer.cpp ****     drum_seq.hat_steps   = {true, false, true, false, true, false, true, false, true, true, true, f
  78:Sequencer.cpp **** 
  79:Sequencer.cpp ****     seq.drum_sequence = drum_seq;
  80:Sequencer.cpp ****     //seq.chord_sequence = {false, false, false, true, false, false, true, true, false, false, fals
  81:Sequencer.cpp ****     seq.chord_sequence = {false, false, false, true, false, false, true, true, false, false, false,
  82:Sequencer.cpp ****     sequences.push_back(seq);
  83:Sequencer.cpp **** 
  84:Sequencer.cpp ****     // DISCO
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 388


  85:Sequencer.cpp ****     drum_seq.kick_steps  = {true, false, false, false, true, false, false, false, true, true, false
  86:Sequencer.cpp ****     drum_seq.snare_steps = {false, false, false, false, true, false, true, false, false, false, fal
  87:Sequencer.cpp ****     drum_seq.hat_steps   = {true, true, true, true, true, true, true, true, true, true, true, true,
  88:Sequencer.cpp **** 
  89:Sequencer.cpp ****     seq.drum_sequence = drum_seq;
  90:Sequencer.cpp ****     seq.chord_sequence = {false, false, true, false, true, false, false, false, true, false, false,
  91:Sequencer.cpp ****     sequences.push_back(seq);
  92:Sequencer.cpp **** 
  93:Sequencer.cpp ****     // TANGO
  94:Sequencer.cpp ****     drum_seq.kick_steps  = {true, false, false, false, true, false, false, false, true, false, fals
 11326              		.loc 7 94 26 view .LVU2294
 11327 001e 06F19009 		add	r9, r6, #144
 11328              	.LBB6623:
 11329              	.LBB6567:
 11330              	.LBB6549:
 11331              	.LBB6526:
 11332              	.LBB6524:
 11333              	.LBB6522:
 11334              	.LBB6518:
 11335              	.LBB6516:
 11336              	.LBB6510:
 11337              	.LBB6508:
 11338              	.LBB6506:
 11339              	.LBB6505:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 11340              		.loc 1 149 31 view .LVU2295
 11341 0022 CDE91355 		strd	r5, r5, [sp, #76]
 11342              	.LVL396:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 11343              		.loc 1 149 31 view .LVU2296
 11344              	.LBE6505:
 11345              	.LBE6506:
 11346              	.LBE6508:
 11347              	.LBE6510:
 11348              	.LBB6511:
 11349              	.LBI6511:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 11350              		.loc 1 241 5 is_stmt 1 view .LVU2297
 11351              	.LBB6512:
 11352              	.LBI6512:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 11353              		.loc 1 148 5 view .LVU2298
 11354              	.LBB6513:
 11355              	.LBB6514:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 11356              		.loc 1 149 31 is_stmt 0 view .LVU2299
 11357 0026 CDE91555 		strd	r5, r5, [sp, #84]
 11358              	.LVL397:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 11359              		.loc 1 149 31 view .LVU2300
 11360              	.LBE6514:
 11361              	.LBE6513:
 11362              	.LBE6512:
 11363              	.LBE6511:
 11364              	.LBE6516:
 11365              	.LBE6518:
 11366              	.LBE6522:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 389


 11367              	.LBE6524:
 11368              	.LBE6526:
 11369              	.LBE6549:
 11370              	.LBB6550:
 11371              	.LBB6551:
 11372              	.LBB6552:
 11373              	.LBB6553:
 11374              	.LBB6554:
 11375              	.LBB6555:
 11376              	.LBB6556:
 11377              	.LBB6557:
 11378              	.LBB6558:
 11379              	.LBB6559:
 11380 002a CDE91755 		strd	r5, r5, [sp, #92]
 11381              	.LBE6559:
 11382              	.LBE6558:
 11383              	.LBE6557:
 11384              	.LBE6556:
 11385              	.LBB6560:
 11386              	.LBB6561:
 11387              	.LBB6562:
 11388              	.LBB6563:
 11389 002e CDE91955 		strd	r5, r5, [sp, #100]
 11390              	.LBE6563:
 11391              	.LBE6562:
 11392              	.LBE6561:
 11393              	.LBE6560:
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ }
 11394              		.loc 1 468 47 view .LVU2301
 11395 0032 CDE91B55 		strd	r5, r5, [sp, #108]
 11396              	.LVL398:
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ }
 11397              		.loc 1 468 47 view .LVU2302
 11398              	.LBE6555:
 11399              	.LBE6554:
 11400              	.LBE6553:
 11401              	.LBE6552:
 11402              	.LBE6551:
 11403              	.LBE6550:
 11404              	.LBB6564:
 11405              	.LBI6528:
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 11406              		.loc 1 651 7 is_stmt 1 view .LVU2303
 11407              	.LBB6548:
 11408              	.LBI6529:
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 11409              		.loc 1 537 7 view .LVU2304
 11410              	.LBB6547:
 11411              	.LBI6530:
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 		is_nothrow_default_constructible<_Bit_alloc_type>::value)
 11412              		.loc 1 499 4 view .LVU2305
 11413              	.LBB6544:
 11414              	.LBI6544:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 11415              		.loc 15 144 7 view .LVU2306
 11416              	.LBB6545:
 11417              	.LBI6545:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 390


  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11418              		.loc 5 79 7 view .LVU2307
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11419              		.loc 5 79 7 is_stmt 0 view .LVU2308
 11420              	.LBE6545:
 11421              	.LBE6544:
 11422              	.LBB6546:
 11423              	.LBI6531:
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 11424              		.loc 1 467 2 is_stmt 1 view .LVU2309
 11425              	.LBB6543:
 11426              	.LBB6542:
 11427              	.LBB6534:
 11428              	.LBI6534:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 11429              		.loc 1 241 5 view .LVU2310
 11430              	.LBB6535:
 11431              	.LBI6535:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 11432              		.loc 1 148 5 view .LVU2311
 11433              	.LBB6536:
 11434              	.LBB6537:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 11435              		.loc 1 149 31 is_stmt 0 view .LVU2312
 11436 0036 CDE91D55 		strd	r5, r5, [sp, #116]
 11437              	.LVL399:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 11438              		.loc 1 149 31 view .LVU2313
 11439              	.LBE6537:
 11440              	.LBE6536:
 11441              	.LBE6535:
 11442              	.LBE6534:
 11443              	.LBB6538:
 11444              	.LBI6538:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 11445              		.loc 1 241 5 is_stmt 1 view .LVU2314
 11446              	.LBB6539:
 11447              	.LBI6539:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 11448              		.loc 1 148 5 view .LVU2315
 11449              	.LBB6540:
 11450              	.LBB6541:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 11451              		.loc 1 149 31 is_stmt 0 view .LVU2316
 11452 003a CDE91F55 		strd	r5, r5, [sp, #124]
 11453              	.LVL400:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 11454              		.loc 1 149 31 view .LVU2317
 11455              	.LBE6541:
 11456              	.LBE6540:
 11457              	.LBE6539:
 11458              	.LBE6538:
 11459              	.LBE6542:
 11460              	.LBE6543:
 11461              	.LBE6546:
 11462              	.LBE6547:
 11463              	.LBE6548:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 391


 11464              	.LBE6564:
 11465              	.LBE6567:
 11466              	.LBE6623:
  62:Sequencer.cpp **** 
 11467              		.loc 7 62 5 is_stmt 1 view .LVU2318
 11468              	.LBB6624:
 11469              	.LBI6570:
  26:Sequencer.h   ****         std::vector<bool> kick_steps;
 11470              		.loc 13 26 12 view .LVU2319
 11471              	.LBB6592:
 11472              	.LBI6592:
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 11473              		.loc 1 651 7 view .LVU2320
 11474              	.LBB6593:
 11475              	.LBI6593:
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 11476              		.loc 1 537 7 view .LVU2321
 11477              	.LBB6594:
 11478              	.LBI6594:
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 		is_nothrow_default_constructible<_Bit_alloc_type>::value)
 11479              		.loc 1 499 4 view .LVU2322
 11480              	.LBB6595:
 11481              	.LBI6595:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 11482              		.loc 15 144 7 view .LVU2323
 11483              	.LBB6596:
 11484              	.LBI6596:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11485              		.loc 5 79 7 view .LVU2324
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11486              		.loc 5 79 7 is_stmt 0 view .LVU2325
 11487              	.LBE6596:
 11488              	.LBE6595:
 11489              	.LBB6597:
 11490              	.LBI6597:
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 11491              		.loc 1 467 2 is_stmt 1 view .LVU2326
 11492              	.LBB6598:
 11493              	.LBB6599:
 11494              	.LBB6600:
 11495              	.LBI6600:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 11496              		.loc 1 241 5 view .LVU2327
 11497              	.LBB6601:
 11498              	.LBI6601:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 11499              		.loc 1 148 5 view .LVU2328
 11500              	.LBB6602:
 11501              	.LBB6603:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 11502              		.loc 1 149 31 is_stmt 0 view .LVU2329
 11503 003e CDE90455 		strd	r5, r5, [sp, #16]
 11504              	.LVL401:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 11505              		.loc 1 149 31 view .LVU2330
 11506              	.LBE6603:
 11507              	.LBE6602:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 392


 11508              	.LBE6601:
 11509              	.LBE6600:
 11510              	.LBB6604:
 11511              	.LBI6604:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 11512              		.loc 1 241 5 is_stmt 1 view .LVU2331
 11513              	.LBB6605:
 11514              	.LBI6605:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 11515              		.loc 1 148 5 view .LVU2332
 11516              	.LBB6606:
 11517              	.LBB6607:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 11518              		.loc 1 149 31 is_stmt 0 view .LVU2333
 11519 0042 CDE90655 		strd	r5, r5, [sp, #24]
 11520              	.LVL402:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 11521              		.loc 1 149 31 view .LVU2334
 11522              	.LBE6607:
 11523              	.LBE6606:
 11524              	.LBE6605:
 11525              	.LBE6604:
 11526              	.LBE6599:
 11527              	.LBE6598:
 11528              	.LBE6597:
 11529              	.LBE6594:
 11530              	.LBE6593:
 11531              	.LBE6592:
 11532              	.LBB6608:
 11533              	.LBB6609:
 11534              	.LBB6610:
 11535              	.LBB6611:
 11536              	.LBB6612:
 11537              	.LBB6613:
 11538              	.LBB6614:
 11539              	.LBB6615:
 11540              	.LBB6616:
 11541              	.LBB6617:
 11542 0046 CDE90855 		strd	r5, r5, [sp, #32]
 11543              	.LBE6617:
 11544              	.LBE6616:
 11545              	.LBE6615:
 11546              	.LBE6614:
 11547              	.LBB6618:
 11548              	.LBB6619:
 11549              	.LBB6620:
 11550              	.LBB6621:
 11551 004a CDE90A55 		strd	r5, r5, [sp, #40]
 11552              	.LBE6621:
 11553              	.LBE6620:
 11554              	.LBE6619:
 11555              	.LBE6618:
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ }
 11556              		.loc 1 468 47 view .LVU2335
 11557 004e CDE90C55 		strd	r5, r5, [sp, #48]
 11558              	.LVL403:
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 393


 11559              		.loc 1 468 47 view .LVU2336
 11560              	.LBE6613:
 11561              	.LBE6612:
 11562              	.LBE6611:
 11563              	.LBE6610:
 11564              	.LBE6609:
 11565              	.LBE6608:
 11566              	.LBB6622:
 11567              	.LBI6571:
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 11568              		.loc 1 651 7 is_stmt 1 view .LVU2337
 11569              	.LBB6591:
 11570              	.LBI6572:
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 11571              		.loc 1 537 7 view .LVU2338
 11572              	.LBB6590:
 11573              	.LBI6573:
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 		is_nothrow_default_constructible<_Bit_alloc_type>::value)
 11574              		.loc 1 499 4 view .LVU2339
 11575              	.LBB6587:
 11576              	.LBI6587:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 11577              		.loc 15 144 7 view .LVU2340
 11578              	.LBB6588:
 11579              	.LBI6588:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11580              		.loc 5 79 7 view .LVU2341
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11581              		.loc 5 79 7 is_stmt 0 view .LVU2342
 11582              	.LBE6588:
 11583              	.LBE6587:
 11584              	.LBB6589:
 11585              	.LBI6574:
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 11586              		.loc 1 467 2 is_stmt 1 view .LVU2343
 11587              	.LBB6586:
 11588              	.LBB6585:
 11589              	.LBB6577:
 11590              	.LBI6577:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 11591              		.loc 1 241 5 view .LVU2344
 11592              	.LBB6578:
 11593              	.LBI6578:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 11594              		.loc 1 148 5 view .LVU2345
 11595              	.LBB6579:
 11596              	.LBB6580:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 11597              		.loc 1 149 31 is_stmt 0 view .LVU2346
 11598 0052 CDE90E55 		strd	r5, r5, [sp, #56]
 11599              	.LVL404:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 11600              		.loc 1 149 31 view .LVU2347
 11601              	.LBE6580:
 11602              	.LBE6579:
 11603              	.LBE6578:
 11604              	.LBE6577:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 394


 11605              	.LBB6581:
 11606              	.LBI6581:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 11607              		.loc 1 241 5 is_stmt 1 view .LVU2348
 11608              	.LBB6582:
 11609              	.LBI6582:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 11610              		.loc 1 148 5 view .LVU2349
 11611              	.LBB6583:
 11612              	.LBB6584:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 11613              		.loc 1 149 31 is_stmt 0 view .LVU2350
 11614 0056 CDE91055 		strd	r5, r5, [sp, #64]
 11615              	.LVL405:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 11616              		.loc 1 149 31 view .LVU2351
 11617              	.LBE6584:
 11618              	.LBE6583:
 11619              	.LBE6582:
 11620              	.LBE6581:
 11621              	.LBE6585:
 11622              	.LBE6586:
 11623              	.LBE6589:
 11624              	.LBE6590:
 11625              	.LBE6591:
 11626              	.LBE6622:
 11627              	.LBE6624:
  65:Sequencer.cpp ****     drum_seq.snare_steps = {false, false, false, false, true, false, true, false, false, false, fal
 11628              		.loc 7 65 5 is_stmt 1 view .LVU2352
  65:Sequencer.cpp ****     drum_seq.snare_steps = {false, false, false, false, true, false, true, false, false, false, fal
 11629              		.loc 7 65 26 is_stmt 0 view .LVU2353
 11630 005a 96E80F00 		ldm	r6, {r0, r1, r2, r3}
 11631              	.LVL406:
  65:Sequencer.cpp ****     drum_seq.snare_steps = {false, false, false, false, true, false, true, false, false, false, fal
 11632              		.loc 7 65 26 view .LVU2354
 11633 005e 84E80F00 		stm	r4, {r0, r1, r2, r3}
 11634              	.LVL407:
 11635              	.LBB6625:
 11636              	.LBI6625:
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 11637              		.loc 1 796 7 is_stmt 1 view .LVU2355
 11638              	.LBB6626:
 11639              	.LBI6626:
 11640              		.file 17 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\initializer_list
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // std::initializer_list support -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // Copyright (C) 2008-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // This file is part of GCC.
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** //
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // GCC is free software; you can redistribute it and/or modify
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // it under the terms of the GNU General Public License as published by
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // the Free Software Foundation; either version 3, or (at your option)
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // any later version.
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** //
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // GCC is distributed in the hope that it will be useful,
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 395


  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // GNU General Public License for more details.
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** //
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // Under Section 7 of GPL version 3, you are granted additional
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // permissions described in the GCC Runtime Library Exception, version
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // 3.1, as published by the Free Software Foundation.
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // You should have received a copy of the GNU General Public License and
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // a copy of the GCC Runtime Library Exception along with this program;
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // <http://www.gnu.org/licenses/>.
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** /** @file initializer_list
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****  *  This is a Standard C++ Library header.
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****  */
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** #ifndef _INITIALIZER_LIST
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** #define _INITIALIZER_LIST
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** #pragma GCC system_header
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** #if __cplusplus < 201103L
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** # include <bits/c++0x_warning.h>
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** #else // C++0x
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** #pragma GCC visibility push(default)
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** #include <bits/c++config.h>
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** namespace std
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** {
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****   /// initializer_list
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****   template<class _E>
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****     class initializer_list
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****     {
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****     public:
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef _E 		value_type;
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef const _E& 	reference;
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef const _E& 	const_reference;
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef size_t 		size_type;
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef const _E* 	iterator;
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef const _E* 	const_iterator;
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****     private:
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       iterator			_M_array;
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       size_type			_M_len;
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       // The compiler can call a private constructor.
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       constexpr initializer_list(const_iterator __a, size_type __l)
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       : _M_array(__a), _M_len(__l) { }
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****     public:
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       constexpr initializer_list() noexcept
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       : _M_array(0), _M_len(0) { }
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       // Number of elements.
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       constexpr size_type
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 396


  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       size() const noexcept { return _M_len; }
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       // First element.
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       constexpr const_iterator
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       begin() const noexcept { return _M_array; }
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       // One past the last element.
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       constexpr const_iterator
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       end() const noexcept { return begin() + size(); }
 11641              		.loc 17 79 7 view .LVU2356
 11642              		.loc 17 79 7 is_stmt 0 view .LVU2357
 11643              	.LBE6626:
 11644              	.LBB6627:
 11645              	.LBI6627:
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ _M_assign_aux(__first, __last, std::__iterator_category(__first)); }
 11646              		.loc 1 815 2 is_stmt 1 view .LVU2358
 11647              	.LBB6628:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 11648              		.loc 1 816 17 is_stmt 0 view .LVU2359
 11649 0062 04AA     		add	r2, sp, #16
 11650              	.LVL408:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 11651              		.loc 1 816 17 view .LVU2360
 11652 0064 2146     		mov	r1, r4
 11653 0066 1046     		mov	r0, r2
 11654 0068 FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEE13_M_assign_auxIPKbEEvT_S5_St20forward_iterator_tag.isra.0
 11655              	.LVL409:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 11656              		.loc 1 816 17 view .LVU2361
 11657              	.LBE6628:
 11658              	.LBE6627:
 11659              	.LBE6625:
  66:Sequencer.cpp ****     drum_seq.hat_steps   = {true, false, true, false, true, false, true, false, true, false, true, 
 11660              		.loc 7 66 5 is_stmt 1 view .LVU2362
 11661              	.LBB6629:
 11662              	.LBB6630:
 11663              	.LBB6631:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 11664              		.loc 1 816 17 is_stmt 0 view .LVU2363
 11665 006c 04AA     		add	r2, sp, #16
 11666              	.LVL410:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 11667              		.loc 1 816 17 view .LVU2364
 11668 006e 2146     		mov	r1, r4
 11669 0070 0EA8     		add	r0, sp, #56
 11670              	.LVL411:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 11671              		.loc 1 816 17 view .LVU2365
 11672              	.LBE6631:
 11673              	.LBE6630:
 11674              	.LBE6629:
  66:Sequencer.cpp ****     drum_seq.hat_steps   = {true, false, true, false, true, false, true, false, true, false, true, 
 11675              		.loc 7 66 26 view .LVU2366
 11676 0072 6560     		str	r5, [r4, #4]
 11677 0074 E560     		str	r5, [r4, #12]
 11678 0076 0095     		str	r5, [sp]
 11679 0078 A560     		str	r5, [r4, #8]
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 397


 11680 007a 8DF80480 		strb	r8, [sp, #4]
 11681 007e 8DF80680 		strb	r8, [sp, #6]
 11682 0082 8DF80C80 		strb	r8, [sp, #12]
 11683              	.LVL412:
 11684              	.LBB6635:
 11685              	.LBI6629:
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 11686              		.loc 1 796 7 is_stmt 1 view .LVU2367
 11687              	.LBB6633:
 11688              	.LBI6633:
 11689              		.loc 17 79 7 view .LVU2368
 11690              		.loc 17 79 7 is_stmt 0 view .LVU2369
 11691              	.LBE6633:
 11692              	.LBB6634:
 11693              	.LBI6630:
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ _M_assign_aux(__first, __last, std::__iterator_category(__first)); }
 11694              		.loc 1 815 2 is_stmt 1 view .LVU2370
 11695              	.LBB6632:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 11696              		.loc 1 816 17 is_stmt 0 view .LVU2371
 11697 0086 FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEE13_M_assign_auxIPKbEEvT_S5_St20forward_iterator_tag.isra.0
 11698              	.LVL413:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 11699              		.loc 1 816 17 view .LVU2372
 11700              	.LBE6632:
 11701              	.LBE6634:
 11702              	.LBE6635:
  67:Sequencer.cpp **** 
 11703              		.loc 7 67 5 is_stmt 1 view .LVU2373
  67:Sequencer.cpp **** 
 11704              		.loc 7 67 26 is_stmt 0 view .LVU2374
 11705 008a 06F11003 		add	r3, r6, #16
 11706 008e 0FCB     		ldm	r3, {r0, r1, r2, r3}
 11707 0090 84E80F00 		stm	r4, {r0, r1, r2, r3}
 11708              	.LVL414:
 11709              	.LBB6636:
 11710              	.LBI6636:
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 11711              		.loc 1 796 7 is_stmt 1 view .LVU2375
 11712              	.LBB6637:
 11713              	.LBI6637:
 11714              		.loc 17 79 7 view .LVU2376
 11715              		.loc 17 79 7 is_stmt 0 view .LVU2377
 11716              	.LBE6637:
 11717              	.LBB6638:
 11718              	.LBI6638:
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ _M_assign_aux(__first, __last, std::__iterator_category(__first)); }
 11719              		.loc 1 815 2 is_stmt 1 view .LVU2378
 11720              	.LBB6639:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 11721              		.loc 1 816 17 is_stmt 0 view .LVU2379
 11722 0094 04AA     		add	r2, sp, #16
 11723              	.LVL415:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 11724              		.loc 1 816 17 view .LVU2380
 11725 0096 2146     		mov	r1, r4
 11726 0098 09A8     		add	r0, sp, #36
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 398


 11727              	.LVL416:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 11728              		.loc 1 816 17 view .LVU2381
 11729 009a FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEE13_M_assign_auxIPKbEEvT_S5_St20forward_iterator_tag.isra.0
 11730              	.LVL417:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 11731              		.loc 1 816 17 view .LVU2382
 11732              	.LBE6639:
 11733              	.LBE6638:
 11734              	.LBE6636:
  69:Sequencer.cpp ****     seq.chord_sequence = {true, true, true, false, true, false, true, false, true, true, true, fals
 11735              		.loc 7 69 5 is_stmt 1 view .LVU2383
 11736              	.LBB6640:
 11737              	.LBI6640:
  26:Sequencer.h   ****         std::vector<bool> kick_steps;
 11738              		.loc 13 26 12 view .LVU2384
 11739              	.LBB6641:
 11740 009e 04A9     		add	r1, sp, #16
 11741              	.LVL418:
  26:Sequencer.h   ****         std::vector<bool> kick_steps;
 11742              		.loc 13 26 12 is_stmt 0 view .LVU2385
 11743 00a0 13A8     		add	r0, sp, #76
 11744              	.LVL419:
  26:Sequencer.h   ****         std::vector<bool> kick_steps;
 11745              		.loc 13 26 12 view .LVU2386
 11746 00a2 FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEEaSERKS1_.isra.0
 11747              	.LVL420:
  26:Sequencer.h   ****         std::vector<bool> kick_steps;
 11748              		.loc 13 26 12 view .LVU2387
 11749 00a6 09A9     		add	r1, sp, #36
 11750 00a8 18A8     		add	r0, sp, #96
 11751 00aa FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEEaSERKS1_.isra.0
 11752              	.LVL421:
 11753 00ae 0EA9     		add	r1, sp, #56
 11754              	.LVL422:
  26:Sequencer.h   ****         std::vector<bool> kick_steps;
 11755              		.loc 13 26 12 view .LVU2388
 11756 00b0 1DA8     		add	r0, sp, #116
 11757 00b2 FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEEaSERKS1_.isra.0
 11758              	.LVL423:
  26:Sequencer.h   ****         std::vector<bool> kick_steps;
 11759              		.loc 13 26 12 view .LVU2389
 11760              	.LBE6641:
 11761              	.LBE6640:
  70:Sequencer.cpp ****     sequences.push_back(seq);
 11762              		.loc 7 70 5 is_stmt 1 view .LVU2390
  70:Sequencer.cpp ****     sequences.push_back(seq);
 11763              		.loc 7 70 24 is_stmt 0 view .LVU2391
 11764 00b6 06F12003 		add	r3, r6, #32
 11765 00ba 0FCB     		ldm	r3, {r0, r1, r2, r3}
 11766 00bc 87E80F00 		stm	r7, {r0, r1, r2, r3}
  71:Sequencer.cpp **** 
 11767              		.loc 7 71 5 is_stmt 1 view .LVU2392
  71:Sequencer.cpp **** 
 11768              		.loc 7 71 24 is_stmt 0 view .LVU2393
 11769 00c0 13A9     		add	r1, sp, #76
 11770 00c2 5046     		mov	r0, r10
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 399


 11771 00c4 FFF7FEFF 		bl	_ZNSt6vectorIN9Sequencer8SequenceESaIS1_EE9push_backERKS1_
 11772              	.LVL424:
  75:Sequencer.cpp ****     drum_seq.snare_steps = {false, false, false, true, false, false, true, false, false, false, fal
 11773              		.loc 7 75 5 is_stmt 1 view .LVU2394
  75:Sequencer.cpp ****     drum_seq.snare_steps = {false, false, false, true, false, false, true, false, false, false, fal
 11774              		.loc 7 75 26 is_stmt 0 view .LVU2395
 11775 00c8 9BE80F00 		ldm	fp, {r0, r1, r2, r3}
 11776 00cc 84E80F00 		stm	r4, {r0, r1, r2, r3}
 11777              	.LVL425:
 11778              	.LBB6642:
 11779              	.LBI6642:
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 11780              		.loc 1 796 7 is_stmt 1 view .LVU2396
 11781              	.LBB6643:
 11782              	.LBI6643:
 11783              		.loc 17 79 7 view .LVU2397
 11784              		.loc 17 79 7 is_stmt 0 view .LVU2398
 11785              	.LBE6643:
 11786              	.LBB6644:
 11787              	.LBI6644:
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ _M_assign_aux(__first, __last, std::__iterator_category(__first)); }
 11788              		.loc 1 815 2 is_stmt 1 view .LVU2399
 11789              	.LBB6645:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 11790              		.loc 1 816 17 is_stmt 0 view .LVU2400
 11791 00d0 04AA     		add	r2, sp, #16
 11792              	.LVL426:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 11793              		.loc 1 816 17 view .LVU2401
 11794 00d2 2146     		mov	r1, r4
 11795 00d4 1046     		mov	r0, r2
 11796 00d6 FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEE13_M_assign_auxIPKbEEvT_S5_St20forward_iterator_tag.isra.0
 11797              	.LVL427:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 11798              		.loc 1 816 17 view .LVU2402
 11799              	.LBE6645:
 11800              	.LBE6644:
 11801              	.LBE6642:
  76:Sequencer.cpp ****     drum_seq.hat_steps   = {true, false, true, false, true, false, true, false, true, true, true, f
 11802              		.loc 7 76 5 is_stmt 1 view .LVU2403
  76:Sequencer.cpp ****     drum_seq.hat_steps   = {true, false, true, false, true, false, true, false, true, true, true, f
 11803              		.loc 7 76 26 is_stmt 0 view .LVU2404
 11804 00da 06F14003 		add	r3, r6, #64
 11805 00de 0FCB     		ldm	r3, {r0, r1, r2, r3}
 11806 00e0 84E80F00 		stm	r4, {r0, r1, r2, r3}
 11807              	.LVL428:
 11808              	.LBB6646:
 11809              	.LBI6646:
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 11810              		.loc 1 796 7 is_stmt 1 view .LVU2405
 11811              	.LBB6647:
 11812              	.LBI6647:
 11813              		.loc 17 79 7 view .LVU2406
 11814              		.loc 17 79 7 is_stmt 0 view .LVU2407
 11815              	.LBE6647:
 11816              	.LBB6648:
 11817              	.LBI6648:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 400


 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ _M_assign_aux(__first, __last, std::__iterator_category(__first)); }
 11818              		.loc 1 815 2 is_stmt 1 view .LVU2408
 11819              	.LBB6649:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 11820              		.loc 1 816 17 is_stmt 0 view .LVU2409
 11821 00e4 04AA     		add	r2, sp, #16
 11822              	.LVL429:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 11823              		.loc 1 816 17 view .LVU2410
 11824 00e6 2146     		mov	r1, r4
 11825 00e8 0EA8     		add	r0, sp, #56
 11826              	.LVL430:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 11827              		.loc 1 816 17 view .LVU2411
 11828 00ea FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEE13_M_assign_auxIPKbEEvT_S5_St20forward_iterator_tag.isra.0
 11829              	.LVL431:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 11830              		.loc 1 816 17 view .LVU2412
 11831              	.LBE6649:
 11832              	.LBE6648:
 11833              	.LBE6646:
  77:Sequencer.cpp **** 
 11834              		.loc 7 77 5 is_stmt 1 view .LVU2413
  77:Sequencer.cpp **** 
 11835              		.loc 7 77 26 is_stmt 0 view .LVU2414
 11836 00ee 06F15003 		add	r3, r6, #80
 11837 00f2 0FCB     		ldm	r3, {r0, r1, r2, r3}
 11838 00f4 84E80F00 		stm	r4, {r0, r1, r2, r3}
 11839              	.LVL432:
 11840              	.LBB6650:
 11841              	.LBI6650:
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 11842              		.loc 1 796 7 is_stmt 1 view .LVU2415
 11843              	.LBB6651:
 11844              	.LBI6651:
 11845              		.loc 17 79 7 view .LVU2416
 11846              		.loc 17 79 7 is_stmt 0 view .LVU2417
 11847              	.LBE6651:
 11848              	.LBB6652:
 11849              	.LBI6652:
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ _M_assign_aux(__first, __last, std::__iterator_category(__first)); }
 11850              		.loc 1 815 2 is_stmt 1 view .LVU2418
 11851              	.LBB6653:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 11852              		.loc 1 816 17 is_stmt 0 view .LVU2419
 11853 00f8 04AA     		add	r2, sp, #16
 11854              	.LVL433:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 11855              		.loc 1 816 17 view .LVU2420
 11856 00fa 2146     		mov	r1, r4
 11857 00fc 09A8     		add	r0, sp, #36
 11858              	.LVL434:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 11859              		.loc 1 816 17 view .LVU2421
 11860 00fe FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEE13_M_assign_auxIPKbEEvT_S5_St20forward_iterator_tag.isra.0
 11861              	.LVL435:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 401


 11862              		.loc 1 816 17 view .LVU2422
 11863              	.LBE6653:
 11864              	.LBE6652:
 11865              	.LBE6650:
  79:Sequencer.cpp ****     //seq.chord_sequence = {false, false, false, true, false, false, true, true, false, false, fals
 11866              		.loc 7 79 5 is_stmt 1 view .LVU2423
 11867              	.LBB6654:
 11868              	.LBI6654:
  26:Sequencer.h   ****         std::vector<bool> kick_steps;
 11869              		.loc 13 26 12 view .LVU2424
 11870              	.LBB6655:
 11871 0102 04A9     		add	r1, sp, #16
 11872              	.LVL436:
  26:Sequencer.h   ****         std::vector<bool> kick_steps;
 11873              		.loc 13 26 12 is_stmt 0 view .LVU2425
 11874 0104 13A8     		add	r0, sp, #76
 11875              	.LVL437:
  26:Sequencer.h   ****         std::vector<bool> kick_steps;
 11876              		.loc 13 26 12 view .LVU2426
 11877 0106 FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEEaSERKS1_.isra.0
 11878              	.LVL438:
  26:Sequencer.h   ****         std::vector<bool> kick_steps;
 11879              		.loc 13 26 12 view .LVU2427
 11880 010a 09A9     		add	r1, sp, #36
 11881 010c 18A8     		add	r0, sp, #96
 11882 010e FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEEaSERKS1_.isra.0
 11883              	.LVL439:
 11884 0112 0EA9     		add	r1, sp, #56
 11885              	.LVL440:
  26:Sequencer.h   ****         std::vector<bool> kick_steps;
 11886              		.loc 13 26 12 view .LVU2428
 11887 0114 1DA8     		add	r0, sp, #116
 11888 0116 FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEEaSERKS1_.isra.0
 11889              	.LVL441:
  26:Sequencer.h   ****         std::vector<bool> kick_steps;
 11890              		.loc 13 26 12 view .LVU2429
 11891              	.LBE6655:
 11892              	.LBE6654:
  81:Sequencer.cpp ****     sequences.push_back(seq);
 11893              		.loc 7 81 5 is_stmt 1 view .LVU2430
  81:Sequencer.cpp ****     sequences.push_back(seq);
 11894              		.loc 7 81 24 is_stmt 0 view .LVU2431
 11895 011a 06F16003 		add	r3, r6, #96
 11896 011e 0FCB     		ldm	r3, {r0, r1, r2, r3}
 11897 0120 87E80F00 		stm	r7, {r0, r1, r2, r3}
  82:Sequencer.cpp **** 
 11898              		.loc 7 82 5 is_stmt 1 view .LVU2432
  82:Sequencer.cpp **** 
 11899              		.loc 7 82 24 is_stmt 0 view .LVU2433
 11900 0124 13A9     		add	r1, sp, #76
 11901 0126 5046     		mov	r0, r10
 11902 0128 FFF7FEFF 		bl	_ZNSt6vectorIN9Sequencer8SequenceESaIS1_EE9push_backERKS1_
 11903              	.LVL442:
  85:Sequencer.cpp ****     drum_seq.snare_steps = {false, false, false, false, true, false, true, false, false, false, fal
 11904              		.loc 7 85 5 is_stmt 1 view .LVU2434
  85:Sequencer.cpp ****     drum_seq.snare_steps = {false, false, false, false, true, false, true, false, false, false, fal
 11905              		.loc 7 85 26 is_stmt 0 view .LVU2435
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 402


 11906 012c 9BE80F00 		ldm	fp, {r0, r1, r2, r3}
 11907 0130 84E80F00 		stm	r4, {r0, r1, r2, r3}
 11908              	.LVL443:
 11909              	.LBB6656:
 11910              	.LBI6656:
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 11911              		.loc 1 796 7 is_stmt 1 view .LVU2436
 11912              	.LBB6657:
 11913              	.LBI6657:
 11914              		.loc 17 79 7 view .LVU2437
 11915              		.loc 17 79 7 is_stmt 0 view .LVU2438
 11916              	.LBE6657:
 11917              	.LBB6658:
 11918              	.LBI6658:
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ _M_assign_aux(__first, __last, std::__iterator_category(__first)); }
 11919              		.loc 1 815 2 is_stmt 1 view .LVU2439
 11920              	.LBB6659:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 11921              		.loc 1 816 17 is_stmt 0 view .LVU2440
 11922 0134 04AA     		add	r2, sp, #16
 11923              	.LVL444:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 11924              		.loc 1 816 17 view .LVU2441
 11925 0136 2146     		mov	r1, r4
 11926 0138 1046     		mov	r0, r2
 11927 013a FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEE13_M_assign_auxIPKbEEvT_S5_St20forward_iterator_tag.isra.0
 11928              	.LVL445:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 11929              		.loc 1 816 17 view .LVU2442
 11930              	.LBE6659:
 11931              	.LBE6658:
 11932              	.LBE6656:
  86:Sequencer.cpp ****     drum_seq.hat_steps   = {true, true, true, true, true, true, true, true, true, true, true, true,
 11933              		.loc 7 86 5 is_stmt 1 view .LVU2443
 11934              	.LBB6660:
 11935              	.LBB6661:
 11936              	.LBB6662:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 11937              		.loc 1 816 17 is_stmt 0 view .LVU2444
 11938 013e 04AA     		add	r2, sp, #16
 11939              	.LVL446:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 11940              		.loc 1 816 17 view .LVU2445
 11941 0140 2146     		mov	r1, r4
 11942 0142 0EA8     		add	r0, sp, #56
 11943              	.LVL447:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 11944              		.loc 1 816 17 view .LVU2446
 11945              	.LBE6662:
 11946              	.LBE6661:
 11947              	.LBE6660:
  86:Sequencer.cpp ****     drum_seq.hat_steps   = {true, true, true, true, true, true, true, true, true, true, true, true,
 11948              		.loc 7 86 26 view .LVU2447
 11949 0144 6560     		str	r5, [r4, #4]
 11950 0146 E560     		str	r5, [r4, #12]
 11951 0148 0095     		str	r5, [sp]
 11952 014a A560     		str	r5, [r4, #8]
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 403


 11953 014c 8DF80480 		strb	r8, [sp, #4]
 11954 0150 8DF80680 		strb	r8, [sp, #6]
 11955 0154 8DF80C80 		strb	r8, [sp, #12]
 11956              	.LVL448:
 11957              	.LBB6666:
 11958              	.LBI6660:
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 11959              		.loc 1 796 7 is_stmt 1 view .LVU2448
 11960              	.LBB6664:
 11961              	.LBI6664:
 11962              		.loc 17 79 7 view .LVU2449
 11963              		.loc 17 79 7 is_stmt 0 view .LVU2450
 11964              	.LBE6664:
 11965              	.LBB6665:
 11966              	.LBI6661:
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ _M_assign_aux(__first, __last, std::__iterator_category(__first)); }
 11967              		.loc 1 815 2 is_stmt 1 view .LVU2451
 11968              	.LBB6663:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 11969              		.loc 1 816 17 is_stmt 0 view .LVU2452
 11970 0158 FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEE13_M_assign_auxIPKbEEvT_S5_St20forward_iterator_tag.isra.0
 11971              	.LVL449:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 11972              		.loc 1 816 17 view .LVU2453
 11973              	.LBE6663:
 11974              	.LBE6665:
 11975              	.LBE6666:
  87:Sequencer.cpp **** 
 11976              		.loc 7 87 5 is_stmt 1 view .LVU2454
  87:Sequencer.cpp **** 
 11977              		.loc 7 87 26 is_stmt 0 view .LVU2455
 11978 015c 06F17003 		add	r3, r6, #112
 11979 0160 0FCB     		ldm	r3, {r0, r1, r2, r3}
 11980 0162 84E80F00 		stm	r4, {r0, r1, r2, r3}
 11981              	.LVL450:
 11982              	.LBB6667:
 11983              	.LBI6667:
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 11984              		.loc 1 796 7 is_stmt 1 view .LVU2456
 11985              	.LBB6668:
 11986              	.LBI6668:
 11987              		.loc 17 79 7 view .LVU2457
 11988              		.loc 17 79 7 is_stmt 0 view .LVU2458
 11989              	.LBE6668:
 11990              	.LBB6669:
 11991              	.LBI6669:
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ _M_assign_aux(__first, __last, std::__iterator_category(__first)); }
 11992              		.loc 1 815 2 is_stmt 1 view .LVU2459
 11993              	.LBB6670:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 11994              		.loc 1 816 17 is_stmt 0 view .LVU2460
 11995 0166 04AA     		add	r2, sp, #16
 11996              	.LVL451:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 11997              		.loc 1 816 17 view .LVU2461
 11998 0168 2146     		mov	r1, r4
 11999 016a 09A8     		add	r0, sp, #36
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 404


 12000              	.LVL452:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 12001              		.loc 1 816 17 view .LVU2462
 12002 016c FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEE13_M_assign_auxIPKbEEvT_S5_St20forward_iterator_tag.isra.0
 12003              	.LVL453:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 12004              		.loc 1 816 17 view .LVU2463
 12005              	.LBE6670:
 12006              	.LBE6669:
 12007              	.LBE6667:
  89:Sequencer.cpp ****     seq.chord_sequence = {false, false, true, false, true, false, false, false, true, false, false,
 12008              		.loc 7 89 5 is_stmt 1 view .LVU2464
 12009              	.LBB6671:
 12010              	.LBI6671:
  26:Sequencer.h   ****         std::vector<bool> kick_steps;
 12011              		.loc 13 26 12 view .LVU2465
 12012              	.LBB6672:
 12013 0170 04A9     		add	r1, sp, #16
 12014              	.LVL454:
  26:Sequencer.h   ****         std::vector<bool> kick_steps;
 12015              		.loc 13 26 12 is_stmt 0 view .LVU2466
 12016 0172 13A8     		add	r0, sp, #76
 12017              	.LVL455:
  26:Sequencer.h   ****         std::vector<bool> kick_steps;
 12018              		.loc 13 26 12 view .LVU2467
 12019 0174 FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEEaSERKS1_.isra.0
 12020              	.LVL456:
  26:Sequencer.h   ****         std::vector<bool> kick_steps;
 12021              		.loc 13 26 12 view .LVU2468
 12022 0178 09A9     		add	r1, sp, #36
 12023 017a 18A8     		add	r0, sp, #96
 12024 017c FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEEaSERKS1_.isra.0
 12025              	.LVL457:
 12026 0180 0EA9     		add	r1, sp, #56
 12027              	.LVL458:
  26:Sequencer.h   ****         std::vector<bool> kick_steps;
 12028              		.loc 13 26 12 view .LVU2469
 12029 0182 1DA8     		add	r0, sp, #116
 12030 0184 FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEEaSERKS1_.isra.0
 12031              	.LVL459:
  26:Sequencer.h   ****         std::vector<bool> kick_steps;
 12032              		.loc 13 26 12 view .LVU2470
 12033              	.LBE6672:
 12034              	.LBE6671:
  90:Sequencer.cpp ****     sequences.push_back(seq);
 12035              		.loc 7 90 5 is_stmt 1 view .LVU2471
  90:Sequencer.cpp ****     sequences.push_back(seq);
 12036              		.loc 7 90 24 is_stmt 0 view .LVU2472
 12037 0188 06F18003 		add	r3, r6, #128
 12038 018c 0FCB     		ldm	r3, {r0, r1, r2, r3}
 12039 018e 87E80F00 		stm	r7, {r0, r1, r2, r3}
  91:Sequencer.cpp **** 
 12040              		.loc 7 91 5 is_stmt 1 view .LVU2473
  91:Sequencer.cpp **** 
 12041              		.loc 7 91 24 is_stmt 0 view .LVU2474
 12042 0192 13A9     		add	r1, sp, #76
 12043 0194 5046     		mov	r0, r10
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 405


 12044 0196 FFF7FEFF 		bl	_ZNSt6vectorIN9Sequencer8SequenceESaIS1_EE9push_backERKS1_
 12045              	.LVL460:
 12046              		.loc 7 94 5 is_stmt 1 view .LVU2475
 12047              		.loc 7 94 26 is_stmt 0 view .LVU2476
 12048 019a 99E80F00 		ldm	r9, {r0, r1, r2, r3}
 12049 019e 84E80F00 		stm	r4, {r0, r1, r2, r3}
 12050              	.LVL461:
 12051              	.LBB6673:
 12052              	.LBI6673:
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 12053              		.loc 1 796 7 is_stmt 1 view .LVU2477
 12054              	.LBB6674:
 12055              	.LBI6674:
 12056              		.loc 17 79 7 view .LVU2478
 12057              		.loc 17 79 7 is_stmt 0 view .LVU2479
 12058              	.LBE6674:
 12059              	.LBB6675:
 12060              	.LBI6675:
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ _M_assign_aux(__first, __last, std::__iterator_category(__first)); }
 12061              		.loc 1 815 2 is_stmt 1 view .LVU2480
 12062              	.LBB6676:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 12063              		.loc 1 816 17 is_stmt 0 view .LVU2481
 12064 01a2 04AA     		add	r2, sp, #16
 12065              	.LVL462:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 12066              		.loc 1 816 17 view .LVU2482
 12067 01a4 2146     		mov	r1, r4
 12068 01a6 1046     		mov	r0, r2
 12069 01a8 FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEE13_M_assign_auxIPKbEEvT_S5_St20forward_iterator_tag.isra.0
 12070              	.LVL463:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 12071              		.loc 1 816 17 view .LVU2483
 12072              	.LBE6676:
 12073              	.LBE6675:
 12074              	.LBE6673:
  95:Sequencer.cpp ****     drum_seq.snare_steps = {false, false, false, false, true, false, false, false, false, false, fa
 12075              		.loc 7 95 5 is_stmt 1 view .LVU2484
 12076              	.LBB6677:
 12077              	.LBB6678:
 12078              	.LBB6679:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 12079              		.loc 1 816 17 is_stmt 0 view .LVU2485
 12080 01ac 04AA     		add	r2, sp, #16
 12081              	.LVL464:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 12082              		.loc 1 816 17 view .LVU2486
 12083 01ae 2146     		mov	r1, r4
 12084 01b0 0EA8     		add	r0, sp, #56
 12085              	.LVL465:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 12086              		.loc 1 816 17 view .LVU2487
 12087              	.LBE6679:
 12088              	.LBE6678:
 12089              	.LBE6677:
 12090              		.loc 7 95 26 view .LVU2488
 12091 01b2 E560     		str	r5, [r4, #12]
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 406


 12092 01b4 6560     		str	r5, [r4, #4]
 12093 01b6 0095     		str	r5, [sp]
 12094 01b8 A560     		str	r5, [r4, #8]
 12095 01ba 8DF80480 		strb	r8, [sp, #4]
 12096 01be 8DF80C80 		strb	r8, [sp, #12]
 12097 01c2 8DF80E80 		strb	r8, [sp, #14]
 12098              	.LVL466:
 12099              	.LBB6683:
 12100              	.LBI6677:
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 12101              		.loc 1 796 7 is_stmt 1 view .LVU2489
 12102              	.LBB6681:
 12103              	.LBI6681:
 12104              		.loc 17 79 7 view .LVU2490
 12105              		.loc 17 79 7 is_stmt 0 view .LVU2491
 12106              	.LBE6681:
 12107              	.LBB6682:
 12108              	.LBI6678:
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ _M_assign_aux(__first, __last, std::__iterator_category(__first)); }
 12109              		.loc 1 815 2 is_stmt 1 view .LVU2492
 12110              	.LBB6680:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 12111              		.loc 1 816 17 is_stmt 0 view .LVU2493
 12112 01c6 FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEE13_M_assign_auxIPKbEEvT_S5_St20forward_iterator_tag.isra.0
 12113              	.LVL467:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 12114              		.loc 1 816 17 view .LVU2494
 12115              	.LBE6680:
 12116              	.LBE6682:
 12117              	.LBE6683:
  96:Sequencer.cpp ****     drum_seq.hat_steps   = {true, false, false, false, true, false, false, false, true, false, fals
 12118              		.loc 7 96 5 is_stmt 1 view .LVU2495
 12119              		.loc 7 96 26 is_stmt 0 view .LVU2496
 12120 01ca 99E80F00 		ldm	r9, {r0, r1, r2, r3}
 12121 01ce 84E80F00 		stm	r4, {r0, r1, r2, r3}
 12122              	.LVL468:
 12123              	.LBB6684:
 12124              	.LBI6684:
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 12125              		.loc 1 796 7 is_stmt 1 view .LVU2497
 12126              	.LBB6685:
 12127              	.LBI6685:
 12128              		.loc 17 79 7 view .LVU2498
 12129              		.loc 17 79 7 is_stmt 0 view .LVU2499
 12130              	.LBE6685:
 12131              	.LBB6686:
 12132              	.LBI6686:
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ _M_assign_aux(__first, __last, std::__iterator_category(__first)); }
 12133              		.loc 1 815 2 is_stmt 1 view .LVU2500
 12134              	.LBB6687:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 12135              		.loc 1 816 17 is_stmt 0 view .LVU2501
 12136 01d2 04AA     		add	r2, sp, #16
 12137              	.LVL469:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 12138              		.loc 1 816 17 view .LVU2502
 12139 01d4 2146     		mov	r1, r4
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 407


 12140 01d6 09A8     		add	r0, sp, #36
 12141              	.LVL470:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 12142              		.loc 1 816 17 view .LVU2503
 12143 01d8 FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEE13_M_assign_auxIPKbEEvT_S5_St20forward_iterator_tag.isra.0
 12144              	.LVL471:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 12145              		.loc 1 816 17 view .LVU2504
 12146              	.LBE6687:
 12147              	.LBE6686:
 12148              	.LBE6684:
  97:Sequencer.cpp **** 
  98:Sequencer.cpp ****     seq.drum_sequence = drum_seq;
 12149              		.loc 7 98 5 is_stmt 1 view .LVU2505
 12150              	.LBB6688:
 12151              	.LBI6688:
  26:Sequencer.h   ****         std::vector<bool> kick_steps;
 12152              		.loc 13 26 12 view .LVU2506
 12153              	.LBB6689:
 12154 01dc 04A9     		add	r1, sp, #16
 12155              	.LVL472:
  26:Sequencer.h   ****         std::vector<bool> kick_steps;
 12156              		.loc 13 26 12 is_stmt 0 view .LVU2507
 12157 01de 13A8     		add	r0, sp, #76
 12158              	.LVL473:
  26:Sequencer.h   ****         std::vector<bool> kick_steps;
 12159              		.loc 13 26 12 view .LVU2508
 12160 01e0 FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEEaSERKS1_.isra.0
 12161              	.LVL474:
  26:Sequencer.h   ****         std::vector<bool> kick_steps;
 12162              		.loc 13 26 12 view .LVU2509
 12163 01e4 09A9     		add	r1, sp, #36
 12164 01e6 18A8     		add	r0, sp, #96
 12165 01e8 FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEEaSERKS1_.isra.0
 12166              	.LVL475:
 12167 01ec 0EA9     		add	r1, sp, #56
 12168              	.LVL476:
  26:Sequencer.h   ****         std::vector<bool> kick_steps;
 12169              		.loc 13 26 12 view .LVU2510
 12170 01ee 1DA8     		add	r0, sp, #116
 12171 01f0 FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEEaSERKS1_.isra.0
 12172              	.LVL477:
  26:Sequencer.h   ****         std::vector<bool> kick_steps;
 12173              		.loc 13 26 12 view .LVU2511
 12174              	.LBE6689:
 12175              	.LBE6688:
  99:Sequencer.cpp ****     seq.chord_sequence = {false, false, false, false, true, false, false, false, false, false, fals
 12176              		.loc 7 99 5 is_stmt 1 view .LVU2512
 12177              		.loc 7 99 24 is_stmt 0 view .LVU2513
 12178 01f4 4FF00113 		mov	r3, #65537
 100:Sequencer.cpp ****     sequences.push_back(seq);
 12179              		.loc 7 100 24 view .LVU2514
 12180 01f8 13A9     		add	r1, sp, #76
 12181 01fa 5046     		mov	r0, r10
  99:Sequencer.cpp ****     seq.chord_sequence = {false, false, false, false, true, false, false, false, false, false, fals
 12182              		.loc 7 99 24 view .LVU2515
 12183 01fc 7D60     		str	r5, [r7, #4]
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 408


 12184 01fe BD60     		str	r5, [r7, #8]
 12185 0200 2295     		str	r5, [sp, #136]
 12186 0202 2593     		str	r3, [sp, #148]
 12187              		.loc 7 100 5 is_stmt 1 view .LVU2516
  99:Sequencer.cpp ****     seq.chord_sequence = {false, false, false, false, true, false, false, false, false, false, fals
 12188              		.loc 7 99 24 is_stmt 0 view .LVU2517
 12189 0204 8DF88C80 		strb	r8, [sp, #140]
 12190              		.loc 7 100 24 view .LVU2518
 12191 0208 FFF7FEFF 		bl	_ZNSt6vectorIN9Sequencer8SequenceESaIS1_EE9push_backERKS1_
 12192              	.LVL478:
 101:Sequencer.cpp **** 
 102:Sequencer.cpp ****     // BLUES
 103:Sequencer.cpp ****     drum_seq.kick_steps  = {true, false, false, false, true, false, false, false, true, false, fals
 12193              		.loc 7 103 5 is_stmt 1 view .LVU2519
 12194              		.loc 7 103 26 is_stmt 0 view .LVU2520
 12195 020c 99E80F00 		ldm	r9, {r0, r1, r2, r3}
 12196 0210 84E80F00 		stm	r4, {r0, r1, r2, r3}
 12197              	.LVL479:
 12198              	.LBB6690:
 12199              	.LBI6690:
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 12200              		.loc 1 796 7 is_stmt 1 view .LVU2521
 12201              	.LBB6691:
 12202              	.LBI6691:
 12203              		.loc 17 79 7 view .LVU2522
 12204              		.loc 17 79 7 is_stmt 0 view .LVU2523
 12205              	.LBE6691:
 12206              	.LBB6692:
 12207              	.LBI6692:
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ _M_assign_aux(__first, __last, std::__iterator_category(__first)); }
 12208              		.loc 1 815 2 is_stmt 1 view .LVU2524
 12209              	.LBB6693:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 12210              		.loc 1 816 17 is_stmt 0 view .LVU2525
 12211 0214 04AA     		add	r2, sp, #16
 12212              	.LVL480:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 12213              		.loc 1 816 17 view .LVU2526
 12214 0216 2146     		mov	r1, r4
 12215 0218 1046     		mov	r0, r2
 12216 021a FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEE13_M_assign_auxIPKbEEvT_S5_St20forward_iterator_tag.isra.0
 12217              	.LVL481:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 12218              		.loc 1 816 17 view .LVU2527
 12219              	.LBE6693:
 12220              	.LBE6692:
 12221              	.LBE6690:
 104:Sequencer.cpp ****     drum_seq.snare_steps = {false, false, false, false, true, false, false, false, false, false, fa
 12222              		.loc 7 104 5 is_stmt 1 view .LVU2528
 12223              	.LBB6694:
 12224              	.LBB6695:
 12225              	.LBB6696:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 12226              		.loc 1 816 17 is_stmt 0 view .LVU2529
 12227 021e 04AA     		add	r2, sp, #16
 12228              	.LVL482:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 409


 12229              		.loc 1 816 17 view .LVU2530
 12230 0220 2146     		mov	r1, r4
 12231 0222 0EA8     		add	r0, sp, #56
 12232              	.LVL483:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 12233              		.loc 1 816 17 view .LVU2531
 12234              	.LBE6696:
 12235              	.LBE6695:
 12236              	.LBE6694:
 12237              		.loc 7 104 26 view .LVU2532
 12238 0224 6560     		str	r5, [r4, #4]
 12239 0226 E560     		str	r5, [r4, #12]
 12240 0228 0095     		str	r5, [sp]
 12241 022a A560     		str	r5, [r4, #8]
 12242 022c 8DF80480 		strb	r8, [sp, #4]
 12243 0230 8DF80C80 		strb	r8, [sp, #12]
 12244              	.LVL484:
 12245              	.LBB6700:
 12246              	.LBI6694:
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 12247              		.loc 1 796 7 is_stmt 1 view .LVU2533
 12248              	.LBB6698:
 12249              	.LBI6698:
 12250              		.loc 17 79 7 view .LVU2534
 12251              		.loc 17 79 7 is_stmt 0 view .LVU2535
 12252              	.LBE6698:
 12253              	.LBB6699:
 12254              	.LBI6695:
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ _M_assign_aux(__first, __last, std::__iterator_category(__first)); }
 12255              		.loc 1 815 2 is_stmt 1 view .LVU2536
 12256              	.LBB6697:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 12257              		.loc 1 816 17 is_stmt 0 view .LVU2537
 12258 0234 FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEE13_M_assign_auxIPKbEEvT_S5_St20forward_iterator_tag.isra.0
 12259              	.LVL485:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 12260              		.loc 1 816 17 view .LVU2538
 12261              	.LBE6697:
 12262              	.LBE6699:
 12263              	.LBE6700:
 105:Sequencer.cpp ****     drum_seq.hat_steps   = {true, false, true, false, true, false, true, false, true, false, true, 
 12264              		.loc 7 105 5 is_stmt 1 view .LVU2539
 12265              		.loc 7 105 26 is_stmt 0 view .LVU2540
 12266 0238 06F11003 		add	r3, r6, #16
 106:Sequencer.cpp **** 
 107:Sequencer.cpp ****     seq.drum_sequence = drum_seq;
 108:Sequencer.cpp ****     seq.chord_sequence = {true, false, true, false, true, false, true, false, true, false, true, fa
 12267              		.loc 7 108 24 view .LVU2541
 12268 023c A036     		adds	r6, r6, #160
 105:Sequencer.cpp ****     drum_seq.hat_steps   = {true, false, true, false, true, false, true, false, true, false, true, 
 12269              		.loc 7 105 26 view .LVU2542
 12270 023e 0FCB     		ldm	r3, {r0, r1, r2, r3}
 12271 0240 84E80F00 		stm	r4, {r0, r1, r2, r3}
 12272              	.LVL486:
 12273              	.LBB6701:
 12274              	.LBI6701:
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 410


 12275              		.loc 1 796 7 is_stmt 1 view .LVU2543
 12276              	.LBB6702:
 12277              	.LBI6702:
 12278              		.loc 17 79 7 view .LVU2544
 12279              		.loc 17 79 7 is_stmt 0 view .LVU2545
 12280              	.LBE6702:
 12281              	.LBB6703:
 12282              	.LBI6703:
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{ _M_assign_aux(__first, __last, std::__iterator_category(__first)); }
 12283              		.loc 1 815 2 is_stmt 1 view .LVU2546
 12284              	.LBB6704:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 12285              		.loc 1 816 17 is_stmt 0 view .LVU2547
 12286 0244 04AA     		add	r2, sp, #16
 12287              	.LVL487:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 12288              		.loc 1 816 17 view .LVU2548
 12289 0246 2146     		mov	r1, r4
 12290 0248 09A8     		add	r0, sp, #36
 12291              	.LVL488:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 12292              		.loc 1 816 17 view .LVU2549
 12293 024a FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEE13_M_assign_auxIPKbEEvT_S5_St20forward_iterator_tag.isra.0
 12294              	.LVL489:
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** #else
 12295              		.loc 1 816 17 view .LVU2550
 12296              	.LBE6704:
 12297              	.LBE6703:
 12298              	.LBE6701:
 107:Sequencer.cpp ****     seq.chord_sequence = {true, false, true, false, true, false, true, false, true, false, true, fa
 12299              		.loc 7 107 5 is_stmt 1 view .LVU2551
 12300              	.LBB6705:
 12301              	.LBI6705:
  26:Sequencer.h   ****         std::vector<bool> kick_steps;
 12302              		.loc 13 26 12 view .LVU2552
 12303              	.LBB6706:
 12304 024e 04A9     		add	r1, sp, #16
 12305              	.LVL490:
  26:Sequencer.h   ****         std::vector<bool> kick_steps;
 12306              		.loc 13 26 12 is_stmt 0 view .LVU2553
 12307 0250 13A8     		add	r0, sp, #76
 12308              	.LVL491:
  26:Sequencer.h   ****         std::vector<bool> kick_steps;
 12309              		.loc 13 26 12 view .LVU2554
 12310 0252 FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEEaSERKS1_.isra.0
 12311              	.LVL492:
  26:Sequencer.h   ****         std::vector<bool> kick_steps;
 12312              		.loc 13 26 12 view .LVU2555
 12313 0256 09A9     		add	r1, sp, #36
 12314 0258 18A8     		add	r0, sp, #96
 12315 025a FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEEaSERKS1_.isra.0
 12316              	.LVL493:
 12317 025e 0EA9     		add	r1, sp, #56
 12318              	.LVL494:
  26:Sequencer.h   ****         std::vector<bool> kick_steps;
 12319              		.loc 13 26 12 view .LVU2556
 12320 0260 1DA8     		add	r0, sp, #116
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 411


 12321 0262 FFF7FEFF 		bl	_ZNSt6vectorIbSaIbEEaSERKS1_.isra.0
 12322              	.LVL495:
  26:Sequencer.h   ****         std::vector<bool> kick_steps;
 12323              		.loc 13 26 12 view .LVU2557
 12324              	.LBE6706:
 12325              	.LBE6705:
 12326              		.loc 7 108 5 is_stmt 1 view .LVU2558
 12327              		.loc 7 108 24 is_stmt 0 view .LVU2559
 12328 0266 96E80F00 		ldm	r6, {r0, r1, r2, r3}
 12329 026a 87E80F00 		stm	r7, {r0, r1, r2, r3}
 109:Sequencer.cpp ****     sequences.push_back(seq);
 12330              		.loc 7 109 5 is_stmt 1 view .LVU2560
 12331              		.loc 7 109 24 is_stmt 0 view .LVU2561
 12332 026e 5046     		mov	r0, r10
 12333 0270 13A9     		add	r1, sp, #76
 12334 0272 FFF7FEFF 		bl	_ZNSt6vectorIN9Sequencer8SequenceESaIS1_EE9push_backERKS1_
 12335              	.LVL496:
 12336              	.LBB6707:
 12337              	.LBI6707:
  26:Sequencer.h   ****         std::vector<bool> kick_steps;
 12338              		.loc 13 26 12 is_stmt 1 view .LVU2562
 12339              	.LBB6708:
 12340              	.LBB6709:
 12341              	.LBI6709:
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 12342              		.loc 1 737 7 view .LVU2563
 12343              	.LBB6710:
 12344              	.LBB6711:
 12345              	.LBI6711:
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { this->_M_deallocate(); }
 12346              		.loc 1 549 7 view .LVU2564
 12347              	.LBB6712:
 12348              	.LBI6712:
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 12349              		.loc 1 560 7 view .LVU2565
 12350              	.LBB6713:
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 12351              		.loc 1 562 23 is_stmt 0 view .LVU2566
 12352 0276 0E98     		ldr	r0, [sp, #56]
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 12353              		.loc 1 562 2 view .LVU2567
 12354 0278 18B1     		cbz	r0, .L243
 12355              	.LVL497:
 12356              	.LBB6714:
 12357              	.LBB6715:
 12358              	.LBI6715:
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 12359              		.loc 1 513 2 is_stmt 1 view .LVU2568
 12360              	.LBB6716:
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    return std::__addressof(this->_M_end_of_storage[-1]) + 1;
 12361              		.loc 1 515 14 is_stmt 0 view .LVU2569
 12362 027a 1299     		ldr	r1, [sp, #72]
 12363              	.LVL498:
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    return std::__addressof(this->_M_end_of_storage[-1]) + 1;
 12364              		.loc 1 515 14 view .LVU2570
 12365              	.LBE6716:
 12366              	.LBE6715:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 412


 12367              	.LBB6717:
 12368              	.LBI6717:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 12369              		.loc 6 491 7 is_stmt 1 view .LVU2571
 12370              	.LBB6718:
 12371              	.LBI6718:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 12372              		.loc 5 120 7 view .LVU2572
 12373              	.LBB6719:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 12374              		.loc 5 133 19 is_stmt 0 view .LVU2573
 12375 027c 091A     		subs	r1, r1, r0
 12376              	.LVL499:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 12377              		.loc 5 133 19 view .LVU2574
 12378 027e FFF7FEFF 		bl	_ZdlPvj
 12379              	.LVL500:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 12380              		.loc 5 133 19 view .LVU2575
 12381              	.LBE6719:
 12382              	.LBE6718:
 12383              	.LBE6717:
 12384              	.LBB6720:
 12385              	.LBI6720:
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 12386              		.loc 1 488 2 is_stmt 1 view .LVU2576
 12387              	.LBB6721:
 12388              	.LBB6722:
 12389              	.LBI6722:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 12390              		.loc 1 241 5 view .LVU2577
 12391              	.LBB6723:
 12392              	.LBI6723:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 12393              		.loc 1 148 5 view .LVU2578
 12394              	.L243:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 12395              		.loc 1 148 5 is_stmt 0 view .LVU2579
 12396              	.LBE6723:
 12397              	.LBE6722:
 12398              	.LBE6721:
 12399              	.LBE6720:
 12400              	.LBE6714:
 12401              	.LBE6713:
 12402              	.LBE6712:
 12403              	.LBB6724:
 12404              	.LBI6724:
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: public _Bit_alloc_type, public _Bvector_impl_data
 12405              		.loc 1 495 14 is_stmt 1 view .LVU2580
 12406              	.LBB6725:
 12407              	.LBI6725:
 12408              		.loc 15 162 7 view .LVU2581
 12409              	.LBB6726:
 12410              	.LBI6726:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12411              		.loc 5 89 7 view .LVU2582
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 413


 12412              		.loc 5 89 7 is_stmt 0 view .LVU2583
 12413              	.LBE6726:
 12414              	.LBE6725:
 12415              	.LBE6724:
 12416              	.LBE6711:
 12417              	.LBE6710:
 12418              	.LBE6709:
 12419              	.LBB6727:
 12420              	.LBI6727:
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 12421              		.loc 1 737 7 is_stmt 1 view .LVU2584
 12422              	.LBB6728:
 12423              	.LBB6729:
 12424              	.LBI6729:
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { this->_M_deallocate(); }
 12425              		.loc 1 549 7 view .LVU2585
 12426              	.LBB6730:
 12427              	.LBI6730:
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 12428              		.loc 1 560 7 view .LVU2586
 12429              	.LBB6731:
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 12430              		.loc 1 562 23 is_stmt 0 view .LVU2587
 12431 0282 0998     		ldr	r0, [sp, #36]
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 12432              		.loc 1 562 2 view .LVU2588
 12433 0284 18B1     		cbz	r0, .L244
 12434              	.LVL501:
 12435              	.LBB6732:
 12436              	.LBB6733:
 12437              	.LBI6733:
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 12438              		.loc 1 513 2 is_stmt 1 view .LVU2589
 12439              	.LBB6734:
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    return std::__addressof(this->_M_end_of_storage[-1]) + 1;
 12440              		.loc 1 515 14 is_stmt 0 view .LVU2590
 12441 0286 0D99     		ldr	r1, [sp, #52]
 12442              	.LVL502:
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    return std::__addressof(this->_M_end_of_storage[-1]) + 1;
 12443              		.loc 1 515 14 view .LVU2591
 12444              	.LBE6734:
 12445              	.LBE6733:
 12446              	.LBB6735:
 12447              	.LBI6735:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 12448              		.loc 6 491 7 is_stmt 1 view .LVU2592
 12449              	.LBB6736:
 12450              	.LBI6736:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 12451              		.loc 5 120 7 view .LVU2593
 12452              	.LBB6737:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 12453              		.loc 5 133 19 is_stmt 0 view .LVU2594
 12454 0288 091A     		subs	r1, r1, r0
 12455              	.LVL503:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 12456              		.loc 5 133 19 view .LVU2595
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 414


 12457 028a FFF7FEFF 		bl	_ZdlPvj
 12458              	.LVL504:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 12459              		.loc 5 133 19 view .LVU2596
 12460              	.LBE6737:
 12461              	.LBE6736:
 12462              	.LBE6735:
 12463              	.LBB6738:
 12464              	.LBI6738:
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 12465              		.loc 1 488 2 is_stmt 1 view .LVU2597
 12466              	.LBB6739:
 12467              	.LBB6740:
 12468              	.LBI6740:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 12469              		.loc 1 241 5 view .LVU2598
 12470              	.LBB6741:
 12471              	.LBI6741:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 12472              		.loc 1 148 5 view .LVU2599
 12473              	.L244:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 12474              		.loc 1 148 5 is_stmt 0 view .LVU2600
 12475              	.LBE6741:
 12476              	.LBE6740:
 12477              	.LBE6739:
 12478              	.LBE6738:
 12479              	.LBE6732:
 12480              	.LBE6731:
 12481              	.LBE6730:
 12482              	.LBB6742:
 12483              	.LBI6742:
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: public _Bit_alloc_type, public _Bvector_impl_data
 12484              		.loc 1 495 14 is_stmt 1 view .LVU2601
 12485              	.LBB6743:
 12486              	.LBI6743:
 12487              		.loc 15 162 7 view .LVU2602
 12488              	.LBB6744:
 12489              	.LBI6744:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12490              		.loc 5 89 7 view .LVU2603
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12491              		.loc 5 89 7 is_stmt 0 view .LVU2604
 12492              	.LBE6744:
 12493              	.LBE6743:
 12494              	.LBE6742:
 12495              	.LBE6729:
 12496              	.LBE6728:
 12497              	.LBE6727:
 12498              	.LBB6745:
 12499              	.LBI6745:
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 12500              		.loc 1 737 7 is_stmt 1 view .LVU2605
 12501              	.LBB6746:
 12502              	.LBI6746:
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { this->_M_deallocate(); }
 12503              		.loc 1 549 7 view .LVU2606
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 415


 12504              	.LBB6747:
 12505              	.LBI6747:
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 12506              		.loc 1 560 7 view .LVU2607
 12507              	.LBB6748:
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 12508              		.loc 1 562 23 is_stmt 0 view .LVU2608
 12509 028e 0498     		ldr	r0, [sp, #16]
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 12510              		.loc 1 562 2 view .LVU2609
 12511 0290 18B1     		cbz	r0, .L245
 12512              	.LVL505:
 12513              	.LBB6749:
 12514              	.LBB6750:
 12515              	.LBI6750:
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 12516              		.loc 1 513 2 is_stmt 1 view .LVU2610
 12517              	.LBB6751:
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    return std::__addressof(this->_M_end_of_storage[-1]) + 1;
 12518              		.loc 1 515 14 is_stmt 0 view .LVU2611
 12519 0292 0899     		ldr	r1, [sp, #32]
 12520              	.LVL506:
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    return std::__addressof(this->_M_end_of_storage[-1]) + 1;
 12521              		.loc 1 515 14 view .LVU2612
 12522              	.LBE6751:
 12523              	.LBE6750:
 12524              	.LBB6752:
 12525              	.LBI6752:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 12526              		.loc 6 491 7 is_stmt 1 view .LVU2613
 12527              	.LBB6753:
 12528              	.LBI6753:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 12529              		.loc 5 120 7 view .LVU2614
 12530              	.LBB6754:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 12531              		.loc 5 133 19 is_stmt 0 view .LVU2615
 12532 0294 091A     		subs	r1, r1, r0
 12533              	.LVL507:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 12534              		.loc 5 133 19 view .LVU2616
 12535 0296 FFF7FEFF 		bl	_ZdlPvj
 12536              	.LVL508:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 12537              		.loc 5 133 19 view .LVU2617
 12538              	.LBE6754:
 12539              	.LBE6753:
 12540              	.LBE6752:
 12541              	.LBB6755:
 12542              	.LBI6755:
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 12543              		.loc 1 488 2 is_stmt 1 view .LVU2618
 12544              	.LBB6756:
 12545              	.LBB6757:
 12546              	.LBI6757:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 12547              		.loc 1 241 5 view .LVU2619
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 416


 12548              	.LBB6758:
 12549              	.LBI6758:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 12550              		.loc 1 148 5 view .LVU2620
 12551              	.L245:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 12552              		.loc 1 148 5 is_stmt 0 view .LVU2621
 12553              	.LBE6758:
 12554              	.LBE6757:
 12555              	.LBE6756:
 12556              	.LBE6755:
 12557              	.LBE6749:
 12558              	.LBE6748:
 12559              	.LBE6747:
 12560              	.LBB6759:
 12561              	.LBI6759:
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: public _Bit_alloc_type, public _Bvector_impl_data
 12562              		.loc 1 495 14 is_stmt 1 view .LVU2622
 12563              	.LBB6760:
 12564              	.LBI6760:
 12565              		.loc 15 162 7 view .LVU2623
 12566              	.LBB6761:
 12567              	.LBI6761:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12568              		.loc 5 89 7 view .LVU2624
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12569              		.loc 5 89 7 is_stmt 0 view .LVU2625
 12570              	.LBE6761:
 12571              	.LBE6760:
 12572              	.LBE6759:
 12573              	.LBE6746:
 12574              	.LBE6745:
 12575              	.LBE6708:
 12576              	.LBE6707:
 12577              	.LBB6762:
 12578              	.LBI6762:
 12579              		.loc 13 32 12 is_stmt 1 view .LVU2626
 12580              	.LBB6763:
 12581              	.LBB6764:
 12582              	.LBI6764:
  26:Sequencer.h   ****         std::vector<bool> kick_steps;
 12583              		.loc 13 26 12 view .LVU2627
 12584              	.LBB6765:
 12585              	.LBI6765:
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 12586              		.loc 1 737 7 view .LVU2628
 12587              	.LBB6766:
 12588              	.LBB6767:
 12589              	.LBI6767:
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { this->_M_deallocate(); }
 12590              		.loc 1 549 7 view .LVU2629
 12591              	.LBB6768:
 12592              	.LBI6768:
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 12593              		.loc 1 560 7 view .LVU2630
 12594              	.LBB6769:
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 417


 12595              		.loc 1 562 23 is_stmt 0 view .LVU2631
 12596 029a 1D98     		ldr	r0, [sp, #116]
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 12597              		.loc 1 562 2 view .LVU2632
 12598 029c 18B1     		cbz	r0, .L246
 12599              	.LVL509:
 12600              	.LBB6770:
 12601              	.LBB6771:
 12602              	.LBI6771:
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 12603              		.loc 1 513 2 is_stmt 1 view .LVU2633
 12604              	.LBB6772:
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    return std::__addressof(this->_M_end_of_storage[-1]) + 1;
 12605              		.loc 1 515 14 is_stmt 0 view .LVU2634
 12606 029e 2199     		ldr	r1, [sp, #132]
 12607              	.LVL510:
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    return std::__addressof(this->_M_end_of_storage[-1]) + 1;
 12608              		.loc 1 515 14 view .LVU2635
 12609              	.LBE6772:
 12610              	.LBE6771:
 12611              	.LBB6773:
 12612              	.LBI6773:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 12613              		.loc 6 491 7 is_stmt 1 view .LVU2636
 12614              	.LBB6774:
 12615              	.LBI6774:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 12616              		.loc 5 120 7 view .LVU2637
 12617              	.LBB6775:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 12618              		.loc 5 133 19 is_stmt 0 view .LVU2638
 12619 02a0 091A     		subs	r1, r1, r0
 12620              	.LVL511:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 12621              		.loc 5 133 19 view .LVU2639
 12622 02a2 FFF7FEFF 		bl	_ZdlPvj
 12623              	.LVL512:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 12624              		.loc 5 133 19 view .LVU2640
 12625              	.LBE6775:
 12626              	.LBE6774:
 12627              	.LBE6773:
 12628              	.LBB6776:
 12629              	.LBI6776:
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 12630              		.loc 1 488 2 is_stmt 1 view .LVU2641
 12631              	.LBB6777:
 12632              	.LBB6778:
 12633              	.LBI6778:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 12634              		.loc 1 241 5 view .LVU2642
 12635              	.LBB6779:
 12636              	.LBI6779:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 12637              		.loc 1 148 5 view .LVU2643
 12638              	.L246:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 418


 12639              		.loc 1 148 5 is_stmt 0 view .LVU2644
 12640              	.LBE6779:
 12641              	.LBE6778:
 12642              	.LBE6777:
 12643              	.LBE6776:
 12644              	.LBE6770:
 12645              	.LBE6769:
 12646              	.LBE6768:
 12647              	.LBB6780:
 12648              	.LBI6780:
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: public _Bit_alloc_type, public _Bvector_impl_data
 12649              		.loc 1 495 14 is_stmt 1 view .LVU2645
 12650              	.LBB6781:
 12651              	.LBI6781:
 12652              		.loc 15 162 7 view .LVU2646
 12653              	.LBB6782:
 12654              	.LBI6782:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12655              		.loc 5 89 7 view .LVU2647
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12656              		.loc 5 89 7 is_stmt 0 view .LVU2648
 12657              	.LBE6782:
 12658              	.LBE6781:
 12659              	.LBE6780:
 12660              	.LBE6767:
 12661              	.LBE6766:
 12662              	.LBE6765:
 12663              	.LBB6783:
 12664              	.LBI6783:
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 12665              		.loc 1 737 7 is_stmt 1 view .LVU2649
 12666              	.LBB6784:
 12667              	.LBB6785:
 12668              	.LBI6785:
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { this->_M_deallocate(); }
 12669              		.loc 1 549 7 view .LVU2650
 12670              	.LBB6786:
 12671              	.LBI6786:
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 12672              		.loc 1 560 7 view .LVU2651
 12673              	.LBB6787:
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 12674              		.loc 1 562 23 is_stmt 0 view .LVU2652
 12675 02a6 1898     		ldr	r0, [sp, #96]
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 12676              		.loc 1 562 2 view .LVU2653
 12677 02a8 18B1     		cbz	r0, .L247
 12678              	.LVL513:
 12679              	.LBB6788:
 12680              	.LBB6789:
 12681              	.LBI6789:
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 12682              		.loc 1 513 2 is_stmt 1 view .LVU2654
 12683              	.LBB6790:
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    return std::__addressof(this->_M_end_of_storage[-1]) + 1;
 12684              		.loc 1 515 14 is_stmt 0 view .LVU2655
 12685 02aa 1C99     		ldr	r1, [sp, #112]
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 419


 12686              	.LVL514:
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    return std::__addressof(this->_M_end_of_storage[-1]) + 1;
 12687              		.loc 1 515 14 view .LVU2656
 12688              	.LBE6790:
 12689              	.LBE6789:
 12690              	.LBB6791:
 12691              	.LBI6791:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 12692              		.loc 6 491 7 is_stmt 1 view .LVU2657
 12693              	.LBB6792:
 12694              	.LBI6792:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 12695              		.loc 5 120 7 view .LVU2658
 12696              	.LBB6793:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 12697              		.loc 5 133 19 is_stmt 0 view .LVU2659
 12698 02ac 091A     		subs	r1, r1, r0
 12699              	.LVL515:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 12700              		.loc 5 133 19 view .LVU2660
 12701 02ae FFF7FEFF 		bl	_ZdlPvj
 12702              	.LVL516:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 12703              		.loc 5 133 19 view .LVU2661
 12704              	.LBE6793:
 12705              	.LBE6792:
 12706              	.LBE6791:
 12707              	.LBB6794:
 12708              	.LBI6794:
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 12709              		.loc 1 488 2 is_stmt 1 view .LVU2662
 12710              	.LBB6795:
 12711              	.LBB6796:
 12712              	.LBI6796:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 12713              		.loc 1 241 5 view .LVU2663
 12714              	.LBB6797:
 12715              	.LBI6797:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 12716              		.loc 1 148 5 view .LVU2664
 12717              	.L247:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 12718              		.loc 1 148 5 is_stmt 0 view .LVU2665
 12719              	.LBE6797:
 12720              	.LBE6796:
 12721              	.LBE6795:
 12722              	.LBE6794:
 12723              	.LBE6788:
 12724              	.LBE6787:
 12725              	.LBE6786:
 12726              	.LBB6798:
 12727              	.LBI6798:
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: public _Bit_alloc_type, public _Bvector_impl_data
 12728              		.loc 1 495 14 is_stmt 1 view .LVU2666
 12729              	.LBB6799:
 12730              	.LBI6799:
 12731              		.loc 15 162 7 view .LVU2667
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 420


 12732              	.LBB6800:
 12733              	.LBI6800:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12734              		.loc 5 89 7 view .LVU2668
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12735              		.loc 5 89 7 is_stmt 0 view .LVU2669
 12736              	.LBE6800:
 12737              	.LBE6799:
 12738              	.LBE6798:
 12739              	.LBE6785:
 12740              	.LBE6784:
 12741              	.LBE6783:
 12742              	.LBB6801:
 12743              	.LBI6801:
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 12744              		.loc 1 737 7 is_stmt 1 view .LVU2670
 12745              	.LBB6802:
 12746              	.LBI6802:
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       { this->_M_deallocate(); }
 12747              		.loc 1 549 7 view .LVU2671
 12748              	.LBB6803:
 12749              	.LBI6803:
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****       {
 12750              		.loc 1 560 7 view .LVU2672
 12751              	.LBB6804:
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 12752              		.loc 1 562 23 is_stmt 0 view .LVU2673
 12753 02b2 1398     		ldr	r0, [sp, #76]
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	  {
 12754              		.loc 1 562 2 view .LVU2674
 12755 02b4 18B1     		cbz	r0, .L242
 12756              	.LVL517:
 12757              	.LBB6805:
 12758              	.LBB6806:
 12759              	.LBI6806:
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 12760              		.loc 1 513 2 is_stmt 1 view .LVU2675
 12761              	.LBB6807:
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    return std::__addressof(this->_M_end_of_storage[-1]) + 1;
 12762              		.loc 1 515 14 is_stmt 0 view .LVU2676
 12763 02b6 1799     		ldr	r1, [sp, #92]
 12764              	.LVL518:
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	    return std::__addressof(this->_M_end_of_storage[-1]) + 1;
 12765              		.loc 1 515 14 view .LVU2677
 12766              	.LBE6807:
 12767              	.LBE6806:
 12768              	.LBB6808:
 12769              	.LBI6808:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 12770              		.loc 6 491 7 is_stmt 1 view .LVU2678
 12771              	.LBB6809:
 12772              	.LBI6809:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 12773              		.loc 5 120 7 view .LVU2679
 12774              	.LBB6810:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 12775              		.loc 5 133 19 is_stmt 0 view .LVU2680
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 421


 12776 02b8 091A     		subs	r1, r1, r0
 12777              	.LVL519:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 12778              		.loc 5 133 19 view .LVU2681
 12779 02ba FFF7FEFF 		bl	_ZdlPvj
 12780              	.LVL520:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 12781              		.loc 5 133 19 view .LVU2682
 12782              	.LBE6810:
 12783              	.LBE6809:
 12784              	.LBE6808:
 12785              	.LBB6811:
 12786              	.LBI6811:
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	{
 12787              		.loc 1 488 2 is_stmt 1 view .LVU2683
 12788              	.LBB6812:
 12789              	.LBB6813:
 12790              	.LBI6813:
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 
 12791              		.loc 1 241 5 view .LVU2684
 12792              	.LBB6814:
 12793              	.LBI6814:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 12794              		.loc 1 148 5 view .LVU2685
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h ****     : _M_p(__x), _M_offset(__y) { }
 12795              		.loc 1 148 5 is_stmt 0 view .LVU2686
 12796              	.LBE6814:
 12797              	.LBE6813:
 12798              	.LBE6812:
 12799              	.LBE6811:
 12800              	.LBE6805:
 12801              	.LBE6804:
 12802              	.LBE6803:
 12803              	.LBB6815:
 12804              	.LBI6815:
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_bvector.h **** 	: public _Bit_alloc_type, public _Bvector_impl_data
 12805              		.loc 1 495 14 is_stmt 1 view .LVU2687
 12806              	.LBB6816:
 12807              	.LBI6816:
 12808              		.loc 15 162 7 view .LVU2688
 12809              	.LBB6817:
 12810              	.LBI6817:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12811              		.loc 5 89 7 view .LVU2689
 12812              	.L242:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12813              		.loc 5 89 7 is_stmt 0 view .LVU2690
 12814              	.LBE6817:
 12815              	.LBE6816:
 12816              	.LBE6815:
 12817              	.LBE6802:
 12818              	.LBE6801:
 12819              	.LBE6764:
 12820              	.LBE6763:
 12821              	.LBE6762:
 110:Sequencer.cpp **** }
 12822              		.loc 7 110 1 view .LVU2691
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 422


 12823 02be 27B0     		add	sp, sp, #156
 12824              		.cfi_def_cfa_offset 36
 12825              		@ sp needed
 12826 02c0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 12827              	.LVL521:
 12828              	.L269:
 12829              		.loc 7 110 1 view .LVU2692
 12830              		.align	2
 12831              	.L268:
 12832 02c4 00000000 		.word	.LANCHOR0
 12833              		.cfi_endproc
 12834              	.LFE3600:
 12836              		.section	.text._ZN9SequencerC2EfR9DrumSynthR10ChordSynth,"ax",%progbits
 12837              		.align	1
 12838              		.p2align 2,,3
 12839              		.global	_ZN9SequencerC2EfR9DrumSynthR10ChordSynth
 12840              		.syntax unified
 12841              		.thumb
 12842              		.thumb_func
 12843              		.fpu fpv5-d16
 12845              	_ZN9SequencerC2EfR9DrumSynthR10ChordSynth:
 12846              	.LVL522:
 12847              	.LFB3596:
  18:Sequencer.cpp ****     : sample_rate(sample_rate), drum_synth(drum_synth), chord_synth(chord_synth), bpm(105) {
 12848              		.loc 7 18 1 is_stmt 1 view -0
 12849              		.cfi_startproc
 12850              		@ args = 0, pretend = 0, frame = 0
 12851              		@ frame_needed = 0, uses_anonymous_args = 0
 12852              	.LBB6818:
 12853              	.LBB6819:
 12854              	.LBB6820:
 12855              	.LBB6821:
 12856              	.LBB6822:
 12857              	.LBB6823:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 12858              		.loc 8 98 47 is_stmt 0 view .LVU2694
 12859 0000 0023     		movs	r3, #0
 12860              	.LBE6823:
 12861              	.LBE6822:
 12862              	.LBE6821:
 12863              	.LBE6820:
 12864              	.LBE6819:
 12865              	.LBE6818:
  18:Sequencer.cpp ****     : sample_rate(sample_rate), drum_synth(drum_synth), chord_synth(chord_synth), bpm(105) {
 12866              		.loc 7 18 1 view .LVU2695
 12867 0002 10B5     		push	{r4, lr}
 12868              		.cfi_def_cfa_offset 8
 12869              		.cfi_offset 4, -8
 12870              		.cfi_offset 14, -4
 12871              	.LBB6835:
 12872              	.LBB6833:
 12873              	.LBB6831:
 12874              	.LBB6829:
 12875              	.LBB6825:
 12876              	.LBB6824:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 12877              		.loc 8 98 47 view .LVU2696
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 423


 12878 0004 C0E90333 		strd	r3, r3, [r0, #12]
 12879 0008 4361     		str	r3, [r0, #20]
 12880              	.LBE6824:
 12881              	.LBE6825:
 12882              	.LBE6829:
 12883              	.LBE6831:
 12884              	.LBE6833:
 12885              	.LBE6835:
  18:Sequencer.cpp ****     : sample_rate(sample_rate), drum_synth(drum_synth), chord_synth(chord_synth), bpm(105) {
 12886              		.loc 7 18 1 view .LVU2697
 12887 000a 0446     		mov	r4, r0
 12888              	.LBB6836:
  19:Sequencer.cpp ****         init_sequences();
 12889              		.loc 7 19 90 view .LVU2698
 12890 000c 0376     		strb	r3, [r0, #24]
 12891 000e 80F82430 		strb	r3, [r0, #36]
 12892 0012 6923     		movs	r3, #105
 12893 0014 80ED010A 		vstr.32	s0, [r0, #4]
 12894              	.LVL523:
 12895              	.LBB6834:
 12896              	.LBI6819:
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 12897              		.loc 8 487 7 is_stmt 1 view .LVU2699
 12898              	.LBB6832:
 12899              	.LBI6820:
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 12900              		.loc 8 288 7 view .LVU2700
 12901              	.LBB6830:
 12902              	.LBI6821:
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    is_nothrow_default_constructible<_Tp_alloc_type>::value)
 12903              		.loc 8 131 2 view .LVU2701
 12904              	.LBB6826:
 12905              	.LBI6826:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 12906              		.loc 15 144 7 view .LVU2702
 12907              	.LBB6827:
 12908              	.LBI6827:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12909              		.loc 5 79 7 view .LVU2703
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12910              		.loc 5 79 7 is_stmt 0 view .LVU2704
 12911              	.LBE6827:
 12912              	.LBE6826:
 12913              	.LBB6828:
 12914              	.LBI6822:
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 12915              		.loc 8 97 2 is_stmt 1 view .LVU2705
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 12916              		.loc 8 97 2 is_stmt 0 view .LVU2706
 12917              	.LBE6828:
 12918              	.LBE6830:
 12919              	.LBE6832:
 12920              	.LBE6834:
  20:Sequencer.cpp ****     }
 12921              		.loc 7 20 9 is_stmt 1 view .LVU2707
  19:Sequencer.cpp ****         init_sequences();
 12922              		.loc 7 19 90 is_stmt 0 view .LVU2708
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 424


 12923 0018 0370     		strb	r3, [r0]
 12924 001a C0E90712 		strd	r1, r2, [r0, #28]
  20:Sequencer.cpp ****     }
 12925              		.loc 7 20 23 view .LVU2709
 12926 001e FFF7FEFF 		bl	_ZN9Sequencer14init_sequencesEv
 12927              	.LVL524:
  20:Sequencer.cpp ****     }
 12928              		.loc 7 20 23 view .LVU2710
 12929              	.LBE6836:
  21:Sequencer.cpp **** 
 12930              		.loc 7 21 5 view .LVU2711
 12931 0022 2046     		mov	r0, r4
 12932 0024 10BD     		pop	{r4, pc}
  21:Sequencer.cpp **** 
 12933              		.loc 7 21 5 view .LVU2712
 12934              		.cfi_endproc
 12935              	.LFE3596:
 12937              		.global	_ZN9SequencerC1EfR9DrumSynthR10ChordSynth
 12938              		.thumb_set _ZN9SequencerC1EfR9DrumSynthR10ChordSynth,_ZN9SequencerC2EfR9DrumSynthR10ChordSynth
 12939 0026 00BF     		.section	.rodata
 12940              		.align	2
 12941              		.set	.LANCHOR0,. + 0
 12942              	.LC0:
 12943 0000 01       		.byte	1
 12944 0001 00       		.byte	0
 12945 0002 00       		.byte	0
 12946 0003 00       		.byte	0
 12947 0004 01       		.byte	1
 12948 0005 00       		.byte	0
 12949 0006 00       		.byte	0
 12950 0007 00       		.byte	0
 12951 0008 01       		.byte	1
 12952 0009 00       		.byte	0
 12953 000a 00       		.byte	0
 12954 000b 00       		.byte	0
 12955 000c 01       		.byte	1
 12956 000d 00       		.byte	0
 12957 000e 00       		.byte	0
 12958 000f 00       		.byte	0
 12959              	.LC1:
 12960 0010 01       		.byte	1
 12961 0011 00       		.byte	0
 12962 0012 01       		.byte	1
 12963 0013 00       		.byte	0
 12964 0014 01       		.byte	1
 12965 0015 00       		.byte	0
 12966 0016 01       		.byte	1
 12967 0017 00       		.byte	0
 12968 0018 01       		.byte	1
 12969 0019 00       		.byte	0
 12970 001a 01       		.byte	1
 12971 001b 00       		.byte	0
 12972 001c 01       		.byte	1
 12973 001d 00       		.byte	0
 12974 001e 01       		.byte	1
 12975 001f 00       		.byte	0
 12976              	.LC2:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 425


 12977 0020 01       		.byte	1
 12978 0021 01       		.byte	1
 12979 0022 01       		.byte	1
 12980 0023 00       		.byte	0
 12981 0024 01       		.byte	1
 12982 0025 00       		.byte	0
 12983 0026 01       		.byte	1
 12984 0027 00       		.byte	0
 12985 0028 01       		.byte	1
 12986 0029 01       		.byte	1
 12987 002a 01       		.byte	1
 12988 002b 00       		.byte	0
 12989 002c 01       		.byte	1
 12990 002d 00       		.byte	0
 12991 002e 01       		.byte	1
 12992 002f 00       		.byte	0
 12993              	.LC3:
 12994 0030 01       		.byte	1
 12995 0031 00       		.byte	0
 12996 0032 00       		.byte	0
 12997 0033 00       		.byte	0
 12998 0034 01       		.byte	1
 12999 0035 00       		.byte	0
 13000 0036 00       		.byte	0
 13001 0037 00       		.byte	0
 13002 0038 01       		.byte	1
 13003 0039 01       		.byte	1
 13004 003a 00       		.byte	0
 13005 003b 00       		.byte	0
 13006 003c 01       		.byte	1
 13007 003d 00       		.byte	0
 13008 003e 00       		.byte	0
 13009 003f 00       		.byte	0
 13010              	.LC4:
 13011 0040 00       		.byte	0
 13012 0041 00       		.byte	0
 13013 0042 00       		.byte	0
 13014 0043 01       		.byte	1
 13015 0044 00       		.byte	0
 13016 0045 00       		.byte	0
 13017 0046 01       		.byte	1
 13018 0047 00       		.byte	0
 13019 0048 00       		.byte	0
 13020 0049 00       		.byte	0
 13021 004a 00       		.byte	0
 13022 004b 01       		.byte	1
 13023 004c 00       		.byte	0
 13024 004d 00       		.byte	0
 13025 004e 01       		.byte	1
 13026 004f 00       		.byte	0
 13027              	.LC5:
 13028 0050 01       		.byte	1
 13029 0051 00       		.byte	0
 13030 0052 01       		.byte	1
 13031 0053 00       		.byte	0
 13032 0054 01       		.byte	1
 13033 0055 00       		.byte	0
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 426


 13034 0056 01       		.byte	1
 13035 0057 00       		.byte	0
 13036 0058 01       		.byte	1
 13037 0059 01       		.byte	1
 13038 005a 01       		.byte	1
 13039 005b 00       		.byte	0
 13040 005c 01       		.byte	1
 13041 005d 00       		.byte	0
 13042 005e 01       		.byte	1
 13043 005f 00       		.byte	0
 13044              	.LC6:
 13045 0060 00       		.byte	0
 13046 0061 00       		.byte	0
 13047 0062 00       		.byte	0
 13048 0063 01       		.byte	1
 13049 0064 00       		.byte	0
 13050 0065 00       		.byte	0
 13051 0066 01       		.byte	1
 13052 0067 01       		.byte	1
 13053 0068 00       		.byte	0
 13054 0069 00       		.byte	0
 13055 006a 00       		.byte	0
 13056 006b 01       		.byte	1
 13057 006c 00       		.byte	0
 13058 006d 00       		.byte	0
 13059 006e 01       		.byte	1
 13060 006f 01       		.byte	1
 13061              	.LC7:
 13062 0070 01       		.byte	1
 13063 0071 01       		.byte	1
 13064 0072 01       		.byte	1
 13065 0073 01       		.byte	1
 13066 0074 01       		.byte	1
 13067 0075 01       		.byte	1
 13068 0076 01       		.byte	1
 13069 0077 01       		.byte	1
 13070 0078 01       		.byte	1
 13071 0079 01       		.byte	1
 13072 007a 01       		.byte	1
 13073 007b 01       		.byte	1
 13074 007c 01       		.byte	1
 13075 007d 01       		.byte	1
 13076 007e 01       		.byte	1
 13077 007f 01       		.byte	1
 13078              	.LC8:
 13079 0080 00       		.byte	0
 13080 0081 00       		.byte	0
 13081 0082 01       		.byte	1
 13082 0083 00       		.byte	0
 13083 0084 01       		.byte	1
 13084 0085 00       		.byte	0
 13085 0086 00       		.byte	0
 13086 0087 00       		.byte	0
 13087 0088 01       		.byte	1
 13088 0089 00       		.byte	0
 13089 008a 00       		.byte	0
 13090 008b 01       		.byte	1
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 427


 13091 008c 00       		.byte	0
 13092 008d 00       		.byte	0
 13093 008e 01       		.byte	1
 13094 008f 00       		.byte	0
 13095              	.LC9:
 13096 0090 01       		.byte	1
 13097 0091 00       		.byte	0
 13098 0092 00       		.byte	0
 13099 0093 00       		.byte	0
 13100 0094 01       		.byte	1
 13101 0095 00       		.byte	0
 13102 0096 00       		.byte	0
 13103 0097 00       		.byte	0
 13104 0098 01       		.byte	1
 13105 0099 00       		.byte	0
 13106 009a 00       		.byte	0
 13107 009b 00       		.byte	0
 13108 009c 01       		.byte	1
 13109 009d 00       		.byte	0
 13110 009e 01       		.byte	1
 13111 009f 00       		.byte	0
 13112              	.LC10:
 13113 00a0 01       		.byte	1
 13114 00a1 00       		.byte	0
 13115 00a2 01       		.byte	1
 13116 00a3 00       		.byte	0
 13117 00a4 01       		.byte	1
 13118 00a5 00       		.byte	0
 13119 00a6 01       		.byte	1
 13120 00a7 00       		.byte	0
 13121 00a8 01       		.byte	1
 13122 00a9 00       		.byte	0
 13123 00aa 01       		.byte	1
 13124 00ab 00       		.byte	0
 13125 00ac 01       		.byte	1
 13126 00ad 00       		.byte	0
 13127 00ae 01       		.byte	1
 13128 00af 00       		.byte	0
 13129              		.text
 13130              	.Letext0:
 13131              		.file 18 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 13132              		.file 19 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 13133              		.file 20 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdint.h"
 13134              		.file 21 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stddef.h"
 13135              		.file 22 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cmath"
 13136              		.file 23 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\std_abs.h"
 13137              		.file 24 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdint"
 13138              		.file 25 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\type_traits"
 13139              		.file 26 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\arm-none-eabi\\t
 13140              		.file 27 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_pair.h
 13141              		.file 28 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\cpp_type_t
 13142              		.file 29 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_iterat
 13143              		.file 30 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\debug\\debug.h"
 13144              		.file 31 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\exception_
 13145              		.file 32 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdlib"
 13146              		.file 33 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cwchar"
 13147              		.file 34 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\clocale"
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 428


 13148              		.file 35 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdio"
 13149              		.file 36 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\basic_stri
 13150              		.file 37 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\charconv.h
 13151              		.file 38 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\algorithmf
 13152              		.file 39 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstring"
 13153              		.file 40 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\move.h"
 13154              		.file 41 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\predefined
 13155              		.file 42 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_types.h"
 13156              		.file 43 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\reent.h"
 13157              		.file 44 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\lock.h"
 13158              		.file 45 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\math.h"
 13159              		.file 46 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdlib.h"
 13160              		.file 47 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\math.h"
 13161              		.file 48 "../../DaisySP//Source/Control/adenv.h"
 13162              		.file 49 "../../DaisySP//Source/Utility/dsp.h"
 13163              		.file 50 "../../DaisySP//Source/Synthesis/oscillator.h"
 13164              		.file 51 "../../DaisySP//Source/Filters/svf.h"
 13165              		.file 52 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stdarg.h"
 13166              		.file 53 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\wchar.h"
 13167              		.file 54 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\locale.h"
 13168              		.file 55 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdio.h"
 13169              		.file 56 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\stdlib.h"
 13170              		.file 57 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\string.h"
 13171              		.file 58 "DrumSynth.h"
 13172              		.file 59 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\functexcep
 13173              		.file 60 "<built-in>"
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccEUqbss.s 			page 429


DEFINED SYMBOLS
                            *ABS*:00000000 Sequencer.cpp
C:\Users\theja\AppData\Local\Temp\ccEUqbss.s:17     .text._ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator.isra.0:00000000 $t
C:\Users\theja\AppData\Local\Temp\ccEUqbss.s:25     .text._ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator.isra.0:00000000 _ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator.isra.0
C:\Users\theja\AppData\Local\Temp\ccEUqbss.s:607    .rodata._ZNSt6vectorIbSaIbEE13_M_assign_auxIPKbEEvT_S5_St20forward_iterator_tag.isra.0.str1.4:00000000 $d
C:\Users\theja\AppData\Local\Temp\ccEUqbss.s:611    .text._ZNSt6vectorIbSaIbEE13_M_assign_auxIPKbEEvT_S5_St20forward_iterator_tag.isra.0:00000000 $t
C:\Users\theja\AppData\Local\Temp\ccEUqbss.s:618    .text._ZNSt6vectorIbSaIbEE13_M_assign_auxIPKbEEvT_S5_St20forward_iterator_tag.isra.0:00000000 _ZNSt6vectorIbSaIbEE13_M_assign_auxIPKbEEvT_S5_St20forward_iterator_tag.isra.0
C:\Users\theja\AppData\Local\Temp\ccEUqbss.s:3900   .text._ZNSt6vectorIbSaIbEE13_M_assign_auxIPKbEEvT_S5_St20forward_iterator_tag.isra.0:000002b4 $d
C:\Users\theja\AppData\Local\Temp\ccEUqbss.s:3919   .text._ZNSt6vectorIbSaIbEEaSERKS1_.isra.0:00000000 $t
C:\Users\theja\AppData\Local\Temp\ccEUqbss.s:3926   .text._ZNSt6vectorIbSaIbEEaSERKS1_.isra.0:00000000 _ZNSt6vectorIbSaIbEEaSERKS1_.isra.0
C:\Users\theja\AppData\Local\Temp\ccEUqbss.s:4689   .text._ZN9Sequencer4tickEv:00000000 $t
C:\Users\theja\AppData\Local\Temp\ccEUqbss.s:4697   .text._ZN9Sequencer4tickEv:00000000 _ZN9Sequencer4tickEv
C:\Users\theja\AppData\Local\Temp\ccEUqbss.s:5135   .text._ZN9Sequencer4tickEv:000000fc $d
C:\Users\theja\AppData\Local\Temp\ccEUqbss.s:5140   .text._ZN9Sequencer14scroll_patternEb:00000000 $t
C:\Users\theja\AppData\Local\Temp\ccEUqbss.s:5148   .text._ZN9Sequencer14scroll_patternEb:00000000 _ZN9Sequencer14scroll_patternEb
C:\Users\theja\AppData\Local\Temp\ccEUqbss.s:5272   .text._ZN9Sequencer14scroll_patternEb:00000054 $d
C:\Users\theja\AppData\Local\Temp\ccEUqbss.s:5277   .rodata._ZNSt6vectorIN9Sequencer8SequenceESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_.str1.4:00000000 $d
C:\Users\theja\AppData\Local\Temp\ccEUqbss.s:5281   .text._ZNSt6vectorIN9Sequencer8SequenceESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:00000000 $t
C:\Users\theja\AppData\Local\Temp\ccEUqbss.s:5289   .text._ZNSt6vectorIN9Sequencer8SequenceESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:00000000 _ZNSt6vectorIN9Sequencer8SequenceESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
C:\Users\theja\AppData\Local\Temp\ccEUqbss.s:8208   .text._ZNSt6vectorIN9Sequencer8SequenceESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:00000344 $d
C:\Users\theja\AppData\Local\Temp\ccEUqbss.s:8243   .text._ZNSt6vectorIN9Sequencer8SequenceESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:0000034c $t
C:\Users\theja\AppData\Local\Temp\ccEUqbss.s:9122   .text._ZNSt6vectorIN9Sequencer8SequenceESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:00000468 $d
C:\Users\theja\AppData\Local\Temp\ccEUqbss.s:9130   .text._ZNSt6vectorIN9Sequencer8SequenceESaIS1_EE9push_backERKS1_:00000000 $t
C:\Users\theja\AppData\Local\Temp\ccEUqbss.s:9138   .text._ZNSt6vectorIN9Sequencer8SequenceESaIS1_EE9push_backERKS1_:00000000 _ZNSt6vectorIN9Sequencer8SequenceESaIS1_EE9push_backERKS1_
C:\Users\theja\AppData\Local\Temp\ccEUqbss.s:11178  .text._ZN9Sequencer14init_sequencesEv:00000000 $t
C:\Users\theja\AppData\Local\Temp\ccEUqbss.s:11186  .text._ZN9Sequencer14init_sequencesEv:00000000 _ZN9Sequencer14init_sequencesEv
C:\Users\theja\AppData\Local\Temp\ccEUqbss.s:12832  .text._ZN9Sequencer14init_sequencesEv:000002c4 $d
C:\Users\theja\AppData\Local\Temp\ccEUqbss.s:12837  .text._ZN9SequencerC2EfR9DrumSynthR10ChordSynth:00000000 $t
C:\Users\theja\AppData\Local\Temp\ccEUqbss.s:12845  .text._ZN9SequencerC2EfR9DrumSynthR10ChordSynth:00000000 _ZN9SequencerC2EfR9DrumSynthR10ChordSynth
C:\Users\theja\AppData\Local\Temp\ccEUqbss.s:12845  .text._ZN9SequencerC2EfR9DrumSynthR10ChordSynth:00000000 _ZN9SequencerC1EfR9DrumSynthR10ChordSynth
C:\Users\theja\AppData\Local\Temp\ccEUqbss.s:12940  .rodata:00000000 $d

UNDEFINED SYMBOLS
memmove
_Znwj
_ZdlPvj
_ZSt20__throw_length_errorPKc
_ZN9DrumSynth11trigger_hatEv
_ZN9DrumSynth13trigger_snareEv
_ZN9DrumSynth12trigger_kickEv
