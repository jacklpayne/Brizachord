ARM GAS  C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"DrumSynth.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN9DrumSynthC2Ef,"ax",%progbits
  17              		.align	1
  18              		.p2align 2,,3
  19              		.global	_ZN9DrumSynthC2Ef
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN9DrumSynthC2Ef:
  27              	.LVL0:
  28              	.LFB3527:
  29              		.file 1 "DrumSynth.cpp"
   1:DrumSynth.cpp **** /*
   2:DrumSynth.cpp **** GNU General Public License v3.0
   3:DrumSynth.cpp **** Author: Jack Payne
   4:DrumSynth.cpp **** 
   5:DrumSynth.cpp ****  _______             __                                __                                  __ 
   6:DrumSynth.cpp **** /       \           /  |                              /  |                                /  |
   7:DrumSynth.cpp **** BBBBBBB  |  ______  BB/  ________   ______    _______ BB |____    ______    ______    ____BB |
   8:DrumSynth.cpp **** BB |__BB | /      \ /  |/        | /      \  /       |BB      \  /      \  /      \  /    BB |
   9:DrumSynth.cpp **** BB    BB< /BBBBBB  |BB |BBBBBBBB/  BBBBBB  |/BBBBBBB/ BBBBBBB  |/BBBBBB  |/BBBBBB  |/BBBBBBB |
  10:DrumSynth.cpp **** BBBBBBB  |BB |  BB/ BB |  /  BB/   /    BB |BB |      BB |  BB |BB |  BB |BB |  BB/ BB |  BB |
  11:DrumSynth.cpp **** BB |__BB |BB |      BB | /BBBB/__ /BBBBBBB |BB \_____ BB |  BB |BB \__BB |BB |      BB \__BB |
  12:DrumSynth.cpp **** BB    BB/ BB |      BB |/BB      |BB    BB |BB       |BB |  BB |BB    BB/ BB |      BB    BB |
  13:DrumSynth.cpp **** BBBBBBB/  BB/       BB/ BBBBBBBB/  BBBBBBB/  BBBBBBB/ BB/   BB/  BBBBBB/  BB/        BBBBBBB/	v1.0
  14:DrumSynth.cpp **** */
  15:DrumSynth.cpp **** 
  16:DrumSynth.cpp **** #include "DrumSynth.h"
  17:DrumSynth.cpp **** 
  18:DrumSynth.cpp **** DrumSynth::DrumSynth(float sample_rate) {
  30              		.loc 1 18 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 18 1 is_stmt 0 view .LVU1
  35 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  36              		.cfi_def_cfa_offset 20
  37              		.cfi_offset 4, -20
  38              		.cfi_offset 5, -16
  39              		.cfi_offset 6, -12
  40              		.cfi_offset 7, -8
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s 			page 2


  41              		.cfi_offset 14, -4
  42 0002 2DED068B 		vpush.64	{d8, d9, d10}
  43              		.cfi_def_cfa_offset 44
  44              		.cfi_offset 80, -44
  45              		.cfi_offset 81, -40
  46              		.cfi_offset 82, -36
  47              		.cfi_offset 83, -32
  48              		.cfi_offset 84, -28
  49              		.cfi_offset 85, -24
  50              	.LBB76:
  51              	.LBB77:
  52              	.LBB78:
  53              		.file 2 "../../DaisySP//Source/Synthesis/oscillator.h"
   1:../../DaisySP//Source/Synthesis/oscillator.h **** /*
   2:../../DaisySP//Source/Synthesis/oscillator.h **** Copyright (c) 2020 Electrosmith, Corp
   3:../../DaisySP//Source/Synthesis/oscillator.h **** 
   4:../../DaisySP//Source/Synthesis/oscillator.h **** Use of this source code is governed by an MIT-style
   5:../../DaisySP//Source/Synthesis/oscillator.h **** license that can be found in the LICENSE file or at
   6:../../DaisySP//Source/Synthesis/oscillator.h **** https://opensource.org/licenses/MIT.
   7:../../DaisySP//Source/Synthesis/oscillator.h **** */
   8:../../DaisySP//Source/Synthesis/oscillator.h **** 
   9:../../DaisySP//Source/Synthesis/oscillator.h **** #pragma once
  10:../../DaisySP//Source/Synthesis/oscillator.h **** #ifndef DSY_OSCILLATOR_H
  11:../../DaisySP//Source/Synthesis/oscillator.h **** #define DSY_OSCILLATOR_H
  12:../../DaisySP//Source/Synthesis/oscillator.h **** #include <stdint.h>
  13:../../DaisySP//Source/Synthesis/oscillator.h **** #include "Utility/dsp.h"
  14:../../DaisySP//Source/Synthesis/oscillator.h **** #ifdef __cplusplus
  15:../../DaisySP//Source/Synthesis/oscillator.h **** 
  16:../../DaisySP//Source/Synthesis/oscillator.h **** namespace daisysp
  17:../../DaisySP//Source/Synthesis/oscillator.h **** {
  18:../../DaisySP//Source/Synthesis/oscillator.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  19:../../DaisySP//Source/Synthesis/oscillator.h **** */
  20:../../DaisySP//Source/Synthesis/oscillator.h **** class Oscillator
  21:../../DaisySP//Source/Synthesis/oscillator.h **** {
  22:../../DaisySP//Source/Synthesis/oscillator.h ****   public:
  23:../../DaisySP//Source/Synthesis/oscillator.h ****     Oscillator() {}
  24:../../DaisySP//Source/Synthesis/oscillator.h ****     ~Oscillator() {}
  25:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
  26:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  27:../../DaisySP//Source/Synthesis/oscillator.h ****     enum
  28:../../DaisySP//Source/Synthesis/oscillator.h ****     {
  29:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_SIN,
  30:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_TRI,
  31:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_SAW,
  32:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_RAMP,
  33:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_SQUARE,
  34:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_TRI,
  35:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SAW,
  36:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SQUARE,
  37:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_LAST,
  38:../../DaisySP//Source/Synthesis/oscillator.h ****     };
  39:../../DaisySP//Source/Synthesis/oscillator.h **** 
  40:../../DaisySP//Source/Synthesis/oscillator.h **** 
  41:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Initializes the Oscillator
  42:../../DaisySP//Source/Synthesis/oscillator.h **** 
  43:../../DaisySP//Source/Synthesis/oscillator.h ****         \param sample_rate - sample rate of the audio engine being run, and the frequency that the 
  44:../../DaisySP//Source/Synthesis/oscillator.h **** 
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s 			page 3


  45:../../DaisySP//Source/Synthesis/oscillator.h ****         Defaults:
  46:../../DaisySP//Source/Synthesis/oscillator.h ****         - freq_ = 100 Hz
  47:../../DaisySP//Source/Synthesis/oscillator.h ****         - amp_ = 0.5
  48:../../DaisySP//Source/Synthesis/oscillator.h ****         - waveform_ = sine wave.
  49:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  50:../../DaisySP//Source/Synthesis/oscillator.h ****     void Init(float sample_rate)
  51:../../DaisySP//Source/Synthesis/oscillator.h ****     {
  52:../../DaisySP//Source/Synthesis/oscillator.h ****         sr_        = sample_rate;
  53:../../DaisySP//Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
  54              		.loc 2 53 27 view .LVU2
  55 0006 F7EE009A 		vmov.f32	s19, #1.0e+0
  56              	.LBE78:
  57              	.LBE77:
  58              		.loc 1 18 39 view .LVU3
  59 000a 5F4B     		ldr	r3, .L4
  60              	.LBE76:
  61              		.loc 1 18 1 view .LVU4
  62 000c B0EE408A 		vmov.f32	s16, s0
  63              	.LBB141:
  64              		.loc 1 18 39 view .LVU5
  65 0010 0025     		movs	r5, #0
  66 0012 C0F8A430 		str	r3, [r0, #164]	@ float
  67              	.LBB87:
  68              	.LBB79:
  54:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
  55:../../DaisySP//Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
  69              		.loc 2 55 20 view .LVU6
  70 0016 F6EE008A 		vmov.f32	s17, #5.0e-1
  53:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
  71              		.loc 2 53 27 view .LVU7
  72 001a 89EE80AA 		vdiv.f32	s20, s19, s0
  73              	.LBE79:
  74              	.LBE87:
  75              		.loc 1 18 39 view .LVU8
  76 001e 5B4B     		ldr	r3, .L4+4
  77 0020 0026     		movs	r6, #0
  78              	.LBB88:
  79              	.LBB80:
  54:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
  80              		.loc 2 54 20 view .LVU9
  81 0022 9FED5B9A 		vldr.32	s18, .L4+8
  82              	.LBE80:
  83              	.LBE88:
  84              		.loc 1 18 39 view .LVU10
  85 0026 C0F8E030 		str	r3, [r0, #224]	@ float
  86              	.LBE141:
  87              		.loc 1 18 1 view .LVU11
  88 002a 83B0     		sub	sp, sp, #12
  89              		.cfi_def_cfa_offset 56
  90              	.LBB142:
  91              		.loc 1 18 39 view .LVU12
  92 002c 594B     		ldr	r3, .L4+12
  93              	.LBE142:
  94              		.loc 1 18 1 view .LVU13
  95 002e 0446     		mov	r4, r0
  96              	.LVL1:
  97              	.LBB143:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s 			page 4


  98              	.LBB89:
  99              	.LBI89:
  23:../../DaisySP//Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 100              		.loc 2 23 5 is_stmt 1 view .LVU14
  23:../../DaisySP//Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 101              		.loc 2 23 5 is_stmt 0 view .LVU15
 102              	.LBE89:
 103              	.LBB90:
 104              	.LBI90:
 105              		.file 3 "../../DaisySP//Source/Control/adenv.h"
   1:../../DaisySP//Source/Control/adenv.h **** /*
   2:../../DaisySP//Source/Control/adenv.h **** Copyright (c) 2020 Electrosmith, Corp
   3:../../DaisySP//Source/Control/adenv.h **** 
   4:../../DaisySP//Source/Control/adenv.h **** Use of this source code is governed by an MIT-style
   5:../../DaisySP//Source/Control/adenv.h **** license that can be found in the LICENSE file or at
   6:../../DaisySP//Source/Control/adenv.h **** https://opensource.org/licenses/MIT.
   7:../../DaisySP//Source/Control/adenv.h **** */
   8:../../DaisySP//Source/Control/adenv.h **** 
   9:../../DaisySP//Source/Control/adenv.h **** #pragma once
  10:../../DaisySP//Source/Control/adenv.h **** #ifndef ADENV_H
  11:../../DaisySP//Source/Control/adenv.h **** #define ADENV_H
  12:../../DaisySP//Source/Control/adenv.h **** #include <stdint.h>
  13:../../DaisySP//Source/Control/adenv.h **** #ifdef __cplusplus
  14:../../DaisySP//Source/Control/adenv.h **** 
  15:../../DaisySP//Source/Control/adenv.h **** namespace daisysp
  16:../../DaisySP//Source/Control/adenv.h **** {
  17:../../DaisySP//Source/Control/adenv.h **** /** Distinct stages that the phase of the envelope can be located in.
  18:../../DaisySP//Source/Control/adenv.h ****     @see AdEnv
  19:../../DaisySP//Source/Control/adenv.h **** */
  20:../../DaisySP//Source/Control/adenv.h **** enum AdEnvSegment
  21:../../DaisySP//Source/Control/adenv.h **** {
  22:../../DaisySP//Source/Control/adenv.h ****     /** located at phase location 0, and not currently running */
  23:../../DaisySP//Source/Control/adenv.h ****     ADENV_SEG_IDLE,
  24:../../DaisySP//Source/Control/adenv.h ****     /** First segment of envelope where phase moves from MIN value to MAX value */
  25:../../DaisySP//Source/Control/adenv.h ****     ADENV_SEG_ATTACK,
  26:../../DaisySP//Source/Control/adenv.h ****     /** Second segment of envelope where phase moves from MAX to MIN value */
  27:../../DaisySP//Source/Control/adenv.h ****     ADENV_SEG_DECAY,
  28:../../DaisySP//Source/Control/adenv.h ****     /** The final segment of the envelope (currently decay) */
  29:../../DaisySP//Source/Control/adenv.h ****     ADENV_SEG_LAST,
  30:../../DaisySP//Source/Control/adenv.h **** };
  31:../../DaisySP//Source/Control/adenv.h **** 
  32:../../DaisySP//Source/Control/adenv.h **** /** Trigger-able envelope with adjustable min/max, and independent per-segment time control.
  33:../../DaisySP//Source/Control/adenv.h **** 
  34:../../DaisySP//Source/Control/adenv.h ****     \author shensley
  35:../../DaisySP//Source/Control/adenv.h ****     \todo - Add Cycling
  36:../../DaisySP//Source/Control/adenv.h ****     \todo - Implement Curve (its only linear for now).
  37:../../DaisySP//Source/Control/adenv.h ****     \todo - Maybe make this an ADsr_ that has AD/AR/Asr_ modes.
  38:../../DaisySP//Source/Control/adenv.h ****  */
  39:../../DaisySP//Source/Control/adenv.h **** class AdEnv
  40:../../DaisySP//Source/Control/adenv.h **** {
  41:../../DaisySP//Source/Control/adenv.h ****   public:
  42:../../DaisySP//Source/Control/adenv.h ****     AdEnv() {}
 106              		.loc 3 42 5 is_stmt 1 view .LVU16
 107              		.loc 3 42 5 is_stmt 0 view .LVU17
 108              	.LBE90:
 109              	.LBB91:
 110              	.LBI91:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s 			page 5


 111              		.loc 3 42 5 is_stmt 1 view .LVU18
 112              		.loc 3 42 5 is_stmt 0 view .LVU19
 113              	.LBE91:
 114              		.loc 1 18 39 view .LVU20
 115 0030 80F8A060 		strb	r6, [r0, #160]
 116              	.LBB92:
 117              	.LBB81:
  56:../../DaisySP//Source/Synthesis/oscillator.h ****         pw_        = 0.5f;
  57:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
  59:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
  60:../../DaisySP//Source/Synthesis/oscillator.h ****         eoc_       = true;
  61:../../DaisySP//Source/Synthesis/oscillator.h ****         eor_       = true;
 118              		.loc 2 61 20 view .LVU21
 119 0034 40F20117 		movw	r7, #257
 120              	.LBE81:
 121              	.LBE92:
 122              		.loc 1 18 39 view .LVU22
 123 0038 C0F88831 		str	r3, [r0, #392]	@ float
 124              	.LBB93:
 125              	.LBB82:
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 126              		.loc 2 58 34 view .LVU23
 127 003c B0EE490A 		vmov.f32	s0, s18
 128              	.LVL2:
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 129              		.loc 2 58 34 view .LVU24
 130              	.LBE82:
 131              	.LBE93:
 132              		.loc 1 18 39 view .LVU25
 133 0040 C0F8A850 		str	r5, [r0, #168]	@ float
 134 0044 C0F8AC50 		str	r5, [r0, #172]	@ float
 135              	.LVL3:
 136              	.LBB94:
 137              	.LBI94:
  23:../../DaisySP//Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 138              		.loc 2 23 5 is_stmt 1 view .LVU26
  23:../../DaisySP//Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 139              		.loc 2 23 5 is_stmt 0 view .LVU27
 140              	.LBE94:
 141              		.loc 1 18 39 view .LVU28
 142 0048 80F8DC60 		strb	r6, [r0, #220]
 143 004c C0F8E450 		str	r5, [r0, #228]	@ float
 144 0050 C0F8E850 		str	r5, [r0, #232]	@ float
 145              	.LVL4:
 146              	.LBB95:
 147              	.LBI95:
 148              		.file 4 "../../DaisySP//Source/Filters/svf.h"
   1:../../DaisySP//Source/Filters/svf.h **** /*
   2:../../DaisySP//Source/Filters/svf.h **** Copyright (c) 2020 Electrosmith, Corp
   3:../../DaisySP//Source/Filters/svf.h **** 
   4:../../DaisySP//Source/Filters/svf.h **** Use of this source code is governed by an MIT-style
   5:../../DaisySP//Source/Filters/svf.h **** license that can be found in the LICENSE file or at
   6:../../DaisySP//Source/Filters/svf.h **** https://opensource.org/licenses/MIT.
   7:../../DaisySP//Source/Filters/svf.h **** */
   8:../../DaisySP//Source/Filters/svf.h **** 
   9:../../DaisySP//Source/Filters/svf.h **** #pragma once
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s 			page 6


  10:../../DaisySP//Source/Filters/svf.h **** #ifndef DSY_SVF_H
  11:../../DaisySP//Source/Filters/svf.h **** #define DSY_SVF_H
  12:../../DaisySP//Source/Filters/svf.h **** 
  13:../../DaisySP//Source/Filters/svf.h **** namespace daisysp
  14:../../DaisySP//Source/Filters/svf.h **** {
  15:../../DaisySP//Source/Filters/svf.h **** /**      Double Sampled, Stable State Variable Filter
  16:../../DaisySP//Source/Filters/svf.h **** 
  17:../../DaisySP//Source/Filters/svf.h **** Credit to Andrew Simper from musicdsp.org
  18:../../DaisySP//Source/Filters/svf.h **** 
  19:../../DaisySP//Source/Filters/svf.h **** This is his "State Variable Filter (Double Sampled, Stable)"
  20:../../DaisySP//Source/Filters/svf.h **** 
  21:../../DaisySP//Source/Filters/svf.h **** Additional thanks to Laurent de Soras for stability limit, and 
  22:../../DaisySP//Source/Filters/svf.h **** Stefan Diedrichsen for the correct notch output
  23:../../DaisySP//Source/Filters/svf.h **** 
  24:../../DaisySP//Source/Filters/svf.h **** Ported by: Stephen Hensley
  25:../../DaisySP//Source/Filters/svf.h **** */
  26:../../DaisySP//Source/Filters/svf.h **** class Svf
  27:../../DaisySP//Source/Filters/svf.h **** {
  28:../../DaisySP//Source/Filters/svf.h ****   public:
  29:../../DaisySP//Source/Filters/svf.h ****     Svf() {}
 149              		.loc 4 29 5 is_stmt 1 view .LVU29
 150              		.loc 4 29 5 is_stmt 0 view .LVU30
 151              	.LBE95:
 152              	.LBB96:
 153              	.LBI96:
 154              		.loc 4 29 5 is_stmt 1 view .LVU31
 155              		.loc 4 29 5 is_stmt 0 view .LVU32
 156              	.LBE96:
 157              		.loc 1 18 39 view .LVU33
 158 0054 80F88461 		strb	r6, [r0, #388]
 159 0058 C0F88C51 		str	r5, [r0, #396]	@ float
 160 005c C0F89051 		str	r5, [r0, #400]	@ float
 161              	.LVL5:
 162              	.LBB97:
 163              	.LBI97:
 164              		.loc 4 29 5 is_stmt 1 view .LVU34
 165              		.loc 4 29 5 is_stmt 0 view .LVU35
 166              	.LBE97:
 167              	.LBB98:
 168              	.LBI98:
 169              		.loc 4 29 5 is_stmt 1 view .LVU36
 170              		.loc 4 29 5 is_stmt 0 view .LVU37
 171              	.LBE98:
  19:DrumSynth.cpp ****     this->sample_rate = sample_rate;
 172              		.loc 1 19 5 is_stmt 1 view .LVU38
 173              		.loc 1 19 23 is_stmt 0 view .LVU39
 174 0060 80ED278A 		vstr.32	s16, [r0, #156]
  20:DrumSynth.cpp **** 
  21:DrumSynth.cpp ****     // Initialize the kick osc
  22:DrumSynth.cpp ****     //===============================================
  23:DrumSynth.cpp ****     kick_osc.Init(sample_rate);
 175              		.loc 1 23 5 is_stmt 1 view .LVU40
 176              	.LVL6:
 177              	.LBB99:
 178              	.LBI77:
  50:../../DaisySP//Source/Synthesis/oscillator.h ****     {
 179              		.loc 2 50 10 view .LVU41
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s 			page 7


 180              	.LBB83:
  52:../../DaisySP//Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 181              		.loc 2 52 9 view .LVU42
  52:../../DaisySP//Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 182              		.loc 2 52 20 is_stmt 0 view .LVU43
 183 0064 80ED048A 		vstr.32	s16, [r0, #16]
  53:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 184              		.loc 2 53 9 is_stmt 1 view .LVU44
  54:../../DaisySP//Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 185              		.loc 2 54 20 is_stmt 0 view .LVU45
 186 0068 80ED029A 		vstr.32	s18, [r0, #8]
  55:../../DaisySP//Source/Synthesis/oscillator.h ****         pw_        = 0.5f;
 187              		.loc 2 55 20 view .LVU46
 188 006c C0ED018A 		vstr.32	s17, [r0, #4]
  56:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 189              		.loc 2 56 20 view .LVU47
 190 0070 C0ED038A 		vstr.32	s17, [r0, #12]
  57:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 191              		.loc 2 57 20 view .LVU48
 192 0074 8561     		str	r5, [r0, #24]	@ float
  53:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 193              		.loc 2 53 20 view .LVU49
 194 0076 80ED05AA 		vstr.32	s20, [r0, #20]
  54:../../DaisySP//Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 195              		.loc 2 54 9 is_stmt 1 view .LVU50
  55:../../DaisySP//Source/Synthesis/oscillator.h ****         pw_        = 0.5f;
 196              		.loc 2 55 9 view .LVU51
  56:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 197              		.loc 2 56 9 view .LVU52
  57:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 198              		.loc 2 57 9 view .LVU53
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 199              		.loc 2 58 9 view .LVU54
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 200              		.loc 2 58 34 is_stmt 0 view .LVU55
 201 007a FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 202              	.LVL7:
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 203              		.loc 2 58 34 view .LVU56
 204              	.LBE83:
 205              	.LBE99:
 206              	.LBB100:
 207              	.LBB101:
  62:../../DaisySP//Source/Synthesis/oscillator.h ****     }
  63:../../DaisySP//Source/Synthesis/oscillator.h **** 
  64:../../DaisySP//Source/Synthesis/oscillator.h **** 
  65:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Changes the frequency of the Oscillator, and recalculates phase increment.
  66:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  67:../../DaisySP//Source/Synthesis/oscillator.h ****     inline void SetFreq(const float f)
  68:../../DaisySP//Source/Synthesis/oscillator.h ****     {
  69:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = f;
 208              		.loc 2 69 20 view .LVU57
 209 007e DFED467A 		vldr.32	s15, .L4+16
  70:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 210              		.loc 2 70 34 view .LVU58
 211 0082 2046     		mov	r0, r4
 212              	.LBE101:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s 			page 8


 213              	.LBE100:
 214              	.LBB106:
 215              	.LBB84:
  59:../../DaisySP//Source/Synthesis/oscillator.h ****         eoc_       = true;
 216              		.loc 2 59 20 view .LVU59
 217 0084 2670     		strb	r6, [r4]
 218              	.LBE84:
 219              	.LBE106:
 220              	.LBB107:
 221              	.LBB102:
  69:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 222              		.loc 2 69 20 view .LVU60
 223 0086 C4ED027A 		vstr.32	s15, [r4, #8]
 224              	.LBE102:
 225              	.LBE107:
 226              	.LBB108:
 227              	.LBB85:
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 228              		.loc 2 58 20 view .LVU61
 229 008a 84ED070A 		vstr.32	s0, [r4, #28]
  59:../../DaisySP//Source/Synthesis/oscillator.h ****         eoc_       = true;
 230              		.loc 2 59 9 is_stmt 1 view .LVU62
  60:../../DaisySP//Source/Synthesis/oscillator.h ****         eor_       = true;
 231              		.loc 2 60 9 view .LVU63
  61:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 232              		.loc 2 61 9 view .LVU64
 233              	.LBE85:
 234              	.LBE108:
 235              	.LBB109:
 236              	.LBB103:
 237              		.loc 2 70 34 is_stmt 0 view .LVU65
 238 008e B0EE670A 		vmov.f32	s0, s15
 239              	.LBE103:
 240              	.LBE109:
 241              	.LBB110:
 242              	.LBB111:
  71:../../DaisySP//Source/Synthesis/oscillator.h ****     }
  72:../../DaisySP//Source/Synthesis/oscillator.h **** 
  73:../../DaisySP//Source/Synthesis/oscillator.h **** 
  74:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the amplitude of the waveform.
  75:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  76:../../DaisySP//Source/Synthesis/oscillator.h ****     inline void SetAmp(const float a) { amp_ = a; }
 243              		.loc 2 76 46 view .LVU66
 244 0092 C4ED019A 		vstr.32	s19, [r4, #4]
 245              	.LBE111:
 246              	.LBE110:
 247              	.LBB113:
 248              	.LBB86:
  61:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 249              		.loc 2 61 20 view .LVU67
 250 0096 2785     		strh	r7, [r4, #40]	@ movhi
 251              	.LVL8:
  61:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 252              		.loc 2 61 20 view .LVU68
 253              	.LBE86:
 254              	.LBE113:
  24:DrumSynth.cpp ****     kick_osc.SetWaveform(Oscillator::WAVE_SIN);
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s 			page 9


 255              		.loc 1 24 5 is_stmt 1 view .LVU69
 256              	.LBB114:
 257              	.LBI114:
  77:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
  78:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  79:../../DaisySP//Source/Synthesis/oscillator.h ****     inline void SetWaveform(const uint8_t wf)
 258              		.loc 2 79 17 view .LVU70
 259              	.LBE114:
 260              	.LBE143:
  80:../../DaisySP//Source/Synthesis/oscillator.h ****     {
  81:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_ = wf < WAVE_LAST ? wf : WAVE_SIN;
 261              		.loc 2 81 9 view .LVU71
 262              	.LBB144:
  25:DrumSynth.cpp ****     kick_osc.SetAmp(1.0f);
 263              		.loc 1 25 5 view .LVU72
 264              	.LBB115:
 265              	.LBI110:
  76:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 266              		.loc 2 76 17 view .LVU73
 267              	.LBB112:
  76:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 268              		.loc 2 76 41 view .LVU74
  76:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 269              		.loc 2 76 41 is_stmt 0 view .LVU75
 270              	.LBE112:
 271              	.LBE115:
  26:DrumSynth.cpp ****     kick_osc.SetFreq(65.f);
 272              		.loc 1 26 5 is_stmt 1 view .LVU76
 273              	.LBB116:
 274              	.LBI100:
  67:../../DaisySP//Source/Synthesis/oscillator.h ****     {
 275              		.loc 2 67 17 view .LVU77
 276              	.LBB104:
  69:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 277              		.loc 2 69 9 view .LVU78
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 278              		.loc 2 70 9 view .LVU79
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 279              		.loc 2 70 34 is_stmt 0 view .LVU80
 280 0098 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 281              	.LVL9:
 282              	.LBE104:
 283              	.LBE116:
  27:DrumSynth.cpp **** 
  28:DrumSynth.cpp ****     // Initialize the snare osc and bandpass filter
  29:DrumSynth.cpp ****     //===============================================
  30:DrumSynth.cpp ****     snare_osc.Init(sample_rate);
 284              		.loc 1 30 19 view .LVU81
 285 009c 04F1B000 		add	r0, r4, #176
 286              	.LBB117:
 287              	.LBB118:
  57:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 288              		.loc 2 57 20 view .LVU82
 289 00a0 C4F8C850 		str	r5, [r4, #200]	@ float
 290              	.LBE118:
 291              	.LBE117:
  31:DrumSynth.cpp ****     snare_osc.SetWaveform(Oscillator::WAVE_SIN);
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s 			page 10


  32:DrumSynth.cpp ****     snare_osc.SetAmp(1.f);
  33:DrumSynth.cpp ****     snare_osc.SetFreq(200.f);
  34:DrumSynth.cpp **** 
  35:DrumSynth.cpp ****     snare_highpass.Init(sample_rate);
  36:DrumSynth.cpp ****     snare_highpass.SetFreq(220.f);
  37:DrumSynth.cpp ****     snare_highpass.SetRes(0.1f);
  38:DrumSynth.cpp **** 
  39:DrumSynth.cpp ****     snare_lowpass.Init(sample_rate);
 292              		.loc 1 39 23 view .LVU83
 293 00a4 04F59C75 		add	r5, r4, #312
 294              	.LBB123:
 295              	.LBB105:
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 296              		.loc 2 70 20 view .LVU84
 297 00a8 84ED070A 		vstr.32	s0, [r4, #28]
 298              	.LVL10:
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 299              		.loc 2 70 20 view .LVU85
 300              	.LBE105:
 301              	.LBE123:
  30:DrumSynth.cpp ****     snare_osc.SetWaveform(Oscillator::WAVE_SIN);
 302              		.loc 1 30 5 is_stmt 1 view .LVU86
 303              	.LBB124:
 304              	.LBI117:
  50:../../DaisySP//Source/Synthesis/oscillator.h ****     {
 305              		.loc 2 50 10 view .LVU87
 306              	.LBB119:
  52:../../DaisySP//Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 307              		.loc 2 52 9 view .LVU88
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 308              		.loc 2 58 34 is_stmt 0 view .LVU89
 309 00ac B0EE490A 		vmov.f32	s0, s18
  55:../../DaisySP//Source/Synthesis/oscillator.h ****         pw_        = 0.5f;
 310              		.loc 2 55 20 view .LVU90
 311 00b0 C4ED2D8A 		vstr.32	s17, [r4, #180]
  56:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 312              		.loc 2 56 20 view .LVU91
 313 00b4 C4ED2F8A 		vstr.32	s17, [r4, #188]
  52:../../DaisySP//Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 314              		.loc 2 52 20 view .LVU92
 315 00b8 84ED308A 		vstr.32	s16, [r4, #192]
  53:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 316              		.loc 2 53 9 is_stmt 1 view .LVU93
  53:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 317              		.loc 2 53 20 is_stmt 0 view .LVU94
 318 00bc 84ED31AA 		vstr.32	s20, [r4, #196]
  54:../../DaisySP//Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 319              		.loc 2 54 9 is_stmt 1 view .LVU95
  54:../../DaisySP//Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 320              		.loc 2 54 20 is_stmt 0 view .LVU96
 321 00c0 84ED2E9A 		vstr.32	s18, [r4, #184]
  55:../../DaisySP//Source/Synthesis/oscillator.h ****         pw_        = 0.5f;
 322              		.loc 2 55 9 is_stmt 1 view .LVU97
  56:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 323              		.loc 2 56 9 view .LVU98
  57:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 324              		.loc 2 57 9 view .LVU99
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s 			page 11


  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 325              		.loc 2 58 9 view .LVU100
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 326              		.loc 2 58 34 is_stmt 0 view .LVU101
 327 00c4 0190     		str	r0, [sp, #4]
 328 00c6 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 329              	.LVL11:
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 330              		.loc 2 58 34 view .LVU102
 331              	.LBE119:
 332              	.LBE124:
 333              	.LBB125:
 334              	.LBB126:
  69:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 335              		.loc 2 69 20 view .LVU103
 336 00ca DFED347A 		vldr.32	s15, .L4+20
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 337              		.loc 2 70 34 view .LVU104
 338 00ce 0198     		ldr	r0, [sp, #4]
 339              	.LBE126:
 340              	.LBE125:
 341              	.LBB131:
 342              	.LBB120:
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 343              		.loc 2 58 20 view .LVU105
 344 00d0 84ED330A 		vstr.32	s0, [r4, #204]
  59:../../DaisySP//Source/Synthesis/oscillator.h ****         eoc_       = true;
 345              		.loc 2 59 9 is_stmt 1 view .LVU106
 346              	.LBE120:
 347              	.LBE131:
 348              	.LBB132:
 349              	.LBB127:
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 350              		.loc 2 70 34 is_stmt 0 view .LVU107
 351 00d4 B0EE670A 		vmov.f32	s0, s15
 352              	.LBE127:
 353              	.LBE132:
 354              	.LBB133:
 355              	.LBB121:
  59:../../DaisySP//Source/Synthesis/oscillator.h ****         eoc_       = true;
 356              		.loc 2 59 20 view .LVU108
 357 00d8 84F8B060 		strb	r6, [r4, #176]
  60:../../DaisySP//Source/Synthesis/oscillator.h ****         eor_       = true;
 358              		.loc 2 60 9 is_stmt 1 view .LVU109
  61:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 359              		.loc 2 61 9 view .LVU110
 360              	.LBE121:
 361              	.LBE133:
  40:DrumSynth.cpp ****     snare_lowpass.SetFreq(4000.f);
  41:DrumSynth.cpp ****     snare_lowpass.SetRes(0.1f);
  42:DrumSynth.cpp **** 
  43:DrumSynth.cpp ****     // Initialize the hat bandpass filter
  44:DrumSynth.cpp ****     //===============================================
  45:DrumSynth.cpp ****     hat_highpass.Init(sample_rate);
 362              		.loc 1 45 22 is_stmt 0 view .LVU111
 363 00dc 04F5CA76 		add	r6, r4, #404
 364              	.LBB134:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s 			page 12


 365              	.LBB128:
  69:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 366              		.loc 2 69 20 view .LVU112
 367 00e0 C4ED2E7A 		vstr.32	s15, [r4, #184]
 368              	.LBE128:
 369              	.LBE134:
 370              	.LBB135:
 371              	.LBB122:
  61:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 372              		.loc 2 61 20 view .LVU113
 373 00e4 A4F8D870 		strh	r7, [r4, #216]	@ movhi
 374              	.LVL12:
  61:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 375              		.loc 2 61 20 view .LVU114
 376              	.LBE122:
 377              	.LBE135:
  31:DrumSynth.cpp ****     snare_osc.SetAmp(1.f);
 378              		.loc 1 31 5 is_stmt 1 view .LVU115
 379              	.LBB136:
 380              	.LBI136:
  79:../../DaisySP//Source/Synthesis/oscillator.h ****     {
 381              		.loc 2 79 17 view .LVU116
 382              	.LBE136:
 383              	.LBE144:
 384              		.loc 2 81 9 view .LVU117
 385              	.LBB145:
  32:DrumSynth.cpp ****     snare_osc.SetFreq(200.f);
 386              		.loc 1 32 5 view .LVU118
 387              	.LBB137:
 388              	.LBI137:
  76:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 389              		.loc 2 76 17 view .LVU119
 390              	.LBB138:
  76:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 391              		.loc 2 76 41 view .LVU120
  76:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 392              		.loc 2 76 46 is_stmt 0 view .LVU121
 393 00e8 C4ED2D9A 		vstr.32	s19, [r4, #180]
 394              	.LVL13:
  76:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 395              		.loc 2 76 46 view .LVU122
 396              	.LBE138:
 397              	.LBE137:
  33:DrumSynth.cpp **** 
 398              		.loc 1 33 5 is_stmt 1 view .LVU123
 399              	.LBB139:
 400              	.LBI125:
  67:../../DaisySP//Source/Synthesis/oscillator.h ****     {
 401              		.loc 2 67 17 view .LVU124
 402              	.LBB129:
  69:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 403              		.loc 2 69 9 view .LVU125
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 404              		.loc 2 70 9 view .LVU126
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 405              		.loc 2 70 34 is_stmt 0 view .LVU127
 406 00ec FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s 			page 13


 407              	.LVL14:
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 408              		.loc 2 70 34 view .LVU128
 409 00f0 F0EE407A 		vmov.f32	s15, s0
 410              	.LBE129:
 411              	.LBE139:
  35:DrumSynth.cpp ****     snare_highpass.SetFreq(220.f);
 412              		.loc 1 35 24 view .LVU129
 413 00f4 04F1EC00 		add	r0, r4, #236
  37:DrumSynth.cpp **** 
 414              		.loc 1 37 26 view .LVU130
 415 00f8 DFED298A 		vldr.32	s17, .L4+24
  35:DrumSynth.cpp ****     snare_highpass.SetFreq(220.f);
 416              		.loc 1 35 24 view .LVU131
 417 00fc B0EE480A 		vmov.f32	s0, s16
 418              	.LBB140:
 419              	.LBB130:
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 420              		.loc 2 70 20 view .LVU132
 421 0100 C4ED337A 		vstr.32	s15, [r4, #204]
 422              	.LVL15:
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 423              		.loc 2 70 20 view .LVU133
 424              	.LBE130:
 425              	.LBE140:
  35:DrumSynth.cpp ****     snare_highpass.SetFreq(220.f);
 426              		.loc 1 35 5 is_stmt 1 view .LVU134
  35:DrumSynth.cpp ****     snare_highpass.SetFreq(220.f);
 427              		.loc 1 35 24 is_stmt 0 view .LVU135
 428 0104 0190     		str	r0, [sp, #4]
 429 0106 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 430              	.LVL16:
  36:DrumSynth.cpp ****     snare_highpass.SetRes(0.1f);
 431              		.loc 1 36 5 is_stmt 1 view .LVU136
  36:DrumSynth.cpp ****     snare_highpass.SetRes(0.1f);
 432              		.loc 1 36 27 is_stmt 0 view .LVU137
 433 010a 0198     		ldr	r0, [sp, #4]
 434 010c 9FED250A 		vldr.32	s0, .L4+28
 435 0110 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 436              	.LVL17:
  37:DrumSynth.cpp **** 
 437              		.loc 1 37 5 is_stmt 1 view .LVU138
  37:DrumSynth.cpp **** 
 438              		.loc 1 37 26 is_stmt 0 view .LVU139
 439 0114 B0EE680A 		vmov.f32	s0, s17
 440 0118 0198     		ldr	r0, [sp, #4]
 441 011a FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 442              	.LVL18:
  39:DrumSynth.cpp ****     snare_lowpass.SetFreq(4000.f);
 443              		.loc 1 39 5 is_stmt 1 view .LVU140
  39:DrumSynth.cpp ****     snare_lowpass.SetFreq(4000.f);
 444              		.loc 1 39 23 is_stmt 0 view .LVU141
 445 011e B0EE480A 		vmov.f32	s0, s16
 446 0122 2846     		mov	r0, r5
 447 0124 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 448              	.LVL19:
  40:DrumSynth.cpp ****     snare_lowpass.SetRes(0.1f);
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s 			page 14


 449              		.loc 1 40 5 is_stmt 1 view .LVU142
  40:DrumSynth.cpp ****     snare_lowpass.SetRes(0.1f);
 450              		.loc 1 40 26 is_stmt 0 view .LVU143
 451 0128 2846     		mov	r0, r5
 452 012a 9FED1F0A 		vldr.32	s0, .L4+32
 453 012e FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 454              	.LVL20:
  41:DrumSynth.cpp **** 
 455              		.loc 1 41 5 is_stmt 1 view .LVU144
  41:DrumSynth.cpp **** 
 456              		.loc 1 41 25 is_stmt 0 view .LVU145
 457 0132 B0EE680A 		vmov.f32	s0, s17
 458 0136 2846     		mov	r0, r5
  46:DrumSynth.cpp ****     hat_highpass.SetFreq(3390.f);
  47:DrumSynth.cpp ****     hat_highpass.SetRes(0.1f); 
  48:DrumSynth.cpp **** 
  49:DrumSynth.cpp ****     hat_lowpass.Init(sample_rate);
 459              		.loc 1 49 21 view .LVU146
 460 0138 04F5F075 		add	r5, r4, #480
  41:DrumSynth.cpp **** 
 461              		.loc 1 41 25 view .LVU147
 462 013c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 463              	.LVL21:
  45:DrumSynth.cpp ****     hat_highpass.SetFreq(3390.f);
 464              		.loc 1 45 5 is_stmt 1 view .LVU148
  45:DrumSynth.cpp ****     hat_highpass.SetFreq(3390.f);
 465              		.loc 1 45 22 is_stmt 0 view .LVU149
 466 0140 B0EE480A 		vmov.f32	s0, s16
 467 0144 3046     		mov	r0, r6
 468 0146 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 469              	.LVL22:
  46:DrumSynth.cpp ****     hat_highpass.SetFreq(3390.f);
 470              		.loc 1 46 5 is_stmt 1 view .LVU150
  46:DrumSynth.cpp ****     hat_highpass.SetFreq(3390.f);
 471              		.loc 1 46 25 is_stmt 0 view .LVU151
 472 014a 3046     		mov	r0, r6
 473 014c 9FED170A 		vldr.32	s0, .L4+36
 474 0150 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 475              	.LVL23:
  47:DrumSynth.cpp **** 
 476              		.loc 1 47 5 is_stmt 1 view .LVU152
  47:DrumSynth.cpp **** 
 477              		.loc 1 47 24 is_stmt 0 view .LVU153
 478 0154 B0EE680A 		vmov.f32	s0, s17
 479 0158 3046     		mov	r0, r6
 480 015a FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 481              	.LVL24:
 482              		.loc 1 49 5 is_stmt 1 view .LVU154
 483              		.loc 1 49 21 is_stmt 0 view .LVU155
 484 015e B0EE480A 		vmov.f32	s0, s16
 485 0162 2846     		mov	r0, r5
 486 0164 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 487              	.LVL25:
  50:DrumSynth.cpp ****     hat_lowpass.SetFreq(8390.f);
 488              		.loc 1 50 5 is_stmt 1 view .LVU156
 489              		.loc 1 50 24 is_stmt 0 view .LVU157
 490 0168 2846     		mov	r0, r5
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s 			page 15


 491 016a 9FED110A 		vldr.32	s0, .L4+40
 492 016e FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 493              	.LVL26:
  51:DrumSynth.cpp ****     hat_lowpass.SetRes(0.1f); 
 494              		.loc 1 51 5 is_stmt 1 view .LVU158
 495              		.loc 1 51 23 is_stmt 0 view .LVU159
 496 0172 2846     		mov	r0, r5
 497 0174 B0EE680A 		vmov.f32	s0, s17
 498 0178 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 499              	.LVL27:
 500              	.LBE145:
  52:DrumSynth.cpp **** }
 501              		.loc 1 52 1 view .LVU160
 502 017c 2046     		mov	r0, r4
 503 017e 03B0     		add	sp, sp, #12
 504              		.cfi_def_cfa_offset 44
 505              		@ sp needed
 506 0180 BDEC068B 		vldm	sp!, {d8-d10}
 507              		.cfi_restore 84
 508              		.cfi_restore 85
 509              		.cfi_restore 82
 510              		.cfi_restore 83
 511              		.cfi_restore 80
 512              		.cfi_restore 81
 513              		.cfi_def_cfa_offset 20
 514              	.LVL28:
 515              		.loc 1 52 1 view .LVU161
 516 0184 F0BD     		pop	{r4, r5, r6, r7, pc}
 517              	.LVL29:
 518              	.L5:
 519              		.loc 1 52 1 view .LVU162
 520 0186 00BF     		.align	2
 521              	.L4:
 522 0188 9A99993E 		.word	1050253722
 523 018c 0AD7233E 		.word	1042536202
 524 0190 0000C842 		.word	1120403456
 525 0194 EC51B83D 		.word	1035489772
 526 0198 00008242 		.word	1115815936
 527 019c 00004843 		.word	1128792064
 528 01a0 CDCCCC3D 		.word	1036831949
 529 01a4 00005C43 		.word	1130102784
 530 01a8 00007A45 		.word	1165623296
 531 01ac 00E05345 		.word	1163124736
 532 01b0 00180346 		.word	1174607872
 533              		.cfi_endproc
 534              	.LFE3527:
 536              		.global	_ZN9DrumSynthC1Ef
 537              		.thumb_set _ZN9DrumSynthC1Ef,_ZN9DrumSynthC2Ef
 538              		.section	.text._ZN9DrumSynth12trigger_kickEv,"ax",%progbits
 539              		.align	1
 540              		.p2align 2,,3
 541              		.global	_ZN9DrumSynth12trigger_kickEv
 542              		.syntax unified
 543              		.thumb
 544              		.thumb_func
 545              		.fpu fpv5-d16
 547              	_ZN9DrumSynth12trigger_kickEv:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s 			page 16


 548              	.LVL30:
 549              	.LFB3529:
  53:DrumSynth.cpp **** 
  54:DrumSynth.cpp **** // Kick
  55:DrumSynth.cpp **** // =====================================================
  56:DrumSynth.cpp **** void DrumSynth::trigger_kick() {
 550              		.loc 1 56 32 is_stmt 1 view -0
 551              		.cfi_startproc
 552              		@ args = 0, pretend = 0, frame = 0
 553              		@ frame_needed = 0, uses_anonymous_args = 0
 554              		@ link register save eliminated.
  57:DrumSynth.cpp ****     kick_timer = sample_rate * kick_duration_s;
 555              		.loc 1 57 5 view .LVU164
 556              		.loc 1 57 30 is_stmt 0 view .LVU165
 557 0000 D0ED277A 		vldr.32	s15, [r0, #156]
  58:DrumSynth.cpp ****     kick_amp = 1.0f;
 558              		.loc 1 58 14 view .LVU166
 559 0004 4FF07E53 		mov	r3, #1065353216
  57:DrumSynth.cpp ****     kick_timer = sample_rate * kick_duration_s;
 560              		.loc 1 57 30 view .LVU167
 561 0008 90ED297A 		vldr.32	s14, [r0, #164]
 562              		.loc 1 58 14 view .LVU168
 563 000c C0F8AC30 		str	r3, [r0, #172]	@ float
  57:DrumSynth.cpp ****     kick_timer = sample_rate * kick_duration_s;
 564              		.loc 1 57 30 view .LVU169
 565 0010 67EE877A 		vmul.f32	s15, s15, s14
  57:DrumSynth.cpp ****     kick_timer = sample_rate * kick_duration_s;
 566              		.loc 1 57 16 view .LVU170
 567 0014 C0ED2A7A 		vstr.32	s15, [r0, #168]
 568              		.loc 1 58 5 is_stmt 1 view .LVU171
  59:DrumSynth.cpp **** }
 569              		.loc 1 59 1 is_stmt 0 view .LVU172
 570 0018 7047     		bx	lr
 571              		.cfi_endproc
 572              	.LFE3529:
 574 001a 00BF     		.section	.text._ZN9DrumSynth12process_kickEv,"ax",%progbits
 575              		.align	1
 576              		.p2align 2,,3
 577              		.global	_ZN9DrumSynth12process_kickEv
 578              		.syntax unified
 579              		.thumb
 580              		.thumb_func
 581              		.fpu fpv5-d16
 583              	_ZN9DrumSynth12process_kickEv:
 584              	.LVL31:
 585              	.LFB3530:
  60:DrumSynth.cpp **** 
  61:DrumSynth.cpp **** float DrumSynth::process_kick() {
 586              		.loc 1 61 33 is_stmt 1 view -0
 587              		.cfi_startproc
 588              		@ args = 0, pretend = 0, frame = 0
 589              		@ frame_needed = 0, uses_anonymous_args = 0
  62:DrumSynth.cpp ****     if (kick_timer > 0.f) {
 590              		.loc 1 62 5 view .LVU174
 591              		.loc 1 62 9 is_stmt 0 view .LVU175
 592 0000 D0ED2A7A 		vldr.32	s15, [r0, #168]
 593              		.loc 1 62 5 view .LVU176
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s 			page 17


 594 0004 F5EEC07A 		vcmpe.f32	s15, #0
 595 0008 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 596 000c 1CDD     		ble	.L12
  63:DrumSynth.cpp ****         kick_timer--;
 597              		.loc 1 63 9 is_stmt 1 view .LVU177
  64:DrumSynth.cpp ****         kick_amp -= (1.f/(sample_rate * kick_duration_s));
 598              		.loc 1 64 39 is_stmt 0 view .LVU178
 599 000e D0ED295A 		vldr.32	s11, [r0, #164]
  63:DrumSynth.cpp ****         kick_timer--;
 600              		.loc 1 63 19 view .LVU179
 601 0012 B7EE006A 		vmov.f32	s12, #1.0e+0
 602              		.loc 1 64 39 view .LVU180
 603 0016 D0ED276A 		vldr.32	s13, [r0, #156]
 604              		.loc 1 64 18 view .LVU181
 605 001a 90ED2B7A 		vldr.32	s14, [r0, #172]
 606              		.loc 1 64 39 view .LVU182
 607 001e 66EEA56A 		vmul.f32	s13, s13, s11
  63:DrumSynth.cpp ****         kick_timer--;
 608              		.loc 1 63 19 view .LVU183
 609 0022 77EEC67A 		vsub.f32	s15, s15, s12
 610              		.loc 1 64 25 view .LVU184
 611 0026 C6EE265A 		vdiv.f32	s11, s12, s13
  63:DrumSynth.cpp ****         kick_timer--;
 612              		.loc 1 63 19 view .LVU185
 613 002a C0ED2A7A 		vstr.32	s15, [r0, #168]
 614              		.loc 1 64 9 is_stmt 1 view .LVU186
  61:DrumSynth.cpp ****     if (kick_timer > 0.f) {
 615              		.loc 1 61 33 is_stmt 0 view .LVU187
 616 002e 10B5     		push	{r4, lr}
 617              		.cfi_def_cfa_offset 8
 618              		.cfi_offset 4, -8
 619              		.cfi_offset 14, -4
 620 0030 0446     		mov	r4, r0
 621              		.loc 1 64 18 view .LVU188
 622 0032 77EE657A 		vsub.f32	s15, s14, s11
 623 0036 C0ED2B7A 		vstr.32	s15, [r0, #172]
  65:DrumSynth.cpp ****         return kick_osc.Process() * kick_amp;
 624              		.loc 1 65 9 is_stmt 1 view .LVU189
 625              		.loc 1 65 32 is_stmt 0 view .LVU190
 626 003a FFF7FEFF 		bl	_ZN7daisysp10Oscillator7ProcessEv
 627              	.LVL32:
 628              		.loc 1 65 37 view .LVU191
 629 003e D4ED2B7A 		vldr.32	s15, [r4, #172]
 630 0042 20EE270A 		vmul.f32	s0, s0, s15
  66:DrumSynth.cpp ****     } else {
  67:DrumSynth.cpp ****         return 0.f;
  68:DrumSynth.cpp ****     }
  69:DrumSynth.cpp **** }
 631              		.loc 1 69 1 view .LVU192
 632 0046 10BD     		pop	{r4, pc}
 633              	.LVL33:
 634              	.L12:
 635              		.cfi_def_cfa_offset 0
 636              		.cfi_restore 4
 637              		.cfi_restore 14
  67:DrumSynth.cpp ****     }
 638              		.loc 1 67 16 view .LVU193
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s 			page 18


 639 0048 9FED010A 		vldr.32	s0, .L17
 640              		.loc 1 69 1 view .LVU194
 641 004c 7047     		bx	lr
 642              	.L18:
 643 004e 00BF     		.align	2
 644              	.L17:
 645 0050 00000000 		.word	0
 646              		.cfi_endproc
 647              	.LFE3530:
 649              		.section	.text._ZNK9DrumSynth11kick_activeEv,"ax",%progbits
 650              		.align	1
 651              		.p2align 2,,3
 652              		.global	_ZNK9DrumSynth11kick_activeEv
 653              		.syntax unified
 654              		.thumb
 655              		.thumb_func
 656              		.fpu fpv5-d16
 658              	_ZNK9DrumSynth11kick_activeEv:
 659              	.LVL34:
 660              	.LFB3531:
  70:DrumSynth.cpp **** 
  71:DrumSynth.cpp **** bool DrumSynth::kick_active() const {
 661              		.loc 1 71 37 is_stmt 1 view -0
 662              		.cfi_startproc
 663              		@ args = 0, pretend = 0, frame = 0
 664              		@ frame_needed = 0, uses_anonymous_args = 0
 665              		@ link register save eliminated.
  72:DrumSynth.cpp ****     return kick_timer > 0.f;
 666              		.loc 1 72 5 view .LVU196
 667              		.loc 1 72 25 is_stmt 0 view .LVU197
 668 0000 D0ED2A7A 		vldr.32	s15, [r0, #168]
 669 0004 F5EEC07A 		vcmpe.f32	s15, #0
 670 0008 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  73:DrumSynth.cpp **** }
 671              		.loc 1 73 1 view .LVU198
 672 000c CCBF     		ite	gt
 673 000e 0120     		movgt	r0, #1
 674              	.LVL35:
 675              		.loc 1 73 1 view .LVU199
 676 0010 0020     		movle	r0, #0
 677 0012 7047     		bx	lr
 678              		.cfi_endproc
 679              	.LFE3531:
 681              		.section	.text._ZN9DrumSynth13trigger_snareEv,"ax",%progbits
 682              		.align	1
 683              		.p2align 2,,3
 684              		.global	_ZN9DrumSynth13trigger_snareEv
 685              		.syntax unified
 686              		.thumb
 687              		.thumb_func
 688              		.fpu fpv5-d16
 690              	_ZN9DrumSynth13trigger_snareEv:
 691              	.LVL36:
 692              	.LFB3532:
  74:DrumSynth.cpp **** 
  75:DrumSynth.cpp **** // Snare
  76:DrumSynth.cpp **** // =====================================================
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s 			page 19


  77:DrumSynth.cpp **** void DrumSynth::trigger_snare() {
 693              		.loc 1 77 33 is_stmt 1 view -0
 694              		.cfi_startproc
 695              		@ args = 0, pretend = 0, frame = 0
 696              		@ frame_needed = 0, uses_anonymous_args = 0
 697              		@ link register save eliminated.
  78:DrumSynth.cpp ****     snare_timer = sample_rate * snare_duration_s;
 698              		.loc 1 78 5 view .LVU201
 699              		.loc 1 78 31 is_stmt 0 view .LVU202
 700 0000 D0ED277A 		vldr.32	s15, [r0, #156]
  79:DrumSynth.cpp ****     snare_amp = 1.f;
 701              		.loc 1 79 15 view .LVU203
 702 0004 4FF07E53 		mov	r3, #1065353216
  78:DrumSynth.cpp ****     snare_timer = sample_rate * snare_duration_s;
 703              		.loc 1 78 31 view .LVU204
 704 0008 90ED387A 		vldr.32	s14, [r0, #224]
 705              		.loc 1 79 15 view .LVU205
 706 000c C0F8E830 		str	r3, [r0, #232]	@ float
  78:DrumSynth.cpp ****     snare_timer = sample_rate * snare_duration_s;
 707              		.loc 1 78 31 view .LVU206
 708 0010 67EE877A 		vmul.f32	s15, s15, s14
  78:DrumSynth.cpp ****     snare_timer = sample_rate * snare_duration_s;
 709              		.loc 1 78 17 view .LVU207
 710 0014 C0ED397A 		vstr.32	s15, [r0, #228]
 711              		.loc 1 79 5 is_stmt 1 view .LVU208
  80:DrumSynth.cpp **** }
 712              		.loc 1 80 1 is_stmt 0 view .LVU209
 713 0018 7047     		bx	lr
 714              		.cfi_endproc
 715              	.LFE3532:
 717 001a 00BF     		.section	.text._ZN9DrumSynth13process_snareEv,"ax",%progbits
 718              		.align	1
 719              		.p2align 2,,3
 720              		.global	_ZN9DrumSynth13process_snareEv
 721              		.syntax unified
 722              		.thumb
 723              		.thumb_func
 724              		.fpu fpv5-d16
 726              	_ZN9DrumSynth13process_snareEv:
 727              	.LVL37:
 728              	.LFB3533:
  81:DrumSynth.cpp **** 
  82:DrumSynth.cpp **** float DrumSynth::process_snare() {
 729              		.loc 1 82 34 is_stmt 1 view -0
 730              		.cfi_startproc
 731              		@ args = 0, pretend = 0, frame = 0
 732              		@ frame_needed = 0, uses_anonymous_args = 0
  83:DrumSynth.cpp ****     if (snare_timer > 0.f) {
 733              		.loc 1 83 5 view .LVU211
 734              	.LBB146:
 735              		.loc 1 83 9 is_stmt 0 view .LVU212
 736 0000 D0ED397A 		vldr.32	s15, [r0, #228]
 737              		.loc 1 83 5 view .LVU213
 738 0004 F5EEC07A 		vcmpe.f32	s15, #0
 739 0008 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 740 000c 3EDD     		ble	.L26
 741              	.LBB147:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s 			page 20


  84:DrumSynth.cpp ****         snare_timer--;
 742              		.loc 1 84 9 is_stmt 1 view .LVU214
  85:DrumSynth.cpp ****         // Random sample [-1.f, 1.f] for white noise burst
  86:DrumSynth.cpp ****         snare_amp -= (1.f/(sample_rate * snare_duration_s));
 743              		.loc 1 86 40 is_stmt 0 view .LVU215
 744 000e D0ED385A 		vldr.32	s11, [r0, #224]
  84:DrumSynth.cpp ****         snare_timer--;
 745              		.loc 1 84 20 view .LVU216
 746 0012 B7EE006A 		vmov.f32	s12, #1.0e+0
 747              		.loc 1 86 40 view .LVU217
 748 0016 D0ED276A 		vldr.32	s13, [r0, #156]
 749              		.loc 1 86 19 view .LVU218
 750 001a 90ED3A7A 		vldr.32	s14, [r0, #232]
 751              		.loc 1 86 40 view .LVU219
 752 001e 66EEA56A 		vmul.f32	s13, s13, s11
  84:DrumSynth.cpp ****         snare_timer--;
 753              		.loc 1 84 20 view .LVU220
 754 0022 77EEC67A 		vsub.f32	s15, s15, s12
 755              		.loc 1 86 26 view .LVU221
 756 0026 C6EE265A 		vdiv.f32	s11, s12, s13
 757              	.LBE147:
 758              	.LBE146:
  82:DrumSynth.cpp ****     if (snare_timer > 0.f) {
 759              		.loc 1 82 34 view .LVU222
 760 002a 10B5     		push	{r4, lr}
 761              		.cfi_def_cfa_offset 8
 762              		.cfi_offset 4, -8
 763              		.cfi_offset 14, -4
 764 002c 2DED028B 		vpush.64	{d8}
 765              		.cfi_def_cfa_offset 16
 766              		.cfi_offset 80, -16
 767              		.cfi_offset 81, -12
 768              	.LBB154:
 769              	.LBB152:
  84:DrumSynth.cpp ****         snare_timer--;
 770              		.loc 1 84 20 view .LVU223
 771 0030 C0ED397A 		vstr.32	s15, [r0, #228]
 772              		.loc 1 86 9 is_stmt 1 view .LVU224
 773 0034 0446     		mov	r4, r0
  87:DrumSynth.cpp ****         float snare_sample = (2.f * static_cast<float>(rand()) / RAND_MAX - 1.f) + snare_osc.Proces
 774              		.loc 1 87 75 is_stmt 0 view .LVU225
 775 0036 BFEE008A 		vmov.f32	s16, #-1.0e+0
  86:DrumSynth.cpp ****         float snare_sample = (2.f * static_cast<float>(rand()) / RAND_MAX - 1.f) + snare_osc.Proces
 776              		.loc 1 86 19 view .LVU226
 777 003a 77EE657A 		vsub.f32	s15, s14, s11
 778 003e C0ED3A7A 		vstr.32	s15, [r0, #232]
 779              		.loc 1 87 9 is_stmt 1 view .LVU227
 780              		.loc 1 87 60 is_stmt 0 view .LVU228
 781 0042 FFF7FEFF 		bl	rand
 782              	.LVL38:
 783              		.loc 1 87 37 view .LVU229
 784 0046 07EE900A 		vmov	s15, r0	@ int
 785              		.loc 1 87 75 view .LVU230
 786 004a 9FED127A 		vldr.32	s14, .L31
 787              		.loc 1 87 101 view .LVU231
 788 004e 04F1B000 		add	r0, r4, #176
 789              		.loc 1 87 37 view .LVU232
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s 			page 21


 790 0052 F8EEE77A 		vcvt.f32.s32	s15, s15
 791              		.loc 1 87 35 view .LVU233
 792 0056 77EEA77A 		vadd.f32	s15, s15, s15
 793              		.loc 1 87 75 view .LVU234
 794 005a A7EE878A 		vfma.f32	s16, s15, s14
 795              		.loc 1 87 101 view .LVU235
 796 005e FFF7FEFF 		bl	_ZN7daisysp10Oscillator7ProcessEv
 797              	.LVL39:
  88:DrumSynth.cpp **** 
  89:DrumSynth.cpp ****         snare_highpass.Process(snare_sample);
 798              		.loc 1 89 9 is_stmt 1 view .LVU236
 799              		.loc 1 89 31 is_stmt 0 view .LVU237
 800 0062 04F1EC00 		add	r0, r4, #236
 801 0066 38EE000A 		vadd.f32	s0, s16, s0
 802              	.LVL40:
 803              		.loc 1 89 31 view .LVU238
 804 006a FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 805              	.LVL41:
  90:DrumSynth.cpp ****         float hp = snare_highpass.High();
 806              		.loc 1 90 9 is_stmt 1 view .LVU239
 807              	.LBB148:
 808              	.LBI148:
  30:../../DaisySP//Source/Filters/svf.h ****     ~Svf() {}
  31:../../DaisySP//Source/Filters/svf.h ****     /** Initializes the filter
  32:../../DaisySP//Source/Filters/svf.h ****         float sample_rate - sample rate of the audio engine being run, and the frequency that the P
  33:../../DaisySP//Source/Filters/svf.h ****     */
  34:../../DaisySP//Source/Filters/svf.h ****     void Init(float sample_rate);
  35:../../DaisySP//Source/Filters/svf.h **** 
  36:../../DaisySP//Source/Filters/svf.h **** 
  37:../../DaisySP//Source/Filters/svf.h ****     /** 
  38:../../DaisySP//Source/Filters/svf.h ****         Process the input signal, updating all of the outputs.
  39:../../DaisySP//Source/Filters/svf.h ****     */
  40:../../DaisySP//Source/Filters/svf.h ****     void Process(float in);
  41:../../DaisySP//Source/Filters/svf.h **** 
  42:../../DaisySP//Source/Filters/svf.h **** 
  43:../../DaisySP//Source/Filters/svf.h ****     /** sets the frequency of the cutoff frequency. 
  44:../../DaisySP//Source/Filters/svf.h ****         f must be between 0.0 and sample_rate / 3
  45:../../DaisySP//Source/Filters/svf.h ****     */
  46:../../DaisySP//Source/Filters/svf.h ****     void SetFreq(float f);
  47:../../DaisySP//Source/Filters/svf.h **** 
  48:../../DaisySP//Source/Filters/svf.h ****     /** sets the resonance of the filter.
  49:../../DaisySP//Source/Filters/svf.h ****         Must be between 0.0 and 1.0 to ensure stability.
  50:../../DaisySP//Source/Filters/svf.h ****     */
  51:../../DaisySP//Source/Filters/svf.h ****     void SetRes(float r);
  52:../../DaisySP//Source/Filters/svf.h **** 
  53:../../DaisySP//Source/Filters/svf.h ****     /** sets the drive of the filter 
  54:../../DaisySP//Source/Filters/svf.h ****         affects the response of the resonance of the filter
  55:../../DaisySP//Source/Filters/svf.h ****     */
  56:../../DaisySP//Source/Filters/svf.h ****     void SetDrive(float d);
  57:../../DaisySP//Source/Filters/svf.h ****     /** lowpass output
  58:../../DaisySP//Source/Filters/svf.h ****         \return low pass output of the filter
  59:../../DaisySP//Source/Filters/svf.h ****     */
  60:../../DaisySP//Source/Filters/svf.h ****     inline float Low() { return out_low_; }
  61:../../DaisySP//Source/Filters/svf.h ****     /** highpass output
  62:../../DaisySP//Source/Filters/svf.h ****         \return high pass output of the filter
  63:../../DaisySP//Source/Filters/svf.h ****     */
  64:../../DaisySP//Source/Filters/svf.h ****     inline float High() { return out_high_; }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s 			page 22


 809              		.loc 4 64 18 view .LVU240
 810              	.LBB149:
 811              		.loc 4 64 27 view .LVU241
 812              		.loc 4 64 27 is_stmt 0 view .LVU242
 813              	.LBE149:
 814              	.LBE148:
  91:DrumSynth.cpp ****         snare_lowpass.Process(hp);
 815              		.loc 1 91 9 is_stmt 1 view .LVU243
 816              		.loc 1 91 30 is_stmt 0 view .LVU244
 817 006e 94ED480A 		vldr.32	s0, [r4, #288]
 818 0072 04F59C70 		add	r0, r4, #312
 819 0076 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 820              	.LVL42:
  92:DrumSynth.cpp **** 
  93:DrumSynth.cpp ****         return snare_lowpass.Low() * snare_amp;
 821              		.loc 1 93 9 is_stmt 1 view .LVU245
 822              	.LBB150:
 823              	.LBI150:
  60:../../DaisySP//Source/Filters/svf.h ****     /** highpass output
 824              		.loc 4 60 18 view .LVU246
 825              	.LBB151:
  60:../../DaisySP//Source/Filters/svf.h ****     /** highpass output
 826              		.loc 4 60 26 view .LVU247
  60:../../DaisySP//Source/Filters/svf.h ****     /** highpass output
 827              		.loc 4 60 26 is_stmt 0 view .LVU248
 828              	.LBE151:
 829              	.LBE150:
 830              		.loc 1 93 38 view .LVU249
 831 007a 94ED3A0A 		vldr.32	s0, [r4, #232]
 832 007e D4ED5A7A 		vldr.32	s15, [r4, #360]
 833              	.LBE152:
 834              	.LBE154:
  94:DrumSynth.cpp ****     } else {
  95:DrumSynth.cpp ****         return 0.f;
  96:DrumSynth.cpp ****     }
  97:DrumSynth.cpp **** }
 835              		.loc 1 97 1 view .LVU250
 836 0082 BDEC028B 		vldm	sp!, {d8}
 837              		.cfi_restore 80
 838              		.cfi_restore 81
 839              		.cfi_def_cfa_offset 8
 840              	.LBB155:
 841              	.LBB153:
  93:DrumSynth.cpp ****     } else {
 842              		.loc 1 93 38 view .LVU251
 843 0086 20EE270A 		vmul.f32	s0, s0, s15
 844              	.LBE153:
 845              	.LBE155:
 846              		.loc 1 97 1 view .LVU252
 847 008a 10BD     		pop	{r4, pc}
 848              	.LVL43:
 849              	.L26:
 850              		.cfi_def_cfa_offset 0
 851              		.cfi_restore 4
 852              		.cfi_restore 14
 853              	.LBB156:
  95:DrumSynth.cpp ****     }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s 			page 23


 854              		.loc 1 95 16 view .LVU253
 855 008c 9FED020A 		vldr.32	s0, .L31+4
 856              	.LBE156:
 857              		.loc 1 97 1 view .LVU254
 858 0090 7047     		bx	lr
 859              	.L32:
 860 0092 00BF     		.align	2
 861              	.L31:
 862 0094 00000030 		.word	805306368
 863 0098 00000000 		.word	0
 864              		.cfi_endproc
 865              	.LFE3533:
 867              		.section	.text._ZNK9DrumSynth12snare_activeEv,"ax",%progbits
 868              		.align	1
 869              		.p2align 2,,3
 870              		.global	_ZNK9DrumSynth12snare_activeEv
 871              		.syntax unified
 872              		.thumb
 873              		.thumb_func
 874              		.fpu fpv5-d16
 876              	_ZNK9DrumSynth12snare_activeEv:
 877              	.LVL44:
 878              	.LFB3534:
  98:DrumSynth.cpp **** 
  99:DrumSynth.cpp **** bool DrumSynth::snare_active() const {
 879              		.loc 1 99 38 is_stmt 1 view -0
 880              		.cfi_startproc
 881              		@ args = 0, pretend = 0, frame = 0
 882              		@ frame_needed = 0, uses_anonymous_args = 0
 883              		@ link register save eliminated.
 100:DrumSynth.cpp ****     return snare_timer > 0.f;
 884              		.loc 1 100 5 view .LVU256
 885              		.loc 1 100 26 is_stmt 0 view .LVU257
 886 0000 D0ED397A 		vldr.32	s15, [r0, #228]
 887 0004 F5EEC07A 		vcmpe.f32	s15, #0
 888 0008 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 101:DrumSynth.cpp **** }
 889              		.loc 1 101 1 view .LVU258
 890 000c CCBF     		ite	gt
 891 000e 0120     		movgt	r0, #1
 892              	.LVL45:
 893              		.loc 1 101 1 view .LVU259
 894 0010 0020     		movle	r0, #0
 895 0012 7047     		bx	lr
 896              		.cfi_endproc
 897              	.LFE3534:
 899              		.section	.text._ZN9DrumSynth11trigger_hatEv,"ax",%progbits
 900              		.align	1
 901              		.p2align 2,,3
 902              		.global	_ZN9DrumSynth11trigger_hatEv
 903              		.syntax unified
 904              		.thumb
 905              		.thumb_func
 906              		.fpu fpv5-d16
 908              	_ZN9DrumSynth11trigger_hatEv:
 909              	.LVL46:
 910              	.LFB3535:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s 			page 24


 102:DrumSynth.cpp **** 
 103:DrumSynth.cpp **** // Hat
 104:DrumSynth.cpp **** // =====================================================
 105:DrumSynth.cpp **** void DrumSynth::trigger_hat() {
 911              		.loc 1 105 31 is_stmt 1 view -0
 912              		.cfi_startproc
 913              		@ args = 0, pretend = 0, frame = 0
 914              		@ frame_needed = 0, uses_anonymous_args = 0
 915              		@ link register save eliminated.
 106:DrumSynth.cpp ****     hat_timer = sample_rate * hat_duration_s;
 916              		.loc 1 106 5 view .LVU261
 917              		.loc 1 106 29 is_stmt 0 view .LVU262
 918 0000 D0ED277A 		vldr.32	s15, [r0, #156]
 107:DrumSynth.cpp ****     hat_amp = 1.0f;
 919              		.loc 1 107 13 view .LVU263
 920 0004 4FF07E53 		mov	r3, #1065353216
 106:DrumSynth.cpp ****     hat_timer = sample_rate * hat_duration_s;
 921              		.loc 1 106 29 view .LVU264
 922 0008 90ED627A 		vldr.32	s14, [r0, #392]
 923              		.loc 1 107 13 view .LVU265
 924 000c C0F89031 		str	r3, [r0, #400]	@ float
 106:DrumSynth.cpp ****     hat_timer = sample_rate * hat_duration_s;
 925              		.loc 1 106 29 view .LVU266
 926 0010 67EE877A 		vmul.f32	s15, s15, s14
 106:DrumSynth.cpp ****     hat_timer = sample_rate * hat_duration_s;
 927              		.loc 1 106 15 view .LVU267
 928 0014 C0ED637A 		vstr.32	s15, [r0, #396]
 929              		.loc 1 107 5 is_stmt 1 view .LVU268
 108:DrumSynth.cpp **** }
 930              		.loc 1 108 1 is_stmt 0 view .LVU269
 931 0018 7047     		bx	lr
 932              		.cfi_endproc
 933              	.LFE3535:
 935 001a 00BF     		.section	.text._ZN9DrumSynth11process_hatEv,"ax",%progbits
 936              		.align	1
 937              		.p2align 2,,3
 938              		.global	_ZN9DrumSynth11process_hatEv
 939              		.syntax unified
 940              		.thumb
 941              		.thumb_func
 942              		.fpu fpv5-d16
 944              	_ZN9DrumSynth11process_hatEv:
 945              	.LVL47:
 946              	.LFB3536:
 109:DrumSynth.cpp **** 
 110:DrumSynth.cpp **** float DrumSynth::process_hat() {
 947              		.loc 1 110 32 is_stmt 1 view -0
 948              		.cfi_startproc
 949              		@ args = 0, pretend = 0, frame = 0
 950              		@ frame_needed = 0, uses_anonymous_args = 0
 111:DrumSynth.cpp ****     if (hat_timer > 0.f) {
 951              		.loc 1 111 5 view .LVU271
 952              	.LBB157:
 953              		.loc 1 111 9 is_stmt 0 view .LVU272
 954 0000 D0ED637A 		vldr.32	s15, [r0, #396]
 955              		.loc 1 111 5 view .LVU273
 956 0004 F5EEC07A 		vcmpe.f32	s15, #0
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s 			page 25


 957 0008 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 958 000c 2ADD     		ble	.L40
 959              	.LBB158:
 112:DrumSynth.cpp ****         hat_timer--;
 960              		.loc 1 112 9 is_stmt 1 view .LVU274
 961              		.loc 1 112 18 is_stmt 0 view .LVU275
 962 000e B7EE007A 		vmov.f32	s14, #1.0e+0
 963              	.LBE158:
 964              	.LBE157:
 110:DrumSynth.cpp ****     if (hat_timer > 0.f) {
 965              		.loc 1 110 32 view .LVU276
 966 0012 10B5     		push	{r4, lr}
 967              		.cfi_def_cfa_offset 8
 968              		.cfi_offset 4, -8
 969              		.cfi_offset 14, -4
 970              	.LBB164:
 971              	.LBB163:
 972              		.loc 1 112 18 view .LVU277
 973 0014 77EEC77A 		vsub.f32	s15, s15, s14
 974 0018 0446     		mov	r4, r0
 975 001a C0ED637A 		vstr.32	s15, [r0, #396]
 113:DrumSynth.cpp ****         // Random sample [-1.f, 1.f] for white noise burst
 114:DrumSynth.cpp ****          float hat_sample = (2.f * static_cast<float>(rand()) / RAND_MAX - 1.f);
 976              		.loc 1 114 10 is_stmt 1 view .LVU278
 977              		.loc 1 114 59 is_stmt 0 view .LVU279
 978 001e FFF7FEFF 		bl	rand
 979              	.LVL48:
 980              		.loc 1 114 36 view .LVU280
 981 0022 07EE900A 		vmov	s15, r0	@ int
 982              		.loc 1 114 79 view .LVU281
 983 0026 BFEE000A 		vmov.f32	s0, #-1.0e+0
 984 002a 9FED107A 		vldr.32	s14, .L45
 985              		.loc 1 114 36 view .LVU282
 986 002e F8EEE77A 		vcvt.f32.s32	s15, s15
 115:DrumSynth.cpp **** 
 116:DrumSynth.cpp ****         hat_highpass.Process(hat_sample);
 987              		.loc 1 116 29 view .LVU283
 988 0032 04F5CA70 		add	r0, r4, #404
 114:DrumSynth.cpp **** 
 989              		.loc 1 114 34 view .LVU284
 990 0036 77EEA77A 		vadd.f32	s15, s15, s15
 991              	.LVL49:
 992              		.loc 1 116 9 is_stmt 1 view .LVU285
 993              		.loc 1 116 29 is_stmt 0 view .LVU286
 994 003a A7EE870A 		vfma.f32	s0, s15, s14
 995              	.LVL50:
 996              		.loc 1 116 29 view .LVU287
 997 003e FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 998              	.LVL51:
 117:DrumSynth.cpp ****         float hp = hat_highpass.High();
 999              		.loc 1 117 9 is_stmt 1 view .LVU288
 1000              	.LBB159:
 1001              	.LBI159:
 1002              		.loc 4 64 18 view .LVU289
 1003              	.LBB160:
 1004              		.loc 4 64 27 view .LVU290
 1005              		.loc 4 64 27 is_stmt 0 view .LVU291
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s 			page 26


 1006              	.LBE160:
 1007              	.LBE159:
 118:DrumSynth.cpp ****         hat_lowpass.Process(hp);
 1008              		.loc 1 118 9 is_stmt 1 view .LVU292
 1009              		.loc 1 118 28 is_stmt 0 view .LVU293
 1010 0042 94ED720A 		vldr.32	s0, [r4, #456]
 1011 0046 04F5F070 		add	r0, r4, #480
 1012 004a FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 1013              	.LVL52:
 119:DrumSynth.cpp **** 
 120:DrumSynth.cpp ****         return hat_lowpass.Low() * hat_amp * 0.4f;
 1014              		.loc 1 120 9 is_stmt 1 view .LVU294
 1015              	.LBB161:
 1016              	.LBI161:
  60:../../DaisySP//Source/Filters/svf.h ****     /** highpass output
 1017              		.loc 4 60 18 view .LVU295
 1018              	.LBB162:
  60:../../DaisySP//Source/Filters/svf.h ****     /** highpass output
 1019              		.loc 4 60 26 view .LVU296
  60:../../DaisySP//Source/Filters/svf.h ****     /** highpass output
 1020              		.loc 4 60 26 is_stmt 0 view .LVU297
 1021              	.LBE162:
 1022              	.LBE161:
 1023              		.loc 1 120 34 view .LVU298
 1024 004e 94ED640A 		vldr.32	s0, [r4, #400]
 1025 0052 94ED847A 		vldr.32	s14, [r4, #528]
 1026              		.loc 1 120 46 view .LVU299
 1027 0056 DFED067A 		vldr.32	s15, .L45+4
 1028              		.loc 1 120 34 view .LVU300
 1029 005a 20EE070A 		vmul.f32	s0, s0, s14
 1030              		.loc 1 120 46 view .LVU301
 1031 005e 20EE270A 		vmul.f32	s0, s0, s15
 1032              	.LBE163:
 1033              	.LBE164:
 121:DrumSynth.cpp ****     } else {
 122:DrumSynth.cpp ****         return 0.f;
 123:DrumSynth.cpp ****     }
 124:DrumSynth.cpp **** }
 1034              		.loc 1 124 1 view .LVU302
 1035 0062 10BD     		pop	{r4, pc}
 1036              	.LVL53:
 1037              	.L40:
 1038              		.cfi_def_cfa_offset 0
 1039              		.cfi_restore 4
 1040              		.cfi_restore 14
 1041              	.LBB165:
 122:DrumSynth.cpp ****     }
 1042              		.loc 1 122 16 view .LVU303
 1043 0064 9FED030A 		vldr.32	s0, .L45+8
 1044              	.LBE165:
 1045              		.loc 1 124 1 view .LVU304
 1046 0068 7047     		bx	lr
 1047              	.L46:
 1048 006a 00BF     		.align	2
 1049              	.L45:
 1050 006c 00000030 		.word	805306368
 1051 0070 CDCCCC3E 		.word	1053609165
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s 			page 27


 1052 0074 00000000 		.word	0
 1053              		.cfi_endproc
 1054              	.LFE3536:
 1056              		.section	.text._ZNK9DrumSynth10hat_activeEv,"ax",%progbits
 1057              		.align	1
 1058              		.p2align 2,,3
 1059              		.global	_ZNK9DrumSynth10hat_activeEv
 1060              		.syntax unified
 1061              		.thumb
 1062              		.thumb_func
 1063              		.fpu fpv5-d16
 1065              	_ZNK9DrumSynth10hat_activeEv:
 1066              	.LVL54:
 1067              	.LFB3537:
 125:DrumSynth.cpp **** 
 126:DrumSynth.cpp **** bool DrumSynth::hat_active() const {
 1068              		.loc 1 126 36 is_stmt 1 view -0
 1069              		.cfi_startproc
 1070              		@ args = 0, pretend = 0, frame = 0
 1071              		@ frame_needed = 0, uses_anonymous_args = 0
 1072              		@ link register save eliminated.
 127:DrumSynth.cpp ****     return hat_timer > 0.f;
 1073              		.loc 1 127 5 view .LVU306
 1074              		.loc 1 127 24 is_stmt 0 view .LVU307
 1075 0000 D0ED637A 		vldr.32	s15, [r0, #396]
 1076 0004 F5EEC07A 		vcmpe.f32	s15, #0
 1077 0008 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 128:DrumSynth.cpp **** }
 1078              		.loc 1 128 1 view .LVU308
 1079 000c CCBF     		ite	gt
 1080 000e 0120     		movgt	r0, #1
 1081              	.LVL55:
 1082              		.loc 1 128 1 view .LVU309
 1083 0010 0020     		movle	r0, #0
 1084 0012 7047     		bx	lr
 1085              		.cfi_endproc
 1086              	.LFE3537:
 1088              		.section	.text._ZN9DrumSynth7processEv,"ax",%progbits
 1089              		.align	1
 1090              		.p2align 2,,3
 1091              		.global	_ZN9DrumSynth7processEv
 1092              		.syntax unified
 1093              		.thumb
 1094              		.thumb_func
 1095              		.fpu fpv5-d16
 1097              	_ZN9DrumSynth7processEv:
 1098              	.LVL56:
 1099              	.LFB3538:
 129:DrumSynth.cpp **** 
 130:DrumSynth.cpp **** float DrumSynth::process() {
 1100              		.loc 1 130 28 is_stmt 1 view -0
 1101              		.cfi_startproc
 1102              		@ args = 0, pretend = 0, frame = 0
 1103              		@ frame_needed = 0, uses_anonymous_args = 0
 131:DrumSynth.cpp ****     float kick_sample = process_kick();
 1104              		.loc 1 131 5 view .LVU311
 1105              	.LBB168:
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s 			page 28


 1106              	.LBB169:
  62:DrumSynth.cpp ****         kick_timer--;
 1107              		.loc 1 62 9 is_stmt 0 view .LVU312
 1108 0000 D0ED2A7A 		vldr.32	s15, [r0, #168]
  62:DrumSynth.cpp ****         kick_timer--;
 1109              		.loc 1 62 5 view .LVU313
 1110 0004 F5EEC07A 		vcmpe.f32	s15, #0
 1111              	.LBE169:
 1112              	.LBE168:
 130:DrumSynth.cpp ****     float kick_sample = process_kick();
 1113              		.loc 1 130 28 view .LVU314
 1114 0008 10B5     		push	{r4, lr}
 1115              		.cfi_def_cfa_offset 8
 1116              		.cfi_offset 4, -8
 1117              		.cfi_offset 14, -4
 1118              	.LBB174:
 1119              	.LBB170:
  62:DrumSynth.cpp ****         kick_timer--;
 1120              		.loc 1 62 5 view .LVU315
 1121 000a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1122              	.LBE170:
 1123              	.LBE174:
 130:DrumSynth.cpp ****     float kick_sample = process_kick();
 1124              		.loc 1 130 28 view .LVU316
 1125 000e 0446     		mov	r4, r0
 1126              	.LVL57:
 1127              	.LBB175:
 1128              	.LBI168:
  61:DrumSynth.cpp ****     if (kick_timer > 0.f) {
 1129              		.loc 1 61 7 is_stmt 1 view .LVU317
 1130              	.LBB171:
  62:DrumSynth.cpp ****         kick_timer--;
 1131              		.loc 1 62 5 view .LVU318
 1132              	.LBE171:
 1133              	.LBE175:
 130:DrumSynth.cpp ****     float kick_sample = process_kick();
 1134              		.loc 1 130 28 is_stmt 0 view .LVU319
 1135 0010 2DED028B 		vpush.64	{d8}
 1136              		.cfi_def_cfa_offset 16
 1137              		.cfi_offset 80, -16
 1138              		.cfi_offset 81, -12
 1139              	.LBB176:
 1140              	.LBB172:
  62:DrumSynth.cpp ****         kick_timer--;
 1141              		.loc 1 62 5 view .LVU320
 1142 0014 28DD     		ble	.L53
  63:DrumSynth.cpp ****         kick_amp -= (1.f/(sample_rate * kick_duration_s));
 1143              		.loc 1 63 9 is_stmt 1 view .LVU321
  64:DrumSynth.cpp ****         return kick_osc.Process() * kick_amp;
 1144              		.loc 1 64 39 is_stmt 0 view .LVU322
 1145 0016 D0ED295A 		vldr.32	s11, [r0, #164]
  63:DrumSynth.cpp ****         kick_amp -= (1.f/(sample_rate * kick_duration_s));
 1146              		.loc 1 63 19 view .LVU323
 1147 001a B7EE006A 		vmov.f32	s12, #1.0e+0
  64:DrumSynth.cpp ****         return kick_osc.Process() * kick_amp;
 1148              		.loc 1 64 39 view .LVU324
 1149 001e D0ED276A 		vldr.32	s13, [r0, #156]
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s 			page 29


  64:DrumSynth.cpp ****         return kick_osc.Process() * kick_amp;
 1150              		.loc 1 64 18 view .LVU325
 1151 0022 90ED2B7A 		vldr.32	s14, [r0, #172]
  64:DrumSynth.cpp ****         return kick_osc.Process() * kick_amp;
 1152              		.loc 1 64 39 view .LVU326
 1153 0026 66EEA56A 		vmul.f32	s13, s13, s11
  63:DrumSynth.cpp ****         kick_amp -= (1.f/(sample_rate * kick_duration_s));
 1154              		.loc 1 63 19 view .LVU327
 1155 002a 77EEC67A 		vsub.f32	s15, s15, s12
  64:DrumSynth.cpp ****         return kick_osc.Process() * kick_amp;
 1156              		.loc 1 64 25 view .LVU328
 1157 002e C6EE265A 		vdiv.f32	s11, s12, s13
  63:DrumSynth.cpp ****         kick_amp -= (1.f/(sample_rate * kick_duration_s));
 1158              		.loc 1 63 19 view .LVU329
 1159 0032 C0ED2A7A 		vstr.32	s15, [r0, #168]
  64:DrumSynth.cpp ****         return kick_osc.Process() * kick_amp;
 1160              		.loc 1 64 9 is_stmt 1 view .LVU330
  64:DrumSynth.cpp ****         return kick_osc.Process() * kick_amp;
 1161              		.loc 1 64 18 is_stmt 0 view .LVU331
 1162 0036 77EE657A 		vsub.f32	s15, s14, s11
 1163 003a C0ED2B7A 		vstr.32	s15, [r0, #172]
  65:DrumSynth.cpp ****     } else {
 1164              		.loc 1 65 9 is_stmt 1 view .LVU332
  65:DrumSynth.cpp ****     } else {
 1165              		.loc 1 65 32 is_stmt 0 view .LVU333
 1166 003e FFF7FEFF 		bl	_ZN7daisysp10Oscillator7ProcessEv
 1167              	.LVL58:
  65:DrumSynth.cpp ****     } else {
 1168              		.loc 1 65 37 view .LVU334
 1169 0042 94ED2B8A 		vldr.32	s16, [r4, #172]
 1170 0046 60EE088A 		vmul.f32	s17, s0, s16
 1171              	.L49:
 1172              	.LVL59:
  65:DrumSynth.cpp ****     } else {
 1173              		.loc 1 65 37 view .LVU335
 1174              	.LBE172:
 1175              	.LBE176:
 132:DrumSynth.cpp ****     float snare_sample = process_snare();
 1176              		.loc 1 132 5 is_stmt 1 view .LVU336
 1177              		.loc 1 132 39 is_stmt 0 view .LVU337
 1178 004a 2046     		mov	r0, r4
 1179 004c FFF7FEFF 		bl	_ZN9DrumSynth13process_snareEv
 1180              	.LVL60:
 1181 0050 B0EE408A 		vmov.f32	s16, s0
 1182              	.LVL61:
 133:DrumSynth.cpp ****     float hat_sample = process_hat();
 1183              		.loc 1 133 5 is_stmt 1 view .LVU338
 1184              		.loc 1 133 35 is_stmt 0 view .LVU339
 1185 0054 2046     		mov	r0, r4
 1186 0056 FFF7FEFF 		bl	_ZN9DrumSynth11process_hatEv
 1187              	.LVL62:
 134:DrumSynth.cpp ****     return (kick_sample + snare_sample + hat_sample);
 1188              		.loc 1 134 5 is_stmt 1 view .LVU340
 1189              		.loc 1 134 25 is_stmt 0 view .LVU341
 1190 005a 38EE288A 		vadd.f32	s16, s16, s17
 1191              	.LVL63:
 135:DrumSynth.cpp **** }
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s 			page 30


 1192              		.loc 1 135 1 view .LVU342
 1193 005e 38EE000A 		vadd.f32	s0, s16, s0
 1194              	.LVL64:
 1195              		.loc 1 135 1 view .LVU343
 1196 0062 BDEC028B 		vldm	sp!, {d8}
 1197              		.cfi_remember_state
 1198              		.cfi_restore 80
 1199              		.cfi_restore 81
 1200              		.cfi_def_cfa_offset 8
 1201 0066 10BD     		pop	{r4, pc}
 1202              	.LVL65:
 1203              	.L53:
 1204              		.cfi_restore_state
 1205              	.LBB177:
 1206              	.LBB173:
  67:DrumSynth.cpp ****     }
 1207              		.loc 1 67 16 view .LVU344
 1208 0068 DFED018A 		vldr.32	s17, .L55
 1209 006c EDE7     		b	.L49
 1210              	.L56:
 1211 006e 00BF     		.align	2
 1212              	.L55:
 1213 0070 00000000 		.word	0
 1214              	.LBE173:
 1215              	.LBE177:
 1216              		.cfi_endproc
 1217              	.LFE3538:
 1219              		.text
 1220              	.Letext0:
 1221              		.file 5 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 1222              		.file 6 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 1223              		.file 7 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdint.h"
 1224              		.file 8 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stddef.h"
 1225              		.file 9 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cmath"
 1226              		.file 10 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\std_abs.h"
 1227              		.file 11 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdint"
 1228              		.file 12 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdlib"
 1229              		.file 13 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\type_traits"
 1230              		.file 14 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\debug\\debug.h"
 1231              		.file 15 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cwchar"
 1232              		.file 16 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_pair.h
 1233              		.file 17 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\exception_
 1234              		.file 18 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\arm-none-eabi\\t
 1235              		.file 19 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\clocale"
 1236              		.file 20 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdio"
 1237              		.file 21 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\basic_stri
 1238              		.file 22 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\charconv.h
 1239              		.file 23 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\algorithmf
 1240              		.file 24 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstring"
 1241              		.file 25 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\predefined
 1242              		.file 26 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_types.h"
 1243              		.file 27 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\reent.h"
 1244              		.file 28 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\lock.h"
 1245              		.file 29 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\math.h"
 1246              		.file 30 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdlib.h"
 1247              		.file 31 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\math.h"
 1248              		.file 32 "../../DaisySP//Source/Utility/dsp.h"
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s 			page 31


 1249              		.file 33 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stdarg.h"
 1250              		.file 34 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\wchar.h"
 1251              		.file 35 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\locale.h"
 1252              		.file 36 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdio.h"
 1253              		.file 37 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\stdlib.h"
 1254              		.file 38 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\string.h"
 1255              		.file 39 "DrumSynth.h"
 1256              		.file 40 "<built-in>"
ARM GAS  C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s 			page 32


DEFINED SYMBOLS
                            *ABS*:00000000 DrumSynth.cpp
C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s:17     .text._ZN9DrumSynthC2Ef:00000000 $t
C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s:26     .text._ZN9DrumSynthC2Ef:00000000 _ZN9DrumSynthC2Ef
C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s:522    .text._ZN9DrumSynthC2Ef:00000188 $d
C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s:26     .text._ZN9DrumSynthC2Ef:00000000 _ZN9DrumSynthC1Ef
C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s:539    .text._ZN9DrumSynth12trigger_kickEv:00000000 $t
C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s:547    .text._ZN9DrumSynth12trigger_kickEv:00000000 _ZN9DrumSynth12trigger_kickEv
C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s:575    .text._ZN9DrumSynth12process_kickEv:00000000 $t
C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s:583    .text._ZN9DrumSynth12process_kickEv:00000000 _ZN9DrumSynth12process_kickEv
C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s:645    .text._ZN9DrumSynth12process_kickEv:00000050 $d
C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s:650    .text._ZNK9DrumSynth11kick_activeEv:00000000 $t
C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s:658    .text._ZNK9DrumSynth11kick_activeEv:00000000 _ZNK9DrumSynth11kick_activeEv
C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s:682    .text._ZN9DrumSynth13trigger_snareEv:00000000 $t
C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s:690    .text._ZN9DrumSynth13trigger_snareEv:00000000 _ZN9DrumSynth13trigger_snareEv
C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s:718    .text._ZN9DrumSynth13process_snareEv:00000000 $t
C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s:726    .text._ZN9DrumSynth13process_snareEv:00000000 _ZN9DrumSynth13process_snareEv
C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s:862    .text._ZN9DrumSynth13process_snareEv:00000094 $d
C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s:868    .text._ZNK9DrumSynth12snare_activeEv:00000000 $t
C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s:876    .text._ZNK9DrumSynth12snare_activeEv:00000000 _ZNK9DrumSynth12snare_activeEv
C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s:900    .text._ZN9DrumSynth11trigger_hatEv:00000000 $t
C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s:908    .text._ZN9DrumSynth11trigger_hatEv:00000000 _ZN9DrumSynth11trigger_hatEv
C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s:936    .text._ZN9DrumSynth11process_hatEv:00000000 $t
C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s:944    .text._ZN9DrumSynth11process_hatEv:00000000 _ZN9DrumSynth11process_hatEv
C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s:1050   .text._ZN9DrumSynth11process_hatEv:0000006c $d
C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s:1057   .text._ZNK9DrumSynth10hat_activeEv:00000000 $t
C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s:1065   .text._ZNK9DrumSynth10hat_activeEv:00000000 _ZNK9DrumSynth10hat_activeEv
C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s:1089   .text._ZN9DrumSynth7processEv:00000000 $t
C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s:1097   .text._ZN9DrumSynth7processEv:00000000 _ZN9DrumSynth7processEv
C:\Users\theja\AppData\Local\Temp\ccZYS0Dt.s:1213   .text._ZN9DrumSynth7processEv:00000070 $d

UNDEFINED SYMBOLS
_ZN7daisysp10Oscillator12CalcPhaseIncEf
_ZN7daisysp3Svf4InitEf
_ZN7daisysp3Svf7SetFreqEf
_ZN7daisysp3Svf6SetResEf
_ZN7daisysp10Oscillator7ProcessEv
rand
_ZN7daisysp3Svf7ProcessEf
